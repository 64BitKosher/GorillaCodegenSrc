// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RijndaelManagedTransformMode
#include "System/Security/Cryptography/RijndaelManagedTransformMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.RijndaelManagedTransformMode Encrypt
::System::Security::Cryptography::RijndaelManagedTransformMode System::Security::Cryptography::RijndaelManagedTransformMode::_get_Encrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransformMode::_get_Encrypt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RijndaelManagedTransformMode>("System.Security.Cryptography", "RijndaelManagedTransformMode", "Encrypt"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.RijndaelManagedTransformMode Encrypt
void System::Security::Cryptography::RijndaelManagedTransformMode::_set_Encrypt(::System::Security::Cryptography::RijndaelManagedTransformMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransformMode::_set_Encrypt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RijndaelManagedTransformMode", "Encrypt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.RijndaelManagedTransformMode Decrypt
::System::Security::Cryptography::RijndaelManagedTransformMode System::Security::Cryptography::RijndaelManagedTransformMode::_get_Decrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransformMode::_get_Decrypt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RijndaelManagedTransformMode>("System.Security.Cryptography", "RijndaelManagedTransformMode", "Decrypt"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.RijndaelManagedTransformMode Decrypt
void System::Security::Cryptography::RijndaelManagedTransformMode::_set_Decrypt(::System::Security::Cryptography::RijndaelManagedTransformMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransformMode::_set_Decrypt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RijndaelManagedTransformMode", "Decrypt", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::RijndaelManagedTransformMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransformMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RijndaelManagedTransform
#include "System/Security/Cryptography/RijndaelManagedTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] s_Sbox
::ArrayW<uint8_t> System::Security::Cryptography::RijndaelManagedTransform::_get_s_Sbox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::_get_s_Sbox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography", "RijndaelManagedTransform", "s_Sbox"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] s_Sbox
void System::Security::Cryptography::RijndaelManagedTransform::_set_s_Sbox(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::_set_s_Sbox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RijndaelManagedTransform", "s_Sbox", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_Rcon
::ArrayW<int> System::Security::Cryptography::RijndaelManagedTransform::_get_s_Rcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::_get_s_Rcon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Security.Cryptography", "RijndaelManagedTransform", "s_Rcon"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_Rcon
void System::Security::Cryptography::RijndaelManagedTransform::_set_s_Rcon(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::_set_s_Rcon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RijndaelManagedTransform", "s_Rcon", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_T
::ArrayW<int> System::Security::Cryptography::RijndaelManagedTransform::_get_s_T() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::_get_s_T");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Security.Cryptography", "RijndaelManagedTransform", "s_T"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_T
void System::Security::Cryptography::RijndaelManagedTransform::_set_s_T(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::_set_s_T");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RijndaelManagedTransform", "s_T", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_TF
::ArrayW<int> System::Security::Cryptography::RijndaelManagedTransform::_get_s_TF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::_get_s_TF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Security.Cryptography", "RijndaelManagedTransform", "s_TF"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_TF
void System::Security::Cryptography::RijndaelManagedTransform::_set_s_TF(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::_set_s_TF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RijndaelManagedTransform", "s_TF", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_iT
::ArrayW<int> System::Security::Cryptography::RijndaelManagedTransform::_get_s_iT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::_get_s_iT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Security.Cryptography", "RijndaelManagedTransform", "s_iT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_iT
void System::Security::Cryptography::RijndaelManagedTransform::_set_s_iT(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::_set_s_iT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RijndaelManagedTransform", "s_iT", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_iTF
::ArrayW<int> System::Security::Cryptography::RijndaelManagedTransform::_get_s_iTF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::_get_s_iTF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Security.Cryptography", "RijndaelManagedTransform", "s_iTF"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_iTF
void System::Security::Cryptography::RijndaelManagedTransform::_set_s_iTF(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::_set_s_iTF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RijndaelManagedTransform", "s_iTF", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.CipherMode m_cipherMode
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::CipherMode& System::Security::Cryptography::RijndaelManagedTransform::dyn_m_cipherMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::dyn_m_cipherMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cipherMode"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::CipherMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.PaddingMode m_paddingValue
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::PaddingMode& System::Security::Cryptography::RijndaelManagedTransform::dyn_m_paddingValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::dyn_m_paddingValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_paddingValue"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::PaddingMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RijndaelManagedTransformMode m_transformMode
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RijndaelManagedTransformMode& System::Security::Cryptography::RijndaelManagedTransform::dyn_m_transformMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::dyn_m_transformMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_transformMode"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RijndaelManagedTransformMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_blockSizeBits
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::RijndaelManagedTransform::dyn_m_blockSizeBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::dyn_m_blockSizeBits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_blockSizeBits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_blockSizeBytes
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::RijndaelManagedTransform::dyn_m_blockSizeBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::dyn_m_blockSizeBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_blockSizeBytes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_inputBlockSize
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::RijndaelManagedTransform::dyn_m_inputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::dyn_m_inputBlockSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_inputBlockSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_outputBlockSize
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::RijndaelManagedTransform::dyn_m_outputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::dyn_m_outputBlockSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_outputBlockSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_encryptKeyExpansion
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Security::Cryptography::RijndaelManagedTransform::dyn_m_encryptKeyExpansion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::dyn_m_encryptKeyExpansion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_encryptKeyExpansion"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_decryptKeyExpansion
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Security::Cryptography::RijndaelManagedTransform::dyn_m_decryptKeyExpansion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::dyn_m_decryptKeyExpansion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_decryptKeyExpansion"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Nr
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::RijndaelManagedTransform::dyn_m_Nr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::dyn_m_Nr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Nr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Nb
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::RijndaelManagedTransform::dyn_m_Nb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::dyn_m_Nb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Nb"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Nk
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::RijndaelManagedTransform::dyn_m_Nk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::dyn_m_Nk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Nk"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_encryptindex
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Security::Cryptography::RijndaelManagedTransform::dyn_m_encryptindex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::dyn_m_encryptindex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_encryptindex"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_decryptindex
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Security::Cryptography::RijndaelManagedTransform::dyn_m_decryptindex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::dyn_m_decryptindex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_decryptindex"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_IV
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Security::Cryptography::RijndaelManagedTransform::dyn_m_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::dyn_m_IV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IV"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_lastBlockBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Security::Cryptography::RijndaelManagedTransform::dyn_m_lastBlockBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::dyn_m_lastBlockBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastBlockBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_depadBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::RijndaelManagedTransform::dyn_m_depadBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::dyn_m_depadBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_depadBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_shiftRegister
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::RijndaelManagedTransform::dyn_m_shiftRegister() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::dyn_m_shiftRegister");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_shiftRegister"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.Dispose
void System::Security::Cryptography::RijndaelManagedTransform::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RijndaelManagedTransform*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.Clear
void System::Security::Cryptography::RijndaelManagedTransform::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.Dispose
void System::Security::Cryptography::RijndaelManagedTransform::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.get_BlockSizeValue
int System::Security::Cryptography::RijndaelManagedTransform::get_BlockSizeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::get_BlockSizeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BlockSizeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.get_InputBlockSize
int System::Security::Cryptography::RijndaelManagedTransform::get_InputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::get_InputBlockSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RijndaelManagedTransform*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.get_OutputBlockSize
int System::Security::Cryptography::RijndaelManagedTransform::get_OutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::get_OutputBlockSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RijndaelManagedTransform*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.get_CanTransformMultipleBlocks
bool System::Security::Cryptography::RijndaelManagedTransform::get_CanTransformMultipleBlocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::get_CanTransformMultipleBlocks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RijndaelManagedTransform*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.get_CanReuseTransform
bool System::Security::Cryptography::RijndaelManagedTransform::get_CanReuseTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::get_CanReuseTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RijndaelManagedTransform*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock
int System::Security::Cryptography::RijndaelManagedTransform::TransformBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount, ::ArrayW<uint8_t> outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::TransformBlock");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RijndaelManagedTransform*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock
::ArrayW<uint8_t> System::Security::Cryptography::RijndaelManagedTransform::TransformFinalBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::TransformFinalBlock");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RijndaelManagedTransform*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.Reset
void System::Security::Cryptography::RijndaelManagedTransform::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.EncryptData
int System::Security::Cryptography::RijndaelManagedTransform::EncryptData(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount, ByRef<::ArrayW<uint8_t>> outputBuffer, int outputOffset, ::System::Security::Cryptography::PaddingMode paddingMode, bool fLast) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::EncryptData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputOffset), ::il2cpp_utils::ExtractType(paddingMode), ::il2cpp_utils::ExtractType(fLast)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, byref(outputBuffer), outputOffset, paddingMode, fLast);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.DecryptData
int System::Security::Cryptography::RijndaelManagedTransform::DecryptData(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount, ByRef<::ArrayW<uint8_t>> outputBuffer, int outputOffset, ::System::Security::Cryptography::PaddingMode paddingMode, bool fLast) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::DecryptData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputOffset), ::il2cpp_utils::ExtractType(paddingMode), ::il2cpp_utils::ExtractType(fLast)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, byref(outputBuffer), outputOffset, paddingMode, fLast);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.Enc
void System::Security::Cryptography::RijndaelManagedTransform::Enc(int* encryptindex, int* encryptKeyExpansion, int* T, int* TF, int* work, int* temp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::Enc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encryptindex), ::il2cpp_utils::ExtractType(encryptKeyExpansion), ::il2cpp_utils::ExtractType(T), ::il2cpp_utils::ExtractType(TF), ::il2cpp_utils::ExtractType(work), ::il2cpp_utils::ExtractType(temp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encryptindex, encryptKeyExpansion, T, TF, work, temp);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.Dec
void System::Security::Cryptography::RijndaelManagedTransform::Dec(int* decryptindex, int* decryptKeyExpansion, int* iT, int* iTF, int* work, int* temp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::Dec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(decryptindex), ::il2cpp_utils::ExtractType(decryptKeyExpansion), ::il2cpp_utils::ExtractType(iT), ::il2cpp_utils::ExtractType(iTF), ::il2cpp_utils::ExtractType(work), ::il2cpp_utils::ExtractType(temp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, decryptindex, decryptKeyExpansion, iT, iTF, work, temp);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.GenerateKeyExpansion
void System::Security::Cryptography::RijndaelManagedTransform::GenerateKeyExpansion(::ArrayW<uint8_t> rgbKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::GenerateKeyExpansion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKeyExpansion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rgbKey);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.rot1
int System::Security::Cryptography::RijndaelManagedTransform::rot1(int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::rot1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RijndaelManagedTransform", "rot1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.rot2
int System::Security::Cryptography::RijndaelManagedTransform::rot2(int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::rot2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RijndaelManagedTransform", "rot2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.rot3
int System::Security::Cryptography::RijndaelManagedTransform::rot3(int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::rot3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RijndaelManagedTransform", "rot3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.SubWord
int System::Security::Cryptography::RijndaelManagedTransform::SubWord(int a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::SubWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RijndaelManagedTransform", "SubWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform.MulX
int System::Security::Cryptography::RijndaelManagedTransform::MulX(int x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::MulX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RijndaelManagedTransform", "MulX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManagedTransform..cctor
void System::Security::Cryptography::RijndaelManagedTransform::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManagedTransform::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RijndaelManagedTransform", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RIPEMD160
#include "System/Security/Cryptography/RIPEMD160.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.RIPEMD160.Create
::System::Security::Cryptography::RIPEMD160* System::Security::Cryptography::RIPEMD160::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RIPEMD160::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RIPEMD160", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RIPEMD160*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RIPEMD160.Create
::System::Security::Cryptography::RIPEMD160* System::Security::Cryptography::RIPEMD160::Create(::StringW hashName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RIPEMD160::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RIPEMD160", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RIPEMD160*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RIPEMD160Managed
#include "System/Security/Cryptography/RIPEMD160Managed.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::RIPEMD160Managed::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RIPEMD160Managed::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _count
[[deprecated("Use field access instead!")]] int64_t& System::Security::Cryptography::RIPEMD160Managed::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RIPEMD160Managed::dyn__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] _stateMD160
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Security::Cryptography::RIPEMD160Managed::dyn__stateMD160() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RIPEMD160Managed::dyn__stateMD160");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stateMD160"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] _blockDWords
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Security::Cryptography::RIPEMD160Managed::dyn__blockDWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RIPEMD160Managed::dyn__blockDWords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blockDWords"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.RIPEMD160Managed.InitializeState
void System::Security::Cryptography::RIPEMD160Managed::InitializeState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RIPEMD160Managed::InitializeState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RIPEMD160Managed._HashData
void System::Security::Cryptography::RIPEMD160Managed::_HashData(::ArrayW<uint8_t> partIn, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RIPEMD160Managed::_HashData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_HashData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partIn), ::il2cpp_utils::ExtractType(ibStart), ::il2cpp_utils::ExtractType(cbSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, partIn, ibStart, cbSize);
}
// Autogenerated method: System.Security.Cryptography.RIPEMD160Managed._EndHash
::ArrayW<uint8_t> System::Security::Cryptography::RIPEMD160Managed::_EndHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RIPEMD160Managed::_EndHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_EndHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RIPEMD160Managed.MDTransform
void System::Security::Cryptography::RIPEMD160Managed::MDTransform(uint* blockDWords, uint* state, uint8_t* block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RIPEMD160Managed::MDTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RIPEMD160Managed", "MDTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blockDWords), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(block)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blockDWords, state, block);
}
// Autogenerated method: System.Security.Cryptography.RIPEMD160Managed.F
uint System::Security::Cryptography::RIPEMD160Managed::F(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RIPEMD160Managed::F");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RIPEMD160Managed", "F", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: System.Security.Cryptography.RIPEMD160Managed.G
uint System::Security::Cryptography::RIPEMD160Managed::G(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RIPEMD160Managed::G");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RIPEMD160Managed", "G", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: System.Security.Cryptography.RIPEMD160Managed.H
uint System::Security::Cryptography::RIPEMD160Managed::H(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RIPEMD160Managed::H");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RIPEMD160Managed", "H", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: System.Security.Cryptography.RIPEMD160Managed.I
uint System::Security::Cryptography::RIPEMD160Managed::I(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RIPEMD160Managed::I");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RIPEMD160Managed", "I", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: System.Security.Cryptography.RIPEMD160Managed.J
uint System::Security::Cryptography::RIPEMD160Managed::J(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RIPEMD160Managed::J");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RIPEMD160Managed", "J", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: System.Security.Cryptography.RIPEMD160Managed.Initialize
void System::Security::Cryptography::RIPEMD160Managed::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RIPEMD160Managed::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RIPEMD160Managed.HashCore
void System::Security::Cryptography::RIPEMD160Managed::HashCore(::ArrayW<uint8_t> rgb, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RIPEMD160Managed::HashCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rgb, ibStart, cbSize);
}
// Autogenerated method: System.Security.Cryptography.RIPEMD160Managed.HashFinal
::ArrayW<uint8_t> System::Security::Cryptography::RIPEMD160Managed::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RIPEMD160Managed::HashFinal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.RSAEncryptionPadding
#include "System/Security/Cryptography/RSAEncryptionPadding.hpp"
// Including type: System.Security.Cryptography.HashAlgorithmName
#include "System/Security/Cryptography/HashAlgorithmName.hpp"
// Including type: System.Security.Cryptography.RSASignaturePadding
#include "System/Security/Cryptography/RSASignaturePadding.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Security.Cryptography.RSAParameters
#include "System/Security/Cryptography/RSAParameters.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.RSA.Create
::System::Security::Cryptography::RSA* System::Security::Cryptography::RSA::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSA", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSA.Create
::System::Security::Cryptography::RSA* System::Security::Cryptography::RSA::Create(::StringW algName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSA", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, algName);
}
// Autogenerated method: System.Security.Cryptography.RSA.Encrypt
::ArrayW<uint8_t> System::Security::Cryptography::RSA::Encrypt(::ArrayW<uint8_t> data, ::System::Security::Cryptography::RSAEncryptionPadding* padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::Encrypt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, padding);
}
// Autogenerated method: System.Security.Cryptography.RSA.Decrypt
::ArrayW<uint8_t> System::Security::Cryptography::RSA::Decrypt(::ArrayW<uint8_t> data, ::System::Security::Cryptography::RSAEncryptionPadding* padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::Decrypt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, padding);
}
// Autogenerated method: System.Security.Cryptography.RSA.SignHash
::ArrayW<uint8_t> System::Security::Cryptography::RSA::SignHash(::ArrayW<uint8_t> hash, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm, ::System::Security::Cryptography::RSASignaturePadding* padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::SignHash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, hash, hashAlgorithm, padding);
}
// Autogenerated method: System.Security.Cryptography.RSA.VerifyHash
bool System::Security::Cryptography::RSA::VerifyHash(::ArrayW<uint8_t> hash, ::ArrayW<uint8_t> signature, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm, ::System::Security::Cryptography::RSASignaturePadding* padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::VerifyHash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hash, signature, hashAlgorithm, padding);
}
// Autogenerated method: System.Security.Cryptography.RSA.HashData
::ArrayW<uint8_t> System::Security::Cryptography::RSA::HashData(::ArrayW<uint8_t> data, int offset, int count, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::HashData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, offset, count, hashAlgorithm);
}
// Autogenerated method: System.Security.Cryptography.RSA.HashData
::ArrayW<uint8_t> System::Security::Cryptography::RSA::HashData(::System::IO::Stream* data, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::HashData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, hashAlgorithm);
}
// Autogenerated method: System.Security.Cryptography.RSA.SignData
::ArrayW<uint8_t> System::Security::Cryptography::RSA::SignData(::ArrayW<uint8_t> data, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm, ::System::Security::Cryptography::RSASignaturePadding* padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::SignData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SignData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(hashAlgorithm), ::il2cpp_utils::ExtractType(padding)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, hashAlgorithm, padding);
}
// Autogenerated method: System.Security.Cryptography.RSA.SignData
::ArrayW<uint8_t> System::Security::Cryptography::RSA::SignData(::ArrayW<uint8_t> data, int offset, int count, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm, ::System::Security::Cryptography::RSASignaturePadding* padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::SignData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, offset, count, hashAlgorithm, padding);
}
// Autogenerated method: System.Security.Cryptography.RSA.SignData
::ArrayW<uint8_t> System::Security::Cryptography::RSA::SignData(::System::IO::Stream* data, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm, ::System::Security::Cryptography::RSASignaturePadding* padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::SignData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, hashAlgorithm, padding);
}
// Autogenerated method: System.Security.Cryptography.RSA.VerifyData
bool System::Security::Cryptography::RSA::VerifyData(::ArrayW<uint8_t> data, ::ArrayW<uint8_t> signature, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm, ::System::Security::Cryptography::RSASignaturePadding* padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::VerifyData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(hashAlgorithm), ::il2cpp_utils::ExtractType(padding)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, signature, hashAlgorithm, padding);
}
// Autogenerated method: System.Security.Cryptography.RSA.VerifyData
bool System::Security::Cryptography::RSA::VerifyData(::ArrayW<uint8_t> data, int offset, int count, ::ArrayW<uint8_t> signature, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm, ::System::Security::Cryptography::RSASignaturePadding* padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::VerifyData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 33));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, offset, count, signature, hashAlgorithm, padding);
}
// Autogenerated method: System.Security.Cryptography.RSA.VerifyData
bool System::Security::Cryptography::RSA::VerifyData(::System::IO::Stream* data, ::ArrayW<uint8_t> signature, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm, ::System::Security::Cryptography::RSASignaturePadding* padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::VerifyData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(hashAlgorithm), ::il2cpp_utils::ExtractType(padding)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, signature, hashAlgorithm, padding);
}
// Autogenerated method: System.Security.Cryptography.RSA.DerivedClassMustOverride
::System::Exception* System::Security::Cryptography::RSA::DerivedClassMustOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::DerivedClassMustOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSA", "DerivedClassMustOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSA.HashAlgorithmNameNullOrEmpty
::System::Exception* System::Security::Cryptography::RSA::HashAlgorithmNameNullOrEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::HashAlgorithmNameNullOrEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSA", "HashAlgorithmNameNullOrEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSA.DecryptValue
::ArrayW<uint8_t> System::Security::Cryptography::RSA::DecryptValue(::ArrayW<uint8_t> rgb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::DecryptValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgb);
}
// Autogenerated method: System.Security.Cryptography.RSA.EncryptValue
::ArrayW<uint8_t> System::Security::Cryptography::RSA::EncryptValue(::ArrayW<uint8_t> rgb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::EncryptValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgb);
}
// Autogenerated method: System.Security.Cryptography.RSA.ExportParameters
::System::Security::Cryptography::RSAParameters System::Security::Cryptography::RSA::ExportParameters(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::ExportParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSAParameters, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated method: System.Security.Cryptography.RSA.ImportParameters
void System::Security::Cryptography::RSA::ImportParameters(::System::Security::Cryptography::RSAParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::ImportParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: System.Security.Cryptography.RSA.Create
::System::Security::Cryptography::RSA* System::Security::Cryptography::RSA::Create(int keySizeInBits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSA", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keySizeInBits)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keySizeInBits);
}
// Autogenerated method: System.Security.Cryptography.RSA.Create
::System::Security::Cryptography::RSA* System::Security::Cryptography::RSA::Create(::System::Security::Cryptography::RSAParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSA", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameters);
}
// Autogenerated method: System.Security.Cryptography.RSA.TryDecrypt
bool System::Security::Cryptography::RSA::TryDecrypt(::System::ReadOnlySpan_1<uint8_t> data, ::System::Span_1<uint8_t> destination, ::System::Security::Cryptography::RSAEncryptionPadding* padding, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::TryDecrypt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 38));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, destination, padding, byref(bytesWritten));
}
// Autogenerated method: System.Security.Cryptography.RSA.TryEncrypt
bool System::Security::Cryptography::RSA::TryEncrypt(::System::ReadOnlySpan_1<uint8_t> data, ::System::Span_1<uint8_t> destination, ::System::Security::Cryptography::RSAEncryptionPadding* padding, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::TryEncrypt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 39));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, destination, padding, byref(bytesWritten));
}
// Autogenerated method: System.Security.Cryptography.RSA.TryHashData
bool System::Security::Cryptography::RSA::TryHashData(::System::ReadOnlySpan_1<uint8_t> data, ::System::Span_1<uint8_t> destination, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::TryHashData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 40));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, destination, hashAlgorithm, byref(bytesWritten));
}
// Autogenerated method: System.Security.Cryptography.RSA.TrySignHash
bool System::Security::Cryptography::RSA::TrySignHash(::System::ReadOnlySpan_1<uint8_t> hash, ::System::Span_1<uint8_t> destination, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm, ::System::Security::Cryptography::RSASignaturePadding* padding, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::TrySignHash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 41));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hash, destination, hashAlgorithm, padding, byref(bytesWritten));
}
// Autogenerated method: System.Security.Cryptography.RSA.TrySignData
bool System::Security::Cryptography::RSA::TrySignData(::System::ReadOnlySpan_1<uint8_t> data, ::System::Span_1<uint8_t> destination, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm, ::System::Security::Cryptography::RSASignaturePadding* padding, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::TrySignData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 42));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, destination, hashAlgorithm, padding, byref(bytesWritten));
}
// Autogenerated method: System.Security.Cryptography.RSA.VerifyData
bool System::Security::Cryptography::RSA::VerifyData(::System::ReadOnlySpan_1<uint8_t> data, ::System::ReadOnlySpan_1<uint8_t> signature, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm, ::System::Security::Cryptography::RSASignaturePadding* padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::VerifyData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 43));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, signature, hashAlgorithm, padding);
}
// Autogenerated method: System.Security.Cryptography.RSA.VerifyHash
bool System::Security::Cryptography::RSA::VerifyHash(::System::ReadOnlySpan_1<uint8_t> hash, ::System::ReadOnlySpan_1<uint8_t> signature, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm, ::System::Security::Cryptography::RSASignaturePadding* padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::VerifyHash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 44));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hash, signature, hashAlgorithm, padding);
}
// Autogenerated method: System.Security.Cryptography.RSA.ExportRSAPrivateKey
::ArrayW<uint8_t> System::Security::Cryptography::RSA::ExportRSAPrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::ExportRSAPrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSA.ExportRSAPublicKey
::ArrayW<uint8_t> System::Security::Cryptography::RSA::ExportRSAPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::ExportRSAPublicKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSA.ImportRSAPrivateKey
void System::Security::Cryptography::RSA::ImportRSAPrivateKey(::System::ReadOnlySpan_1<uint8_t> source, ByRef<int> bytesRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::ImportRSAPrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, byref(bytesRead));
}
// Autogenerated method: System.Security.Cryptography.RSA.ImportRSAPublicKey
void System::Security::Cryptography::RSA::ImportRSAPublicKey(::System::ReadOnlySpan_1<uint8_t> source, ByRef<int> bytesRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::ImportRSAPublicKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, byref(bytesRead));
}
// Autogenerated method: System.Security.Cryptography.RSA.TryExportRSAPrivateKey
bool System::Security::Cryptography::RSA::TryExportRSAPrivateKey(::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::TryExportRSAPrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 49));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(bytesWritten));
}
// Autogenerated method: System.Security.Cryptography.RSA.TryExportRSAPublicKey
bool System::Security::Cryptography::RSA::TryExportRSAPublicKey(::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::TryExportRSAPublicKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 50));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(bytesWritten));
}
// Autogenerated method: System.Security.Cryptography.RSA.get_KeyExchangeAlgorithm
::StringW System::Security::Cryptography::RSA::get_KeyExchangeAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::get_KeyExchangeAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSA.get_SignatureAlgorithm
::StringW System::Security::Cryptography::RSA::get_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::get_SignatureAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSA.FromXmlString
void System::Security::Cryptography::RSA::FromXmlString(::StringW xmlString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::FromXmlString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmlString);
}
// Autogenerated method: System.Security.Cryptography.RSA.ToXmlString
::StringW System::Security::Cryptography::RSA::ToXmlString(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSA::ToXmlString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.RSACryptoServiceProvider
#include "System/Security/Cryptography/RSACryptoServiceProvider.hpp"
// Including type: Mono.Security.Cryptography.KeyPairPersistence
#include "Mono/Security/Cryptography/KeyPairPersistence.hpp"
// Including type: Mono.Security.Cryptography.RSAManaged
#include "Mono/Security/Cryptography/RSAManaged_.hpp"
// Including type: System.Security.Cryptography.HashAlgorithmName
#include "System/Security/Cryptography/HashAlgorithmName.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Security.Cryptography.CspParameters
#include "System/Security/Cryptography/CspParameters.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.Security.Cryptography.CspKeyContainerInfo
#include "System/Security/Cryptography/CspKeyContainerInfo.hpp"
// Including type: System.Security.Cryptography.RSAEncryptionPadding
#include "System/Security/Cryptography/RSAEncryptionPadding.hpp"
// Including type: System.Security.Cryptography.RSASignaturePadding
#include "System/Security/Cryptography/RSASignaturePadding.hpp"
// Including type: System.Security.Cryptography.RSAParameters
#include "System/Security/Cryptography/RSAParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.CspProviderFlags s_UseMachineKeyStore
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::RSACryptoServiceProvider::_get_s_UseMachineKeyStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::_get_s_UseMachineKeyStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "RSACryptoServiceProvider", "s_UseMachineKeyStore"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.CspProviderFlags s_UseMachineKeyStore
void System::Security::Cryptography::RSACryptoServiceProvider::_set_s_UseMachineKeyStore(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::_set_s_UseMachineKeyStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSACryptoServiceProvider", "s_UseMachineKeyStore", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 PROV_RSA_FULL
int System::Security::Cryptography::RSACryptoServiceProvider::_get_PROV_RSA_FULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::_get_PROV_RSA_FULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "RSACryptoServiceProvider", "PROV_RSA_FULL"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 PROV_RSA_FULL
void System::Security::Cryptography::RSACryptoServiceProvider::_set_PROV_RSA_FULL(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::_set_PROV_RSA_FULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSACryptoServiceProvider", "PROV_RSA_FULL", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 AT_KEYEXCHANGE
int System::Security::Cryptography::RSACryptoServiceProvider::_get_AT_KEYEXCHANGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::_get_AT_KEYEXCHANGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "RSACryptoServiceProvider", "AT_KEYEXCHANGE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 AT_KEYEXCHANGE
void System::Security::Cryptography::RSACryptoServiceProvider::_set_AT_KEYEXCHANGE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::_set_AT_KEYEXCHANGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSACryptoServiceProvider", "AT_KEYEXCHANGE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 AT_SIGNATURE
int System::Security::Cryptography::RSACryptoServiceProvider::_get_AT_SIGNATURE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::_get_AT_SIGNATURE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "RSACryptoServiceProvider", "AT_SIGNATURE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 AT_SIGNATURE
void System::Security::Cryptography::RSACryptoServiceProvider::_set_AT_SIGNATURE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::_set_AT_SIGNATURE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSACryptoServiceProvider", "AT_SIGNATURE", value));
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Cryptography.KeyPairPersistence store
[[deprecated("Use field access instead!")]] ::Mono::Security::Cryptography::KeyPairPersistence*& System::Security::Cryptography::RSACryptoServiceProvider::dyn_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::dyn_store");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "store"))->offset;
  return *reinterpret_cast<::Mono::Security::Cryptography::KeyPairPersistence**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean persistKey
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::RSACryptoServiceProvider::dyn_persistKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::dyn_persistKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "persistKey"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean persisted
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::RSACryptoServiceProvider::dyn_persisted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::dyn_persisted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "persisted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean privateKeyExportable
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::RSACryptoServiceProvider::dyn_privateKeyExportable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::dyn_privateKeyExportable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "privateKeyExportable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_disposed
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::RSACryptoServiceProvider::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Cryptography.RSAManaged rsa
[[deprecated("Use field access instead!")]] ::Mono::Security::Cryptography::RSAManaged_*& System::Security::Cryptography::RSACryptoServiceProvider::dyn_rsa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::dyn_rsa");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rsa"))->offset;
  return *reinterpret_cast<::Mono::Security::Cryptography::RSAManaged_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.get_UseMachineKeyStore
bool System::Security::Cryptography::RSACryptoServiceProvider::get_UseMachineKeyStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::get_UseMachineKeyStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSACryptoServiceProvider", "get_UseMachineKeyStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.set_UseMachineKeyStore
void System::Security::Cryptography::RSACryptoServiceProvider::set_UseMachineKeyStore(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::set_UseMachineKeyStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSACryptoServiceProvider", "set_UseMachineKeyStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.GetAlgorithmId
int System::Security::Cryptography::RSACryptoServiceProvider::GetAlgorithmId(::System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::GetAlgorithmId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSACryptoServiceProvider", "GetAlgorithmId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashAlgorithm)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashAlgorithm);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.PaddingModeNotSupported
::System::Exception* System::Security::Cryptography::RSACryptoServiceProvider::PaddingModeNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::PaddingModeNotSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSACryptoServiceProvider", "PaddingModeNotSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.Common
void System::Security::Cryptography::RSACryptoServiceProvider::Common(int dwKeySize, bool parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::Common");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Common", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dwKeySize), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dwKeySize, parameters);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.Common
void System::Security::Cryptography::RSACryptoServiceProvider::Common(::System::Security::Cryptography::CspParameters* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::Common");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Common", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.get_PersistKeyInCsp
bool System::Security::Cryptography::RSACryptoServiceProvider::get_PersistKeyInCsp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::get_PersistKeyInCsp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PersistKeyInCsp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.set_PersistKeyInCsp
void System::Security::Cryptography::RSACryptoServiceProvider::set_PersistKeyInCsp(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::set_PersistKeyInCsp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PersistKeyInCsp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.get_PublicOnly
bool System::Security::Cryptography::RSACryptoServiceProvider::get_PublicOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::get_PublicOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt
::ArrayW<uint8_t> System::Security::Cryptography::RSACryptoServiceProvider::Decrypt(::ArrayW<uint8_t> rgb, bool fOAEP) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgb), ::il2cpp_utils::ExtractType(fOAEP)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgb, fOAEP);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt
::ArrayW<uint8_t> System::Security::Cryptography::RSACryptoServiceProvider::Encrypt(::ArrayW<uint8_t> rgb, bool fOAEP) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgb), ::il2cpp_utils::ExtractType(fOAEP)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgb, fOAEP);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.GetHash
::System::Security::Cryptography::HashAlgorithm* System::Security::Cryptography::RSACryptoServiceProvider::GetHash(::Il2CppObject* halg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::GetHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(halg)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithm*, false>(this, ___internal__method, halg);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.GetHashFromString
::System::Security::Cryptography::HashAlgorithm* System::Security::Cryptography::RSACryptoServiceProvider::GetHashFromString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::GetHashFromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashFromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithm*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.SignData
::ArrayW<uint8_t> System::Security::Cryptography::RSACryptoServiceProvider::SignData(::ArrayW<uint8_t> buffer, ::Il2CppObject* halg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::SignData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SignData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(halg)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, buffer, halg);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.SignData
::ArrayW<uint8_t> System::Security::Cryptography::RSACryptoServiceProvider::SignData(::System::IO::Stream* inputStream, ::Il2CppObject* halg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::SignData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SignData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputStream), ::il2cpp_utils::ExtractType(halg)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, inputStream, halg);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.SignData
::ArrayW<uint8_t> System::Security::Cryptography::RSACryptoServiceProvider::SignData(::ArrayW<uint8_t> buffer, int offset, int count, ::Il2CppObject* halg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::SignData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SignData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(halg)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, buffer, offset, count, halg);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.GetHashNameFromOID
::StringW System::Security::Cryptography::RSACryptoServiceProvider::GetHashNameFromOID(::StringW oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::GetHashNameFromOID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashNameFromOID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, oid);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.SignHash
::ArrayW<uint8_t> System::Security::Cryptography::RSACryptoServiceProvider::SignHash(::ArrayW<uint8_t> rgbHash, ::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::SignHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SignHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbHash), ::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgbHash, str);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.SignHash
::ArrayW<uint8_t> System::Security::Cryptography::RSACryptoServiceProvider::SignHash(::ArrayW<uint8_t> rgbHash, int calgHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::SignHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SignHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbHash), ::il2cpp_utils::ExtractType(calgHash)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgbHash, calgHash);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.InternalHashToHashAlgorithm
::System::Security::Cryptography::HashAlgorithm* System::Security::Cryptography::RSACryptoServiceProvider::InternalHashToHashAlgorithm(int calgHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::InternalHashToHashAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSACryptoServiceProvider", "InternalHashToHashAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calgHash)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithm*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, calgHash);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData
bool System::Security::Cryptography::RSACryptoServiceProvider::VerifyData(::ArrayW<uint8_t> buffer, ::Il2CppObject* halg, ::ArrayW<uint8_t> signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::VerifyData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(halg), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buffer, halg, signature);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash
bool System::Security::Cryptography::RSACryptoServiceProvider::VerifyHash(::ArrayW<uint8_t> rgbHash, ::StringW str, ::ArrayW<uint8_t> rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::VerifyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbHash), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(rgbSignature)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rgbHash, str, rgbSignature);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash
bool System::Security::Cryptography::RSACryptoServiceProvider::VerifyHash(::ArrayW<uint8_t> rgbHash, int calgHash, ::ArrayW<uint8_t> rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::VerifyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbHash), ::il2cpp_utils::ExtractType(calgHash), ::il2cpp_utils::ExtractType(rgbSignature)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rgbHash, calgHash, rgbSignature);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.OnKeyGenerated
void System::Security::Cryptography::RSACryptoServiceProvider::OnKeyGenerated(::Il2CppObject* sender, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::OnKeyGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnKeyGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.get_CspKeyContainerInfo
::System::Security::Cryptography::CspKeyContainerInfo* System::Security::Cryptography::RSACryptoServiceProvider::get_CspKeyContainerInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::get_CspKeyContainerInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSACryptoServiceProvider*), 51));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::CspKeyContainerInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob
::ArrayW<uint8_t> System::Security::Cryptography::RSACryptoServiceProvider::ExportCspBlob(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::ExportCspBlob");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSACryptoServiceProvider*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob
void System::Security::Cryptography::RSACryptoServiceProvider::ImportCspBlob(::ArrayW<uint8_t> keyBlob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::ImportCspBlob");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSACryptoServiceProvider*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyBlob);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.get_SignatureAlgorithm
::StringW System::Security::Cryptography::RSACryptoServiceProvider::get_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::get_SignatureAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.HashData
::ArrayW<uint8_t> System::Security::Cryptography::RSACryptoServiceProvider::HashData(::ArrayW<uint8_t> data, int offset, int count, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::HashData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, offset, count, hashAlgorithm);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.HashData
::ArrayW<uint8_t> System::Security::Cryptography::RSACryptoServiceProvider::HashData(::System::IO::Stream* data, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::HashData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, hashAlgorithm);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt
::ArrayW<uint8_t> System::Security::Cryptography::RSACryptoServiceProvider::Encrypt(::ArrayW<uint8_t> data, ::System::Security::Cryptography::RSAEncryptionPadding* padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::Encrypt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, padding);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt
::ArrayW<uint8_t> System::Security::Cryptography::RSACryptoServiceProvider::Decrypt(::ArrayW<uint8_t> data, ::System::Security::Cryptography::RSAEncryptionPadding* padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::Decrypt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, padding);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.SignHash
::ArrayW<uint8_t> System::Security::Cryptography::RSACryptoServiceProvider::SignHash(::ArrayW<uint8_t> hash, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm, ::System::Security::Cryptography::RSASignaturePadding* padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::SignHash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, hash, hashAlgorithm, padding);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash
bool System::Security::Cryptography::RSACryptoServiceProvider::VerifyHash(::ArrayW<uint8_t> hash, ::ArrayW<uint8_t> signature, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm, ::System::Security::Cryptography::RSASignaturePadding* padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::VerifyHash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hash, signature, hashAlgorithm, padding);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.Finalize
void System::Security::Cryptography::RSACryptoServiceProvider::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.get_KeyExchangeAlgorithm
::StringW System::Security::Cryptography::RSACryptoServiceProvider::get_KeyExchangeAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::get_KeyExchangeAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.get_KeySize
int System::Security::Cryptography::RSACryptoServiceProvider::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::get_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue
::ArrayW<uint8_t> System::Security::Cryptography::RSACryptoServiceProvider::DecryptValue(::ArrayW<uint8_t> rgb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::DecryptValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgb);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue
::ArrayW<uint8_t> System::Security::Cryptography::RSACryptoServiceProvider::EncryptValue(::ArrayW<uint8_t> rgb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::EncryptValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgb);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters
::System::Security::Cryptography::RSAParameters System::Security::Cryptography::RSACryptoServiceProvider::ExportParameters(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::ExportParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSAParameters, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters
void System::Security::Cryptography::RSACryptoServiceProvider::ImportParameters(::System::Security::Cryptography::RSAParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::ImportParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.Dispose
void System::Security::Cryptography::RSACryptoServiceProvider::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSACryptoServiceProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
#include "System/Security/Cryptography/RSAOAEPKeyExchangeDeformatter.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RSA _rsaKey
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSA*& System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::dyn__rsaKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::dyn__rsaKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rsaKey"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RSA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> _rsaOverridesDecrypt
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::dyn__rsaOverridesDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::dyn__rsaOverridesDecrypt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rsaOverridesDecrypt"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.get_OverridesDecrypt
bool System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::get_OverridesDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::get_OverridesDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverridesDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.get_Parameters
::StringW System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::get_Parameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.set_Parameters
void System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::set_Parameters(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::set_Parameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange
::ArrayW<uint8_t> System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::DecryptKeyExchange(::ArrayW<uint8_t> rgbData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::DecryptKeyExchange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgbData);
}
// Autogenerated method: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey
void System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::SetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter
#include "System/Security/Cryptography/RSAOAEPKeyExchangeFormatter.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] ParameterValue
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::dyn_ParameterValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::dyn_ParameterValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ParameterValue"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RSA _rsaKey
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSA*& System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::dyn__rsaKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::dyn__rsaKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rsaKey"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RSA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> _rsaOverridesEncrypt
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::dyn__rsaOverridesEncrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::dyn__rsaOverridesEncrypt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rsaOverridesEncrypt"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RandomNumberGenerator RngValue
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RandomNumberGenerator*& System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::dyn_RngValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::dyn_RngValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RngValue"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RandomNumberGenerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.get_Parameter
::ArrayW<uint8_t> System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::get_Parameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::get_Parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.set_Parameter
void System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::set_Parameter(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::set_Parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.get_Rng
::System::Security::Cryptography::RandomNumberGenerator* System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::get_Rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::get_Rng");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rng", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RandomNumberGenerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.set_Rng
void System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::set_Rng(::System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::set_Rng");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Rng", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.get_OverridesEncrypt
bool System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::get_OverridesEncrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::get_OverridesEncrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverridesEncrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.get_Parameters
::StringW System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::get_Parameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeFormatter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.SetKey
void System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::SetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeFormatter*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange
::ArrayW<uint8_t> System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::CreateKeyExchange(::ArrayW<uint8_t> rgbData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::CreateKeyExchange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeFormatter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgbData);
}
// Autogenerated method: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange
::ArrayW<uint8_t> System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::CreateKeyExchange(::ArrayW<uint8_t> rgbData, ::System::Type* symAlgType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::CreateKeyExchange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeFormatter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgbData, symAlgType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter
#include "System/Security/Cryptography/RSAPKCS1KeyExchangeDeformatter.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RSA _rsaKey
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSA*& System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::dyn__rsaKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::dyn__rsaKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rsaKey"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RSA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> _rsaOverridesDecrypt
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::dyn__rsaOverridesDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::dyn__rsaOverridesDecrypt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rsaOverridesDecrypt"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RandomNumberGenerator RngValue
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RandomNumberGenerator*& System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::dyn_RngValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::dyn_RngValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RngValue"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RandomNumberGenerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter.get_RNG
::System::Security::Cryptography::RandomNumberGenerator* System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::get_RNG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::get_RNG");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RNG", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RandomNumberGenerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter.set_RNG
void System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::set_RNG(::System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::set_RNG");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RNG", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter.get_OverridesDecrypt
bool System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::get_OverridesDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::get_OverridesDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverridesDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter.get_Parameters
::StringW System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::get_Parameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter.set_Parameters
void System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::set_Parameters(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::set_Parameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter.DecryptKeyExchange
::ArrayW<uint8_t> System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::DecryptKeyExchange(::ArrayW<uint8_t> rgbIn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::DecryptKeyExchange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgbIn);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter.SetKey
void System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeDeformatter::SetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter
#include "System/Security/Cryptography/RSAPKCS1KeyExchangeFormatter.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RandomNumberGenerator RngValue
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RandomNumberGenerator*& System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::dyn_RngValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::dyn_RngValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RngValue"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RandomNumberGenerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RSA _rsaKey
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSA*& System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::dyn__rsaKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::dyn__rsaKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rsaKey"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RSA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> _rsaOverridesEncrypt
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::dyn__rsaOverridesEncrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::dyn__rsaOverridesEncrypt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rsaOverridesEncrypt"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.get_Rng
::System::Security::Cryptography::RandomNumberGenerator* System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::get_Rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::get_Rng");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rng", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RandomNumberGenerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.set_Rng
void System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::set_Rng(::System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::set_Rng");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Rng", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.get_OverridesEncrypt
bool System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::get_OverridesEncrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::get_OverridesEncrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverridesEncrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.get_Parameters
::StringW System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::get_Parameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeFormatter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.SetKey
void System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::SetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeFormatter*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange
::ArrayW<uint8_t> System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::CreateKeyExchange(::ArrayW<uint8_t> rgbData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::CreateKeyExchange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeFormatter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgbData);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange
::ArrayW<uint8_t> System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::CreateKeyExchange(::ArrayW<uint8_t> rgbData, ::System::Type* symAlgType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1KeyExchangeFormatter::CreateKeyExchange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeFormatter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgbData, symAlgType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.SHA1
#include "System/Security/Cryptography/SHA1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.SHA1.Create
::System::Security::Cryptography::SHA1* System::Security::Cryptography::SHA1::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA1", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::SHA1*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA1.Create
::System::Security::Cryptography::SHA1* System::Security::Cryptography::SHA1::Create(::StringW hashName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA1", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::SHA1*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.SHA1Managed
#include "System/Security/Cryptography/SHA1Managed.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::SHA1Managed::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Managed::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _count
[[deprecated("Use field access instead!")]] int64_t& System::Security::Cryptography::SHA1Managed::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Managed::dyn__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] _stateSHA1
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Security::Cryptography::SHA1Managed::dyn__stateSHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Managed::dyn__stateSHA1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stateSHA1"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] _expandedBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Security::Cryptography::SHA1Managed::dyn__expandedBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Managed::dyn__expandedBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expandedBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.SHA1Managed.InitializeState
void System::Security::Cryptography::SHA1Managed::InitializeState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Managed::InitializeState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA1Managed._HashData
void System::Security::Cryptography::SHA1Managed::_HashData(::ArrayW<uint8_t> partIn, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Managed::_HashData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_HashData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partIn), ::il2cpp_utils::ExtractType(ibStart), ::il2cpp_utils::ExtractType(cbSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, partIn, ibStart, cbSize);
}
// Autogenerated method: System.Security.Cryptography.SHA1Managed._EndHash
::ArrayW<uint8_t> System::Security::Cryptography::SHA1Managed::_EndHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Managed::_EndHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_EndHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA1Managed.SHATransform
void System::Security::Cryptography::SHA1Managed::SHATransform(uint* expandedBuffer, uint* state, uint8_t* block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Managed::SHATransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA1Managed", "SHATransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expandedBuffer), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(block)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expandedBuffer, state, block);
}
// Autogenerated method: System.Security.Cryptography.SHA1Managed.SHAExpand
void System::Security::Cryptography::SHA1Managed::SHAExpand(uint* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Managed::SHAExpand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA1Managed", "SHAExpand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.SHA1Managed.Initialize
void System::Security::Cryptography::SHA1Managed::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Managed::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA1Managed.HashCore
void System::Security::Cryptography::SHA1Managed::HashCore(::ArrayW<uint8_t> rgb, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Managed::HashCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rgb, ibStart, cbSize);
}
// Autogenerated method: System.Security.Cryptography.SHA1Managed.HashFinal
::ArrayW<uint8_t> System::Security::Cryptography::SHA1Managed::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Managed::HashFinal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.SHA256
#include "System/Security/Cryptography/SHA256.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.SHA256.Create
::System::Security::Cryptography::SHA256* System::Security::Cryptography::SHA256::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA256", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::SHA256*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA256.Create
::System::Security::Cryptography::SHA256* System::Security::Cryptography::SHA256::Create(::StringW hashName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA256", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::SHA256*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.SHA256Managed
#include "System/Security/Cryptography/SHA256Managed.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] _K
::ArrayW<uint> System::Security::Cryptography::SHA256Managed::_get__K() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::_get__K");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "SHA256Managed", "_K"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] _K
void System::Security::Cryptography::SHA256Managed::_set__K(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::_set__K");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "SHA256Managed", "_K", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::SHA256Managed::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _count
[[deprecated("Use field access instead!")]] int64_t& System::Security::Cryptography::SHA256Managed::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::dyn__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] _stateSHA256
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Security::Cryptography::SHA256Managed::dyn__stateSHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::dyn__stateSHA256");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stateSHA256"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] _W
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Security::Cryptography::SHA256Managed::dyn__W() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::dyn__W");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_W"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.SHA256Managed.InitializeState
void System::Security::Cryptography::SHA256Managed::InitializeState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::InitializeState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA256Managed._HashData
void System::Security::Cryptography::SHA256Managed::_HashData(::ArrayW<uint8_t> partIn, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::_HashData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_HashData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partIn), ::il2cpp_utils::ExtractType(ibStart), ::il2cpp_utils::ExtractType(cbSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, partIn, ibStart, cbSize);
}
// Autogenerated method: System.Security.Cryptography.SHA256Managed._EndHash
::ArrayW<uint8_t> System::Security::Cryptography::SHA256Managed::_EndHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::_EndHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_EndHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA256Managed.SHATransform
void System::Security::Cryptography::SHA256Managed::SHATransform(uint* expandedBuffer, uint* state, uint8_t* block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::SHATransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA256Managed", "SHATransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expandedBuffer), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(block)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expandedBuffer, state, block);
}
// Autogenerated method: System.Security.Cryptography.SHA256Managed.RotateRight
uint System::Security::Cryptography::SHA256Managed::RotateRight(uint x, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::RotateRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA256Managed", "RotateRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, n);
}
// Autogenerated method: System.Security.Cryptography.SHA256Managed.Ch
uint System::Security::Cryptography::SHA256Managed::Ch(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::Ch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA256Managed", "Ch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: System.Security.Cryptography.SHA256Managed.Maj
uint System::Security::Cryptography::SHA256Managed::Maj(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::Maj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA256Managed", "Maj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: System.Security.Cryptography.SHA256Managed.sigma_0
uint System::Security::Cryptography::SHA256Managed::sigma_0(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::sigma_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA256Managed", "sigma_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.SHA256Managed.sigma_1
uint System::Security::Cryptography::SHA256Managed::sigma_1(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::sigma_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA256Managed", "sigma_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.SHA256Managed.Sigma_0
uint System::Security::Cryptography::SHA256Managed::Sigma_0(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::Sigma_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA256Managed", "Sigma_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.SHA256Managed.Sigma_1
uint System::Security::Cryptography::SHA256Managed::Sigma_1(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::Sigma_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA256Managed", "Sigma_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.SHA256Managed.SHA256Expand
void System::Security::Cryptography::SHA256Managed::SHA256Expand(uint* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::SHA256Expand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA256Managed", "SHA256Expand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.SHA256Managed..cctor
void System::Security::Cryptography::SHA256Managed::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA256Managed", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA256Managed.Initialize
void System::Security::Cryptography::SHA256Managed::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA256Managed.HashCore
void System::Security::Cryptography::SHA256Managed::HashCore(::ArrayW<uint8_t> rgb, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::HashCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rgb, ibStart, cbSize);
}
// Autogenerated method: System.Security.Cryptography.SHA256Managed.HashFinal
::ArrayW<uint8_t> System::Security::Cryptography::SHA256Managed::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA256Managed::HashFinal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.SHA384
#include "System/Security/Cryptography/SHA384.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.SHA384.Create
::System::Security::Cryptography::SHA384* System::Security::Cryptography::SHA384::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA384", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::SHA384*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA384.Create
::System::Security::Cryptography::SHA384* System::Security::Cryptography::SHA384::Create(::StringW hashName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA384", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::SHA384*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.SHA384Managed
#include "System/Security/Cryptography/SHA384Managed.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64[] _K
::ArrayW<uint64_t> System::Security::Cryptography::SHA384Managed::_get__K() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::_get__K");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint64_t>>("System.Security.Cryptography", "SHA384Managed", "_K"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64[] _K
void System::Security::Cryptography::SHA384Managed::_set__K(::ArrayW<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::_set__K");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "SHA384Managed", "_K", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::SHA384Managed::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 _count
[[deprecated("Use field access instead!")]] uint64_t& System::Security::Cryptography::SHA384Managed::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::dyn__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64[] _stateSHA384
[[deprecated("Use field access instead!")]] ::ArrayW<uint64_t>& System::Security::Cryptography::SHA384Managed::dyn__stateSHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::dyn__stateSHA384");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stateSHA384"))->offset;
  return *reinterpret_cast<::ArrayW<uint64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64[] _W
[[deprecated("Use field access instead!")]] ::ArrayW<uint64_t>& System::Security::Cryptography::SHA384Managed::dyn__W() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::dyn__W");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_W"))->offset;
  return *reinterpret_cast<::ArrayW<uint64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.SHA384Managed.InitializeState
void System::Security::Cryptography::SHA384Managed::InitializeState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::InitializeState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA384Managed._HashData
void System::Security::Cryptography::SHA384Managed::_HashData(::ArrayW<uint8_t> partIn, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::_HashData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_HashData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partIn), ::il2cpp_utils::ExtractType(ibStart), ::il2cpp_utils::ExtractType(cbSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, partIn, ibStart, cbSize);
}
// Autogenerated method: System.Security.Cryptography.SHA384Managed._EndHash
::ArrayW<uint8_t> System::Security::Cryptography::SHA384Managed::_EndHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::_EndHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_EndHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA384Managed.SHATransform
void System::Security::Cryptography::SHA384Managed::SHATransform(uint64_t* expandedBuffer, uint64_t* state, uint8_t* block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::SHATransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA384Managed", "SHATransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expandedBuffer), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(block)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expandedBuffer, state, block);
}
// Autogenerated method: System.Security.Cryptography.SHA384Managed.RotateRight
uint64_t System::Security::Cryptography::SHA384Managed::RotateRight(uint64_t x, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::RotateRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA384Managed", "RotateRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, n);
}
// Autogenerated method: System.Security.Cryptography.SHA384Managed.Ch
uint64_t System::Security::Cryptography::SHA384Managed::Ch(uint64_t x, uint64_t y, uint64_t z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::Ch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA384Managed", "Ch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: System.Security.Cryptography.SHA384Managed.Maj
uint64_t System::Security::Cryptography::SHA384Managed::Maj(uint64_t x, uint64_t y, uint64_t z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::Maj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA384Managed", "Maj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: System.Security.Cryptography.SHA384Managed.Sigma_0
uint64_t System::Security::Cryptography::SHA384Managed::Sigma_0(uint64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::Sigma_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA384Managed", "Sigma_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.SHA384Managed.Sigma_1
uint64_t System::Security::Cryptography::SHA384Managed::Sigma_1(uint64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::Sigma_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA384Managed", "Sigma_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.SHA384Managed.sigma_0
uint64_t System::Security::Cryptography::SHA384Managed::sigma_0(uint64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::sigma_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA384Managed", "sigma_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.SHA384Managed.sigma_1
uint64_t System::Security::Cryptography::SHA384Managed::sigma_1(uint64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::sigma_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA384Managed", "sigma_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.SHA384Managed.SHA384Expand
void System::Security::Cryptography::SHA384Managed::SHA384Expand(uint64_t* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::SHA384Expand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA384Managed", "SHA384Expand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.SHA384Managed..cctor
void System::Security::Cryptography::SHA384Managed::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA384Managed", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA384Managed.Initialize
void System::Security::Cryptography::SHA384Managed::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA384Managed.HashCore
void System::Security::Cryptography::SHA384Managed::HashCore(::ArrayW<uint8_t> rgb, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::HashCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rgb, ibStart, cbSize);
}
// Autogenerated method: System.Security.Cryptography.SHA384Managed.HashFinal
::ArrayW<uint8_t> System::Security::Cryptography::SHA384Managed::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA384Managed::HashFinal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.SHA512
#include "System/Security/Cryptography/SHA512.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.SHA512.Create
::System::Security::Cryptography::SHA512* System::Security::Cryptography::SHA512::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA512", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::SHA512*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA512.Create
::System::Security::Cryptography::SHA512* System::Security::Cryptography::SHA512::Create(::StringW hashName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA512", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::SHA512*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.SHA512Managed
#include "System/Security/Cryptography/SHA512Managed.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64[] _K
::ArrayW<uint64_t> System::Security::Cryptography::SHA512Managed::_get__K() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::_get__K");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint64_t>>("System.Security.Cryptography", "SHA512Managed", "_K"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64[] _K
void System::Security::Cryptography::SHA512Managed::_set__K(::ArrayW<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::_set__K");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "SHA512Managed", "_K", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::SHA512Managed::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 _count
[[deprecated("Use field access instead!")]] uint64_t& System::Security::Cryptography::SHA512Managed::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::dyn__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64[] _stateSHA512
[[deprecated("Use field access instead!")]] ::ArrayW<uint64_t>& System::Security::Cryptography::SHA512Managed::dyn__stateSHA512() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::dyn__stateSHA512");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stateSHA512"))->offset;
  return *reinterpret_cast<::ArrayW<uint64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64[] _W
[[deprecated("Use field access instead!")]] ::ArrayW<uint64_t>& System::Security::Cryptography::SHA512Managed::dyn__W() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::dyn__W");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_W"))->offset;
  return *reinterpret_cast<::ArrayW<uint64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.SHA512Managed.InitializeState
void System::Security::Cryptography::SHA512Managed::InitializeState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::InitializeState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA512Managed._HashData
void System::Security::Cryptography::SHA512Managed::_HashData(::ArrayW<uint8_t> partIn, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::_HashData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_HashData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partIn), ::il2cpp_utils::ExtractType(ibStart), ::il2cpp_utils::ExtractType(cbSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, partIn, ibStart, cbSize);
}
// Autogenerated method: System.Security.Cryptography.SHA512Managed._EndHash
::ArrayW<uint8_t> System::Security::Cryptography::SHA512Managed::_EndHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::_EndHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_EndHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA512Managed.SHATransform
void System::Security::Cryptography::SHA512Managed::SHATransform(uint64_t* expandedBuffer, uint64_t* state, uint8_t* block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::SHATransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA512Managed", "SHATransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expandedBuffer), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(block)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expandedBuffer, state, block);
}
// Autogenerated method: System.Security.Cryptography.SHA512Managed.RotateRight
uint64_t System::Security::Cryptography::SHA512Managed::RotateRight(uint64_t x, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::RotateRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA512Managed", "RotateRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, n);
}
// Autogenerated method: System.Security.Cryptography.SHA512Managed.Ch
uint64_t System::Security::Cryptography::SHA512Managed::Ch(uint64_t x, uint64_t y, uint64_t z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::Ch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA512Managed", "Ch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: System.Security.Cryptography.SHA512Managed.Maj
uint64_t System::Security::Cryptography::SHA512Managed::Maj(uint64_t x, uint64_t y, uint64_t z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::Maj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA512Managed", "Maj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: System.Security.Cryptography.SHA512Managed.Sigma_0
uint64_t System::Security::Cryptography::SHA512Managed::Sigma_0(uint64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::Sigma_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA512Managed", "Sigma_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.SHA512Managed.Sigma_1
uint64_t System::Security::Cryptography::SHA512Managed::Sigma_1(uint64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::Sigma_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA512Managed", "Sigma_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.SHA512Managed.sigma_0
uint64_t System::Security::Cryptography::SHA512Managed::sigma_0(uint64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::sigma_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA512Managed", "sigma_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.SHA512Managed.sigma_1
uint64_t System::Security::Cryptography::SHA512Managed::sigma_1(uint64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::sigma_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA512Managed", "sigma_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.SHA512Managed.SHA512Expand
void System::Security::Cryptography::SHA512Managed::SHA512Expand(uint64_t* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::SHA512Expand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA512Managed", "SHA512Expand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.SHA512Managed..cctor
void System::Security::Cryptography::SHA512Managed::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA512Managed", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA512Managed.Initialize
void System::Security::Cryptography::SHA512Managed::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA512Managed.HashCore
void System::Security::Cryptography::SHA512Managed::HashCore(::ArrayW<uint8_t> rgb, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::HashCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rgb, ibStart, cbSize);
}
// Autogenerated method: System.Security.Cryptography.SHA512Managed.HashFinal
::ArrayW<uint8_t> System::Security::Cryptography::SHA512Managed::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA512Managed::HashFinal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.SignatureDescription
#include "System/Security/Cryptography/SignatureDescription.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
// Including type: System.Security.Cryptography.AsymmetricSignatureDeformatter
#include "System/Security/Cryptography/AsymmetricSignatureDeformatter.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.AsymmetricSignatureFormatter
#include "System/Security/Cryptography/AsymmetricSignatureFormatter.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _strKey
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::SignatureDescription::dyn__strKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SignatureDescription::dyn__strKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _strDigest
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::SignatureDescription::dyn__strDigest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SignatureDescription::dyn__strDigest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strDigest"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _strFormatter
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::SignatureDescription::dyn__strFormatter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SignatureDescription::dyn__strFormatter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strFormatter"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _strDeformatter
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::SignatureDescription::dyn__strDeformatter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SignatureDescription::dyn__strDeformatter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strDeformatter"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.SignatureDescription.get_KeyAlgorithm
::StringW System::Security::Cryptography::SignatureDescription::get_KeyAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SignatureDescription::get_KeyAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SignatureDescription.set_KeyAlgorithm
void System::Security::Cryptography::SignatureDescription::set_KeyAlgorithm(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SignatureDescription::set_KeyAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_KeyAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SignatureDescription.get_DigestAlgorithm
::StringW System::Security::Cryptography::SignatureDescription::get_DigestAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SignatureDescription::get_DigestAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DigestAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SignatureDescription.set_DigestAlgorithm
void System::Security::Cryptography::SignatureDescription::set_DigestAlgorithm(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SignatureDescription::set_DigestAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DigestAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SignatureDescription.get_FormatterAlgorithm
::StringW System::Security::Cryptography::SignatureDescription::get_FormatterAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SignatureDescription::get_FormatterAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FormatterAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SignatureDescription.set_FormatterAlgorithm
void System::Security::Cryptography::SignatureDescription::set_FormatterAlgorithm(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SignatureDescription::set_FormatterAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FormatterAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SignatureDescription.get_DeformatterAlgorithm
::StringW System::Security::Cryptography::SignatureDescription::get_DeformatterAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SignatureDescription::get_DeformatterAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeformatterAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SignatureDescription.set_DeformatterAlgorithm
void System::Security::Cryptography::SignatureDescription::set_DeformatterAlgorithm(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SignatureDescription::set_DeformatterAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DeformatterAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SignatureDescription.CreateDeformatter
::System::Security::Cryptography::AsymmetricSignatureDeformatter* System::Security::Cryptography::SignatureDescription::CreateDeformatter(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SignatureDescription::CreateDeformatter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SignatureDescription*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricSignatureDeformatter*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.SignatureDescription.CreateFormatter
::System::Security::Cryptography::AsymmetricSignatureFormatter* System::Security::Cryptography::SignatureDescription::CreateFormatter(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SignatureDescription::CreateFormatter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SignatureDescription*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricSignatureFormatter*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.SignatureDescription.CreateDigest
::System::Security::Cryptography::HashAlgorithm* System::Security::Cryptography::SignatureDescription::CreateDigest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SignatureDescription::CreateDigest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SignatureDescription*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithm*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RSAPKCS1SignatureDescription
#include "System/Security/Cryptography/RSAPKCS1SignatureDescription.hpp"
// Including type: System.Security.Cryptography.AsymmetricSignatureDeformatter
#include "System/Security/Cryptography/AsymmetricSignatureDeformatter.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.AsymmetricSignatureFormatter
#include "System/Security/Cryptography/AsymmetricSignatureFormatter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _hashAlgorithm
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::RSAPKCS1SignatureDescription::dyn__hashAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1SignatureDescription::dyn__hashAlgorithm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hashAlgorithm"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1SignatureDescription.CreateDeformatter
::System::Security::Cryptography::AsymmetricSignatureDeformatter* System::Security::Cryptography::RSAPKCS1SignatureDescription::CreateDeformatter(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1SignatureDescription::CreateDeformatter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SignatureDescription*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricSignatureDeformatter*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1SignatureDescription.CreateFormatter
::System::Security::Cryptography::AsymmetricSignatureFormatter* System::Security::Cryptography::RSAPKCS1SignatureDescription::CreateFormatter(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1SignatureDescription::CreateFormatter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SignatureDescription*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricSignatureFormatter*, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RSAPKCS1SHA1SignatureDescription
#include "System/Security/Cryptography/RSAPKCS1SHA1SignatureDescription.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RSAPKCS1SHA256SignatureDescription
#include "System/Security/Cryptography/RSAPKCS1SHA256SignatureDescription.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RSAPKCS1SHA384SignatureDescription
#include "System/Security/Cryptography/RSAPKCS1SHA384SignatureDescription.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RSAPKCS1SHA512SignatureDescription
#include "System/Security/Cryptography/RSAPKCS1SHA512SignatureDescription.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.DSASignatureDescription
#include "System/Security/Cryptography/DSASignatureDescription.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.SymmetricAlgorithm
#include "System/Security/Cryptography/SymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Int32 BlockSizeValue
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::SymmetricAlgorithm::dyn_BlockSizeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::dyn_BlockSizeValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BlockSizeValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 FeedbackSizeValue
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::SymmetricAlgorithm::dyn_FeedbackSizeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::dyn_FeedbackSizeValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FeedbackSizeValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Byte[] IVValue
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::SymmetricAlgorithm::dyn_IVValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::dyn_IVValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IVValue"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Byte[] KeyValue
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::SymmetricAlgorithm::dyn_KeyValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::dyn_KeyValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyValue"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Security.Cryptography.KeySizes[] LegalBlockSizesValue
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Security::Cryptography::KeySizes*>& System::Security::Cryptography::SymmetricAlgorithm::dyn_LegalBlockSizesValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::dyn_LegalBlockSizesValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LegalBlockSizesValue"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Security::Cryptography::KeySizes*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Security.Cryptography.KeySizes[] LegalKeySizesValue
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Security::Cryptography::KeySizes*>& System::Security::Cryptography::SymmetricAlgorithm::dyn_LegalKeySizesValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::dyn_LegalKeySizesValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LegalKeySizesValue"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Security::Cryptography::KeySizes*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 KeySizeValue
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::SymmetricAlgorithm::dyn_KeySizeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::dyn_KeySizeValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeySizeValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Security.Cryptography.CipherMode ModeValue
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::CipherMode& System::Security::Cryptography::SymmetricAlgorithm::dyn_ModeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::dyn_ModeValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ModeValue"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::CipherMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Security.Cryptography.PaddingMode PaddingValue
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::PaddingMode& System::Security::Cryptography::SymmetricAlgorithm::dyn_PaddingValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::dyn_PaddingValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PaddingValue"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::PaddingMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.Dispose
void System::Security::Cryptography::SymmetricAlgorithm::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.Clear
void System::Security::Cryptography::SymmetricAlgorithm::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.Dispose
void System::Security::Cryptography::SymmetricAlgorithm::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_BlockSize
int System::Security::Cryptography::SymmetricAlgorithm::get_BlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::get_BlockSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_BlockSize
void System::Security::Cryptography::SymmetricAlgorithm::set_BlockSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::set_BlockSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_FeedbackSize
int System::Security::Cryptography::SymmetricAlgorithm::get_FeedbackSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::get_FeedbackSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_FeedbackSize
void System::Security::Cryptography::SymmetricAlgorithm::set_FeedbackSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::set_FeedbackSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_IV
::ArrayW<uint8_t> System::Security::Cryptography::SymmetricAlgorithm::get_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::get_IV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_IV
void System::Security::Cryptography::SymmetricAlgorithm::set_IV(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::set_IV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_Key
::ArrayW<uint8_t> System::Security::Cryptography::SymmetricAlgorithm::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_Key
void System::Security::Cryptography::SymmetricAlgorithm::set_Key(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::set_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_LegalBlockSizes
::ArrayW<::System::Security::Cryptography::KeySizes*> System::Security::Cryptography::SymmetricAlgorithm::get_LegalBlockSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::get_LegalBlockSizes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Security::Cryptography::KeySizes*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_LegalKeySizes
::ArrayW<::System::Security::Cryptography::KeySizes*> System::Security::Cryptography::SymmetricAlgorithm::get_LegalKeySizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::get_LegalKeySizes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Security::Cryptography::KeySizes*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_KeySize
int System::Security::Cryptography::SymmetricAlgorithm::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::get_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_KeySize
void System::Security::Cryptography::SymmetricAlgorithm::set_KeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::set_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_Mode
::System::Security::Cryptography::CipherMode System::Security::Cryptography::SymmetricAlgorithm::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::get_Mode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::CipherMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_Mode
void System::Security::Cryptography::SymmetricAlgorithm::set_Mode(::System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::set_Mode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_Padding
::System::Security::Cryptography::PaddingMode System::Security::Cryptography::SymmetricAlgorithm::get_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::get_Padding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::PaddingMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_Padding
void System::Security::Cryptography::SymmetricAlgorithm::set_Padding(::System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::set_Padding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize
bool System::Security::Cryptography::SymmetricAlgorithm::ValidKeySize(int bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::ValidKeySize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidKeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bitLength);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.Create
::System::Security::Cryptography::SymmetricAlgorithm* System::Security::Cryptography::SymmetricAlgorithm::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SymmetricAlgorithm", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::SymmetricAlgorithm*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.Create
::System::Security::Cryptography::SymmetricAlgorithm* System::Security::Cryptography::SymmetricAlgorithm::Create(::StringW algName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SymmetricAlgorithm", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::SymmetricAlgorithm*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, algName);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::SymmetricAlgorithm::CreateEncryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::SymmetricAlgorithm::CreateEncryptor(::ArrayW<uint8_t> rgbKey, ::ArrayW<uint8_t> rgbIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgbIV);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::SymmetricAlgorithm::CreateDecryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::SymmetricAlgorithm::CreateDecryptor(::ArrayW<uint8_t> rgbKey, ::ArrayW<uint8_t> rgbIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgbIV);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
void System::Security::Cryptography::SymmetricAlgorithm::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::GenerateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
void System::Security::Cryptography::SymmetricAlgorithm::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SymmetricAlgorithm::GenerateIV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.TripleDES
#include "System/Security/Cryptography/TripleDES.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
::ArrayW<::System::Security::Cryptography::KeySizes*> System::Security::Cryptography::TripleDES::_get_s_legalBlockSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDES::_get_s_legalBlockSizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("System.Security.Cryptography", "TripleDES", "s_legalBlockSizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
void System::Security::Cryptography::TripleDES::_set_s_legalBlockSizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDES::_set_s_legalBlockSizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "TripleDES", "s_legalBlockSizes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
::ArrayW<::System::Security::Cryptography::KeySizes*> System::Security::Cryptography::TripleDES::_get_s_legalKeySizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDES::_get_s_legalKeySizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("System.Security.Cryptography", "TripleDES", "s_legalKeySizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
void System::Security::Cryptography::TripleDES::_set_s_legalKeySizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDES::_set_s_legalKeySizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "TripleDES", "s_legalKeySizes", value));
}
// Autogenerated method: System.Security.Cryptography.TripleDES.Create
::System::Security::Cryptography::TripleDES* System::Security::Cryptography::TripleDES::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDES::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "TripleDES", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::TripleDES*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.TripleDES.Create
::System::Security::Cryptography::TripleDES* System::Security::Cryptography::TripleDES::Create(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDES::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "TripleDES", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::TripleDES*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Security.Cryptography.TripleDES.IsWeakKey
bool System::Security::Cryptography::TripleDES::IsWeakKey(::ArrayW<uint8_t> rgbKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDES::IsWeakKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "TripleDES", "IsWeakKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgbKey);
}
// Autogenerated method: System.Security.Cryptography.TripleDES.EqualBytes
bool System::Security::Cryptography::TripleDES::EqualBytes(::ArrayW<uint8_t> rgbKey, int start1, int start2, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDES::EqualBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "TripleDES", "EqualBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey), ::il2cpp_utils::ExtractType(start1), ::il2cpp_utils::ExtractType(start2), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgbKey, start1, start2, count);
}
// Autogenerated method: System.Security.Cryptography.TripleDES.IsLegalKeySize
bool System::Security::Cryptography::TripleDES::IsLegalKeySize(::ArrayW<uint8_t> rgbKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDES::IsLegalKeySize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "TripleDES", "IsLegalKeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgbKey);
}
// Autogenerated method: System.Security.Cryptography.TripleDES..cctor
void System::Security::Cryptography::TripleDES::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDES::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "TripleDES", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.TripleDES.get_Key
::ArrayW<uint8_t> System::Security::Cryptography::TripleDES::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDES::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.TripleDES.set_Key
void System::Security::Cryptography::TripleDES::set_Key(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDES::set_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.TripleDESCryptoServiceProvider
#include "System/Security/Cryptography/TripleDESCryptoServiceProvider.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::TripleDESCryptoServiceProvider::CreateEncryptor(::ArrayW<uint8_t> rgbKey, ::ArrayW<uint8_t> rgbIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDESCryptoServiceProvider::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgbIV);
}
// Autogenerated method: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::TripleDESCryptoServiceProvider::CreateDecryptor(::ArrayW<uint8_t> rgbKey, ::ArrayW<uint8_t> rgbIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDESCryptoServiceProvider::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgbIV);
}
// Autogenerated method: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey
void System::Security::Cryptography::TripleDESCryptoServiceProvider::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDESCryptoServiceProvider::GenerateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV
void System::Security::Cryptography::TripleDESCryptoServiceProvider::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDESCryptoServiceProvider::GenerateIV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CspAlgorithmType
#include "System/Security/Cryptography/CspAlgorithmType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspAlgorithmType Rsa
::System::Security::Cryptography::CspAlgorithmType System::Security::Cryptography::CspAlgorithmType::_get_Rsa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspAlgorithmType::_get_Rsa");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspAlgorithmType>("System.Security.Cryptography", "CspAlgorithmType", "Rsa"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspAlgorithmType Rsa
void System::Security::Cryptography::CspAlgorithmType::_set_Rsa(::System::Security::Cryptography::CspAlgorithmType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspAlgorithmType::_set_Rsa");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspAlgorithmType", "Rsa", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspAlgorithmType Dss
::System::Security::Cryptography::CspAlgorithmType System::Security::Cryptography::CspAlgorithmType::_get_Dss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspAlgorithmType::_get_Dss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspAlgorithmType>("System.Security.Cryptography", "CspAlgorithmType", "Dss"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspAlgorithmType Dss
void System::Security::Cryptography::CspAlgorithmType::_set_Dss(::System::Security::Cryptography::CspAlgorithmType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspAlgorithmType::_set_Dss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspAlgorithmType", "Dss", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CspAlgorithmType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspAlgorithmType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.Constants
#include "System/Security/Cryptography/Constants.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 S_OK
int System::Security::Cryptography::Constants::_get_S_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_S_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "S_OK"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 S_OK
void System::Security::Cryptography::Constants::_set_S_OK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_S_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "S_OK", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 NTE_FILENOTFOUND
int System::Security::Cryptography::Constants::_get_NTE_FILENOTFOUND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_NTE_FILENOTFOUND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "NTE_FILENOTFOUND"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 NTE_FILENOTFOUND
void System::Security::Cryptography::Constants::_set_NTE_FILENOTFOUND(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_NTE_FILENOTFOUND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "NTE_FILENOTFOUND", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 NTE_NO_KEY
int System::Security::Cryptography::Constants::_get_NTE_NO_KEY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_NTE_NO_KEY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "NTE_NO_KEY"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 NTE_NO_KEY
void System::Security::Cryptography::Constants::_set_NTE_NO_KEY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_NTE_NO_KEY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "NTE_NO_KEY", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 NTE_BAD_KEYSET
int System::Security::Cryptography::Constants::_get_NTE_BAD_KEYSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_NTE_BAD_KEYSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "NTE_BAD_KEYSET"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 NTE_BAD_KEYSET
void System::Security::Cryptography::Constants::_set_NTE_BAD_KEYSET(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_NTE_BAD_KEYSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "NTE_BAD_KEYSET", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 NTE_KEYSET_NOT_DEF
int System::Security::Cryptography::Constants::_get_NTE_KEYSET_NOT_DEF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_NTE_KEYSET_NOT_DEF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "NTE_KEYSET_NOT_DEF"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 NTE_KEYSET_NOT_DEF
void System::Security::Cryptography::Constants::_set_NTE_KEYSET_NOT_DEF(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_NTE_KEYSET_NOT_DEF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "NTE_KEYSET_NOT_DEF", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 KP_IV
int System::Security::Cryptography::Constants::_get_KP_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_KP_IV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "KP_IV"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 KP_IV
void System::Security::Cryptography::Constants::_set_KP_IV(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_KP_IV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "KP_IV", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 KP_MODE
int System::Security::Cryptography::Constants::_get_KP_MODE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_KP_MODE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "KP_MODE"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 KP_MODE
void System::Security::Cryptography::Constants::_set_KP_MODE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_KP_MODE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "KP_MODE", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 KP_MODE_BITS
int System::Security::Cryptography::Constants::_get_KP_MODE_BITS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_KP_MODE_BITS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "KP_MODE_BITS"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 KP_MODE_BITS
void System::Security::Cryptography::Constants::_set_KP_MODE_BITS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_KP_MODE_BITS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "KP_MODE_BITS", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 KP_EFFECTIVE_KEYLEN
int System::Security::Cryptography::Constants::_get_KP_EFFECTIVE_KEYLEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_KP_EFFECTIVE_KEYLEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "KP_EFFECTIVE_KEYLEN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 KP_EFFECTIVE_KEYLEN
void System::Security::Cryptography::Constants::_set_KP_EFFECTIVE_KEYLEN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_KP_EFFECTIVE_KEYLEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "KP_EFFECTIVE_KEYLEN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 ALG_CLASS_SIGNATURE
int System::Security::Cryptography::Constants::_get_ALG_CLASS_SIGNATURE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_ALG_CLASS_SIGNATURE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "ALG_CLASS_SIGNATURE"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 ALG_CLASS_SIGNATURE
void System::Security::Cryptography::Constants::_set_ALG_CLASS_SIGNATURE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_ALG_CLASS_SIGNATURE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "ALG_CLASS_SIGNATURE", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 ALG_CLASS_DATA_ENCRYPT
int System::Security::Cryptography::Constants::_get_ALG_CLASS_DATA_ENCRYPT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_ALG_CLASS_DATA_ENCRYPT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "ALG_CLASS_DATA_ENCRYPT"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 ALG_CLASS_DATA_ENCRYPT
void System::Security::Cryptography::Constants::_set_ALG_CLASS_DATA_ENCRYPT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_ALG_CLASS_DATA_ENCRYPT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "ALG_CLASS_DATA_ENCRYPT", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 ALG_CLASS_HASH
int System::Security::Cryptography::Constants::_get_ALG_CLASS_HASH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_ALG_CLASS_HASH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "ALG_CLASS_HASH"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 ALG_CLASS_HASH
void System::Security::Cryptography::Constants::_set_ALG_CLASS_HASH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_ALG_CLASS_HASH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "ALG_CLASS_HASH", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 ALG_CLASS_KEY_EXCHANGE
int System::Security::Cryptography::Constants::_get_ALG_CLASS_KEY_EXCHANGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_ALG_CLASS_KEY_EXCHANGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "ALG_CLASS_KEY_EXCHANGE"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 ALG_CLASS_KEY_EXCHANGE
void System::Security::Cryptography::Constants::_set_ALG_CLASS_KEY_EXCHANGE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_ALG_CLASS_KEY_EXCHANGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "ALG_CLASS_KEY_EXCHANGE", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 ALG_TYPE_DSS
int System::Security::Cryptography::Constants::_get_ALG_TYPE_DSS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_ALG_TYPE_DSS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "ALG_TYPE_DSS"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 ALG_TYPE_DSS
void System::Security::Cryptography::Constants::_set_ALG_TYPE_DSS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_ALG_TYPE_DSS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "ALG_TYPE_DSS", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 ALG_TYPE_RSA
int System::Security::Cryptography::Constants::_get_ALG_TYPE_RSA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_ALG_TYPE_RSA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "ALG_TYPE_RSA"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 ALG_TYPE_RSA
void System::Security::Cryptography::Constants::_set_ALG_TYPE_RSA(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_ALG_TYPE_RSA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "ALG_TYPE_RSA", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 ALG_TYPE_BLOCK
int System::Security::Cryptography::Constants::_get_ALG_TYPE_BLOCK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_ALG_TYPE_BLOCK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "ALG_TYPE_BLOCK"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 ALG_TYPE_BLOCK
void System::Security::Cryptography::Constants::_set_ALG_TYPE_BLOCK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_ALG_TYPE_BLOCK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "ALG_TYPE_BLOCK", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 ALG_TYPE_STREAM
int System::Security::Cryptography::Constants::_get_ALG_TYPE_STREAM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_ALG_TYPE_STREAM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "ALG_TYPE_STREAM"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 ALG_TYPE_STREAM
void System::Security::Cryptography::Constants::_set_ALG_TYPE_STREAM(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_ALG_TYPE_STREAM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "ALG_TYPE_STREAM", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 ALG_TYPE_ANY
int System::Security::Cryptography::Constants::_get_ALG_TYPE_ANY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_ALG_TYPE_ANY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "ALG_TYPE_ANY"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 ALG_TYPE_ANY
void System::Security::Cryptography::Constants::_set_ALG_TYPE_ANY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_ALG_TYPE_ANY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "ALG_TYPE_ANY", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CALG_MD5
int System::Security::Cryptography::Constants::_get_CALG_MD5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CALG_MD5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "CALG_MD5"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CALG_MD5
void System::Security::Cryptography::Constants::_set_CALG_MD5(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CALG_MD5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CALG_MD5", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CALG_SHA1
int System::Security::Cryptography::Constants::_get_CALG_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CALG_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "CALG_SHA1"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CALG_SHA1
void System::Security::Cryptography::Constants::_set_CALG_SHA1(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CALG_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CALG_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CALG_SHA_256
int System::Security::Cryptography::Constants::_get_CALG_SHA_256() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CALG_SHA_256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "CALG_SHA_256"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CALG_SHA_256
void System::Security::Cryptography::Constants::_set_CALG_SHA_256(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CALG_SHA_256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CALG_SHA_256", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CALG_SHA_384
int System::Security::Cryptography::Constants::_get_CALG_SHA_384() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CALG_SHA_384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "CALG_SHA_384"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CALG_SHA_384
void System::Security::Cryptography::Constants::_set_CALG_SHA_384(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CALG_SHA_384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CALG_SHA_384", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CALG_SHA_512
int System::Security::Cryptography::Constants::_get_CALG_SHA_512() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CALG_SHA_512");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "CALG_SHA_512"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CALG_SHA_512
void System::Security::Cryptography::Constants::_set_CALG_SHA_512(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CALG_SHA_512");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CALG_SHA_512", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CALG_RSA_KEYX
int System::Security::Cryptography::Constants::_get_CALG_RSA_KEYX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CALG_RSA_KEYX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "CALG_RSA_KEYX"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CALG_RSA_KEYX
void System::Security::Cryptography::Constants::_set_CALG_RSA_KEYX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CALG_RSA_KEYX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CALG_RSA_KEYX", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CALG_RSA_SIGN
int System::Security::Cryptography::Constants::_get_CALG_RSA_SIGN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CALG_RSA_SIGN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "CALG_RSA_SIGN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CALG_RSA_SIGN
void System::Security::Cryptography::Constants::_set_CALG_RSA_SIGN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CALG_RSA_SIGN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CALG_RSA_SIGN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CALG_DSS_SIGN
int System::Security::Cryptography::Constants::_get_CALG_DSS_SIGN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CALG_DSS_SIGN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "CALG_DSS_SIGN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CALG_DSS_SIGN
void System::Security::Cryptography::Constants::_set_CALG_DSS_SIGN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CALG_DSS_SIGN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CALG_DSS_SIGN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CALG_DES
int System::Security::Cryptography::Constants::_get_CALG_DES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CALG_DES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "CALG_DES"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CALG_DES
void System::Security::Cryptography::Constants::_set_CALG_DES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CALG_DES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CALG_DES", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CALG_RC2
int System::Security::Cryptography::Constants::_get_CALG_RC2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CALG_RC2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "CALG_RC2"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CALG_RC2
void System::Security::Cryptography::Constants::_set_CALG_RC2(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CALG_RC2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CALG_RC2", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CALG_3DES
int System::Security::Cryptography::Constants::_get_CALG_3DES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CALG_3DES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "CALG_3DES"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CALG_3DES
void System::Security::Cryptography::Constants::_set_CALG_3DES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CALG_3DES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CALG_3DES", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CALG_3DES_112
int System::Security::Cryptography::Constants::_get_CALG_3DES_112() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CALG_3DES_112");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "CALG_3DES_112"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CALG_3DES_112
void System::Security::Cryptography::Constants::_set_CALG_3DES_112(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CALG_3DES_112");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CALG_3DES_112", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CALG_AES_128
int System::Security::Cryptography::Constants::_get_CALG_AES_128() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CALG_AES_128");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "CALG_AES_128"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CALG_AES_128
void System::Security::Cryptography::Constants::_set_CALG_AES_128(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CALG_AES_128");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CALG_AES_128", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CALG_AES_192
int System::Security::Cryptography::Constants::_get_CALG_AES_192() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CALG_AES_192");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "CALG_AES_192"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CALG_AES_192
void System::Security::Cryptography::Constants::_set_CALG_AES_192(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CALG_AES_192");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CALG_AES_192", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CALG_AES_256
int System::Security::Cryptography::Constants::_get_CALG_AES_256() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CALG_AES_256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "CALG_AES_256"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CALG_AES_256
void System::Security::Cryptography::Constants::_set_CALG_AES_256(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CALG_AES_256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CALG_AES_256", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CALG_RC4
int System::Security::Cryptography::Constants::_get_CALG_RC4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CALG_RC4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "CALG_RC4"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CALG_RC4
void System::Security::Cryptography::Constants::_set_CALG_RC4(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CALG_RC4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CALG_RC4", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 PROV_RSA_FULL
int System::Security::Cryptography::Constants::_get_PROV_RSA_FULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_PROV_RSA_FULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "PROV_RSA_FULL"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 PROV_RSA_FULL
void System::Security::Cryptography::Constants::_set_PROV_RSA_FULL(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_PROV_RSA_FULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "PROV_RSA_FULL", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 PROV_DSS_DH
int System::Security::Cryptography::Constants::_get_PROV_DSS_DH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_PROV_DSS_DH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "PROV_DSS_DH"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 PROV_DSS_DH
void System::Security::Cryptography::Constants::_set_PROV_DSS_DH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_PROV_DSS_DH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "PROV_DSS_DH", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 PROV_RSA_AES
int System::Security::Cryptography::Constants::_get_PROV_RSA_AES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_PROV_RSA_AES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "PROV_RSA_AES"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 PROV_RSA_AES
void System::Security::Cryptography::Constants::_set_PROV_RSA_AES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_PROV_RSA_AES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "PROV_RSA_AES", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 AT_KEYEXCHANGE
int System::Security::Cryptography::Constants::_get_AT_KEYEXCHANGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_AT_KEYEXCHANGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "AT_KEYEXCHANGE"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 AT_KEYEXCHANGE
void System::Security::Cryptography::Constants::_set_AT_KEYEXCHANGE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_AT_KEYEXCHANGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "AT_KEYEXCHANGE", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 AT_SIGNATURE
int System::Security::Cryptography::Constants::_get_AT_SIGNATURE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_AT_SIGNATURE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "AT_SIGNATURE"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 AT_SIGNATURE
void System::Security::Cryptography::Constants::_set_AT_SIGNATURE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_AT_SIGNATURE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "AT_SIGNATURE", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 PUBLICKEYBLOB
int System::Security::Cryptography::Constants::_get_PUBLICKEYBLOB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_PUBLICKEYBLOB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "PUBLICKEYBLOB"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 PUBLICKEYBLOB
void System::Security::Cryptography::Constants::_set_PUBLICKEYBLOB(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_PUBLICKEYBLOB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "PUBLICKEYBLOB", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 PRIVATEKEYBLOB
int System::Security::Cryptography::Constants::_get_PRIVATEKEYBLOB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_PRIVATEKEYBLOB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "PRIVATEKEYBLOB"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 PRIVATEKEYBLOB
void System::Security::Cryptography::Constants::_set_PRIVATEKEYBLOB(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_PRIVATEKEYBLOB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "PRIVATEKEYBLOB", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CRYPT_OAEP
int System::Security::Cryptography::Constants::_get_CRYPT_OAEP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CRYPT_OAEP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Constants", "CRYPT_OAEP"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CRYPT_OAEP
void System::Security::Cryptography::Constants::_set_CRYPT_OAEP(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CRYPT_OAEP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CRYPT_OAEP", value));
}
// Autogenerated static field getter
// Get static field: static System.UInt32 CRYPT_VERIFYCONTEXT
uint System::Security::Cryptography::Constants::_get_CRYPT_VERIFYCONTEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CRYPT_VERIFYCONTEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Security.Cryptography", "Constants", "CRYPT_VERIFYCONTEXT"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 CRYPT_VERIFYCONTEXT
void System::Security::Cryptography::Constants::_set_CRYPT_VERIFYCONTEXT(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CRYPT_VERIFYCONTEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CRYPT_VERIFYCONTEXT", value));
}
// Autogenerated static field getter
// Get static field: static System.UInt32 CRYPT_NEWKEYSET
uint System::Security::Cryptography::Constants::_get_CRYPT_NEWKEYSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CRYPT_NEWKEYSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Security.Cryptography", "Constants", "CRYPT_NEWKEYSET"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 CRYPT_NEWKEYSET
void System::Security::Cryptography::Constants::_set_CRYPT_NEWKEYSET(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CRYPT_NEWKEYSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CRYPT_NEWKEYSET", value));
}
// Autogenerated static field getter
// Get static field: static System.UInt32 CRYPT_DELETEKEYSET
uint System::Security::Cryptography::Constants::_get_CRYPT_DELETEKEYSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CRYPT_DELETEKEYSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Security.Cryptography", "Constants", "CRYPT_DELETEKEYSET"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 CRYPT_DELETEKEYSET
void System::Security::Cryptography::Constants::_set_CRYPT_DELETEKEYSET(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CRYPT_DELETEKEYSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CRYPT_DELETEKEYSET", value));
}
// Autogenerated static field getter
// Get static field: static System.UInt32 CRYPT_MACHINE_KEYSET
uint System::Security::Cryptography::Constants::_get_CRYPT_MACHINE_KEYSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CRYPT_MACHINE_KEYSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Security.Cryptography", "Constants", "CRYPT_MACHINE_KEYSET"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 CRYPT_MACHINE_KEYSET
void System::Security::Cryptography::Constants::_set_CRYPT_MACHINE_KEYSET(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CRYPT_MACHINE_KEYSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CRYPT_MACHINE_KEYSET", value));
}
// Autogenerated static field getter
// Get static field: static System.UInt32 CRYPT_SILENT
uint System::Security::Cryptography::Constants::_get_CRYPT_SILENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CRYPT_SILENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Security.Cryptography", "Constants", "CRYPT_SILENT"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 CRYPT_SILENT
void System::Security::Cryptography::Constants::_set_CRYPT_SILENT(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CRYPT_SILENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CRYPT_SILENT", value));
}
// Autogenerated static field getter
// Get static field: static System.UInt32 CRYPT_EXPORTABLE
uint System::Security::Cryptography::Constants::_get_CRYPT_EXPORTABLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CRYPT_EXPORTABLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Security.Cryptography", "Constants", "CRYPT_EXPORTABLE"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 CRYPT_EXPORTABLE
void System::Security::Cryptography::Constants::_set_CRYPT_EXPORTABLE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CRYPT_EXPORTABLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CRYPT_EXPORTABLE", value));
}
// Autogenerated static field getter
// Get static field: static System.UInt32 CLR_KEYLEN
uint System::Security::Cryptography::Constants::_get_CLR_KEYLEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CLR_KEYLEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Security.Cryptography", "Constants", "CLR_KEYLEN"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 CLR_KEYLEN
void System::Security::Cryptography::Constants::_set_CLR_KEYLEN(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CLR_KEYLEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CLR_KEYLEN", value));
}
// Autogenerated static field getter
// Get static field: static System.UInt32 CLR_PUBLICKEYONLY
uint System::Security::Cryptography::Constants::_get_CLR_PUBLICKEYONLY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CLR_PUBLICKEYONLY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Security.Cryptography", "Constants", "CLR_PUBLICKEYONLY"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 CLR_PUBLICKEYONLY
void System::Security::Cryptography::Constants::_set_CLR_PUBLICKEYONLY(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CLR_PUBLICKEYONLY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CLR_PUBLICKEYONLY", value));
}
// Autogenerated static field getter
// Get static field: static System.UInt32 CLR_EXPORTABLE
uint System::Security::Cryptography::Constants::_get_CLR_EXPORTABLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CLR_EXPORTABLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Security.Cryptography", "Constants", "CLR_EXPORTABLE"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 CLR_EXPORTABLE
void System::Security::Cryptography::Constants::_set_CLR_EXPORTABLE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CLR_EXPORTABLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CLR_EXPORTABLE", value));
}
// Autogenerated static field getter
// Get static field: static System.UInt32 CLR_REMOVABLE
uint System::Security::Cryptography::Constants::_get_CLR_REMOVABLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CLR_REMOVABLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Security.Cryptography", "Constants", "CLR_REMOVABLE"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 CLR_REMOVABLE
void System::Security::Cryptography::Constants::_set_CLR_REMOVABLE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CLR_REMOVABLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CLR_REMOVABLE", value));
}
// Autogenerated static field getter
// Get static field: static System.UInt32 CLR_HARDWARE
uint System::Security::Cryptography::Constants::_get_CLR_HARDWARE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CLR_HARDWARE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Security.Cryptography", "Constants", "CLR_HARDWARE"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 CLR_HARDWARE
void System::Security::Cryptography::Constants::_set_CLR_HARDWARE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CLR_HARDWARE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CLR_HARDWARE", value));
}
// Autogenerated static field getter
// Get static field: static System.UInt32 CLR_ACCESSIBLE
uint System::Security::Cryptography::Constants::_get_CLR_ACCESSIBLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CLR_ACCESSIBLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Security.Cryptography", "Constants", "CLR_ACCESSIBLE"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 CLR_ACCESSIBLE
void System::Security::Cryptography::Constants::_set_CLR_ACCESSIBLE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CLR_ACCESSIBLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CLR_ACCESSIBLE", value));
}
// Autogenerated static field getter
// Get static field: static System.UInt32 CLR_PROTECTED
uint System::Security::Cryptography::Constants::_get_CLR_PROTECTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CLR_PROTECTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Security.Cryptography", "Constants", "CLR_PROTECTED"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 CLR_PROTECTED
void System::Security::Cryptography::Constants::_set_CLR_PROTECTED(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CLR_PROTECTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CLR_PROTECTED", value));
}
// Autogenerated static field getter
// Get static field: static System.UInt32 CLR_UNIQUE_CONTAINER
uint System::Security::Cryptography::Constants::_get_CLR_UNIQUE_CONTAINER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CLR_UNIQUE_CONTAINER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Security.Cryptography", "Constants", "CLR_UNIQUE_CONTAINER"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 CLR_UNIQUE_CONTAINER
void System::Security::Cryptography::Constants::_set_CLR_UNIQUE_CONTAINER(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CLR_UNIQUE_CONTAINER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CLR_UNIQUE_CONTAINER", value));
}
// Autogenerated static field getter
// Get static field: static System.UInt32 CLR_ALGID
uint System::Security::Cryptography::Constants::_get_CLR_ALGID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CLR_ALGID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Security.Cryptography", "Constants", "CLR_ALGID"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 CLR_ALGID
void System::Security::Cryptography::Constants::_set_CLR_ALGID(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CLR_ALGID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CLR_ALGID", value));
}
// Autogenerated static field getter
// Get static field: static System.UInt32 CLR_PP_CLIENT_HWND
uint System::Security::Cryptography::Constants::_get_CLR_PP_CLIENT_HWND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CLR_PP_CLIENT_HWND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Security.Cryptography", "Constants", "CLR_PP_CLIENT_HWND"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 CLR_PP_CLIENT_HWND
void System::Security::Cryptography::Constants::_set_CLR_PP_CLIENT_HWND(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CLR_PP_CLIENT_HWND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CLR_PP_CLIENT_HWND", value));
}
// Autogenerated static field getter
// Get static field: static System.UInt32 CLR_PP_PIN
uint System::Security::Cryptography::Constants::_get_CLR_PP_PIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_CLR_PP_PIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Security.Cryptography", "Constants", "CLR_PP_PIN"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 CLR_PP_PIN
void System::Security::Cryptography::Constants::_set_CLR_PP_PIN(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_CLR_PP_PIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "CLR_PP_PIN", value));
}
// Autogenerated static field getter
// Get static field: static System.String OID_RSA_SMIMEalgCMS3DESwrap
::StringW System::Security::Cryptography::Constants::_get_OID_RSA_SMIMEalgCMS3DESwrap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_OID_RSA_SMIMEalgCMS3DESwrap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography", "Constants", "OID_RSA_SMIMEalgCMS3DESwrap"));
}
// Autogenerated static field setter
// Set static field: static System.String OID_RSA_SMIMEalgCMS3DESwrap
void System::Security::Cryptography::Constants::_set_OID_RSA_SMIMEalgCMS3DESwrap(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_OID_RSA_SMIMEalgCMS3DESwrap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "OID_RSA_SMIMEalgCMS3DESwrap", value));
}
// Autogenerated static field getter
// Get static field: static System.String OID_RSA_MD5
::StringW System::Security::Cryptography::Constants::_get_OID_RSA_MD5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_OID_RSA_MD5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography", "Constants", "OID_RSA_MD5"));
}
// Autogenerated static field setter
// Set static field: static System.String OID_RSA_MD5
void System::Security::Cryptography::Constants::_set_OID_RSA_MD5(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_OID_RSA_MD5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "OID_RSA_MD5", value));
}
// Autogenerated static field getter
// Get static field: static System.String OID_RSA_RC2CBC
::StringW System::Security::Cryptography::Constants::_get_OID_RSA_RC2CBC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_OID_RSA_RC2CBC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography", "Constants", "OID_RSA_RC2CBC"));
}
// Autogenerated static field setter
// Set static field: static System.String OID_RSA_RC2CBC
void System::Security::Cryptography::Constants::_set_OID_RSA_RC2CBC(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_OID_RSA_RC2CBC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "OID_RSA_RC2CBC", value));
}
// Autogenerated static field getter
// Get static field: static System.String OID_RSA_DES_EDE3_CBC
::StringW System::Security::Cryptography::Constants::_get_OID_RSA_DES_EDE3_CBC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_OID_RSA_DES_EDE3_CBC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography", "Constants", "OID_RSA_DES_EDE3_CBC"));
}
// Autogenerated static field setter
// Set static field: static System.String OID_RSA_DES_EDE3_CBC
void System::Security::Cryptography::Constants::_set_OID_RSA_DES_EDE3_CBC(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_OID_RSA_DES_EDE3_CBC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "OID_RSA_DES_EDE3_CBC", value));
}
// Autogenerated static field getter
// Get static field: static System.String OID_OIWSEC_desCBC
::StringW System::Security::Cryptography::Constants::_get_OID_OIWSEC_desCBC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_OID_OIWSEC_desCBC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography", "Constants", "OID_OIWSEC_desCBC"));
}
// Autogenerated static field setter
// Set static field: static System.String OID_OIWSEC_desCBC
void System::Security::Cryptography::Constants::_set_OID_OIWSEC_desCBC(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_OID_OIWSEC_desCBC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "OID_OIWSEC_desCBC", value));
}
// Autogenerated static field getter
// Get static field: static System.String OID_OIWSEC_SHA1
::StringW System::Security::Cryptography::Constants::_get_OID_OIWSEC_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_OID_OIWSEC_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography", "Constants", "OID_OIWSEC_SHA1"));
}
// Autogenerated static field setter
// Set static field: static System.String OID_OIWSEC_SHA1
void System::Security::Cryptography::Constants::_set_OID_OIWSEC_SHA1(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_OID_OIWSEC_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "OID_OIWSEC_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static System.String OID_OIWSEC_SHA256
::StringW System::Security::Cryptography::Constants::_get_OID_OIWSEC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_OID_OIWSEC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography", "Constants", "OID_OIWSEC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static System.String OID_OIWSEC_SHA256
void System::Security::Cryptography::Constants::_set_OID_OIWSEC_SHA256(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_OID_OIWSEC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "OID_OIWSEC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static System.String OID_OIWSEC_SHA384
::StringW System::Security::Cryptography::Constants::_get_OID_OIWSEC_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_OID_OIWSEC_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography", "Constants", "OID_OIWSEC_SHA384"));
}
// Autogenerated static field setter
// Set static field: static System.String OID_OIWSEC_SHA384
void System::Security::Cryptography::Constants::_set_OID_OIWSEC_SHA384(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_OID_OIWSEC_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "OID_OIWSEC_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static System.String OID_OIWSEC_SHA512
::StringW System::Security::Cryptography::Constants::_get_OID_OIWSEC_SHA512() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_OID_OIWSEC_SHA512");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography", "Constants", "OID_OIWSEC_SHA512"));
}
// Autogenerated static field setter
// Set static field: static System.String OID_OIWSEC_SHA512
void System::Security::Cryptography::Constants::_set_OID_OIWSEC_SHA512(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_OID_OIWSEC_SHA512");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "OID_OIWSEC_SHA512", value));
}
// Autogenerated static field getter
// Get static field: static System.String OID_OIWSEC_RIPEMD160
::StringW System::Security::Cryptography::Constants::_get_OID_OIWSEC_RIPEMD160() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_get_OID_OIWSEC_RIPEMD160");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography", "Constants", "OID_OIWSEC_RIPEMD160"));
}
// Autogenerated static field setter
// Set static field: static System.String OID_OIWSEC_RIPEMD160
void System::Security::Cryptography::Constants::_set_OID_OIWSEC_RIPEMD160(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Constants::_set_OID_OIWSEC_RIPEMD160");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Constants", "OID_OIWSEC_RIPEMD160", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.Utils
#include "System/Security/Cryptography/Utils.hpp"
// Including type: System.Security.Cryptography.RNGCryptoServiceProvider
#include "System/Security/Cryptography/RNGCryptoServiceProvider.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
// Including type: System.Security.Cryptography.PKCS1MaskGenerationMethod
#include "System/Security/Cryptography/PKCS1MaskGenerationMethod.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: System.Security.Cryptography.HashAlgorithmName
#include "System/Security/Cryptography/HashAlgorithmName.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 DefaultRsaProviderType
int System::Security::Cryptography::Utils::_get_DefaultRsaProviderType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::_get_DefaultRsaProviderType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Utils", "DefaultRsaProviderType"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DefaultRsaProviderType
void System::Security::Cryptography::Utils::_set_DefaultRsaProviderType(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::_set_DefaultRsaProviderType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Utils", "DefaultRsaProviderType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RNGCryptoServiceProvider _rng
::System::Security::Cryptography::RNGCryptoServiceProvider* System::Security::Cryptography::Utils::_get__rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::_get__rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RNGCryptoServiceProvider*>("System.Security.Cryptography", "Utils", "_rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RNGCryptoServiceProvider _rng
void System::Security::Cryptography::Utils::_set__rng(::System::Security::Cryptography::RNGCryptoServiceProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::_set__rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Utils", "_rng", value));
}
// Autogenerated method: System.Security.Cryptography.Utils..cctor
void System::Security::Cryptography::Utils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.Utils.get_StaticRandomNumberGenerator
::System::Security::Cryptography::RNGCryptoServiceProvider* System::Security::Cryptography::Utils::get_StaticRandomNumberGenerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::get_StaticRandomNumberGenerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "get_StaticRandomNumberGenerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RNGCryptoServiceProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.Utils.GenerateRandom
::ArrayW<uint8_t> System::Security::Cryptography::Utils::GenerateRandom(int keySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::GenerateRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "GenerateRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keySize)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keySize);
}
// Autogenerated method: System.Security.Cryptography.Utils.HasAlgorithm
bool System::Security::Cryptography::Utils::HasAlgorithm(int dwCalg, int dwKeySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::HasAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "HasAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dwCalg), ::il2cpp_utils::ExtractType(dwKeySize)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dwCalg, dwKeySize);
}
// Autogenerated method: System.Security.Cryptography.Utils.DiscardWhiteSpaces
::StringW System::Security::Cryptography::Utils::DiscardWhiteSpaces(::StringW inputBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::DiscardWhiteSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "DiscardWhiteSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inputBuffer);
}
// Autogenerated method: System.Security.Cryptography.Utils.DiscardWhiteSpaces
::StringW System::Security::Cryptography::Utils::DiscardWhiteSpaces(::StringW inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::DiscardWhiteSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "DiscardWhiteSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: System.Security.Cryptography.Utils.ConvertByteArrayToInt
int System::Security::Cryptography::Utils::ConvertByteArrayToInt(::ArrayW<uint8_t> input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::ConvertByteArrayToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "ConvertByteArrayToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Security.Cryptography.Utils.ConvertIntToByteArray
::ArrayW<uint8_t> System::Security::Cryptography::Utils::ConvertIntToByteArray(int dwInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::ConvertIntToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "ConvertIntToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dwInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dwInput);
}
// Autogenerated method: System.Security.Cryptography.Utils.ConvertIntToByteArray
void System::Security::Cryptography::Utils::ConvertIntToByteArray(uint dwInput, ByRef<::ArrayW<uint8_t>> counter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::ConvertIntToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "ConvertIntToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dwInput), ::il2cpp_utils::ExtractType(counter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dwInput, byref(counter));
}
// Autogenerated method: System.Security.Cryptography.Utils.FixupKeyParity
::ArrayW<uint8_t> System::Security::Cryptography::Utils::FixupKeyParity(::ArrayW<uint8_t> key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::FixupKeyParity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "FixupKeyParity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.Utils.DWORDFromLittleEndian
void System::Security::Cryptography::Utils::DWORDFromLittleEndian(uint* x, int digits, uint8_t* block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::DWORDFromLittleEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "DWORDFromLittleEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(block)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, digits, block);
}
// Autogenerated method: System.Security.Cryptography.Utils.DWORDToLittleEndian
void System::Security::Cryptography::Utils::DWORDToLittleEndian(::ArrayW<uint8_t> block, ::ArrayW<uint> x, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::DWORDToLittleEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "DWORDToLittleEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(digits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, block, x, digits);
}
// Autogenerated method: System.Security.Cryptography.Utils.DWORDFromBigEndian
void System::Security::Cryptography::Utils::DWORDFromBigEndian(uint* x, int digits, uint8_t* block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::DWORDFromBigEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "DWORDFromBigEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(block)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, digits, block);
}
// Autogenerated method: System.Security.Cryptography.Utils.DWORDToBigEndian
void System::Security::Cryptography::Utils::DWORDToBigEndian(::ArrayW<uint8_t> block, ::ArrayW<uint> x, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::DWORDToBigEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "DWORDToBigEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(digits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, block, x, digits);
}
// Autogenerated method: System.Security.Cryptography.Utils.QuadWordFromBigEndian
void System::Security::Cryptography::Utils::QuadWordFromBigEndian(uint64_t* x, int digits, uint8_t* block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::QuadWordFromBigEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "QuadWordFromBigEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(block)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, digits, block);
}
// Autogenerated method: System.Security.Cryptography.Utils.QuadWordToBigEndian
void System::Security::Cryptography::Utils::QuadWordToBigEndian(::ArrayW<uint8_t> block, ::ArrayW<uint64_t> x, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::QuadWordToBigEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "QuadWordToBigEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(digits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, block, x, digits);
}
// Autogenerated method: System.Security.Cryptography.Utils.Int
::ArrayW<uint8_t> System::Security::Cryptography::Utils::Int(uint i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::Int");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "Int", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: System.Security.Cryptography.Utils.RsaOaepEncrypt
::ArrayW<uint8_t> System::Security::Cryptography::Utils::RsaOaepEncrypt(::System::Security::Cryptography::RSA* rsa, ::System::Security::Cryptography::HashAlgorithm* hash, ::System::Security::Cryptography::PKCS1MaskGenerationMethod* mgf, ::System::Security::Cryptography::RandomNumberGenerator* rng, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::RsaOaepEncrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "RsaOaepEncrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(mgf), ::il2cpp_utils::ExtractType(rng), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, hash, mgf, rng, data);
}
// Autogenerated method: System.Security.Cryptography.Utils.RsaOaepDecrypt
::ArrayW<uint8_t> System::Security::Cryptography::Utils::RsaOaepDecrypt(::System::Security::Cryptography::RSA* rsa, ::System::Security::Cryptography::HashAlgorithm* hash, ::System::Security::Cryptography::PKCS1MaskGenerationMethod* mgf, ::ArrayW<uint8_t> encryptedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::RsaOaepDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "RsaOaepDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(mgf), ::il2cpp_utils::ExtractType(encryptedData)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, hash, mgf, encryptedData);
}
// Autogenerated method: System.Security.Cryptography.Utils.RsaPkcs1Padding
::ArrayW<uint8_t> System::Security::Cryptography::Utils::RsaPkcs1Padding(::System::Security::Cryptography::RSA* rsa, ::ArrayW<uint8_t> oid, ::ArrayW<uint8_t> hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::RsaPkcs1Padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "RsaPkcs1Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(oid), ::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, oid, hash);
}
// Autogenerated method: System.Security.Cryptography.Utils.CompareBigIntArrays
bool System::Security::Cryptography::Utils::CompareBigIntArrays(::ArrayW<uint8_t> lhs, ::ArrayW<uint8_t> rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::CompareBigIntArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "CompareBigIntArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: System.Security.Cryptography.Utils.OidToHashAlgorithmName
::System::Security::Cryptography::HashAlgorithmName System::Security::Cryptography::Utils::OidToHashAlgorithmName(::StringW oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::OidToHashAlgorithmName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "OidToHashAlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithmName, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oid);
}
// Autogenerated method: System.Security.Cryptography.Utils.DoesRsaKeyOverride
bool System::Security::Cryptography::Utils::DoesRsaKeyOverride(::System::Security::Cryptography::RSA* rsaKey, ::StringW methodName, ::ArrayW<::System::Type*> parameterTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::DoesRsaKeyOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "DoesRsaKeyOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsaKey), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(parameterTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsaKey, methodName, parameterTypes);
}
// Autogenerated method: System.Security.Cryptography.Utils.DoesRsaKeyOverrideSlowPath
bool System::Security::Cryptography::Utils::DoesRsaKeyOverrideSlowPath(::System::Type* t, ::StringW methodName, ::ArrayW<::System::Type*> parameterTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::DoesRsaKeyOverrideSlowPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "DoesRsaKeyOverrideSlowPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(parameterTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, methodName, parameterTypes);
}
// Autogenerated method: System.Security.Cryptography.Utils._ProduceLegacyHmacValues
bool System::Security::Cryptography::Utils::_ProduceLegacyHmacValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Utils::_ProduceLegacyHmacValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "_ProduceLegacyHmacValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CryptoAPITransform
#include "System/Security/Cryptography/CryptoAPITransform.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_disposed
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::CryptoAPITransform::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoAPITransform::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.CryptoAPITransform.get_CanReuseTransform
bool System::Security::Cryptography::CryptoAPITransform::get_CanReuseTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoAPITransform::get_CanReuseTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::CryptoAPITransform*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoAPITransform.get_CanTransformMultipleBlocks
bool System::Security::Cryptography::CryptoAPITransform::get_CanTransformMultipleBlocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoAPITransform::get_CanTransformMultipleBlocks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::CryptoAPITransform*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoAPITransform.get_InputBlockSize
int System::Security::Cryptography::CryptoAPITransform::get_InputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoAPITransform::get_InputBlockSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::CryptoAPITransform*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoAPITransform.get_KeyHandle
::System::IntPtr System::Security::Cryptography::CryptoAPITransform::get_KeyHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoAPITransform::get_KeyHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoAPITransform.get_OutputBlockSize
int System::Security::Cryptography::CryptoAPITransform::get_OutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoAPITransform::get_OutputBlockSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::CryptoAPITransform*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoAPITransform.Dispose
void System::Security::Cryptography::CryptoAPITransform::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoAPITransform::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::CryptoAPITransform*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoAPITransform.Clear
void System::Security::Cryptography::CryptoAPITransform::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoAPITransform::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoAPITransform.Dispose
void System::Security::Cryptography::CryptoAPITransform::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoAPITransform::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.CryptoAPITransform.TransformBlock
int System::Security::Cryptography::CryptoAPITransform::TransformBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount, ::ArrayW<uint8_t> outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoAPITransform::TransformBlock");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::CryptoAPITransform*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock
::ArrayW<uint8_t> System::Security::Cryptography::CryptoAPITransform::TransformFinalBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoAPITransform::TransformFinalBlock");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::CryptoAPITransform*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: System.Security.Cryptography.CryptoAPITransform.Reset
void System::Security::Cryptography::CryptoAPITransform::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoAPITransform::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.CryptoConfig
#include "System/Security/Cryptography/CryptoConfig.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Object lockObject
::Il2CppObject* System::Security::Cryptography::CryptoConfig::_get_lockObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoConfig::_get_lockObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Security.Cryptography", "CryptoConfig", "lockObject"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object lockObject
void System::Security::Cryptography::CryptoConfig::_set_lockObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoConfig::_set_lockObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CryptoConfig", "lockObject", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Type> algorithms
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Type*>* System::Security::Cryptography::CryptoConfig::_get_algorithms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoConfig::_get_algorithms");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Type*>*>("System.Security.Cryptography", "CryptoConfig", "algorithms")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Type> algorithms
void System::Security::Cryptography::CryptoConfig::_set_algorithms(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoConfig::_set_algorithms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CryptoConfig", "algorithms", value));
}
// Autogenerated method: System.Security.Cryptography.CryptoConfig.AddOID
void System::Security::Cryptography::CryptoConfig::AddOID(::StringW oid, ::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoConfig::AddOID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfig", "AddOID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid), ::il2cpp_utils::ExtractType(names)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oid, names);
}
// Autogenerated method: System.Security.Cryptography.CryptoConfig.CreateFromName
::Il2CppObject* System::Security::Cryptography::CryptoConfig::CreateFromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoConfig::CreateFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfig", "CreateFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Security.Cryptography.CryptoConfig.CreateFromName
::Il2CppObject* System::Security::Cryptography::CryptoConfig::CreateFromName(::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoConfig::CreateFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfig", "CreateFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, args);
}
// Autogenerated method: System.Security.Cryptography.CryptoConfig.MapNameToOID
::StringW System::Security::Cryptography::CryptoConfig::MapNameToOID(::StringW name, ::Il2CppObject* arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoConfig::MapNameToOID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfig", "MapNameToOID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(arg)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, arg);
}
// Autogenerated method: System.Security.Cryptography.CryptoConfig.MapNameToOID
::StringW System::Security::Cryptography::CryptoConfig::MapNameToOID(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoConfig::MapNameToOID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfig", "MapNameToOID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Security.Cryptography.CryptoConfig.Initialize
void System::Security::Cryptography::CryptoConfig::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoConfig::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfig", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoConfig.AddAlgorithm
void System::Security::Cryptography::CryptoConfig::AddAlgorithm(::System::Type* algorithm, ::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoConfig::AddAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfig", "AddAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithm), ::il2cpp_utils::ExtractType(names)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, algorithm, names);
}
// Autogenerated method: System.Security.Cryptography.CryptoConfig.EncodeOID
::ArrayW<uint8_t> System::Security::Cryptography::CryptoConfig::EncodeOID(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoConfig::EncodeOID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfig", "EncodeOID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Security.Cryptography.CryptoConfig.EncodeLongNumber
::ArrayW<uint8_t> System::Security::Cryptography::CryptoConfig::EncodeLongNumber(int64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoConfig::EncodeLongNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfig", "EncodeLongNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.CryptoConfig.get_AllowOnlyFipsAlgorithms
bool System::Security::Cryptography::CryptoConfig::get_AllowOnlyFipsAlgorithms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoConfig::get_AllowOnlyFipsAlgorithms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfig", "get_AllowOnlyFipsAlgorithms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoConfig..cctor
void System::Security::Cryptography::CryptoConfig::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoConfig::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfig", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CspKeyContainerInfo
#include "System/Security/Cryptography/CspKeyContainerInfo.hpp"
// Including type: System.Security.Cryptography.CspParameters
#include "System/Security/Cryptography/CspParameters.hpp"
// Including type: System.Security.AccessControl.CryptoKeySecurity
#include "System/Security/AccessControl/CryptoKeySecurity.hpp"
// Including type: System.Security.Cryptography.KeyNumber
#include "System/Security/Cryptography/KeyNumber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.CspParameters _params
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::CspParameters*& System::Security::Cryptography::CspKeyContainerInfo::dyn__params() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspKeyContainerInfo::dyn__params");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_params"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::CspParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _random
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::CspKeyContainerInfo::dyn__random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspKeyContainerInfo::dyn__random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_random"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.CspKeyContainerInfo.get_Accessible
bool System::Security::Cryptography::CspKeyContainerInfo::get_Accessible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspKeyContainerInfo::get_Accessible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Accessible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CspKeyContainerInfo.get_CryptoKeySecurity
::System::Security::AccessControl::CryptoKeySecurity* System::Security::Cryptography::CspKeyContainerInfo::get_CryptoKeySecurity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspKeyContainerInfo::get_CryptoKeySecurity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CryptoKeySecurity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::CryptoKeySecurity*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CspKeyContainerInfo.get_Exportable
bool System::Security::Cryptography::CspKeyContainerInfo::get_Exportable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspKeyContainerInfo::get_Exportable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exportable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CspKeyContainerInfo.get_HardwareDevice
bool System::Security::Cryptography::CspKeyContainerInfo::get_HardwareDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspKeyContainerInfo::get_HardwareDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HardwareDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CspKeyContainerInfo.get_KeyContainerName
::StringW System::Security::Cryptography::CspKeyContainerInfo::get_KeyContainerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspKeyContainerInfo::get_KeyContainerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyContainerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CspKeyContainerInfo.get_KeyNumber
::System::Security::Cryptography::KeyNumber System::Security::Cryptography::CspKeyContainerInfo::get_KeyNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspKeyContainerInfo::get_KeyNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::KeyNumber, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CspKeyContainerInfo.get_MachineKeyStore
bool System::Security::Cryptography::CspKeyContainerInfo::get_MachineKeyStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspKeyContainerInfo::get_MachineKeyStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MachineKeyStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CspKeyContainerInfo.get_Protected
bool System::Security::Cryptography::CspKeyContainerInfo::get_Protected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspKeyContainerInfo::get_Protected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Protected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CspKeyContainerInfo.get_ProviderName
::StringW System::Security::Cryptography::CspKeyContainerInfo::get_ProviderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspKeyContainerInfo::get_ProviderName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProviderName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CspKeyContainerInfo.get_ProviderType
int System::Security::Cryptography::CspKeyContainerInfo::get_ProviderType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspKeyContainerInfo::get_ProviderType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProviderType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CspKeyContainerInfo.get_RandomlyGenerated
bool System::Security::Cryptography::CspKeyContainerInfo::get_RandomlyGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspKeyContainerInfo::get_RandomlyGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RandomlyGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CspKeyContainerInfo.get_Removable
bool System::Security::Cryptography::CspKeyContainerInfo::get_Removable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspKeyContainerInfo::get_Removable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Removable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CspKeyContainerInfo.get_UniqueKeyContainerName
::StringW System::Security::Cryptography::CspKeyContainerInfo::get_UniqueKeyContainerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspKeyContainerInfo::get_UniqueKeyContainerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UniqueKeyContainerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.DESTransform
#include "System/Security/Cryptography/DESTransform.hpp"
// Including type: System.Security.Cryptography.SymmetricAlgorithm
#include "System/Security/Cryptography/SymmetricAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32 KEY_BIT_SIZE
int System::Security::Cryptography::DESTransform::_get_KEY_BIT_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_get_KEY_BIT_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "DESTransform", "KEY_BIT_SIZE"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 KEY_BIT_SIZE
void System::Security::Cryptography::DESTransform::_set_KEY_BIT_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_set_KEY_BIT_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "KEY_BIT_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 KEY_BYTE_SIZE
int System::Security::Cryptography::DESTransform::_get_KEY_BYTE_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_get_KEY_BYTE_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "DESTransform", "KEY_BYTE_SIZE"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 KEY_BYTE_SIZE
void System::Security::Cryptography::DESTransform::_set_KEY_BYTE_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_set_KEY_BYTE_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "KEY_BYTE_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 BLOCK_BIT_SIZE
int System::Security::Cryptography::DESTransform::_get_BLOCK_BIT_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_get_BLOCK_BIT_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "DESTransform", "BLOCK_BIT_SIZE"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 BLOCK_BIT_SIZE
void System::Security::Cryptography::DESTransform::_set_BLOCK_BIT_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_set_BLOCK_BIT_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "BLOCK_BIT_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 BLOCK_BYTE_SIZE
int System::Security::Cryptography::DESTransform::_get_BLOCK_BYTE_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_get_BLOCK_BYTE_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "DESTransform", "BLOCK_BYTE_SIZE"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 BLOCK_BYTE_SIZE
void System::Security::Cryptography::DESTransform::_set_BLOCK_BYTE_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_set_BLOCK_BYTE_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "BLOCK_BYTE_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] spBoxes
::ArrayW<uint> System::Security::Cryptography::DESTransform::_get_spBoxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_get_spBoxes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "DESTransform", "spBoxes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] spBoxes
void System::Security::Cryptography::DESTransform::_set_spBoxes(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_set_spBoxes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "spBoxes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] PC1
::ArrayW<uint8_t> System::Security::Cryptography::DESTransform::_get_PC1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_get_PC1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography", "DESTransform", "PC1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] PC1
void System::Security::Cryptography::DESTransform::_set_PC1(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_set_PC1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "PC1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] leftRotTotal
::ArrayW<uint8_t> System::Security::Cryptography::DESTransform::_get_leftRotTotal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_get_leftRotTotal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography", "DESTransform", "leftRotTotal"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] leftRotTotal
void System::Security::Cryptography::DESTransform::_set_leftRotTotal(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_set_leftRotTotal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "leftRotTotal", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] PC2
::ArrayW<uint8_t> System::Security::Cryptography::DESTransform::_get_PC2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_get_PC2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography", "DESTransform", "PC2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] PC2
void System::Security::Cryptography::DESTransform::_set_PC2(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_set_PC2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "PC2", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.UInt32[] ipTab
::ArrayW<uint> System::Security::Cryptography::DESTransform::_get_ipTab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_get_ipTab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "DESTransform", "ipTab"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt32[] ipTab
void System::Security::Cryptography::DESTransform::_set_ipTab(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_set_ipTab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "ipTab", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.UInt32[] fpTab
::ArrayW<uint> System::Security::Cryptography::DESTransform::_get_fpTab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_get_fpTab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "DESTransform", "fpTab"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt32[] fpTab
void System::Security::Cryptography::DESTransform::_set_fpTab(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::_set_fpTab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "fpTab", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] keySchedule
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::DESTransform::dyn_keySchedule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::dyn_keySchedule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keySchedule"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] byteBuff
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::DESTransform::dyn_byteBuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::dyn_byteBuff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteBuff"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] dwordBuff
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Security::Cryptography::DESTransform::dyn_dwordBuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::dyn_dwordBuff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dwordBuff"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.DESTransform.CipherFunct
uint System::Security::Cryptography::DESTransform::CipherFunct(uint r, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::CipherFunct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CipherFunct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, r, n);
}
// Autogenerated method: System.Security.Cryptography.DESTransform.Permutation
void System::Security::Cryptography::DESTransform::Permutation(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output, ::ArrayW<uint> permTab, bool preSwap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::Permutation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DESTransform", "Permutation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(permTab), ::il2cpp_utils::ExtractType(preSwap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, output, permTab, preSwap);
}
// Autogenerated method: System.Security.Cryptography.DESTransform.BSwap
void System::Security::Cryptography::DESTransform::BSwap(::ArrayW<uint8_t> byteBuff) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::BSwap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DESTransform", "BSwap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteBuff)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byteBuff);
}
// Autogenerated method: System.Security.Cryptography.DESTransform.SetKey
void System::Security::Cryptography::DESTransform::SetKey(::ArrayW<uint8_t> key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::SetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.DESTransform.ProcessBlock
void System::Security::Cryptography::DESTransform::ProcessBlock(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::ProcessBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: System.Security.Cryptography.DESTransform.GetStrongKey
::ArrayW<uint8_t> System::Security::Cryptography::DESTransform::GetStrongKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::GetStrongKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DESTransform", "GetStrongKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DESTransform..cctor
void System::Security::Cryptography::DESTransform::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DESTransform", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DESTransform.ECB
void System::Security::Cryptography::DESTransform::ECB(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESTransform::ECB");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.DSACryptoServiceProvider
#include "System/Security/Cryptography/DSACryptoServiceProvider.hpp"
// Including type: Mono.Security.Cryptography.KeyPairPersistence
#include "Mono/Security/Cryptography/KeyPairPersistence.hpp"
// Including type: Mono.Security.Cryptography.DSAManaged
#include "Mono/Security/Cryptography/DSAManaged.hpp"
// Including type: System.Security.Cryptography.CspParameters
#include "System/Security/Cryptography/CspParameters.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.Security.Cryptography.CspKeyContainerInfo
#include "System/Security/Cryptography/CspKeyContainerInfo.hpp"
// Including type: System.Security.Cryptography.DSAParameters
#include "System/Security/Cryptography/DSAParameters.hpp"
// Including type: System.Security.Cryptography.HashAlgorithmName
#include "System/Security/Cryptography/HashAlgorithmName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 PROV_DSS_DH
int System::Security::Cryptography::DSACryptoServiceProvider::_get_PROV_DSS_DH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::_get_PROV_DSS_DH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "DSACryptoServiceProvider", "PROV_DSS_DH"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 PROV_DSS_DH
void System::Security::Cryptography::DSACryptoServiceProvider::_set_PROV_DSS_DH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::_set_PROV_DSS_DH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DSACryptoServiceProvider", "PROV_DSS_DH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean useMachineKeyStore
bool System::Security::Cryptography::DSACryptoServiceProvider::_get_useMachineKeyStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::_get_useMachineKeyStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Security.Cryptography", "DSACryptoServiceProvider", "useMachineKeyStore"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean useMachineKeyStore
void System::Security::Cryptography::DSACryptoServiceProvider::_set_useMachineKeyStore(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::_set_useMachineKeyStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DSACryptoServiceProvider", "useMachineKeyStore", value));
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Cryptography.KeyPairPersistence store
[[deprecated("Use field access instead!")]] ::Mono::Security::Cryptography::KeyPairPersistence*& System::Security::Cryptography::DSACryptoServiceProvider::dyn_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::dyn_store");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "store"))->offset;
  return *reinterpret_cast<::Mono::Security::Cryptography::KeyPairPersistence**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean persistKey
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::DSACryptoServiceProvider::dyn_persistKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::dyn_persistKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "persistKey"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean persisted
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::DSACryptoServiceProvider::dyn_persisted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::dyn_persisted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "persisted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean privateKeyExportable
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::DSACryptoServiceProvider::dyn_privateKeyExportable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::dyn_privateKeyExportable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "privateKeyExportable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_disposed
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::DSACryptoServiceProvider::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Cryptography.DSAManaged dsa
[[deprecated("Use field access instead!")]] ::Mono::Security::Cryptography::DSAManaged*& System::Security::Cryptography::DSACryptoServiceProvider::dyn_dsa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::dyn_dsa");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dsa"))->offset;
  return *reinterpret_cast<::Mono::Security::Cryptography::DSAManaged**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.Common
void System::Security::Cryptography::DSACryptoServiceProvider::Common(int dwKeySize, bool parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::Common");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Common", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dwKeySize), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dwKeySize, parameters);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.Common
void System::Security::Cryptography::DSACryptoServiceProvider::Common(::System::Security::Cryptography::CspParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::Common");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Common", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.get_PersistKeyInCsp
bool System::Security::Cryptography::DSACryptoServiceProvider::get_PersistKeyInCsp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::get_PersistKeyInCsp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PersistKeyInCsp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.set_PersistKeyInCsp
void System::Security::Cryptography::DSACryptoServiceProvider::set_PersistKeyInCsp(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::set_PersistKeyInCsp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PersistKeyInCsp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.get_PublicOnly
bool System::Security::Cryptography::DSACryptoServiceProvider::get_PublicOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::get_PublicOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.get_UseMachineKeyStore
bool System::Security::Cryptography::DSACryptoServiceProvider::get_UseMachineKeyStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::get_UseMachineKeyStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DSACryptoServiceProvider", "get_UseMachineKeyStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.set_UseMachineKeyStore
void System::Security::Cryptography::DSACryptoServiceProvider::set_UseMachineKeyStore(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::set_UseMachineKeyStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DSACryptoServiceProvider", "set_UseMachineKeyStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.SignData
::ArrayW<uint8_t> System::Security::Cryptography::DSACryptoServiceProvider::SignData(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::SignData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SignData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.SignData
::ArrayW<uint8_t> System::Security::Cryptography::DSACryptoServiceProvider::SignData(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::SignData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SignData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.SignData
::ArrayW<uint8_t> System::Security::Cryptography::DSACryptoServiceProvider::SignData(::System::IO::Stream* inputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::SignData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SignData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputStream)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, inputStream);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.SignHash
::ArrayW<uint8_t> System::Security::Cryptography::DSACryptoServiceProvider::SignHash(::ArrayW<uint8_t> rgbHash, ::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::SignHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SignHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbHash), ::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgbHash, str);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.VerifyData
bool System::Security::Cryptography::DSACryptoServiceProvider::VerifyData(::ArrayW<uint8_t> rgbData, ::ArrayW<uint8_t> rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::VerifyData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbData), ::il2cpp_utils::ExtractType(rgbSignature)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rgbData, rgbSignature);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash
bool System::Security::Cryptography::DSACryptoServiceProvider::VerifyHash(::ArrayW<uint8_t> rgbHash, ::StringW str, ::ArrayW<uint8_t> rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::VerifyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbHash), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(rgbSignature)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rgbHash, str, rgbSignature);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.OnKeyGenerated
void System::Security::Cryptography::DSACryptoServiceProvider::OnKeyGenerated(::Il2CppObject* sender, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::OnKeyGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnKeyGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.get_CspKeyContainerInfo
::System::Security::Cryptography::CspKeyContainerInfo* System::Security::Cryptography::DSACryptoServiceProvider::get_CspKeyContainerInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::get_CspKeyContainerInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSACryptoServiceProvider*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::CspKeyContainerInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob
::ArrayW<uint8_t> System::Security::Cryptography::DSACryptoServiceProvider::ExportCspBlob(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::ExportCspBlob");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSACryptoServiceProvider*), 41));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob
void System::Security::Cryptography::DSACryptoServiceProvider::ImportCspBlob(::ArrayW<uint8_t> keyBlob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::ImportCspBlob");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSACryptoServiceProvider*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyBlob);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.Finalize
void System::Security::Cryptography::DSACryptoServiceProvider::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.get_KeyExchangeAlgorithm
::StringW System::Security::Cryptography::DSACryptoServiceProvider::get_KeyExchangeAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::get_KeyExchangeAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.get_KeySize
int System::Security::Cryptography::DSACryptoServiceProvider::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::get_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.get_SignatureAlgorithm
::StringW System::Security::Cryptography::DSACryptoServiceProvider::get_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::get_SignatureAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.ExportParameters
::System::Security::Cryptography::DSAParameters System::Security::Cryptography::DSACryptoServiceProvider::ExportParameters(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::ExportParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSAParameters, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.ImportParameters
void System::Security::Cryptography::DSACryptoServiceProvider::ImportParameters(::System::Security::Cryptography::DSAParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::ImportParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.CreateSignature
::ArrayW<uint8_t> System::Security::Cryptography::DSACryptoServiceProvider::CreateSignature(::ArrayW<uint8_t> rgbHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::CreateSignature");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgbHash);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.VerifySignature
bool System::Security::Cryptography::DSACryptoServiceProvider::VerifySignature(::ArrayW<uint8_t> rgbHash, ::ArrayW<uint8_t> rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::VerifySignature");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 26));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rgbHash, rgbSignature);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.HashData
::ArrayW<uint8_t> System::Security::Cryptography::DSACryptoServiceProvider::HashData(::ArrayW<uint8_t> data, int offset, int count, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::HashData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, offset, count, hashAlgorithm);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.HashData
::ArrayW<uint8_t> System::Security::Cryptography::DSACryptoServiceProvider::HashData(::System::IO::Stream* data, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::HashData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, hashAlgorithm);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.Dispose
void System::Security::Cryptography::DSACryptoServiceProvider::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSACryptoServiceProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.MD5CryptoServiceProvider
#include "System/Security/Cryptography/MD5CryptoServiceProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 BLOCK_SIZE_BYTES
int System::Security::Cryptography::MD5CryptoServiceProvider::_get_BLOCK_SIZE_BYTES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5CryptoServiceProvider::_get_BLOCK_SIZE_BYTES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "MD5CryptoServiceProvider", "BLOCK_SIZE_BYTES"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BLOCK_SIZE_BYTES
void System::Security::Cryptography::MD5CryptoServiceProvider::_set_BLOCK_SIZE_BYTES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5CryptoServiceProvider::_set_BLOCK_SIZE_BYTES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "MD5CryptoServiceProvider", "BLOCK_SIZE_BYTES", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] K
::ArrayW<uint> System::Security::Cryptography::MD5CryptoServiceProvider::_get_K() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5CryptoServiceProvider::_get_K");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "MD5CryptoServiceProvider", "K"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] K
void System::Security::Cryptography::MD5CryptoServiceProvider::_set_K(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5CryptoServiceProvider::_set_K");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "MD5CryptoServiceProvider", "K", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] _H
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Security::Cryptography::MD5CryptoServiceProvider::dyn__H() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5CryptoServiceProvider::dyn__H");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_H"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] buff
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Security::Cryptography::MD5CryptoServiceProvider::dyn_buff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5CryptoServiceProvider::dyn_buff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buff"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 count
[[deprecated("Use field access instead!")]] uint64_t& System::Security::Cryptography::MD5CryptoServiceProvider::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5CryptoServiceProvider::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _ProcessingBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::MD5CryptoServiceProvider::dyn__ProcessingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5CryptoServiceProvider::dyn__ProcessingBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ProcessingBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _ProcessingBufferCount
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::MD5CryptoServiceProvider::dyn__ProcessingBufferCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5CryptoServiceProvider::dyn__ProcessingBufferCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ProcessingBufferCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.MD5CryptoServiceProvider.ProcessBlock
void System::Security::Cryptography::MD5CryptoServiceProvider::ProcessBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5CryptoServiceProvider::ProcessBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputBuffer, inputOffset);
}
// Autogenerated method: System.Security.Cryptography.MD5CryptoServiceProvider.ProcessFinalBlock
void System::Security::Cryptography::MD5CryptoServiceProvider::ProcessFinalBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5CryptoServiceProvider::ProcessFinalBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFinalBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: System.Security.Cryptography.MD5CryptoServiceProvider.AddLength
void System::Security::Cryptography::MD5CryptoServiceProvider::AddLength(uint64_t length, ::ArrayW<uint8_t> buffer, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5CryptoServiceProvider::AddLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, length, buffer, position);
}
// Autogenerated method: System.Security.Cryptography.MD5CryptoServiceProvider..cctor
void System::Security::Cryptography::MD5CryptoServiceProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5CryptoServiceProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "MD5CryptoServiceProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.MD5CryptoServiceProvider.Finalize
void System::Security::Cryptography::MD5CryptoServiceProvider::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5CryptoServiceProvider::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.MD5CryptoServiceProvider.Dispose
void System::Security::Cryptography::MD5CryptoServiceProvider::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5CryptoServiceProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.MD5CryptoServiceProvider.HashCore
void System::Security::Cryptography::MD5CryptoServiceProvider::HashCore(::ArrayW<uint8_t> rgb, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5CryptoServiceProvider::HashCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rgb, ibStart, cbSize);
}
// Autogenerated method: System.Security.Cryptography.MD5CryptoServiceProvider.HashFinal
::ArrayW<uint8_t> System::Security::Cryptography::MD5CryptoServiceProvider::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5CryptoServiceProvider::HashFinal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.MD5CryptoServiceProvider.Initialize
void System::Security::Cryptography::MD5CryptoServiceProvider::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5CryptoServiceProvider::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RC2Transform
#include "System/Security/Cryptography/RC2Transform.hpp"
// Including type: System.Security.Cryptography.RC2
#include "System/Security/Cryptography/RC2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] pitable
::ArrayW<uint8_t> System::Security::Cryptography::RC2Transform::_get_pitable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2Transform::_get_pitable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography", "RC2Transform", "pitable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] pitable
void System::Security::Cryptography::RC2Transform::_set_pitable(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2Transform::_set_pitable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RC2Transform", "pitable", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 R0
[[deprecated("Use field access instead!")]] uint16_t& System::Security::Cryptography::RC2Transform::dyn_R0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2Transform::dyn_R0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "R0"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 R1
[[deprecated("Use field access instead!")]] uint16_t& System::Security::Cryptography::RC2Transform::dyn_R1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2Transform::dyn_R1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "R1"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 R2
[[deprecated("Use field access instead!")]] uint16_t& System::Security::Cryptography::RC2Transform::dyn_R2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2Transform::dyn_R2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "R2"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 R3
[[deprecated("Use field access instead!")]] uint16_t& System::Security::Cryptography::RC2Transform::dyn_R3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2Transform::dyn_R3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "R3"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16[] K
[[deprecated("Use field access instead!")]] ::ArrayW<uint16_t>& System::Security::Cryptography::RC2Transform::dyn_K() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2Transform::dyn_K");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "K"))->offset;
  return *reinterpret_cast<::ArrayW<uint16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 j
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::RC2Transform::dyn_j() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2Transform::dyn_j");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "j"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.RC2Transform..cctor
void System::Security::Cryptography::RC2Transform::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2Transform::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RC2Transform", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RC2Transform.ECB
void System::Security::Cryptography::RC2Transform::ECB(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2Transform::ECB");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.RNGCryptoServiceProvider
#include "System/Security/Cryptography/RNGCryptoServiceProvider.hpp"
// Including type: System.Security.Cryptography.CspParameters
#include "System/Security/Cryptography/CspParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object _lock
::Il2CppObject* System::Security::Cryptography::RNGCryptoServiceProvider::_get__lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RNGCryptoServiceProvider::_get__lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Security.Cryptography", "RNGCryptoServiceProvider", "_lock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _lock
void System::Security::Cryptography::RNGCryptoServiceProvider::_set__lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RNGCryptoServiceProvider::_set__lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RNGCryptoServiceProvider", "_lock", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::Security::Cryptography::RNGCryptoServiceProvider::dyn__handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RNGCryptoServiceProvider::dyn__handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider..cctor
void System::Security::Cryptography::RNGCryptoServiceProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RNGCryptoServiceProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RNGCryptoServiceProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider.Check
void System::Security::Cryptography::RNGCryptoServiceProvider::Check() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RNGCryptoServiceProvider::Check");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Check", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider.RngOpen
bool System::Security::Cryptography::RNGCryptoServiceProvider::RngOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RNGCryptoServiceProvider::RngOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RNGCryptoServiceProvider", "RngOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider.RngInitialize
::System::IntPtr System::Security::Cryptography::RNGCryptoServiceProvider::RngInitialize(uint8_t* seed, ::System::IntPtr seed_length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RNGCryptoServiceProvider::RngInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RNGCryptoServiceProvider", "RngInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seed), ::il2cpp_utils::ExtractType(seed_length)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, seed, seed_length);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider.RngGetBytes
::System::IntPtr System::Security::Cryptography::RNGCryptoServiceProvider::RngGetBytes(::System::IntPtr handle, uint8_t* data, ::System::IntPtr data_length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RNGCryptoServiceProvider::RngGetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RNGCryptoServiceProvider", "RngGetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(data_length)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, data, data_length);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider.RngClose
void System::Security::Cryptography::RNGCryptoServiceProvider::RngClose(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RNGCryptoServiceProvider::RngClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RNGCryptoServiceProvider", "RngClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes
void System::Security::Cryptography::RNGCryptoServiceProvider::GetBytes(uint8_t* data, ::System::IntPtr data_length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RNGCryptoServiceProvider::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(data_length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, data_length);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes
void System::Security::Cryptography::RNGCryptoServiceProvider::GetBytes(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RNGCryptoServiceProvider::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RandomNumberGenerator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes
void System::Security::Cryptography::RNGCryptoServiceProvider::GetNonZeroBytes(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RNGCryptoServiceProvider::GetNonZeroBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RandomNumberGenerator*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider.Finalize
void System::Security::Cryptography::RNGCryptoServiceProvider::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RNGCryptoServiceProvider::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider.Dispose
void System::Security::Cryptography::RNGCryptoServiceProvider::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RNGCryptoServiceProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RandomNumberGenerator*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
#include "System/Security/Cryptography/RSAPKCS1SignatureDeformatter.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RSA rsa
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSA*& System::Security::Cryptography::RSAPKCS1SignatureDeformatter::dyn_rsa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1SignatureDeformatter::dyn_rsa");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rsa"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RSA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String hashName
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::RSAPKCS1SignatureDeformatter::dyn_hashName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1SignatureDeformatter::dyn_hashName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm
void System::Security::Cryptography::RSAPKCS1SignatureDeformatter::SetHashAlgorithm(::StringW strName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1SignatureDeformatter::SetHashAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureDeformatter*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, strName);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetKey
void System::Security::Cryptography::RSAPKCS1SignatureDeformatter::SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1SignatureDeformatter::SetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureDeformatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature
bool System::Security::Cryptography::RSAPKCS1SignatureDeformatter::VerifySignature(::ArrayW<uint8_t> rgbHash, ::ArrayW<uint8_t> rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1SignatureDeformatter::VerifySignature");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureDeformatter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rgbHash, rgbSignature);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RSAPKCS1SignatureFormatter
#include "System/Security/Cryptography/RSAPKCS1SignatureFormatter.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RSA rsa
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSA*& System::Security::Cryptography::RSAPKCS1SignatureFormatter::dyn_rsa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1SignatureFormatter::dyn_rsa");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rsa"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RSA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String hash
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::RSAPKCS1SignatureFormatter::dyn_hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1SignatureFormatter::dyn_hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature
::ArrayW<uint8_t> System::Security::Cryptography::RSAPKCS1SignatureFormatter::CreateSignature(::ArrayW<uint8_t> rgbHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1SignatureFormatter::CreateSignature");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureFormatter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgbHash);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm
void System::Security::Cryptography::RSAPKCS1SignatureFormatter::SetHashAlgorithm(::StringW strName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1SignatureFormatter::SetHashAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureFormatter*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, strName);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey
void System::Security::Cryptography::RSAPKCS1SignatureFormatter::SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAPKCS1SignatureFormatter::SetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.SHA1Internal
#include "System/Security/Cryptography/SHA1Internal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 BLOCK_SIZE_BYTES
int System::Security::Cryptography::SHA1Internal::_get_BLOCK_SIZE_BYTES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Internal::_get_BLOCK_SIZE_BYTES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "SHA1Internal", "BLOCK_SIZE_BYTES"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BLOCK_SIZE_BYTES
void System::Security::Cryptography::SHA1Internal::_set_BLOCK_SIZE_BYTES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Internal::_set_BLOCK_SIZE_BYTES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "SHA1Internal", "BLOCK_SIZE_BYTES", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] _H
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Security::Cryptography::SHA1Internal::dyn__H() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Internal::dyn__H");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_H"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 count
[[deprecated("Use field access instead!")]] uint64_t& System::Security::Cryptography::SHA1Internal::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Internal::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _ProcessingBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::SHA1Internal::dyn__ProcessingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Internal::dyn__ProcessingBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ProcessingBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _ProcessingBufferCount
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::SHA1Internal::dyn__ProcessingBufferCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Internal::dyn__ProcessingBufferCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ProcessingBufferCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] buff
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Security::Cryptography::SHA1Internal::dyn_buff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Internal::dyn_buff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buff"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.SHA1Internal.HashCore
void System::Security::Cryptography::SHA1Internal::HashCore(::ArrayW<uint8_t> rgb, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Internal::HashCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgb), ::il2cpp_utils::ExtractType(ibStart), ::il2cpp_utils::ExtractType(cbSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rgb, ibStart, cbSize);
}
// Autogenerated method: System.Security.Cryptography.SHA1Internal.HashFinal
::ArrayW<uint8_t> System::Security::Cryptography::SHA1Internal::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Internal::HashFinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA1Internal.Initialize
void System::Security::Cryptography::SHA1Internal::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Internal::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA1Internal.ProcessBlock
void System::Security::Cryptography::SHA1Internal::ProcessBlock(::ArrayW<uint8_t> inputBuffer, uint inputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Internal::ProcessBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputBuffer, inputOffset);
}
// Autogenerated method: System.Security.Cryptography.SHA1Internal.InitialiseBuff
void System::Security::Cryptography::SHA1Internal::InitialiseBuff(::ArrayW<uint> buff, ::ArrayW<uint8_t> input, uint inputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Internal::InitialiseBuff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA1Internal", "InitialiseBuff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buff), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inputOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buff, input, inputOffset);
}
// Autogenerated method: System.Security.Cryptography.SHA1Internal.FillBuff
void System::Security::Cryptography::SHA1Internal::FillBuff(::ArrayW<uint> buff) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Internal::FillBuff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA1Internal", "FillBuff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buff)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buff);
}
// Autogenerated method: System.Security.Cryptography.SHA1Internal.ProcessFinalBlock
void System::Security::Cryptography::SHA1Internal::ProcessFinalBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Internal::ProcessFinalBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFinalBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: System.Security.Cryptography.SHA1Internal.AddLength
void System::Security::Cryptography::SHA1Internal::AddLength(uint64_t length, ::ArrayW<uint8_t> buffer, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1Internal::AddLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, length, buffer, position);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.SHA1CryptoServiceProvider
#include "System/Security/Cryptography/SHA1CryptoServiceProvider.hpp"
// Including type: System.Security.Cryptography.SHA1Internal
#include "System/Security/Cryptography/SHA1Internal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.SHA1Internal sha
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::SHA1Internal*& System::Security::Cryptography::SHA1CryptoServiceProvider::dyn_sha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1CryptoServiceProvider::dyn_sha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sha"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::SHA1Internal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.SHA1CryptoServiceProvider.Finalize
void System::Security::Cryptography::SHA1CryptoServiceProvider::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1CryptoServiceProvider::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA1CryptoServiceProvider.Dispose
void System::Security::Cryptography::SHA1CryptoServiceProvider::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1CryptoServiceProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.SHA1CryptoServiceProvider.HashCore
void System::Security::Cryptography::SHA1CryptoServiceProvider::HashCore(::ArrayW<uint8_t> rgb, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1CryptoServiceProvider::HashCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rgb, ibStart, cbSize);
}
// Autogenerated method: System.Security.Cryptography.SHA1CryptoServiceProvider.HashFinal
::ArrayW<uint8_t> System::Security::Cryptography::SHA1CryptoServiceProvider::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1CryptoServiceProvider::HashFinal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA1CryptoServiceProvider.Initialize
void System::Security::Cryptography::SHA1CryptoServiceProvider::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::SHA1CryptoServiceProvider::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.TripleDESTransform
#include "System/Security/Cryptography/TripleDESTransform.hpp"
// Including type: System.Security.Cryptography.DESTransform
#include "System/Security/Cryptography/DESTransform.hpp"
// Including type: System.Security.Cryptography.TripleDES
#include "System/Security/Cryptography/TripleDES.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.DESTransform E1
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::DESTransform*& System::Security::Cryptography::TripleDESTransform::dyn_E1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDESTransform::dyn_E1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "E1"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::DESTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.DESTransform D2
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::DESTransform*& System::Security::Cryptography::TripleDESTransform::dyn_D2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDESTransform::dyn_D2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "D2"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::DESTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.DESTransform E3
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::DESTransform*& System::Security::Cryptography::TripleDESTransform::dyn_E3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDESTransform::dyn_E3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "E3"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::DESTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.DESTransform D1
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::DESTransform*& System::Security::Cryptography::TripleDESTransform::dyn_D1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDESTransform::dyn_D1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "D1"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::DESTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.DESTransform E2
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::DESTransform*& System::Security::Cryptography::TripleDESTransform::dyn_E2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDESTransform::dyn_E2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "E2"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::DESTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.DESTransform D3
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::DESTransform*& System::Security::Cryptography::TripleDESTransform::dyn_D3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDESTransform::dyn_D3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "D3"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::DESTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.TripleDESTransform.GetStrongKey
::ArrayW<uint8_t> System::Security::Cryptography::TripleDESTransform::GetStrongKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDESTransform::GetStrongKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "TripleDESTransform", "GetStrongKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.TripleDESTransform.ECB
void System::Security::Cryptography::TripleDESTransform::ECB(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TripleDESTransform::ECB");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AesCcm
#include "System/Security/Cryptography/AesCcm.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.AesCcm.get_NonceByteSizes
::System::Security::Cryptography::KeySizes* System::Security::Cryptography::AesCcm::get_NonceByteSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCcm::get_NonceByteSizes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "AesCcm", "get_NonceByteSizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::KeySizes*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCcm.get_TagByteSizes
::System::Security::Cryptography::KeySizes* System::Security::Cryptography::AesCcm::get_TagByteSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCcm::get_TagByteSizes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "AesCcm", "get_TagByteSizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::KeySizes*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCcm.Decrypt
void System::Security::Cryptography::AesCcm::Decrypt(::ArrayW<uint8_t> nonce, ::ArrayW<uint8_t> ciphertext, ::ArrayW<uint8_t> tag, ::ArrayW<uint8_t> plaintext, ::ArrayW<uint8_t> associatedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCcm::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonce), ::il2cpp_utils::ExtractType(ciphertext), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(plaintext), ::il2cpp_utils::ExtractType(associatedData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nonce, ciphertext, tag, plaintext, associatedData);
}
// Autogenerated method: System.Security.Cryptography.AesCcm.Decrypt
void System::Security::Cryptography::AesCcm::Decrypt(::System::ReadOnlySpan_1<uint8_t> nonce, ::System::ReadOnlySpan_1<uint8_t> ciphertext, ::System::ReadOnlySpan_1<uint8_t> tag, ::System::Span_1<uint8_t> plaintext, ::System::ReadOnlySpan_1<uint8_t> associatedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCcm::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonce), ::il2cpp_utils::ExtractType(ciphertext), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(plaintext), ::il2cpp_utils::ExtractType(associatedData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nonce, ciphertext, tag, plaintext, associatedData);
}
// Autogenerated method: System.Security.Cryptography.AesCcm.Dispose
void System::Security::Cryptography::AesCcm::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCcm::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AesCcm*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCcm.Encrypt
void System::Security::Cryptography::AesCcm::Encrypt(::ArrayW<uint8_t> nonce, ::ArrayW<uint8_t> plaintext, ::ArrayW<uint8_t> ciphertext, ::ArrayW<uint8_t> tag, ::ArrayW<uint8_t> associatedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCcm::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonce), ::il2cpp_utils::ExtractType(plaintext), ::il2cpp_utils::ExtractType(ciphertext), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(associatedData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nonce, plaintext, ciphertext, tag, associatedData);
}
// Autogenerated method: System.Security.Cryptography.AesCcm.Encrypt
void System::Security::Cryptography::AesCcm::Encrypt(::System::ReadOnlySpan_1<uint8_t> nonce, ::System::ReadOnlySpan_1<uint8_t> plaintext, ::System::Span_1<uint8_t> ciphertext, ::System::Span_1<uint8_t> tag, ::System::ReadOnlySpan_1<uint8_t> associatedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCcm::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonce), ::il2cpp_utils::ExtractType(plaintext), ::il2cpp_utils::ExtractType(ciphertext), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(associatedData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nonce, plaintext, ciphertext, tag, associatedData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AesGcm
#include "System/Security/Cryptography/AesGcm.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.AesGcm.get_NonceByteSizes
::System::Security::Cryptography::KeySizes* System::Security::Cryptography::AesGcm::get_NonceByteSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesGcm::get_NonceByteSizes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "AesGcm", "get_NonceByteSizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::KeySizes*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesGcm.get_TagByteSizes
::System::Security::Cryptography::KeySizes* System::Security::Cryptography::AesGcm::get_TagByteSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesGcm::get_TagByteSizes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "AesGcm", "get_TagByteSizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::KeySizes*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesGcm.Decrypt
void System::Security::Cryptography::AesGcm::Decrypt(::ArrayW<uint8_t> nonce, ::ArrayW<uint8_t> ciphertext, ::ArrayW<uint8_t> tag, ::ArrayW<uint8_t> plaintext, ::ArrayW<uint8_t> associatedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesGcm::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonce), ::il2cpp_utils::ExtractType(ciphertext), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(plaintext), ::il2cpp_utils::ExtractType(associatedData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nonce, ciphertext, tag, plaintext, associatedData);
}
// Autogenerated method: System.Security.Cryptography.AesGcm.Decrypt
void System::Security::Cryptography::AesGcm::Decrypt(::System::ReadOnlySpan_1<uint8_t> nonce, ::System::ReadOnlySpan_1<uint8_t> ciphertext, ::System::ReadOnlySpan_1<uint8_t> tag, ::System::Span_1<uint8_t> plaintext, ::System::ReadOnlySpan_1<uint8_t> associatedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesGcm::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonce), ::il2cpp_utils::ExtractType(ciphertext), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(plaintext), ::il2cpp_utils::ExtractType(associatedData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nonce, ciphertext, tag, plaintext, associatedData);
}
// Autogenerated method: System.Security.Cryptography.AesGcm.Dispose
void System::Security::Cryptography::AesGcm::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesGcm::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AesGcm*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesGcm.Encrypt
void System::Security::Cryptography::AesGcm::Encrypt(::ArrayW<uint8_t> nonce, ::ArrayW<uint8_t> plaintext, ::ArrayW<uint8_t> ciphertext, ::ArrayW<uint8_t> tag, ::ArrayW<uint8_t> associatedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesGcm::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonce), ::il2cpp_utils::ExtractType(plaintext), ::il2cpp_utils::ExtractType(ciphertext), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(associatedData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nonce, plaintext, ciphertext, tag, associatedData);
}
// Autogenerated method: System.Security.Cryptography.AesGcm.Encrypt
void System::Security::Cryptography::AesGcm::Encrypt(::System::ReadOnlySpan_1<uint8_t> nonce, ::System::ReadOnlySpan_1<uint8_t> plaintext, ::System::Span_1<uint8_t> ciphertext, ::System::Span_1<uint8_t> tag, ::System::ReadOnlySpan_1<uint8_t> associatedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesGcm::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonce), ::il2cpp_utils::ExtractType(plaintext), ::il2cpp_utils::ExtractType(ciphertext), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(associatedData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nonce, plaintext, ciphertext, tag, associatedData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.CryptoConfigForwarder
#include "System/Security/Cryptography/CryptoConfigForwarder.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.CryptoConfigForwarder.CreateFromName
::Il2CppObject* System::Security::Cryptography::CryptoConfigForwarder::CreateFromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoConfigForwarder::CreateFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfigForwarder", "CreateFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Security.Cryptography.CryptoConfigForwarder.CreateDefaultHashAlgorithm
::System::Security::Cryptography::HashAlgorithm* System::Security::Cryptography::CryptoConfigForwarder::CreateDefaultHashAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoConfigForwarder::CreateDefaultHashAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfigForwarder", "CreateDefaultHashAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithm*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.PbeEncryptionAlgorithm
#include "System/Security/Cryptography/PbeEncryptionAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.PbeEncryptionAlgorithm Unknown
::System::Security::Cryptography::PbeEncryptionAlgorithm System::Security::Cryptography::PbeEncryptionAlgorithm::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PbeEncryptionAlgorithm::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::PbeEncryptionAlgorithm>("System.Security.Cryptography", "PbeEncryptionAlgorithm", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.PbeEncryptionAlgorithm Unknown
void System::Security::Cryptography::PbeEncryptionAlgorithm::_set_Unknown(::System::Security::Cryptography::PbeEncryptionAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PbeEncryptionAlgorithm::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "PbeEncryptionAlgorithm", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.PbeEncryptionAlgorithm Aes128Cbc
::System::Security::Cryptography::PbeEncryptionAlgorithm System::Security::Cryptography::PbeEncryptionAlgorithm::_get_Aes128Cbc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PbeEncryptionAlgorithm::_get_Aes128Cbc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::PbeEncryptionAlgorithm>("System.Security.Cryptography", "PbeEncryptionAlgorithm", "Aes128Cbc"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.PbeEncryptionAlgorithm Aes128Cbc
void System::Security::Cryptography::PbeEncryptionAlgorithm::_set_Aes128Cbc(::System::Security::Cryptography::PbeEncryptionAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PbeEncryptionAlgorithm::_set_Aes128Cbc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "PbeEncryptionAlgorithm", "Aes128Cbc", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.PbeEncryptionAlgorithm Aes192Cbc
::System::Security::Cryptography::PbeEncryptionAlgorithm System::Security::Cryptography::PbeEncryptionAlgorithm::_get_Aes192Cbc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PbeEncryptionAlgorithm::_get_Aes192Cbc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::PbeEncryptionAlgorithm>("System.Security.Cryptography", "PbeEncryptionAlgorithm", "Aes192Cbc"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.PbeEncryptionAlgorithm Aes192Cbc
void System::Security::Cryptography::PbeEncryptionAlgorithm::_set_Aes192Cbc(::System::Security::Cryptography::PbeEncryptionAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PbeEncryptionAlgorithm::_set_Aes192Cbc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "PbeEncryptionAlgorithm", "Aes192Cbc", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.PbeEncryptionAlgorithm Aes256Cbc
::System::Security::Cryptography::PbeEncryptionAlgorithm System::Security::Cryptography::PbeEncryptionAlgorithm::_get_Aes256Cbc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PbeEncryptionAlgorithm::_get_Aes256Cbc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::PbeEncryptionAlgorithm>("System.Security.Cryptography", "PbeEncryptionAlgorithm", "Aes256Cbc"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.PbeEncryptionAlgorithm Aes256Cbc
void System::Security::Cryptography::PbeEncryptionAlgorithm::_set_Aes256Cbc(::System::Security::Cryptography::PbeEncryptionAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PbeEncryptionAlgorithm::_set_Aes256Cbc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "PbeEncryptionAlgorithm", "Aes256Cbc", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.PbeEncryptionAlgorithm TripleDes3KeyPkcs12
::System::Security::Cryptography::PbeEncryptionAlgorithm System::Security::Cryptography::PbeEncryptionAlgorithm::_get_TripleDes3KeyPkcs12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PbeEncryptionAlgorithm::_get_TripleDes3KeyPkcs12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::PbeEncryptionAlgorithm>("System.Security.Cryptography", "PbeEncryptionAlgorithm", "TripleDes3KeyPkcs12"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.PbeEncryptionAlgorithm TripleDes3KeyPkcs12
void System::Security::Cryptography::PbeEncryptionAlgorithm::_set_TripleDes3KeyPkcs12(::System::Security::Cryptography::PbeEncryptionAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PbeEncryptionAlgorithm::_set_TripleDes3KeyPkcs12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "PbeEncryptionAlgorithm", "TripleDes3KeyPkcs12", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::PbeEncryptionAlgorithm::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PbeEncryptionAlgorithm::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.PbeParameters
#include "System/Security/Cryptography/PbeParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Security.Cryptography.PbeEncryptionAlgorithm <EncryptionAlgorithm>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::PbeEncryptionAlgorithm& System::Security::Cryptography::PbeParameters::dyn_$EncryptionAlgorithm$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PbeParameters::dyn_$EncryptionAlgorithm$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EncryptionAlgorithm>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::PbeEncryptionAlgorithm*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Security.Cryptography.HashAlgorithmName <HashAlgorithm>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::HashAlgorithmName& System::Security::Cryptography::PbeParameters::dyn_$HashAlgorithm$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PbeParameters::dyn_$HashAlgorithm$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HashAlgorithm>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::HashAlgorithmName*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <IterationCount>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::PbeParameters::dyn_$IterationCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PbeParameters::dyn_$IterationCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IterationCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.PbeParameters.get_EncryptionAlgorithm
::System::Security::Cryptography::PbeEncryptionAlgorithm System::Security::Cryptography::PbeParameters::get_EncryptionAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PbeParameters::get_EncryptionAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncryptionAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::PbeEncryptionAlgorithm, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.PbeParameters.get_HashAlgorithm
::System::Security::Cryptography::HashAlgorithmName System::Security::Cryptography::PbeParameters::get_HashAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PbeParameters::get_HashAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HashAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithmName, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.PbeParameters.get_IterationCount
int System::Security::Cryptography::PbeParameters::get_IterationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PbeParameters::get_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509ContentType
#include "System/Security/Cryptography/X509Certificates/X509ContentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ContentType Unknown
::System::Security::Cryptography::X509Certificates::X509ContentType System::Security::Cryptography::X509Certificates::X509ContentType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ContentType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ContentType>("System.Security.Cryptography.X509Certificates", "X509ContentType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ContentType Unknown
void System::Security::Cryptography::X509Certificates::X509ContentType::_set_Unknown(::System::Security::Cryptography::X509Certificates::X509ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ContentType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ContentType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ContentType Cert
::System::Security::Cryptography::X509Certificates::X509ContentType System::Security::Cryptography::X509Certificates::X509ContentType::_get_Cert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ContentType::_get_Cert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ContentType>("System.Security.Cryptography.X509Certificates", "X509ContentType", "Cert"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ContentType Cert
void System::Security::Cryptography::X509Certificates::X509ContentType::_set_Cert(::System::Security::Cryptography::X509Certificates::X509ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ContentType::_set_Cert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ContentType", "Cert", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ContentType SerializedCert
::System::Security::Cryptography::X509Certificates::X509ContentType System::Security::Cryptography::X509Certificates::X509ContentType::_get_SerializedCert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ContentType::_get_SerializedCert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ContentType>("System.Security.Cryptography.X509Certificates", "X509ContentType", "SerializedCert"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ContentType SerializedCert
void System::Security::Cryptography::X509Certificates::X509ContentType::_set_SerializedCert(::System::Security::Cryptography::X509Certificates::X509ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ContentType::_set_SerializedCert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ContentType", "SerializedCert", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ContentType Pfx
::System::Security::Cryptography::X509Certificates::X509ContentType System::Security::Cryptography::X509Certificates::X509ContentType::_get_Pfx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ContentType::_get_Pfx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ContentType>("System.Security.Cryptography.X509Certificates", "X509ContentType", "Pfx"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ContentType Pfx
void System::Security::Cryptography::X509Certificates::X509ContentType::_set_Pfx(::System::Security::Cryptography::X509Certificates::X509ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ContentType::_set_Pfx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ContentType", "Pfx", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ContentType Pkcs12
::System::Security::Cryptography::X509Certificates::X509ContentType System::Security::Cryptography::X509Certificates::X509ContentType::_get_Pkcs12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ContentType::_get_Pkcs12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ContentType>("System.Security.Cryptography.X509Certificates", "X509ContentType", "Pkcs12"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ContentType Pkcs12
void System::Security::Cryptography::X509Certificates::X509ContentType::_set_Pkcs12(::System::Security::Cryptography::X509Certificates::X509ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ContentType::_set_Pkcs12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ContentType", "Pkcs12", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ContentType SerializedStore
::System::Security::Cryptography::X509Certificates::X509ContentType System::Security::Cryptography::X509Certificates::X509ContentType::_get_SerializedStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ContentType::_get_SerializedStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ContentType>("System.Security.Cryptography.X509Certificates", "X509ContentType", "SerializedStore"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ContentType SerializedStore
void System::Security::Cryptography::X509Certificates::X509ContentType::_set_SerializedStore(::System::Security::Cryptography::X509Certificates::X509ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ContentType::_set_SerializedStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ContentType", "SerializedStore", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ContentType Pkcs7
::System::Security::Cryptography::X509Certificates::X509ContentType System::Security::Cryptography::X509Certificates::X509ContentType::_get_Pkcs7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ContentType::_get_Pkcs7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ContentType>("System.Security.Cryptography.X509Certificates", "X509ContentType", "Pkcs7"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ContentType Pkcs7
void System::Security::Cryptography::X509Certificates::X509ContentType::_set_Pkcs7(::System::Security::Cryptography::X509Certificates::X509ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ContentType::_set_Pkcs7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ContentType", "Pkcs7", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ContentType Authenticode
::System::Security::Cryptography::X509Certificates::X509ContentType System::Security::Cryptography::X509Certificates::X509ContentType::_get_Authenticode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ContentType::_get_Authenticode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ContentType>("System.Security.Cryptography.X509Certificates", "X509ContentType", "Authenticode"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ContentType Authenticode
void System::Security::Cryptography::X509Certificates::X509ContentType::_set_Authenticode(::System::Security::Cryptography::X509Certificates::X509ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ContentType::_set_Authenticode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ContentType", "Authenticode", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509ContentType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ContentType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
#include "System/Security/Cryptography/X509Certificates/X509KeyStorageFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags DefaultKeySet
::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_DefaultKeySet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_DefaultKeySet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "DefaultKeySet"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags DefaultKeySet
void System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_DefaultKeySet(::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_DefaultKeySet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "DefaultKeySet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags UserKeySet
::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_UserKeySet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_UserKeySet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "UserKeySet"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags UserKeySet
void System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_UserKeySet(::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_UserKeySet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "UserKeySet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags MachineKeySet
::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_MachineKeySet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_MachineKeySet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "MachineKeySet"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags MachineKeySet
void System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_MachineKeySet(::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_MachineKeySet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "MachineKeySet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags Exportable
::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_Exportable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_Exportable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "Exportable"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags Exportable
void System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_Exportable(::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_Exportable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "Exportable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags UserProtected
::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_UserProtected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_UserProtected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "UserProtected"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags UserProtected
void System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_UserProtected(::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_UserProtected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "UserProtected", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags PersistKeySet
::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_PersistKeySet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_PersistKeySet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "PersistKeySet"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags PersistKeySet
void System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_PersistKeySet(::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_PersistKeySet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "PersistKeySet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags EphemeralKeySet
::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_EphemeralKeySet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_EphemeralKeySet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "EphemeralKeySet"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags EphemeralKeySet
void System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_EphemeralKeySet(::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_EphemeralKeySet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "EphemeralKeySet", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImpl
#include "System/Security/Cryptography/X509Certificates/X509CertificateImpl.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Security.Cryptography.X509Certificates.X509KeyStorageFlags KeyStorageFlagsAll
::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags System::Security::Cryptography::X509Certificates::X509Certificate::_get_KeyStorageFlagsAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::_get_KeyStorageFlagsAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags>("System.Security.Cryptography.X509Certificates", "X509Certificate", "KeyStorageFlagsAll"));
}
// Autogenerated static field setter
// Set static field: static System.Security.Cryptography.X509Certificates.X509KeyStorageFlags KeyStorageFlagsAll
void System::Security::Cryptography::X509Certificates::X509Certificate::_set_KeyStorageFlagsAll(::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::_set_KeyStorageFlagsAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509Certificate", "KeyStorageFlagsAll", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509CertificateImpl impl
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509CertificateImpl*& System::Security::Cryptography::X509Certificates::X509Certificate::dyn_impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::dyn_impl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "impl"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509CertificateImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] lazyCertHash
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::X509Certificates::X509Certificate::dyn_lazyCertHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::dyn_lazyCertHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazyCertHash"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] lazySerialNumber
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::X509Certificates::X509Certificate::dyn_lazySerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::dyn_lazySerialNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazySerialNumber"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String lazyIssuer
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::X509Certificates::X509Certificate::dyn_lazyIssuer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::dyn_lazyIssuer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazyIssuer"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String lazySubject
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::X509Certificates::X509Certificate::dyn_lazySubject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::dyn_lazySubject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazySubject"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String lazyKeyAlgorithm
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::X509Certificates::X509Certificate::dyn_lazyKeyAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::dyn_lazyKeyAlgorithm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazyKeyAlgorithm"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] lazyKeyAlgorithmParameters
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::X509Certificates::X509Certificate::dyn_lazyKeyAlgorithmParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::dyn_lazyKeyAlgorithmParameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazyKeyAlgorithmParameters"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] lazyPublicKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::X509Certificates::X509Certificate::dyn_lazyPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::dyn_lazyPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazyPublicKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime lazyNotBefore
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Security::Cryptography::X509Certificates::X509Certificate::dyn_lazyNotBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::dyn_lazyNotBefore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazyNotBefore"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime lazyNotAfter
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Security::Cryptography::X509Certificates::X509Certificate::dyn_lazyNotAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::dyn_lazyNotAfter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazyNotAfter"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.Reset
void System::Security::Cryptography::X509Certificates::X509Certificate::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Security::Cryptography::X509Certificates::X509Certificate::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Security::Cryptography::X509Certificates::X509Certificate::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.get_Issuer
::StringW System::Security::Cryptography::X509Certificates::X509Certificate::get_Issuer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::get_Issuer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Issuer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.get_Subject
::StringW System::Security::Cryptography::X509Certificates::X509Certificate::get_Subject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::get_Subject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Subject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
void System::Security::Cryptography::X509Certificates::X509Certificate::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
void System::Security::Cryptography::X509Certificates::X509Certificate::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.Equals
bool System::Security::Cryptography::X509Certificates::X509Certificate::Equals(::System::Security::Cryptography::X509Certificates::X509Certificate* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate::GetCertHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::GetCertHash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
::StringW System::Security::Cryptography::X509Certificates::X509Certificate::GetCertHashString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::GetCertHashString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertHash
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate::GetRawCertHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::GetRawCertHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawCertHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate::GetRawCertData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::GetRawCertData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
::StringW System::Security::Cryptography::X509Certificates::X509Certificate::GetKeyAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::GetKeyAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate::GetKeyAlgorithmParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::GetKeyAlgorithmParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate::GetPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::GetPublicKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate::GetSerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::GetSerialNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
::StringW System::Security::Cryptography::X509Certificates::X509Certificate::GetSerialNumberString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::GetSerialNumberString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawSerialNumber
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate::GetRawSerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::GetRawSerialNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawSerialNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
::StringW System::Security::Cryptography::X509Certificates::X509Certificate::ToString(bool fVerbose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, fVerbose);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetNotAfter
::System::DateTime System::Security::Cryptography::X509Certificates::X509Certificate::GetNotAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::GetNotAfter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNotAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetNotBefore
::System::DateTime System::Security::Cryptography::X509Certificates::X509Certificate::GetNotBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::GetNotBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNotBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate
::StringW System::Security::Cryptography::X509Certificates::X509Certificate::FormatDate(::System::DateTime date) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::FormatDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Certificate", "FormatDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(date)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, date);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.ValidateKeyStorageFlags
void System::Security::Cryptography::X509Certificates::X509Certificate::ValidateKeyStorageFlags(::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::ValidateKeyStorageFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Certificate", "ValidateKeyStorageFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyStorageFlags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyStorageFlags);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.ImportHandle
void System::Security::Cryptography::X509Certificates::X509Certificate::ImportHandle(::System::Security::Cryptography::X509Certificates::X509CertificateImpl* impl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::ImportHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, impl);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.get_Impl
::System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509Certificate::get_Impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::get_Impl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.get_IsValid
bool System::Security::Cryptography::X509Certificates::X509Certificate::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.ThrowIfInvalid
void System::Security::Cryptography::X509Certificates::X509Certificate::ThrowIfInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::ThrowIfInvalid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfInvalid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.Equals
bool System::Security::Cryptography::X509Certificates::X509Certificate::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
int System::Security::Cryptography::X509Certificates::X509Certificate::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
::StringW System::Security::Cryptography::X509Certificates::X509Certificate::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImpl
#include "System/Security/Cryptography/X509Certificates/X509CertificateImpl.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.get_IsValid
bool System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.ThrowIfContextInvalid
void System::Security::Cryptography::X509Certificates::X509CertificateImpl::ThrowIfContextInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::ThrowIfContextInvalid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfContextInvalid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.Clone
::System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509CertificateImpl::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.get_Issuer
::StringW System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_Issuer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_Issuer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.get_Subject
::StringW System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_Subject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_Subject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.get_RawData
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_RawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_RawData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.get_NotAfter
::System::DateTime System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_NotAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_NotAfter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.get_NotBefore
::System::DateTime System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_NotBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_NotBefore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.get_Thumbprint
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_Thumbprint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_Thumbprint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.get_KeyAlgorithm
::StringW System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_KeyAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_KeyAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.get_KeyAlgorithmParameters
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_KeyAlgorithmParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_KeyAlgorithmParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.get_PublicKeyValue
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_PublicKeyValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_PublicKeyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.get_SerialNumber
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_SerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_SerialNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.get_HasPrivateKey
bool System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_HasPrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_HasPrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.GetRSAPrivateKey
::System::Security::Cryptography::RSA* System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetRSAPrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetRSAPrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.GetDSAPrivateKey
::System::Security::Cryptography::DSA* System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetDSAPrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetDSAPrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSA*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.CopyWithPrivateKey
::System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509CertificateImpl::CopyWithPrivateKey(::System::Security::Cryptography::RSA* privateKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::CopyWithPrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(this, ___internal__method, privateKey);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.Dispose
void System::Security::Cryptography::X509Certificates::X509CertificateImpl::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.Dispose
void System::Security::Cryptography::X509Certificates::X509CertificateImpl::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.GetHashCode
int System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.Equals
bool System::Security::Cryptography::X509Certificates::X509CertificateImpl::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.Finalize
void System::Security::Cryptography::X509Certificates::X509CertificateImpl::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImpl::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509Helper
#include "System/Security/Cryptography/X509Certificates/X509Helper.hpp"
// Including type: Mono.ISystemCertificateProvider
#include "Mono/ISystemCertificateProvider.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImpl
#include "System/Security/Cryptography/X509Certificates/X509CertificateImpl.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafePasswordHandle
#include "Microsoft/Win32/SafeHandles/SafePasswordHandle.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
#include "System/Security/Cryptography/X509Certificates/X509KeyStorageFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.get_CertificateProvider
::Mono::ISystemCertificateProvider* System::Security::Cryptography::X509Certificates::X509Helper::get_CertificateProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper::get_CertificateProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "get_CertificateProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::ISystemCertificateProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.InitFromCertificate
::System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509Helper::InitFromCertificate(::System::Security::Cryptography::X509Certificates::X509Certificate* cert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper::InitFromCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "InitFromCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cert);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.InitFromCertificate
::System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509Helper::InitFromCertificate(::System::Security::Cryptography::X509Certificates::X509CertificateImpl* impl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper::InitFromCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "InitFromCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impl)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, impl);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.IsValid
bool System::Security::Cryptography::X509Certificates::X509Helper::IsValid(::System::Security::Cryptography::X509Certificates::X509CertificateImpl* impl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impl)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, impl);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.ThrowIfContextInvalid
void System::Security::Cryptography::X509Certificates::X509Helper::ThrowIfContextInvalid(::System::Security::Cryptography::X509Certificates::X509CertificateImpl* impl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper::ThrowIfContextInvalid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "ThrowIfContextInvalid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, impl);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.GetInvalidContextException
::System::Exception* System::Security::Cryptography::X509Certificates::X509Helper::GetInvalidContextException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper::GetInvalidContextException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "GetInvalidContextException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.Import
::System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509Helper::Import(::ArrayW<uint8_t> rawData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper::Import");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "Import", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawData);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.Import
::System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509Helper::Import(::ArrayW<uint8_t> rawData, ::Microsoft::Win32::SafeHandles::SafePasswordHandle* password, ::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper::Import");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "Import", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(keyStorageFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawData, password, keyStorageFlags);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Principal.GenericIdentity
#include "System/Security/Principal/GenericIdentity.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Security.Claims.Claim
#include "System/Security/Claims/Claim.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String m_name
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Principal::GenericIdentity::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String m_type
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Principal::GenericIdentity::dyn_m_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::dyn_m_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Principal.GenericIdentity.AddNameClaim
void System::Security::Principal::GenericIdentity::AddNameClaim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::AddNameClaim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNameClaim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.GenericIdentity.Clone
::System::Security::Claims::ClaimsIdentity* System::Security::Principal::GenericIdentity::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::ClaimsIdentity*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.GenericIdentity.get_Claims
::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::Claim*>* System::Security::Principal::GenericIdentity::get_Claims() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::get_Claims");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::Claim*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.GenericIdentity.get_Name
::StringW System::Security::Principal::GenericIdentity::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.GenericIdentity.get_AuthenticationType
::StringW System::Security::Principal::GenericIdentity::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::get_AuthenticationType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Principal.IIdentity
#include "System/Security/Principal/IIdentity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Principal.IIdentity.get_Name
::StringW System::Security::Principal::IIdentity::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::IIdentity::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Principal::IIdentity*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.IIdentity.get_AuthenticationType
::StringW System::Security::Principal::IIdentity::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::IIdentity::get_AuthenticationType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Principal::IIdentity*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Principal.TokenImpersonationLevel
#include "System/Security/Principal/TokenImpersonationLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.TokenImpersonationLevel None
::System::Security::Principal::TokenImpersonationLevel System::Security::Principal::TokenImpersonationLevel::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::TokenImpersonationLevel>("System.Security.Principal", "TokenImpersonationLevel", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.TokenImpersonationLevel None
void System::Security::Principal::TokenImpersonationLevel::_set_None(::System::Security::Principal::TokenImpersonationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "TokenImpersonationLevel", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.TokenImpersonationLevel Anonymous
::System::Security::Principal::TokenImpersonationLevel System::Security::Principal::TokenImpersonationLevel::_get_Anonymous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_get_Anonymous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::TokenImpersonationLevel>("System.Security.Principal", "TokenImpersonationLevel", "Anonymous"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.TokenImpersonationLevel Anonymous
void System::Security::Principal::TokenImpersonationLevel::_set_Anonymous(::System::Security::Principal::TokenImpersonationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_set_Anonymous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "TokenImpersonationLevel", "Anonymous", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.TokenImpersonationLevel Identification
::System::Security::Principal::TokenImpersonationLevel System::Security::Principal::TokenImpersonationLevel::_get_Identification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_get_Identification");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::TokenImpersonationLevel>("System.Security.Principal", "TokenImpersonationLevel", "Identification"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.TokenImpersonationLevel Identification
void System::Security::Principal::TokenImpersonationLevel::_set_Identification(::System::Security::Principal::TokenImpersonationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_set_Identification");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "TokenImpersonationLevel", "Identification", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.TokenImpersonationLevel Impersonation
::System::Security::Principal::TokenImpersonationLevel System::Security::Principal::TokenImpersonationLevel::_get_Impersonation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_get_Impersonation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::TokenImpersonationLevel>("System.Security.Principal", "TokenImpersonationLevel", "Impersonation"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.TokenImpersonationLevel Impersonation
void System::Security::Principal::TokenImpersonationLevel::_set_Impersonation(::System::Security::Principal::TokenImpersonationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_set_Impersonation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "TokenImpersonationLevel", "Impersonation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.TokenImpersonationLevel Delegation
::System::Security::Principal::TokenImpersonationLevel System::Security::Principal::TokenImpersonationLevel::_get_Delegation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_get_Delegation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::TokenImpersonationLevel>("System.Security.Principal", "TokenImpersonationLevel", "Delegation"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.TokenImpersonationLevel Delegation
void System::Security::Principal::TokenImpersonationLevel::_set_Delegation(::System::Security::Principal::TokenImpersonationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_set_Delegation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "TokenImpersonationLevel", "Delegation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Principal::TokenImpersonationLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Principal.GenericPrincipal
#include "System/Security/Principal/GenericPrincipal.hpp"
// Including type: System.Security.Principal.IIdentity
#include "System/Security/Principal/IIdentity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Principal.IIdentity m_identity
[[deprecated("Use field access instead!")]] ::System::Security::Principal::IIdentity*& System::Security::Principal::GenericPrincipal::dyn_m_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericPrincipal::dyn_m_identity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_identity"))->offset;
  return *reinterpret_cast<::System::Security::Principal::IIdentity**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] m_roles
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Security::Principal::GenericPrincipal::dyn_m_roles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericPrincipal::dyn_m_roles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_roles"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Principal.WindowsAccountType
#include "System/Security/Principal/WindowsAccountType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.WindowsAccountType Normal
::System::Security::Principal::WindowsAccountType System::Security::Principal::WindowsAccountType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsAccountType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::WindowsAccountType>("System.Security.Principal", "WindowsAccountType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.WindowsAccountType Normal
void System::Security::Principal::WindowsAccountType::_set_Normal(::System::Security::Principal::WindowsAccountType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsAccountType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "WindowsAccountType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.WindowsAccountType Guest
::System::Security::Principal::WindowsAccountType System::Security::Principal::WindowsAccountType::_get_Guest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsAccountType::_get_Guest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::WindowsAccountType>("System.Security.Principal", "WindowsAccountType", "Guest"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.WindowsAccountType Guest
void System::Security::Principal::WindowsAccountType::_set_Guest(::System::Security::Principal::WindowsAccountType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsAccountType::_set_Guest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "WindowsAccountType", "Guest", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.WindowsAccountType System
::System::Security::Principal::WindowsAccountType System::Security::Principal::WindowsAccountType::_get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsAccountType::_get_System");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::WindowsAccountType>("System.Security.Principal", "WindowsAccountType", "System"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.WindowsAccountType System
void System::Security::Principal::WindowsAccountType::_set_System(::System::Security::Principal::WindowsAccountType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsAccountType::_set_System");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "WindowsAccountType", "System", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.WindowsAccountType Anonymous
::System::Security::Principal::WindowsAccountType System::Security::Principal::WindowsAccountType::_get_Anonymous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsAccountType::_get_Anonymous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::WindowsAccountType>("System.Security.Principal", "WindowsAccountType", "Anonymous"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.WindowsAccountType Anonymous
void System::Security::Principal::WindowsAccountType::_set_Anonymous(::System::Security::Principal::WindowsAccountType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsAccountType::_set_Anonymous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "WindowsAccountType", "Anonymous", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Principal::WindowsAccountType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsAccountType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Principal.WindowsIdentity
#include "System/Security/Principal/WindowsIdentity.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Security.Principal.WindowsImpersonationContext
#include "System/Security/Principal/WindowsImpersonationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.IntPtr invalidWindows
::System::IntPtr System::Security::Principal::WindowsIdentity::_get_invalidWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::_get_invalidWindows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("System.Security.Principal", "WindowsIdentity", "invalidWindows"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr invalidWindows
void System::Security::Principal::WindowsIdentity::_set_invalidWindows(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::_set_invalidWindows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "WindowsIdentity", "invalidWindows", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _token
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::Security::Principal::WindowsIdentity::dyn__token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::dyn__token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_token"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _type
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Principal::WindowsIdentity::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Principal.WindowsAccountType _account
[[deprecated("Use field access instead!")]] ::System::Security::Principal::WindowsAccountType& System::Security::Principal::WindowsIdentity::dyn__account() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::dyn__account");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_account"))->offset;
  return *reinterpret_cast<::System::Security::Principal::WindowsAccountType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _authenticated
[[deprecated("Use field access instead!")]] bool& System::Security::Principal::WindowsIdentity::dyn__authenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::dyn__authenticated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authenticated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Principal::WindowsIdentity::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Serialization.SerializationInfo _info
[[deprecated("Use field access instead!")]] ::System::Runtime::Serialization::SerializationInfo*& System::Security::Principal::WindowsIdentity::dyn__info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::dyn__info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_info"))->offset;
  return *reinterpret_cast<::System::Runtime::Serialization::SerializationInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.Dispose
void System::Security::Principal::WindowsIdentity::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Principal::WindowsIdentity*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.GetCurrent
::System::Security::Principal::WindowsIdentity* System::Security::Principal::WindowsIdentity::GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Principal", "WindowsIdentity", "GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Principal::WindowsIdentity*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.Impersonate
::System::Security::Principal::WindowsImpersonationContext* System::Security::Principal::WindowsIdentity::Impersonate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::Impersonate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Principal::WindowsIdentity*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Principal::WindowsImpersonationContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Security::Principal::WindowsIdentity::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Principal::WindowsIdentity*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Security::Principal::WindowsIdentity::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Principal::WindowsIdentity*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.CloneAsBase
::System::Security::Claims::ClaimsIdentity* System::Security::Principal::WindowsIdentity::CloneAsBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::CloneAsBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneAsBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::ClaimsIdentity*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.GetTokenInternal
::System::IntPtr System::Security::Principal::WindowsIdentity::GetTokenInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::GetTokenInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTokenInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.SetToken
void System::Security::Principal::WindowsIdentity::SetToken(::System::IntPtr token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::SetToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.GetCurrentToken
::System::IntPtr System::Security::Principal::WindowsIdentity::GetCurrentToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::GetCurrentToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Principal", "WindowsIdentity", "GetCurrentToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.GetTokenName
::StringW System::Security::Principal::WindowsIdentity::GetTokenName(::System::IntPtr token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::GetTokenName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Principal", "WindowsIdentity", "GetTokenName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity..cctor
void System::Security::Principal::WindowsIdentity::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Principal", "WindowsIdentity", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.get_AuthenticationType
::StringW System::Security::Principal::WindowsIdentity::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::get_AuthenticationType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.get_Name
::StringW System::Security::Principal::WindowsIdentity::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Principal.WindowsImpersonationContext
#include "System/Security/Principal/WindowsImpersonationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _token
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::Security::Principal::WindowsImpersonationContext::dyn__token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsImpersonationContext::dyn__token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_token"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean undo
[[deprecated("Use field access instead!")]] bool& System::Security::Principal::WindowsImpersonationContext::dyn_undo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsImpersonationContext::dyn_undo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "undo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Principal.WindowsImpersonationContext.Dispose
void System::Security::Principal::WindowsImpersonationContext::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsImpersonationContext::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Principal::WindowsImpersonationContext*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsImpersonationContext.Undo
void System::Security::Principal::WindowsImpersonationContext::Undo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsImpersonationContext::Undo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Undo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsImpersonationContext.CloseToken
bool System::Security::Principal::WindowsImpersonationContext::CloseToken(::System::IntPtr token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsImpersonationContext::CloseToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Principal", "WindowsImpersonationContext", "CloseToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Security.Principal.WindowsImpersonationContext.DuplicateToken
::System::IntPtr System::Security::Principal::WindowsImpersonationContext::DuplicateToken(::System::IntPtr token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsImpersonationContext::DuplicateToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Principal", "WindowsImpersonationContext", "DuplicateToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Security.Principal.WindowsImpersonationContext.SetCurrentToken
bool System::Security::Principal::WindowsImpersonationContext::SetCurrentToken(::System::IntPtr token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsImpersonationContext::SetCurrentToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Principal", "WindowsImpersonationContext", "SetCurrentToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Security.Principal.WindowsImpersonationContext.RevertToSelf
bool System::Security::Principal::WindowsImpersonationContext::RevertToSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsImpersonationContext::RevertToSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Principal", "WindowsImpersonationContext", "RevertToSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Claims.Claim
#include "System/Security/Claims/Claim.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Security.Claims.ClaimsIdentity
#include "System/Security/Claims/ClaimsIdentity.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_issuer
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::Claim::dyn_m_issuer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::dyn_m_issuer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_issuer"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_originalIssuer
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::Claim::dyn_m_originalIssuer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::dyn_m_originalIssuer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_originalIssuer"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_type
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::Claim::dyn_m_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::dyn_m_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_value
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::Claim::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::dyn_m_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_valueType
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::Claim::dyn_m_valueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::dyn_m_valueType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_valueType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_userSerializationData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Claims::Claim::dyn_m_userSerializationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::dyn_m_userSerializationData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_userSerializationData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.String> m_properties
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& System::Security::Claims::Claim::dyn_m_properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::dyn_m_properties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_properties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_propertyLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Security::Claims::Claim::dyn_m_propertyLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::dyn_m_propertyLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_propertyLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Claims.ClaimsIdentity m_subject
[[deprecated("Use field access instead!")]] ::System::Security::Claims::ClaimsIdentity*& System::Security::Claims::Claim::dyn_m_subject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::dyn_m_subject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_subject"))->offset;
  return *reinterpret_cast<::System::Security::Claims::ClaimsIdentity**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Claims.Claim.OnDeserializedMethod
void System::Security::Claims::Claim::OnDeserializedMethod(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::OnDeserializedMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializedMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Security.Claims.Claim.get_Properties
::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* System::Security::Claims::Claim::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::get_Properties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.Claim.get_Subject
::System::Security::Claims::ClaimsIdentity* System::Security::Claims::Claim::get_Subject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::get_Subject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Subject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::ClaimsIdentity*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.Claim.set_Subject
void System::Security::Claims::Claim::set_Subject(::System::Security::Claims::ClaimsIdentity* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::set_Subject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Subject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Claims.Claim.get_Type
::StringW System::Security::Claims::Claim::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.Claim.get_Value
::StringW System::Security::Claims::Claim::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.Claim.Clone
::System::Security::Claims::Claim* System::Security::Claims::Claim::Clone(::System::Security::Claims::ClaimsIdentity* identity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::Claim*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::Claim*, false>(this, ___internal__method, identity);
}
// Autogenerated method: System.Security.Claims.Claim.ToString
::StringW System::Security::Claims::Claim::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Claims.ClaimsIdentity
#include "System/Security/Claims/ClaimsIdentity.hpp"
// Including type: System.Security.Claims.ClaimsIdentity/<get_Claims>d__51
#include "System/Security/Claims/ClaimsIdentity_-get_Claims-d__51.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Security.Claims.Claim
#include "System/Security/Claims/Claim.hpp"
// Including type: System.Collections.ObjectModel.Collection`1
#include "System/Collections/ObjectModel/Collection_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_userSerializationData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Claims::ClaimsIdentity::dyn_m_userSerializationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_userSerializationData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_userSerializationData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Security.Claims.Claim> m_instanceClaims
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Security::Claims::Claim*>*& System::Security::Claims::ClaimsIdentity::dyn_m_instanceClaims() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_instanceClaims");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_instanceClaims"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Security::Claims::Claim*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ObjectModel.Collection`1<System.Collections.Generic.IEnumerable`1<System.Security.Claims.Claim>> m_externalClaims
[[deprecated("Use field access instead!")]] ::System::Collections::ObjectModel::Collection_1<::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::Claim*>*>*& System::Security::Claims::ClaimsIdentity::dyn_m_externalClaims() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_externalClaims");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_externalClaims"))->offset;
  return *reinterpret_cast<::System::Collections::ObjectModel::Collection_1<::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::Claim*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_nameType
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsIdentity::dyn_m_nameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_nameType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nameType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_roleType
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsIdentity::dyn_m_roleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_roleType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_roleType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_version
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsIdentity::dyn_m_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Claims.ClaimsIdentity m_actor
[[deprecated("Use field access instead!")]] ::System::Security::Claims::ClaimsIdentity*& System::Security::Claims::ClaimsIdentity::dyn_m_actor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_actor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_actor"))->offset;
  return *reinterpret_cast<::System::Security::Claims::ClaimsIdentity**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_authenticationType
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsIdentity::dyn_m_authenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_authenticationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_authenticationType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_bootstrapContext
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Security::Claims::ClaimsIdentity::dyn_m_bootstrapContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_bootstrapContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bootstrapContext"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_label
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsIdentity::dyn_m_label() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_label");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_label"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_serializedNameType
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsIdentity::dyn_m_serializedNameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_serializedNameType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_serializedNameType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_serializedRoleType
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsIdentity::dyn_m_serializedRoleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_serializedRoleType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_serializedRoleType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_serializedClaims
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsIdentity::dyn_m_serializedClaims() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_serializedClaims");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_serializedClaims"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.get_AuthenticationType
::StringW System::Security::Claims::ClaimsIdentity::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::get_AuthenticationType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.get_Actor
::System::Security::Claims::ClaimsIdentity* System::Security::Claims::ClaimsIdentity::get_Actor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::get_Actor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Actor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::ClaimsIdentity*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.set_Actor
void System::Security::Claims::ClaimsIdentity::set_Actor(::System::Security::Claims::ClaimsIdentity* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::set_Actor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Actor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.get_Claims
::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::Claim*>* System::Security::Claims::ClaimsIdentity::get_Claims() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::get_Claims");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::Claim*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.get_Name
::StringW System::Security::Claims::ClaimsIdentity::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.get_NameClaimType
::StringW System::Security::Claims::ClaimsIdentity::get_NameClaimType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::get_NameClaimType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameClaimType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.Clone
::System::Security::Claims::ClaimsIdentity* System::Security::Claims::ClaimsIdentity::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::ClaimsIdentity*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.AddClaim
void System::Security::Claims::ClaimsIdentity::AddClaim(::System::Security::Claims::Claim* claim) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::AddClaim");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, claim);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.SafeAddClaims
void System::Security::Claims::ClaimsIdentity::SafeAddClaims(::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::Claim*>* claims) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::SafeAddClaims");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeAddClaims", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(claims)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, claims);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.SafeAddClaim
void System::Security::Claims::ClaimsIdentity::SafeAddClaim(::System::Security::Claims::Claim* claim) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::SafeAddClaim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeAddClaim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(claim)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, claim);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.FindFirst
::System::Security::Claims::Claim* System::Security::Claims::ClaimsIdentity::FindFirst(::StringW type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::FindFirst");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::Claim*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.OnSerializingMethod
void System::Security::Claims::ClaimsIdentity::OnSerializingMethod(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::OnSerializingMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSerializingMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.OnDeserializedMethod
void System::Security::Claims::ClaimsIdentity::OnDeserializedMethod(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::OnDeserializedMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializedMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.OnDeserializingMethod
void System::Security::Claims::ClaimsIdentity::OnDeserializingMethod(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::OnDeserializingMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializingMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.GetObjectData
void System::Security::Claims::ClaimsIdentity::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.DeserializeClaims
void System::Security::Claims::ClaimsIdentity::DeserializeClaims(::StringW serializedClaims) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::DeserializeClaims");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeClaims", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedClaims)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializedClaims);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.SerializeClaims
::StringW System::Security::Claims::ClaimsIdentity::SerializeClaims() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::SerializeClaims");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeClaims", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.IsCircular
bool System::Security::Claims::ClaimsIdentity::IsCircular(::System::Security::Claims::ClaimsIdentity* subject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::IsCircular");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCircular", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subject)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, subject);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.Deserialize
void System::Security::Claims::ClaimsIdentity::Deserialize(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, bool useContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(useContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context, useContext);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Claims.ClaimsIdentity/<get_Claims>d__51
#include "System/Security/Claims/ClaimsIdentity_-get_Claims-d__51.hpp"
// Including type: System.Security.Claims.Claim
#include "System/Security/Claims/Claim.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Claims.Claim <>2__current
[[deprecated("Use field access instead!")]] ::System::Security::Claims::Claim*& System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::System::Security::Claims::Claim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Security.Claims.ClaimsIdentity <>4__this
[[deprecated("Use field access instead!")]] ::System::Security::Claims::ClaimsIdentity*& System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Security::Claims::ClaimsIdentity**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__2
[[deprecated("Use field access instead!")]] int& System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$i$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$i$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<System.Security.Claims.Claim> <>7__wrap2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::System::Security::Claims::Claim*>*& System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::System::Security::Claims::Claim*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity/<get_Claims>d__51.System.IDisposable.Dispose
void System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity/<get_Claims>d__51.MoveNext
bool System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity/<get_Claims>d__51.<>m__Finally1
void System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity/<get_Claims>d__51.System.Collections.Generic.IEnumerator<System.Security.Claims.Claim>.get_Current
::System::Security::Claims::Claim* System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System_Collections_Generic_IEnumerator$System_Security_Claims_Claim$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System.Collections.Generic.IEnumerator<System.Security.Claims.Claim>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::Claim*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity/<get_Claims>d__51.System.Collections.IEnumerator.Reset
void System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity/<get_Claims>d__51.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity/<get_Claims>d__51.System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Security::Claims::Claim*>* System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System_Collections_Generic_IEnumerable$System_Security_Claims_Claim$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Security::Claims::Claim*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity/<get_Claims>d__51.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Claims.ClaimsPrincipal
#include "System/Security/Claims/ClaimsPrincipal.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Security.Claims.ClaimsIdentity
#include "System/Security/Claims/ClaimsIdentity.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.Collections.Generic.IEnumerable`1<System.Security.Claims.ClaimsIdentity>,System.Security.Claims.ClaimsIdentity> s_identitySelector
::System::Func_2<::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::ClaimsIdentity*>*, ::System::Security::Claims::ClaimsIdentity*>* System::Security::Claims::ClaimsPrincipal::_get_s_identitySelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::_get_s_identitySelector");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::ClaimsIdentity*>*, ::System::Security::Claims::ClaimsIdentity*>*>("System.Security.Claims", "ClaimsPrincipal", "s_identitySelector")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.Collections.Generic.IEnumerable`1<System.Security.Claims.ClaimsIdentity>,System.Security.Claims.ClaimsIdentity> s_identitySelector
void System::Security::Claims::ClaimsPrincipal::_set_s_identitySelector(::System::Func_2<::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::ClaimsIdentity*>*, ::System::Security::Claims::ClaimsIdentity*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::_set_s_identitySelector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Claims", "ClaimsPrincipal", "s_identitySelector", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`1<System.Security.Claims.ClaimsPrincipal> s_principalSelector
::System::Func_1<::System::Security::Claims::ClaimsPrincipal*>* System::Security::Claims::ClaimsPrincipal::_get_s_principalSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::_get_s_principalSelector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Func_1<::System::Security::Claims::ClaimsPrincipal*>*>("System.Security.Claims", "ClaimsPrincipal", "s_principalSelector"));
}
// Autogenerated static field setter
// Set static field: static private System.Func`1<System.Security.Claims.ClaimsPrincipal> s_principalSelector
void System::Security::Claims::ClaimsPrincipal::_set_s_principalSelector(::System::Func_1<::System::Security::Claims::ClaimsPrincipal*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::_set_s_principalSelector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Claims", "ClaimsPrincipal", "s_principalSelector", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_version
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsPrincipal::dyn_m_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::dyn_m_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_serializedClaimsIdentities
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsPrincipal::dyn_m_serializedClaimsIdentities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::dyn_m_serializedClaimsIdentities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_serializedClaimsIdentities"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Security.Claims.ClaimsIdentity> m_identities
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Security::Claims::ClaimsIdentity*>*& System::Security::Claims::ClaimsPrincipal::dyn_m_identities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::dyn_m_identities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_identities"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Security::Claims::ClaimsIdentity*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Claims.ClaimsPrincipal.SelectPrimaryIdentity
::System::Security::Claims::ClaimsIdentity* System::Security::Claims::ClaimsPrincipal::SelectPrimaryIdentity(::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::ClaimsIdentity*>* identities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::SelectPrimaryIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Claims", "ClaimsPrincipal", "SelectPrimaryIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identities)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::ClaimsIdentity*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, identities);
}
// Autogenerated method: System.Security.Claims.ClaimsPrincipal.get_ClaimsPrincipalSelector
::System::Func_1<::System::Security::Claims::ClaimsPrincipal*>* System::Security::Claims::ClaimsPrincipal::get_ClaimsPrincipalSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::get_ClaimsPrincipalSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Claims", "ClaimsPrincipal", "get_ClaimsPrincipalSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_1<::System::Security::Claims::ClaimsPrincipal*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsPrincipal.OnSerializingMethod
void System::Security::Claims::ClaimsPrincipal::OnSerializingMethod(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::OnSerializingMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSerializingMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Security.Claims.ClaimsPrincipal.OnDeserializedMethod
void System::Security::Claims::ClaimsPrincipal::OnDeserializedMethod(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::OnDeserializedMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializedMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Security.Claims.ClaimsPrincipal.Deserialize
void System::Security::Claims::ClaimsPrincipal::Deserialize(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Security.Claims.ClaimsPrincipal.DeserializeIdentities
void System::Security::Claims::ClaimsPrincipal::DeserializeIdentities(::StringW identities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::DeserializeIdentities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeIdentities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identities)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, identities);
}
// Autogenerated method: System.Security.Claims.ClaimsPrincipal.SerializeIdentities
::StringW System::Security::Claims::ClaimsPrincipal::SerializeIdentities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::SerializeIdentities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeIdentities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsPrincipal..cctor
void System::Security::Claims::ClaimsPrincipal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Claims", "ClaimsPrincipal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.AmbiguousImplementationException
#include "System/Runtime/AmbiguousImplementationException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.RuntimeImports
#include "System/Runtime/RuntimeImports.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.RuntimeImports.RhZeroMemory
void System::Runtime::RuntimeImports::RhZeroMemory(ByRef<uint8_t> b, uint64_t byteLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::RuntimeImports::RhZeroMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime", "RuntimeImports", "RhZeroMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(byteLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(b), byteLength);
}
// Autogenerated method: System.Runtime.RuntimeImports.ZeroMemory
void System::Runtime::RuntimeImports::ZeroMemory(void* p, uint byteLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::RuntimeImports::ZeroMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime", "RuntimeImports", "ZeroMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(byteLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, byteLength);
}
// Autogenerated method: System.Runtime.RuntimeImports.Memmove
void System::Runtime::RuntimeImports::Memmove(uint8_t* dest, uint8_t* src, uint len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::RuntimeImports::Memmove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime", "RuntimeImports", "Memmove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, src, len);
}
// Autogenerated method: System.Runtime.RuntimeImports.Memmove_wbarrier
void System::Runtime::RuntimeImports::Memmove_wbarrier(uint8_t* dest, uint8_t* src, uint len, ::System::IntPtr type_handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::RuntimeImports::Memmove_wbarrier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime", "RuntimeImports", "Memmove_wbarrier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(type_handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, src, len, type_handle);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.ChannelInfo
#include "System/Runtime/Remoting/ChannelInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object[] channelData
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& System::Runtime::Remoting::ChannelInfo::dyn_channelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ChannelInfo::dyn_channelData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channelData"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Remoting.ChannelInfo.get_ChannelData
::ArrayW<::Il2CppObject*> System::Runtime::Remoting::ChannelInfo::get_ChannelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ChannelInfo::get_ChannelData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ChannelInfo*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.ActivatedClientTypeEntry
#include "System/Runtime/Remoting/ActivatedClientTypeEntry.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Remoting.Contexts.IContextAttribute
#include "System/Runtime/Remoting/Contexts/IContextAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String applicationUrl
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Remoting::ActivatedClientTypeEntry::dyn_applicationUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ActivatedClientTypeEntry::dyn_applicationUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applicationUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type obj_type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Runtime::Remoting::ActivatedClientTypeEntry::dyn_obj_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ActivatedClientTypeEntry::dyn_obj_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obj_type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Remoting.ActivatedClientTypeEntry.get_ApplicationUrl
::StringW System::Runtime::Remoting::ActivatedClientTypeEntry::get_ApplicationUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ActivatedClientTypeEntry::get_ApplicationUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApplicationUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ActivatedClientTypeEntry.get_ContextAttributes
::ArrayW<::System::Runtime::Remoting::Contexts::IContextAttribute*> System::Runtime::Remoting::ActivatedClientTypeEntry::get_ContextAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ActivatedClientTypeEntry::get_ContextAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContextAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Runtime::Remoting::Contexts::IContextAttribute*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ActivatedClientTypeEntry.get_ObjectType
::System::Type* System::Runtime::Remoting::ActivatedClientTypeEntry::get_ObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ActivatedClientTypeEntry::get_ObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ActivatedClientTypeEntry.ToString
::StringW System::Runtime::Remoting::ActivatedClientTypeEntry::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ActivatedClientTypeEntry::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.ActivatedServiceTypeEntry
#include "System/Runtime/Remoting/ActivatedServiceTypeEntry.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type obj_type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Runtime::Remoting::ActivatedServiceTypeEntry::dyn_obj_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ActivatedServiceTypeEntry::dyn_obj_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obj_type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Remoting.ActivatedServiceTypeEntry.get_ObjectType
::System::Type* System::Runtime::Remoting::ActivatedServiceTypeEntry::get_ObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ActivatedServiceTypeEntry::get_ObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ActivatedServiceTypeEntry.ToString
::StringW System::Runtime::Remoting::ActivatedServiceTypeEntry::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ActivatedServiceTypeEntry::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.CustomErrorsModes
#include "System/Runtime/Remoting/CustomErrorsModes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.Remoting.CustomErrorsModes On
::System::Runtime::Remoting::CustomErrorsModes System::Runtime::Remoting::CustomErrorsModes::_get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::CustomErrorsModes::_get_On");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::Remoting::CustomErrorsModes>("System.Runtime.Remoting", "CustomErrorsModes", "On"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Remoting.CustomErrorsModes On
void System::Runtime::Remoting::CustomErrorsModes::_set_On(::System::Runtime::Remoting::CustomErrorsModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::CustomErrorsModes::_set_On");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "CustomErrorsModes", "On", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Remoting.CustomErrorsModes Off
::System::Runtime::Remoting::CustomErrorsModes System::Runtime::Remoting::CustomErrorsModes::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::CustomErrorsModes::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::Remoting::CustomErrorsModes>("System.Runtime.Remoting", "CustomErrorsModes", "Off"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Remoting.CustomErrorsModes Off
void System::Runtime::Remoting::CustomErrorsModes::_set_Off(::System::Runtime::Remoting::CustomErrorsModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::CustomErrorsModes::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "CustomErrorsModes", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Remoting.CustomErrorsModes RemoteOnly
::System::Runtime::Remoting::CustomErrorsModes System::Runtime::Remoting::CustomErrorsModes::_get_RemoteOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::CustomErrorsModes::_get_RemoteOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::Remoting::CustomErrorsModes>("System.Runtime.Remoting", "CustomErrorsModes", "RemoteOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Remoting.CustomErrorsModes RemoteOnly
void System::Runtime::Remoting::CustomErrorsModes::_set_RemoteOnly(::System::Runtime::Remoting::CustomErrorsModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::CustomErrorsModes::_set_RemoteOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "CustomErrorsModes", "RemoteOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Runtime::Remoting::CustomErrorsModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::CustomErrorsModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.EnvoyInfo
#include "System/Runtime/Remoting/EnvoyInfo.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Remoting.Messaging.IMessageSink envoySinks
[[deprecated("Use field access instead!")]] ::System::Runtime::Remoting::Messaging::IMessageSink*& System::Runtime::Remoting::EnvoyInfo::dyn_envoySinks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::EnvoyInfo::dyn_envoySinks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "envoySinks"))->offset;
  return *reinterpret_cast<::System::Runtime::Remoting::Messaging::IMessageSink**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Remoting.EnvoyInfo.get_EnvoySinks
::System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::EnvoyInfo::get_EnvoySinks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::EnvoyInfo::get_EnvoySinks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::EnvoyInfo*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::IMessageSink*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.IChannelInfo
#include "System/Runtime/Remoting/IChannelInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.IChannelInfo.get_ChannelData
::ArrayW<::Il2CppObject*> System::Runtime::Remoting::IChannelInfo::get_ChannelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::IChannelInfo::get_ChannelData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::IChannelInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.IEnvoyInfo
#include "System/Runtime/Remoting/IEnvoyInfo.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.IEnvoyInfo.get_EnvoySinks
::System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::IEnvoyInfo::get_EnvoySinks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::IEnvoyInfo::get_EnvoySinks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::IEnvoyInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::IMessageSink*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.IRemotingTypeInfo
#include "System/Runtime/Remoting/IRemotingTypeInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.IRemotingTypeInfo.get_TypeName
::StringW System::Runtime::Remoting::IRemotingTypeInfo::get_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::IRemotingTypeInfo::get_TypeName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::IRemotingTypeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.IRemotingTypeInfo.CanCastTo
bool System::Runtime::Remoting::IRemotingTypeInfo::CanCastTo(::System::Type* fromType, ::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::IRemotingTypeInfo::CanCastTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::IRemotingTypeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, fromType, o);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Identity
#include "System/Runtime/Remoting/Identity.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
// Including type: System.Runtime.Remoting.Contexts.DynamicPropertyCollection
#include "System/Runtime/Remoting/Contexts/DynamicPropertyCollection.hpp"
// Including type: System.Runtime.Remoting.ObjRef
#include "System/Runtime/Remoting/ObjRef.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.String _objectUri
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Remoting::Identity::dyn__objectUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::dyn__objectUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Runtime.Remoting.Messaging.IMessageSink _channelSink
[[deprecated("Use field access instead!")]] ::System::Runtime::Remoting::Messaging::IMessageSink*& System::Runtime::Remoting::Identity::dyn__channelSink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::dyn__channelSink");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_channelSink"))->offset;
  return *reinterpret_cast<::System::Runtime::Remoting::Messaging::IMessageSink**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Runtime.Remoting.Messaging.IMessageSink _envoySink
[[deprecated("Use field access instead!")]] ::System::Runtime::Remoting::Messaging::IMessageSink*& System::Runtime::Remoting::Identity::dyn__envoySink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::dyn__envoySink");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_envoySink"))->offset;
  return *reinterpret_cast<::System::Runtime::Remoting::Messaging::IMessageSink**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Remoting.Contexts.DynamicPropertyCollection _clientDynamicProperties
[[deprecated("Use field access instead!")]] ::System::Runtime::Remoting::Contexts::DynamicPropertyCollection*& System::Runtime::Remoting::Identity::dyn__clientDynamicProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::dyn__clientDynamicProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clientDynamicProperties"))->offset;
  return *reinterpret_cast<::System::Runtime::Remoting::Contexts::DynamicPropertyCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Remoting.Contexts.DynamicPropertyCollection _serverDynamicProperties
[[deprecated("Use field access instead!")]] ::System::Runtime::Remoting::Contexts::DynamicPropertyCollection*& System::Runtime::Remoting::Identity::dyn__serverDynamicProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::dyn__serverDynamicProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverDynamicProperties"))->offset;
  return *reinterpret_cast<::System::Runtime::Remoting::Contexts::DynamicPropertyCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Runtime.Remoting.ObjRef _objRef
[[deprecated("Use field access instead!")]] ::System::Runtime::Remoting::ObjRef*& System::Runtime::Remoting::Identity::dyn__objRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::dyn__objRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objRef"))->offset;
  return *reinterpret_cast<::System::Runtime::Remoting::ObjRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disposed
[[deprecated("Use field access instead!")]] bool& System::Runtime::Remoting::Identity::dyn__disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::dyn__disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Remoting.Identity.CreateObjRef
::System::Runtime::Remoting::ObjRef* System::Runtime::Remoting::Identity::CreateObjRef(::System::Type* requestedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::CreateObjRef");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::Identity*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::ObjRef*, false>(this, ___internal__method, requestedType);
}
// Autogenerated method: System.Runtime.Remoting.Identity.get_ChannelSink
::System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::Identity::get_ChannelSink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::get_ChannelSink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChannelSink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::IMessageSink*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Identity.set_ChannelSink
void System::Runtime::Remoting::Identity::set_ChannelSink(::System::Runtime::Remoting::Messaging::IMessageSink* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::set_ChannelSink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChannelSink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Identity.get_EnvoySink
::System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::Identity::get_EnvoySink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::get_EnvoySink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnvoySink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::IMessageSink*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Identity.get_ObjectUri
::StringW System::Runtime::Remoting::Identity::get_ObjectUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::get_ObjectUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Identity.set_ObjectUri
void System::Runtime::Remoting::Identity::set_ObjectUri(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::set_ObjectUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ObjectUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Identity.get_IsConnected
bool System::Runtime::Remoting::Identity::get_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::get_IsConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Identity.get_Disposed
bool System::Runtime::Remoting::Identity::get_Disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::get_Disposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Disposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Identity.set_Disposed
void System::Runtime::Remoting::Identity::set_Disposed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::set_Disposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Disposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Identity.get_ClientDynamicProperties
::System::Runtime::Remoting::Contexts::DynamicPropertyCollection* System::Runtime::Remoting::Identity::get_ClientDynamicProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::get_ClientDynamicProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientDynamicProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Contexts::DynamicPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Identity.get_HasServerDynamicSinks
bool System::Runtime::Remoting::Identity::get_HasServerDynamicSinks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::get_HasServerDynamicSinks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasServerDynamicSinks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Identity.NotifyClientDynamicSinks
void System::Runtime::Remoting::Identity::NotifyClientDynamicSinks(bool start, ::System::Runtime::Remoting::Messaging::IMessage* req_msg, bool client_site, bool async) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::NotifyClientDynamicSinks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyClientDynamicSinks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(req_msg), ::il2cpp_utils::ExtractType(client_site), ::il2cpp_utils::ExtractType(async)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, req_msg, client_site, async);
}
// Autogenerated method: System.Runtime.Remoting.Identity.NotifyServerDynamicSinks
void System::Runtime::Remoting::Identity::NotifyServerDynamicSinks(bool start, ::System::Runtime::Remoting::Messaging::IMessage* req_msg, bool client_site, bool async) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::Identity::NotifyServerDynamicSinks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyServerDynamicSinks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(req_msg), ::il2cpp_utils::ExtractType(client_site), ::il2cpp_utils::ExtractType(async)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, req_msg, client_site, async);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.ClientIdentity
#include "System/Runtime/Remoting/ClientIdentity.hpp"
// Including type: System.WeakReference
#include "System/WeakReference.hpp"
// Including type: System.Runtime.Remoting.ObjRef
#include "System/Runtime/Remoting/ObjRef.hpp"
// Including type: System.MarshalByRefObject
#include "System/MarshalByRefObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.WeakReference _proxyReference
[[deprecated("Use field access instead!")]] ::System::WeakReference*& System::Runtime::Remoting::ClientIdentity::dyn__proxyReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ClientIdentity::dyn__proxyReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxyReference"))->offset;
  return *reinterpret_cast<::System::WeakReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Remoting.ClientIdentity.get_ClientProxy
::System::MarshalByRefObject* System::Runtime::Remoting::ClientIdentity::get_ClientProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ClientIdentity::get_ClientProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::MarshalByRefObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ClientIdentity.set_ClientProxy
void System::Runtime::Remoting::ClientIdentity::set_ClientProxy(::System::MarshalByRefObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ClientIdentity::set_ClientProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClientProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.ClientIdentity.get_TargetUri
::StringW System::Runtime::Remoting::ClientIdentity::get_TargetUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ClientIdentity::get_TargetUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ClientIdentity.CreateObjRef
::System::Runtime::Remoting::ObjRef* System::Runtime::Remoting::ClientIdentity::CreateObjRef(::System::Type* requestedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ClientIdentity::CreateObjRef");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::Identity*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::ObjRef*, false>(this, ___internal__method, requestedType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.InternalRemotingServices
#include "System/Runtime/Remoting/InternalRemotingServices.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Runtime.Remoting.Metadata.SoapAttribute
#include "System/Runtime/Remoting/Metadata/SoapAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _soapAttributes
::System::Collections::Hashtable* System::Runtime::Remoting::InternalRemotingServices::_get__soapAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::InternalRemotingServices::_get__soapAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Runtime.Remoting", "InternalRemotingServices", "_soapAttributes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _soapAttributes
void System::Runtime::Remoting::InternalRemotingServices::_set__soapAttributes(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::InternalRemotingServices::_set__soapAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "InternalRemotingServices", "_soapAttributes", value));
}
// Autogenerated method: System.Runtime.Remoting.InternalRemotingServices.GetCachedSoapAttribute
::System::Runtime::Remoting::Metadata::SoapAttribute* System::Runtime::Remoting::InternalRemotingServices::GetCachedSoapAttribute(::Il2CppObject* reflectionObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::InternalRemotingServices::GetCachedSoapAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "InternalRemotingServices", "GetCachedSoapAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reflectionObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Metadata::SoapAttribute*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reflectionObject);
}
// Autogenerated method: System.Runtime.Remoting.InternalRemotingServices..cctor
void System::Runtime::Remoting::InternalRemotingServices::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::InternalRemotingServices::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "InternalRemotingServices", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.ObjRef
#include "System/Runtime/Remoting/ObjRef.hpp"
// Including type: System.Runtime.Remoting.IChannelInfo
#include "System/Runtime/Remoting/IChannelInfo.hpp"
// Including type: System.Runtime.Remoting.IRemotingTypeInfo
#include "System/Runtime/Remoting/IRemotingTypeInfo.hpp"
// Including type: System.Runtime.Remoting.IEnvoyInfo
#include "System/Runtime/Remoting/IEnvoyInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MarshalledObjectRef
int System::Runtime::Remoting::ObjRef::_get_MarshalledObjectRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::_get_MarshalledObjectRef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Runtime.Remoting", "ObjRef", "MarshalledObjectRef"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MarshalledObjectRef
void System::Runtime::Remoting::ObjRef::_set_MarshalledObjectRef(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::_set_MarshalledObjectRef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "ObjRef", "MarshalledObjectRef", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 WellKnowObjectRef
int System::Runtime::Remoting::ObjRef::_get_WellKnowObjectRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::_get_WellKnowObjectRef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Runtime.Remoting", "ObjRef", "WellKnowObjectRef"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 WellKnowObjectRef
void System::Runtime::Remoting::ObjRef::_set_WellKnowObjectRef(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::_set_WellKnowObjectRef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "ObjRef", "WellKnowObjectRef", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Remoting.IChannelInfo channel_info
[[deprecated("Use field access instead!")]] ::System::Runtime::Remoting::IChannelInfo*& System::Runtime::Remoting::ObjRef::dyn_channel_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::dyn_channel_info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channel_info"))->offset;
  return *reinterpret_cast<::System::Runtime::Remoting::IChannelInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String uri
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Remoting::ObjRef::dyn_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::dyn_uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Remoting.IRemotingTypeInfo typeInfo
[[deprecated("Use field access instead!")]] ::System::Runtime::Remoting::IRemotingTypeInfo*& System::Runtime::Remoting::ObjRef::dyn_typeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::dyn_typeInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeInfo"))->offset;
  return *reinterpret_cast<::System::Runtime::Remoting::IRemotingTypeInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Remoting.IEnvoyInfo envoyInfo
[[deprecated("Use field access instead!")]] ::System::Runtime::Remoting::IEnvoyInfo*& System::Runtime::Remoting::ObjRef::dyn_envoyInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::dyn_envoyInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "envoyInfo"))->offset;
  return *reinterpret_cast<::System::Runtime::Remoting::IEnvoyInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 flags
[[deprecated("Use field access instead!")]] int& System::Runtime::Remoting::ObjRef::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::dyn_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type _serverType
[[deprecated("Use field access instead!")]] ::System::Type*& System::Runtime::Remoting::ObjRef::dyn__serverType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::dyn__serverType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Remoting.ObjRef.DeserializeInTheCurrentDomain
::System::Runtime::Remoting::ObjRef* System::Runtime::Remoting::ObjRef::DeserializeInTheCurrentDomain(int domainId, ::ArrayW<uint8_t> tInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::DeserializeInTheCurrentDomain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeInTheCurrentDomain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(domainId), ::il2cpp_utils::ExtractType(tInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::ObjRef*, false>(this, ___internal__method, domainId, tInfo);
}
// Autogenerated method: System.Runtime.Remoting.ObjRef.SerializeType
::ArrayW<uint8_t> System::Runtime::Remoting::ObjRef::SerializeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::SerializeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ObjRef.get_IsReferenceToWellKnow
bool System::Runtime::Remoting::ObjRef::get_IsReferenceToWellKnow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::get_IsReferenceToWellKnow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReferenceToWellKnow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ObjRef.get_ChannelInfo
::System::Runtime::Remoting::IChannelInfo* System::Runtime::Remoting::ObjRef::get_ChannelInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::get_ChannelInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ObjRef*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::IChannelInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ObjRef.get_EnvoyInfo
::System::Runtime::Remoting::IEnvoyInfo* System::Runtime::Remoting::ObjRef::get_EnvoyInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::get_EnvoyInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ObjRef*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::IEnvoyInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ObjRef.set_EnvoyInfo
void System::Runtime::Remoting::ObjRef::set_EnvoyInfo(::System::Runtime::Remoting::IEnvoyInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::set_EnvoyInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ObjRef*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.ObjRef.get_TypeInfo
::System::Runtime::Remoting::IRemotingTypeInfo* System::Runtime::Remoting::ObjRef::get_TypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::get_TypeInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ObjRef*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::IRemotingTypeInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ObjRef.set_TypeInfo
void System::Runtime::Remoting::ObjRef::set_TypeInfo(::System::Runtime::Remoting::IRemotingTypeInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::set_TypeInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ObjRef*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.ObjRef.get_URI
::StringW System::Runtime::Remoting::ObjRef::get_URI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::get_URI");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ObjRef*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ObjRef.set_URI
void System::Runtime::Remoting::ObjRef::set_URI(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::set_URI");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ObjRef*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.ObjRef.GetObjectData
void System::Runtime::Remoting::ObjRef::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ObjRef*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Runtime.Remoting.ObjRef.GetRealObject
::Il2CppObject* System::Runtime::Remoting::ObjRef::GetRealObject(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::GetRealObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ObjRef*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Runtime.Remoting.ObjRef.UpdateChannelInfo
void System::Runtime::Remoting::ObjRef::UpdateChannelInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::UpdateChannelInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateChannelInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ObjRef.get_ServerType
::System::Type* System::Runtime::Remoting::ObjRef::get_ServerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::get_ServerType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ObjRef..cctor
void System::Runtime::Remoting::ObjRef::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ObjRef::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "ObjRef", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.RemotingConfiguration
#include "System/Runtime/Remoting/RemotingConfiguration.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Remoting.ActivatedClientTypeEntry
#include "System/Runtime/Remoting/ActivatedClientTypeEntry.hpp"
// Including type: System.Runtime.Remoting.WellKnownClientTypeEntry
#include "System/Runtime/Remoting/WellKnownClientTypeEntry.hpp"
// Including type: System.Runtime.Remoting.ActivatedServiceTypeEntry
#include "System/Runtime/Remoting/ActivatedServiceTypeEntry.hpp"
// Including type: System.Runtime.Remoting.WellKnownServiceTypeEntry
#include "System/Runtime/Remoting/WellKnownServiceTypeEntry.hpp"
// Including type: System.Runtime.Remoting.ChannelData
#include "System/Runtime/Remoting/ChannelData.hpp"
// Including type: System.Runtime.Remoting.ProviderData
#include "System/Runtime/Remoting/ProviderData.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String applicationID
::StringW System::Runtime::Remoting::RemotingConfiguration::_get_applicationID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_get_applicationID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Runtime.Remoting", "RemotingConfiguration", "applicationID"));
}
// Autogenerated static field setter
// Set static field: static private System.String applicationID
void System::Runtime::Remoting::RemotingConfiguration::_set_applicationID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_set_applicationID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingConfiguration", "applicationID", value));
}
// Autogenerated static field getter
// Get static field: static private System.String applicationName
::StringW System::Runtime::Remoting::RemotingConfiguration::_get_applicationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_get_applicationName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Runtime.Remoting", "RemotingConfiguration", "applicationName"));
}
// Autogenerated static field setter
// Set static field: static private System.String applicationName
void System::Runtime::Remoting::RemotingConfiguration::_set_applicationName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_set_applicationName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingConfiguration", "applicationName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String processGuid
::StringW System::Runtime::Remoting::RemotingConfiguration::_get_processGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_get_processGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Runtime.Remoting", "RemotingConfiguration", "processGuid"));
}
// Autogenerated static field setter
// Set static field: static private System.String processGuid
void System::Runtime::Remoting::RemotingConfiguration::_set_processGuid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_set_processGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingConfiguration", "processGuid", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean defaultConfigRead
bool System::Runtime::Remoting::RemotingConfiguration::_get_defaultConfigRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_get_defaultConfigRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Runtime.Remoting", "RemotingConfiguration", "defaultConfigRead"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean defaultConfigRead
void System::Runtime::Remoting::RemotingConfiguration::_set_defaultConfigRead(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_set_defaultConfigRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingConfiguration", "defaultConfigRead", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean defaultDelayedConfigRead
bool System::Runtime::Remoting::RemotingConfiguration::_get_defaultDelayedConfigRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_get_defaultDelayedConfigRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Runtime.Remoting", "RemotingConfiguration", "defaultDelayedConfigRead"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean defaultDelayedConfigRead
void System::Runtime::Remoting::RemotingConfiguration::_set_defaultDelayedConfigRead(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_set_defaultDelayedConfigRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingConfiguration", "defaultDelayedConfigRead", value));
}
// Autogenerated static field getter
// Get static field: static private System.Runtime.Remoting.CustomErrorsModes _errorMode
::System::Runtime::Remoting::CustomErrorsModes System::Runtime::Remoting::RemotingConfiguration::_get__errorMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_get__errorMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::Remoting::CustomErrorsModes>("System.Runtime.Remoting", "RemotingConfiguration", "_errorMode"));
}
// Autogenerated static field setter
// Set static field: static private System.Runtime.Remoting.CustomErrorsModes _errorMode
void System::Runtime::Remoting::RemotingConfiguration::_set__errorMode(::System::Runtime::Remoting::CustomErrorsModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_set__errorMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingConfiguration", "_errorMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable wellKnownClientEntries
::System::Collections::Hashtable* System::Runtime::Remoting::RemotingConfiguration::_get_wellKnownClientEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_get_wellKnownClientEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Runtime.Remoting", "RemotingConfiguration", "wellKnownClientEntries"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable wellKnownClientEntries
void System::Runtime::Remoting::RemotingConfiguration::_set_wellKnownClientEntries(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_set_wellKnownClientEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingConfiguration", "wellKnownClientEntries", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable activatedClientEntries
::System::Collections::Hashtable* System::Runtime::Remoting::RemotingConfiguration::_get_activatedClientEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_get_activatedClientEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Runtime.Remoting", "RemotingConfiguration", "activatedClientEntries"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable activatedClientEntries
void System::Runtime::Remoting::RemotingConfiguration::_set_activatedClientEntries(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_set_activatedClientEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingConfiguration", "activatedClientEntries", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable wellKnownServiceEntries
::System::Collections::Hashtable* System::Runtime::Remoting::RemotingConfiguration::_get_wellKnownServiceEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_get_wellKnownServiceEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Runtime.Remoting", "RemotingConfiguration", "wellKnownServiceEntries"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable wellKnownServiceEntries
void System::Runtime::Remoting::RemotingConfiguration::_set_wellKnownServiceEntries(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_set_wellKnownServiceEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingConfiguration", "wellKnownServiceEntries", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable activatedServiceEntries
::System::Collections::Hashtable* System::Runtime::Remoting::RemotingConfiguration::_get_activatedServiceEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_get_activatedServiceEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Runtime.Remoting", "RemotingConfiguration", "activatedServiceEntries"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable activatedServiceEntries
void System::Runtime::Remoting::RemotingConfiguration::_set_activatedServiceEntries(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_set_activatedServiceEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingConfiguration", "activatedServiceEntries", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable channelTemplates
::System::Collections::Hashtable* System::Runtime::Remoting::RemotingConfiguration::_get_channelTemplates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_get_channelTemplates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Runtime.Remoting", "RemotingConfiguration", "channelTemplates"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable channelTemplates
void System::Runtime::Remoting::RemotingConfiguration::_set_channelTemplates(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_set_channelTemplates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingConfiguration", "channelTemplates", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable clientProviderTemplates
::System::Collections::Hashtable* System::Runtime::Remoting::RemotingConfiguration::_get_clientProviderTemplates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_get_clientProviderTemplates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Runtime.Remoting", "RemotingConfiguration", "clientProviderTemplates"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable clientProviderTemplates
void System::Runtime::Remoting::RemotingConfiguration::_set_clientProviderTemplates(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_set_clientProviderTemplates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingConfiguration", "clientProviderTemplates", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable serverProviderTemplates
::System::Collections::Hashtable* System::Runtime::Remoting::RemotingConfiguration::_get_serverProviderTemplates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_get_serverProviderTemplates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Runtime.Remoting", "RemotingConfiguration", "serverProviderTemplates"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable serverProviderTemplates
void System::Runtime::Remoting::RemotingConfiguration::_set_serverProviderTemplates(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::_set_serverProviderTemplates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingConfiguration", "serverProviderTemplates", value));
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration.get_ApplicationName
::StringW System::Runtime::Remoting::RemotingConfiguration::get_ApplicationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::get_ApplicationName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", "get_ApplicationName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration.set_ApplicationName
void System::Runtime::Remoting::RemotingConfiguration::set_ApplicationName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::set_ApplicationName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", "set_ApplicationName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration.get_ProcessId
::StringW System::Runtime::Remoting::RemotingConfiguration::get_ProcessId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::get_ProcessId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", "get_ProcessId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration.LoadDefaultDelayedChannels
void System::Runtime::Remoting::RemotingConfiguration::LoadDefaultDelayedChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::LoadDefaultDelayedChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", "LoadDefaultDelayedChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration.IsActivationAllowed
bool System::Runtime::Remoting::RemotingConfiguration::IsActivationAllowed(::System::Type* svrType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::IsActivationAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", "IsActivationAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(svrType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, svrType);
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration.IsRemotelyActivatedClientType
::System::Runtime::Remoting::ActivatedClientTypeEntry* System::Runtime::Remoting::RemotingConfiguration::IsRemotelyActivatedClientType(::System::Type* svrType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::IsRemotelyActivatedClientType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", "IsRemotelyActivatedClientType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(svrType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::ActivatedClientTypeEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, svrType);
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration.IsWellKnownClientType
::System::Runtime::Remoting::WellKnownClientTypeEntry* System::Runtime::Remoting::RemotingConfiguration::IsWellKnownClientType(::System::Type* svrType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::IsWellKnownClientType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", "IsWellKnownClientType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(svrType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::WellKnownClientTypeEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, svrType);
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType
void System::Runtime::Remoting::RemotingConfiguration::RegisterActivatedClientType(::System::Runtime::Remoting::ActivatedClientTypeEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::RegisterActivatedClientType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", "RegisterActivatedClientType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, entry);
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType
void System::Runtime::Remoting::RemotingConfiguration::RegisterActivatedServiceType(::System::Runtime::Remoting::ActivatedServiceTypeEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::RegisterActivatedServiceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", "RegisterActivatedServiceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, entry);
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType
void System::Runtime::Remoting::RemotingConfiguration::RegisterWellKnownClientType(::System::Runtime::Remoting::WellKnownClientTypeEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::RegisterWellKnownClientType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", "RegisterWellKnownClientType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, entry);
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType
void System::Runtime::Remoting::RemotingConfiguration::RegisterWellKnownServiceType(::System::Runtime::Remoting::WellKnownServiceTypeEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::RegisterWellKnownServiceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", "RegisterWellKnownServiceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, entry);
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration.RegisterChannelTemplate
void System::Runtime::Remoting::RemotingConfiguration::RegisterChannelTemplate(::System::Runtime::Remoting::ChannelData* channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::RegisterChannelTemplate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", "RegisterChannelTemplate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel);
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration.RegisterClientProviderTemplate
void System::Runtime::Remoting::RemotingConfiguration::RegisterClientProviderTemplate(::System::Runtime::Remoting::ProviderData* prov) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::RegisterClientProviderTemplate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", "RegisterClientProviderTemplate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prov)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prov);
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration.RegisterServerProviderTemplate
void System::Runtime::Remoting::RemotingConfiguration::RegisterServerProviderTemplate(::System::Runtime::Remoting::ProviderData* prov) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::RegisterServerProviderTemplate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", "RegisterServerProviderTemplate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prov)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prov);
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration.RegisterChannels
void System::Runtime::Remoting::RemotingConfiguration::RegisterChannels(::System::Collections::ArrayList* channels, bool onlyDelayed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::RegisterChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", "RegisterChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(onlyDelayed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channels, onlyDelayed);
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration.RegisterTypes
void System::Runtime::Remoting::RemotingConfiguration::RegisterTypes(::System::Collections::ArrayList* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::RegisterTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", "RegisterTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration.CustomErrorsEnabled
bool System::Runtime::Remoting::RemotingConfiguration::CustomErrorsEnabled(bool isLocalRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::CustomErrorsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", "CustomErrorsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLocalRequest)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isLocalRequest);
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration.SetCustomErrorsMode
void System::Runtime::Remoting::RemotingConfiguration::SetCustomErrorsMode(::StringW mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::SetCustomErrorsMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", "SetCustomErrorsMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: System.Runtime.Remoting.RemotingConfiguration..cctor
void System::Runtime::Remoting::RemotingConfiguration::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingConfiguration::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingConfiguration", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.ConfigHandler
#include "System/Runtime/Remoting/ConfigHandler.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Runtime.Remoting.ChannelData
#include "System/Runtime/Remoting/ChannelData.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Runtime.Remoting.ProviderData
#include "System/Runtime/Remoting/ProviderData.hpp"
// Including type: Mono.Xml.SmallXmlParser/IAttrList
#include "Mono/Xml/SmallXmlParser_IAttrList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList typeEntries
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Runtime::Remoting::ConfigHandler::dyn_typeEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::dyn_typeEntries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeEntries"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList channelInstances
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Runtime::Remoting::ConfigHandler::dyn_channelInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::dyn_channelInstances");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channelInstances"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Remoting.ChannelData currentChannel
[[deprecated("Use field access instead!")]] ::System::Runtime::Remoting::ChannelData*& System::Runtime::Remoting::ConfigHandler::dyn_currentChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::dyn_currentChannel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentChannel"))->offset;
  return *reinterpret_cast<::System::Runtime::Remoting::ChannelData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Stack currentProviderData
[[deprecated("Use field access instead!")]] ::System::Collections::Stack*& System::Runtime::Remoting::ConfigHandler::dyn_currentProviderData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::dyn_currentProviderData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentProviderData"))->offset;
  return *reinterpret_cast<::System::Collections::Stack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String currentClientUrl
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Remoting::ConfigHandler::dyn_currentClientUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::dyn_currentClientUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentClientUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String appName
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Remoting::ConfigHandler::dyn_appName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::dyn_appName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "appName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String currentXmlPath
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Remoting::ConfigHandler::dyn_currentXmlPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::dyn_currentXmlPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentXmlPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean onlyDelayedChannels
[[deprecated("Use field access instead!")]] bool& System::Runtime::Remoting::ConfigHandler::dyn_onlyDelayedChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::dyn_onlyDelayedChannels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onlyDelayedChannels"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ValidatePath
void System::Runtime::Remoting::ConfigHandler::ValidatePath(::StringW element, ::ArrayW<::StringW> paths) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::ValidatePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidatePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(paths)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element, paths);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.CheckPath
bool System::Runtime::Remoting::ConfigHandler::CheckPath(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::CheckPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.OnStartParsing
void System::Runtime::Remoting::ConfigHandler::OnStartParsing(::Mono::Xml::SmallXmlParser* parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::OnStartParsing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ConfigHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.OnProcessingInstruction
void System::Runtime::Remoting::ConfigHandler::OnProcessingInstruction(::StringW name, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::OnProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ConfigHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.OnIgnorableWhitespace
void System::Runtime::Remoting::ConfigHandler::OnIgnorableWhitespace(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::OnIgnorableWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ConfigHandler*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.OnStartElement
void System::Runtime::Remoting::ConfigHandler::OnStartElement(::StringW name, ::Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::OnStartElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ConfigHandler*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, attrs);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ParseElement
void System::Runtime::Remoting::ConfigHandler::ParseElement(::StringW name, ::Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::ParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(attrs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, attrs);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.OnEndElement
void System::Runtime::Remoting::ConfigHandler::OnEndElement(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::OnEndElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ConfigHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadCustomProviderData
void System::Runtime::Remoting::ConfigHandler::ReadCustomProviderData(::StringW name, ::Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::ReadCustomProviderData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCustomProviderData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(attrs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, attrs);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadLifetine
void System::Runtime::Remoting::ConfigHandler::ReadLifetine(::Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::ReadLifetine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLifetine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attrs);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ParseTime
::System::TimeSpan System::Runtime::Remoting::ConfigHandler::ParseTime(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::ParseTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadChannel
void System::Runtime::Remoting::ConfigHandler::ReadChannel(::Mono::Xml::SmallXmlParser::IAttrList* attrs, bool isTemplate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::ReadChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrs), ::il2cpp_utils::ExtractType(isTemplate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attrs, isTemplate);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadProvider
::System::Runtime::Remoting::ProviderData* System::Runtime::Remoting::ConfigHandler::ReadProvider(::StringW name, ::Mono::Xml::SmallXmlParser::IAttrList* attrs, bool isTemplate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::ReadProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(attrs), ::il2cpp_utils::ExtractType(isTemplate)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::ProviderData*, false>(this, ___internal__method, name, attrs, isTemplate);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadClientActivated
void System::Runtime::Remoting::ConfigHandler::ReadClientActivated(::Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::ReadClientActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadClientActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attrs);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadServiceActivated
void System::Runtime::Remoting::ConfigHandler::ReadServiceActivated(::Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::ReadServiceActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadServiceActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attrs);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadClientWellKnown
void System::Runtime::Remoting::ConfigHandler::ReadClientWellKnown(::Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::ReadClientWellKnown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadClientWellKnown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attrs);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadServiceWellKnown
void System::Runtime::Remoting::ConfigHandler::ReadServiceWellKnown(::Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::ReadServiceWellKnown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadServiceWellKnown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attrs);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadInteropXml
void System::Runtime::Remoting::ConfigHandler::ReadInteropXml(::Mono::Xml::SmallXmlParser::IAttrList* attrs, bool isElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::ReadInteropXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInteropXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrs), ::il2cpp_utils::ExtractType(isElement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attrs, isElement);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadPreload
void System::Runtime::Remoting::ConfigHandler::ReadPreload(::Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::ReadPreload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPreload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attrs);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.GetNotNull
::StringW System::Runtime::Remoting::ConfigHandler::GetNotNull(::Mono::Xml::SmallXmlParser::IAttrList* attrs, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::GetNotNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNotNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrs), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, attrs, name);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ExtractAssembly
::StringW System::Runtime::Remoting::ConfigHandler::ExtractAssembly(ByRef<::StringW> type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::ExtractAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExtractAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, byref(type));
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.OnChars
void System::Runtime::Remoting::ConfigHandler::OnChars(::StringW ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::OnChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ConfigHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.OnEndParsing
void System::Runtime::Remoting::ConfigHandler::OnEndParsing(::Mono::Xml::SmallXmlParser* parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ConfigHandler::OnEndParsing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ConfigHandler*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.ChannelData
#include "System/Runtime/Remoting/ChannelData.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String Ref
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Remoting::ChannelData::dyn_Ref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ChannelData::dyn_Ref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ref"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String Type
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Remoting::ChannelData::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ChannelData::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String Id
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Remoting::ChannelData::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ChannelData::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String DelayLoadAsClientChannel
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Remoting::ChannelData::dyn_DelayLoadAsClientChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ChannelData::dyn_DelayLoadAsClientChannel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DelayLoadAsClientChannel"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _serverProviders
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Runtime::Remoting::ChannelData::dyn__serverProviders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ChannelData::dyn__serverProviders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverProviders"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _clientProviders
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Runtime::Remoting::ChannelData::dyn__clientProviders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ChannelData::dyn__clientProviders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clientProviders"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _customProperties
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Runtime::Remoting::ChannelData::dyn__customProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ChannelData::dyn__customProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customProperties"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Remoting.ChannelData.get_ServerProviders
::System::Collections::ArrayList* System::Runtime::Remoting::ChannelData::get_ServerProviders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ChannelData::get_ServerProviders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerProviders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ChannelData.get_ClientProviders
::System::Collections::ArrayList* System::Runtime::Remoting::ChannelData::get_ClientProviders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ChannelData::get_ClientProviders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientProviders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ChannelData.get_CustomProperties
::System::Collections::Hashtable* System::Runtime::Remoting::ChannelData::get_CustomProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ChannelData::get_CustomProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ChannelData.CopyFrom
void System::Runtime::Remoting::ChannelData::CopyFrom(::System::Runtime::Remoting::ChannelData* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ChannelData::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.ProviderData
#include "System/Runtime/Remoting/ProviderData.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String Ref
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Remoting::ProviderData::dyn_Ref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ProviderData::dyn_Ref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ref"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String Type
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Remoting::ProviderData::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ProviderData::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String Id
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Remoting::ProviderData::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ProviderData::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable CustomProperties
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Runtime::Remoting::ProviderData::dyn_CustomProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ProviderData::dyn_CustomProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomProperties"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.IList CustomData
[[deprecated("Use field access instead!")]] ::System::Collections::IList*& System::Runtime::Remoting::ProviderData::dyn_CustomData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ProviderData::dyn_CustomData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomData"))->offset;
  return *reinterpret_cast<::System::Collections::IList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Remoting.ProviderData.CopyFrom
void System::Runtime::Remoting::ProviderData::CopyFrom(::System::Runtime::Remoting::ProviderData* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ProviderData::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.FormatterData
#include "System/Runtime/Remoting/FormatterData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.RemotingException
#include "System/Runtime/Remoting/RemotingException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.RemotingServices
#include "System/Runtime/Remoting/RemotingServices.hpp"
// Including type: System.Runtime.Remoting.RemotingServices/CACD
#include "System/Runtime/Remoting/RemotingServices_CACD.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
#include "System/Runtime/Serialization/Formatters/Binary/BinaryFormatter.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMethodReturnMessage
#include "System/Runtime/Remoting/Messaging/IMethodReturnMessage.hpp"
// Including type: System.MarshalByRefObject
#include "System/MarshalByRefObject.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMethodCallMessage
#include "System/Runtime/Remoting/Messaging/IMethodCallMessage.hpp"
// Including type: System.Runtime.Remoting.ObjRef
#include "System/Runtime/Remoting/ObjRef.hpp"
// Including type: System.Runtime.Remoting.Proxies.RealProxy
#include "System/Runtime/Remoting/Proxies/RealProxy.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMethodMessage
#include "System/Runtime/Remoting/Messaging/IMethodMessage.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Runtime.Remoting.ActivatedClientTypeEntry
#include "System/Runtime/Remoting/ActivatedClientTypeEntry.hpp"
// Including type: System.Runtime.Remoting.WellKnownClientTypeEntry
#include "System/Runtime/Remoting/WellKnownClientTypeEntry.hpp"
// Including type: System.Runtime.Remoting.Identity
#include "System/Runtime/Remoting/Identity.hpp"
// Including type: System.Runtime.Remoting.ClientIdentity
#include "System/Runtime/Remoting/ClientIdentity.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
// Including type: System.Runtime.Remoting.ClientActivatedIdentity
#include "System/Runtime/Remoting/ClientActivatedIdentity.hpp"
// Including type: System.Runtime.Remoting.ServerIdentity
#include "System/Runtime/Remoting/ServerIdentity.hpp"
// Including type: System.Runtime.Remoting.WellKnownObjectMode
#include "System/Runtime/Remoting/WellKnownObjectMode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable uri_hash
::System::Collections::Hashtable* System::Runtime::Remoting::RemotingServices::_get_uri_hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::_get_uri_hash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Runtime.Remoting", "RemotingServices", "uri_hash"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable uri_hash
void System::Runtime::Remoting::RemotingServices::_set_uri_hash(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::_set_uri_hash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingServices", "uri_hash", value));
}
// Autogenerated static field getter
// Get static field: static private System.Runtime.Serialization.Formatters.Binary.BinaryFormatter _serializationFormatter
::System::Runtime::Serialization::Formatters::Binary::BinaryFormatter* System::Runtime::Remoting::RemotingServices::_get__serializationFormatter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::_get__serializationFormatter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::Serialization::Formatters::Binary::BinaryFormatter*>("System.Runtime.Remoting", "RemotingServices", "_serializationFormatter"));
}
// Autogenerated static field setter
// Set static field: static private System.Runtime.Serialization.Formatters.Binary.BinaryFormatter _serializationFormatter
void System::Runtime::Remoting::RemotingServices::_set__serializationFormatter(::System::Runtime::Serialization::Formatters::Binary::BinaryFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::_set__serializationFormatter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingServices", "_serializationFormatter", value));
}
// Autogenerated static field getter
// Get static field: static private System.Runtime.Serialization.Formatters.Binary.BinaryFormatter _deserializationFormatter
::System::Runtime::Serialization::Formatters::Binary::BinaryFormatter* System::Runtime::Remoting::RemotingServices::_get__deserializationFormatter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::_get__deserializationFormatter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::Serialization::Formatters::Binary::BinaryFormatter*>("System.Runtime.Remoting", "RemotingServices", "_deserializationFormatter"));
}
// Autogenerated static field setter
// Set static field: static private System.Runtime.Serialization.Formatters.Binary.BinaryFormatter _deserializationFormatter
void System::Runtime::Remoting::RemotingServices::_set__deserializationFormatter(::System::Runtime::Serialization::Formatters::Binary::BinaryFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::_set__deserializationFormatter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingServices", "_deserializationFormatter", value));
}
// Autogenerated static field getter
// Get static field: static private System.String app_id
::StringW System::Runtime::Remoting::RemotingServices::_get_app_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::_get_app_id");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Runtime.Remoting", "RemotingServices", "app_id"));
}
// Autogenerated static field setter
// Set static field: static private System.String app_id
void System::Runtime::Remoting::RemotingServices::_set_app_id(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::_set_app_id");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingServices", "app_id", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object app_id_lock
::Il2CppObject* System::Runtime::Remoting::RemotingServices::_get_app_id_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::_get_app_id_lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Runtime.Remoting", "RemotingServices", "app_id_lock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object app_id_lock
void System::Runtime::Remoting::RemotingServices::_set_app_id_lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::_set_app_id_lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingServices", "app_id_lock", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 next_id
int System::Runtime::Remoting::RemotingServices::_get_next_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::_get_next_id");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Runtime.Remoting", "RemotingServices", "next_id"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 next_id
void System::Runtime::Remoting::RemotingServices::_set_next_id(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::_set_next_id");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingServices", "next_id", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Reflection.MethodInfo FieldSetterMethod
::System::Reflection::MethodInfo* System::Runtime::Remoting::RemotingServices::_get_FieldSetterMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::_get_FieldSetterMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("System.Runtime.Remoting", "RemotingServices", "FieldSetterMethod"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Reflection.MethodInfo FieldSetterMethod
void System::Runtime::Remoting::RemotingServices::_set_FieldSetterMethod(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::_set_FieldSetterMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingServices", "FieldSetterMethod", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Reflection.MethodInfo FieldGetterMethod
::System::Reflection::MethodInfo* System::Runtime::Remoting::RemotingServices::_get_FieldGetterMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::_get_FieldGetterMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("System.Runtime.Remoting", "RemotingServices", "FieldGetterMethod"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Reflection.MethodInfo FieldGetterMethod
void System::Runtime::Remoting::RemotingServices::_set_FieldGetterMethod(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::_set_FieldGetterMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "RemotingServices", "FieldGetterMethod", value));
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices..cctor
void System::Runtime::Remoting::RemotingServices::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.InternalExecute
::Il2CppObject* System::Runtime::Remoting::RemotingServices::InternalExecute(::System::Reflection::MethodBase* method, ::Il2CppObject* obj, ::ArrayW<::Il2CppObject*> parameters, ByRef<::ArrayW<::Il2CppObject*>> out_args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::InternalExecute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "InternalExecute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::Il2CppObject*>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, obj, parameters, byref(out_args));
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.GetVirtualMethod
::System::Reflection::MethodBase* System::Runtime::Remoting::RemotingServices::GetVirtualMethod(::System::Type* type, ::System::Reflection::MethodBase* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::GetVirtualMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "GetVirtualMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodBase*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, method);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.IsTransparentProxy
bool System::Runtime::Remoting::RemotingServices::IsTransparentProxy(::Il2CppObject* proxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::IsTransparentProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "IsTransparentProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxy)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxy);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.InternalExecuteMessage
::System::Runtime::Remoting::Messaging::IMethodReturnMessage* System::Runtime::Remoting::RemotingServices::InternalExecuteMessage(::System::MarshalByRefObject* target, ::System::Runtime::Remoting::Messaging::IMethodCallMessage* reqMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::InternalExecuteMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "InternalExecuteMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(reqMsg)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::IMethodReturnMessage*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, reqMsg);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.Connect
::Il2CppObject* System::Runtime::Remoting::RemotingServices::Connect(::System::Type* classToProxy, ::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(classToProxy), ::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, classToProxy, url);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.Connect
::Il2CppObject* System::Runtime::Remoting::RemotingServices::Connect(::System::Type* classToProxy, ::StringW url, ::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(classToProxy), ::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, classToProxy, url, data);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri
::System::Type* System::Runtime::Remoting::RemotingServices::GetServerTypeForUri(::StringW URI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::GetServerTypeForUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "GetServerTypeForUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(URI)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, URI);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.Unmarshal
::Il2CppObject* System::Runtime::Remoting::RemotingServices::Unmarshal(::System::Runtime::Remoting::ObjRef* objectRef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::Unmarshal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "Unmarshal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectRef)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectRef);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.Unmarshal
::Il2CppObject* System::Runtime::Remoting::RemotingServices::Unmarshal(::System::Runtime::Remoting::ObjRef* objectRef, bool fRefine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::Unmarshal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "Unmarshal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectRef), ::il2cpp_utils::ExtractType(fRefine)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectRef, fRefine);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.Marshal
::System::Runtime::Remoting::ObjRef* System::Runtime::Remoting::RemotingServices::Marshal(::System::MarshalByRefObject* Obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::Marshal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "Marshal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::ObjRef*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, Obj);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.Marshal
::System::Runtime::Remoting::ObjRef* System::Runtime::Remoting::RemotingServices::Marshal(::System::MarshalByRefObject* Obj, ::StringW ObjURI, ::System::Type* RequestedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::Marshal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "Marshal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Obj), ::il2cpp_utils::ExtractType(ObjURI), ::il2cpp_utils::ExtractType(RequestedType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::ObjRef*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, Obj, ObjURI, RequestedType);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.NewUri
::StringW System::Runtime::Remoting::RemotingServices::NewUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::NewUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "NewUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.GetRealProxy
::System::Runtime::Remoting::Proxies::RealProxy* System::Runtime::Remoting::RemotingServices::GetRealProxy(::Il2CppObject* proxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::GetRealProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "GetRealProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxy)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Proxies::RealProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxy);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage
::System::Reflection::MethodBase* System::Runtime::Remoting::RemotingServices::GetMethodBaseFromMethodMessage(::System::Runtime::Remoting::Messaging::IMethodMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::GetMethodBaseFromMethodMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "GetMethodBaseFromMethodMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodBase*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromName
::System::Reflection::MethodBase* System::Runtime::Remoting::RemotingServices::GetMethodBaseFromName(::System::Type* type, ::StringW methodName, ::ArrayW<::System::Type*> signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::GetMethodBaseFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "GetMethodBaseFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodBase*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, methodName, signature);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.FindInterfaceMethod
::System::Reflection::MethodBase* System::Runtime::Remoting::RemotingServices::FindInterfaceMethod(::System::Type* type, ::StringW methodName, ::ArrayW<::System::Type*> signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::FindInterfaceMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "FindInterfaceMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodBase*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, methodName, signature);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.GetObjectData
void System::Runtime::Remoting::RemotingServices::GetObjectData(::Il2CppObject* obj, ::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, info, context);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.IsOneWay
bool System::Runtime::Remoting::RemotingServices::IsOneWay(::System::Reflection::MethodBase* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::IsOneWay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "IsOneWay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.CreateClientProxy
::Il2CppObject* System::Runtime::Remoting::RemotingServices::CreateClientProxy(::System::Runtime::Remoting::ActivatedClientTypeEntry* entry, ::ArrayW<::Il2CppObject*> activationAttributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::CreateClientProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "CreateClientProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry), ::il2cpp_utils::ExtractType(activationAttributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, entry, activationAttributes);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.CreateClientProxy
::Il2CppObject* System::Runtime::Remoting::RemotingServices::CreateClientProxy(::System::Type* objectType, ::StringW url, ::ArrayW<::Il2CppObject*> activationAttributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::CreateClientProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "CreateClientProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(activationAttributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectType, url, activationAttributes);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.CreateClientProxy
::Il2CppObject* System::Runtime::Remoting::RemotingServices::CreateClientProxy(::System::Runtime::Remoting::WellKnownClientTypeEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::CreateClientProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "CreateClientProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, entry);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.CreateClientProxyForContextBound
::Il2CppObject* System::Runtime::Remoting::RemotingServices::CreateClientProxyForContextBound(::System::Type* type, ::ArrayW<::Il2CppObject*> activationAttributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::CreateClientProxyForContextBound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "CreateClientProxyForContextBound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(activationAttributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, activationAttributes);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.GetIdentityForUri
::System::Runtime::Remoting::Identity* System::Runtime::Remoting::RemotingServices::GetIdentityForUri(::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::GetIdentityForUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "GetIdentityForUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Identity*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.RemoveAppNameFromUri
::StringW System::Runtime::Remoting::RemotingServices::RemoveAppNameFromUri(::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::RemoveAppNameFromUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "RemoveAppNameFromUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.GetOrCreateClientIdentity
::System::Runtime::Remoting::ClientIdentity* System::Runtime::Remoting::RemotingServices::GetOrCreateClientIdentity(::System::Runtime::Remoting::ObjRef* objRef, ::System::Type* proxyType, ByRef<::Il2CppObject*> clientProxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::GetOrCreateClientIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "GetOrCreateClientIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objRef), ::il2cpp_utils::ExtractType(proxyType), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::ClientIdentity*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objRef, proxyType, byref(clientProxy));
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.GetClientChannelSinkChain
::System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::RemotingServices::GetClientChannelSinkChain(::StringW url, ::Il2CppObject* channelData, ByRef<::StringW> objectUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::GetClientChannelSinkChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "GetClientChannelSinkChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(channelData), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::IMessageSink*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, channelData, byref(objectUri));
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.CreateContextBoundObjectIdentity
::System::Runtime::Remoting::ClientActivatedIdentity* System::Runtime::Remoting::RemotingServices::CreateContextBoundObjectIdentity(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::CreateContextBoundObjectIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "CreateContextBoundObjectIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::ClientActivatedIdentity*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectType);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.CreateClientActivatedServerIdentity
::System::Runtime::Remoting::ClientActivatedIdentity* System::Runtime::Remoting::RemotingServices::CreateClientActivatedServerIdentity(::System::MarshalByRefObject* realObject, ::System::Type* objectType, ::StringW objectUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::CreateClientActivatedServerIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "CreateClientActivatedServerIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realObject), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(objectUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::ClientActivatedIdentity*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, realObject, objectType, objectUri);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.CreateWellKnownServerIdentity
::System::Runtime::Remoting::ServerIdentity* System::Runtime::Remoting::RemotingServices::CreateWellKnownServerIdentity(::System::Type* objectType, ::StringW objectUri, ::System::Runtime::Remoting::WellKnownObjectMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::CreateWellKnownServerIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "CreateWellKnownServerIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(objectUri), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::ServerIdentity*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectType, objectUri, mode);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.RegisterServerIdentity
void System::Runtime::Remoting::RemotingServices::RegisterServerIdentity(::System::Runtime::Remoting::ServerIdentity* identity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::RegisterServerIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "RegisterServerIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, identity);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.GetProxyForRemoteObject
::Il2CppObject* System::Runtime::Remoting::RemotingServices::GetProxyForRemoteObject(::System::Runtime::Remoting::ObjRef* objref, ::System::Type* classToProxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::GetProxyForRemoteObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "GetProxyForRemoteObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objref), ::il2cpp_utils::ExtractType(classToProxy)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objref, classToProxy);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.GetRemoteObject
::Il2CppObject* System::Runtime::Remoting::RemotingServices::GetRemoteObject(::System::Runtime::Remoting::ObjRef* objRef, ::System::Type* proxyType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::GetRemoteObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "GetRemoteObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objRef), ::il2cpp_utils::ExtractType(proxyType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objRef, proxyType);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.SerializeCallData
::ArrayW<uint8_t> System::Runtime::Remoting::RemotingServices::SerializeCallData(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::SerializeCallData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "SerializeCallData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.DeserializeCallData
::Il2CppObject* System::Runtime::Remoting::RemotingServices::DeserializeCallData(::ArrayW<uint8_t> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::DeserializeCallData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "DeserializeCallData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.SerializeExceptionData
::ArrayW<uint8_t> System::Runtime::Remoting::RemotingServices::SerializeExceptionData(::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::SerializeExceptionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "SerializeExceptionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ex);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.RegisterInternalChannels
void System::Runtime::Remoting::RemotingServices::RegisterInternalChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::RegisterInternalChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "RegisterInternalChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.DisposeIdentity
void System::Runtime::Remoting::RemotingServices::DisposeIdentity(::System::Runtime::Remoting::Identity* ident) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::DisposeIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "DisposeIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ident)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ident);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.GetMessageTargetIdentity
::System::Runtime::Remoting::Identity* System::Runtime::Remoting::RemotingServices::GetMessageTargetIdentity(::System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::GetMessageTargetIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "GetMessageTargetIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Identity*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.SetMessageTargetIdentity
void System::Runtime::Remoting::RemotingServices::SetMessageTargetIdentity(::System::Runtime::Remoting::Messaging::IMessage* msg, ::System::Runtime::Remoting::Identity* ident) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::SetMessageTargetIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "SetMessageTargetIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(ident)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg, ident);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.UpdateOutArgObject
bool System::Runtime::Remoting::RemotingServices::UpdateOutArgObject(::System::Reflection::ParameterInfo* pi, ::Il2CppObject* local, ::Il2CppObject* remote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::UpdateOutArgObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "UpdateOutArgObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pi), ::il2cpp_utils::ExtractType(local), ::il2cpp_utils::ExtractType(remote)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pi, local, remote);
}
// Autogenerated method: System.Runtime.Remoting.RemotingServices.GetNormalizedUri
::StringW System::Runtime::Remoting::RemotingServices::GetNormalizedUri(::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::GetNormalizedUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "RemotingServices", "GetNormalizedUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.RemotingServices/CACD
#include "System/Runtime/Remoting/RemotingServices_CACD.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object d
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Runtime::Remoting::RemotingServices::CACD::dyn_d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::CACD::dyn_d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object c
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Runtime::Remoting::RemotingServices::CACD::dyn_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::RemotingServices::CACD::dyn_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.ServerIdentity
#include "System/Runtime/Remoting/ServerIdentity.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.MarshalByRefObject
#include "System/MarshalByRefObject.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
// Including type: System.Runtime.Remoting.Contexts.Context
#include "System/Runtime/Remoting/Contexts/Context.hpp"
// Including type: System.Runtime.Remoting.Lifetime.Lease
#include "System/Runtime/Remoting/Lifetime/Lease.hpp"
// Including type: System.Runtime.Remoting.Lifetime.ILease
#include "System/Runtime/Remoting/Lifetime/ILease.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageCtrl
#include "System/Runtime/Remoting/Messaging/IMessageCtrl.hpp"
// Including type: System.Runtime.Remoting.ObjRef
#include "System/Runtime/Remoting/ObjRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Type _objectType
[[deprecated("Use field access instead!")]] ::System::Type*& System::Runtime::Remoting::ServerIdentity::dyn__objectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ServerIdentity::dyn__objectType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.MarshalByRefObject _serverObject
[[deprecated("Use field access instead!")]] ::System::MarshalByRefObject*& System::Runtime::Remoting::ServerIdentity::dyn__serverObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ServerIdentity::dyn__serverObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverObject"))->offset;
  return *reinterpret_cast<::System::MarshalByRefObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Runtime.Remoting.Messaging.IMessageSink _serverSink
[[deprecated("Use field access instead!")]] ::System::Runtime::Remoting::Messaging::IMessageSink*& System::Runtime::Remoting::ServerIdentity::dyn__serverSink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ServerIdentity::dyn__serverSink");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverSink"))->offset;
  return *reinterpret_cast<::System::Runtime::Remoting::Messaging::IMessageSink**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Runtime.Remoting.Contexts.Context _context
[[deprecated("Use field access instead!")]] ::System::Runtime::Remoting::Contexts::Context*& System::Runtime::Remoting::ServerIdentity::dyn__context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ServerIdentity::dyn__context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_context"))->offset;
  return *reinterpret_cast<::System::Runtime::Remoting::Contexts::Context**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Runtime.Remoting.Lifetime.Lease _lease
[[deprecated("Use field access instead!")]] ::System::Runtime::Remoting::Lifetime::Lease*& System::Runtime::Remoting::ServerIdentity::dyn__lease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ServerIdentity::dyn__lease");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lease"))->offset;
  return *reinterpret_cast<::System::Runtime::Remoting::Lifetime::Lease**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Remoting.ServerIdentity.get_ObjectType
::System::Type* System::Runtime::Remoting::ServerIdentity::get_ObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ServerIdentity::get_ObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ServerIdentity.StartTrackingLifetime
void System::Runtime::Remoting::ServerIdentity::StartTrackingLifetime(::System::Runtime::Remoting::Lifetime::ILease* lease) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ServerIdentity::StartTrackingLifetime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTrackingLifetime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lease)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lease);
}
// Autogenerated method: System.Runtime.Remoting.ServerIdentity.OnLifetimeExpired
void System::Runtime::Remoting::ServerIdentity::OnLifetimeExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ServerIdentity::OnLifetimeExpired");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ServerIdentity*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ServerIdentity.AttachServerObject
void System::Runtime::Remoting::ServerIdentity::AttachServerObject(::System::MarshalByRefObject* serverObject, ::System::Runtime::Remoting::Contexts::Context* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ServerIdentity::AttachServerObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachServerObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverObject), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serverObject, context);
}
// Autogenerated method: System.Runtime.Remoting.ServerIdentity.get_Lease
::System::Runtime::Remoting::Lifetime::Lease* System::Runtime::Remoting::ServerIdentity::get_Lease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ServerIdentity::get_Lease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Lease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Lifetime::Lease*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ServerIdentity.get_Context
::System::Runtime::Remoting::Contexts::Context* System::Runtime::Remoting::ServerIdentity::get_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ServerIdentity::get_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Contexts::Context*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ServerIdentity.set_Context
void System::Runtime::Remoting::ServerIdentity::set_Context(::System::Runtime::Remoting::Contexts::Context* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ServerIdentity::set_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.ServerIdentity.SyncObjectProcessMessage
::System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::ServerIdentity::SyncObjectProcessMessage(::System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ServerIdentity::SyncObjectProcessMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ServerIdentity*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.ServerIdentity.AsyncObjectProcessMessage
::System::Runtime::Remoting::Messaging::IMessageCtrl* System::Runtime::Remoting::ServerIdentity::AsyncObjectProcessMessage(::System::Runtime::Remoting::Messaging::IMessage* msg, ::System::Runtime::Remoting::Messaging::IMessageSink* replySink) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ServerIdentity::AsyncObjectProcessMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ServerIdentity*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::IMessageCtrl*, false>(this, ___internal__method, msg, replySink);
}
// Autogenerated method: System.Runtime.Remoting.ServerIdentity.DisposeServerObject
void System::Runtime::Remoting::ServerIdentity::DisposeServerObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ServerIdentity::DisposeServerObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeServerObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ServerIdentity.CreateObjRef
::System::Runtime::Remoting::ObjRef* System::Runtime::Remoting::ServerIdentity::CreateObjRef(::System::Type* requestedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ServerIdentity::CreateObjRef");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::Identity*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::ObjRef*, false>(this, ___internal__method, requestedType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.ClientActivatedIdentity
#include "System/Runtime/Remoting/ClientActivatedIdentity.hpp"
// Including type: System.MarshalByRefObject
#include "System/MarshalByRefObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageCtrl
#include "System/Runtime/Remoting/Messaging/IMessageCtrl.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.MarshalByRefObject _targetThis
[[deprecated("Use field access instead!")]] ::System::MarshalByRefObject*& System::Runtime::Remoting::ClientActivatedIdentity::dyn__targetThis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ClientActivatedIdentity::dyn__targetThis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetThis"))->offset;
  return *reinterpret_cast<::System::MarshalByRefObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Remoting.ClientActivatedIdentity.GetServerObject
::System::MarshalByRefObject* System::Runtime::Remoting::ClientActivatedIdentity::GetServerObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ClientActivatedIdentity::GetServerObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServerObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::MarshalByRefObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ClientActivatedIdentity.SetClientProxy
void System::Runtime::Remoting::ClientActivatedIdentity::SetClientProxy(::System::MarshalByRefObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ClientActivatedIdentity::SetClientProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetClientProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Runtime.Remoting.ClientActivatedIdentity.OnLifetimeExpired
void System::Runtime::Remoting::ClientActivatedIdentity::OnLifetimeExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ClientActivatedIdentity::OnLifetimeExpired");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ServerIdentity*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.ClientActivatedIdentity.SyncObjectProcessMessage
::System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::ClientActivatedIdentity::SyncObjectProcessMessage(::System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ClientActivatedIdentity::SyncObjectProcessMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ServerIdentity*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.ClientActivatedIdentity.AsyncObjectProcessMessage
::System::Runtime::Remoting::Messaging::IMessageCtrl* System::Runtime::Remoting::ClientActivatedIdentity::AsyncObjectProcessMessage(::System::Runtime::Remoting::Messaging::IMessage* msg, ::System::Runtime::Remoting::Messaging::IMessageSink* replySink) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::ClientActivatedIdentity::AsyncObjectProcessMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ServerIdentity*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::IMessageCtrl*, false>(this, ___internal__method, msg, replySink);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.SingletonIdentity
#include "System/Runtime/Remoting/SingletonIdentity.hpp"
// Including type: System.MarshalByRefObject
#include "System/MarshalByRefObject.hpp"
// Including type: System.Runtime.Remoting.Contexts.Context
#include "System/Runtime/Remoting/Contexts/Context.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageCtrl
#include "System/Runtime/Remoting/Messaging/IMessageCtrl.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.SingletonIdentity.GetServerObject
::System::MarshalByRefObject* System::Runtime::Remoting::SingletonIdentity::GetServerObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SingletonIdentity::GetServerObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServerObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::MarshalByRefObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.SingletonIdentity.SyncObjectProcessMessage
::System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::SingletonIdentity::SyncObjectProcessMessage(::System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SingletonIdentity::SyncObjectProcessMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ServerIdentity*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.SingletonIdentity.AsyncObjectProcessMessage
::System::Runtime::Remoting::Messaging::IMessageCtrl* System::Runtime::Remoting::SingletonIdentity::AsyncObjectProcessMessage(::System::Runtime::Remoting::Messaging::IMessage* msg, ::System::Runtime::Remoting::Messaging::IMessageSink* replySink) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SingletonIdentity::AsyncObjectProcessMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ServerIdentity*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::IMessageCtrl*, false>(this, ___internal__method, msg, replySink);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.SingleCallIdentity
#include "System/Runtime/Remoting/SingleCallIdentity.hpp"
// Including type: System.Runtime.Remoting.Contexts.Context
#include "System/Runtime/Remoting/Contexts/Context.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageCtrl
#include "System/Runtime/Remoting/Messaging/IMessageCtrl.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.SingleCallIdentity.SyncObjectProcessMessage
::System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::SingleCallIdentity::SyncObjectProcessMessage(::System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SingleCallIdentity::SyncObjectProcessMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ServerIdentity*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.SingleCallIdentity.AsyncObjectProcessMessage
::System::Runtime::Remoting::Messaging::IMessageCtrl* System::Runtime::Remoting::SingleCallIdentity::AsyncObjectProcessMessage(::System::Runtime::Remoting::Messaging::IMessage* msg, ::System::Runtime::Remoting::Messaging::IMessageSink* replySink) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SingleCallIdentity::AsyncObjectProcessMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::ServerIdentity*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::IMessageCtrl*, false>(this, ___internal__method, msg, replySink);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.DisposerReplySink
#include "System/Runtime/Remoting/DisposerReplySink.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageCtrl
#include "System/Runtime/Remoting/Messaging/IMessageCtrl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Remoting.Messaging.IMessageSink _next
[[deprecated("Use field access instead!")]] ::System::Runtime::Remoting::Messaging::IMessageSink*& System::Runtime::Remoting::DisposerReplySink::dyn__next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::DisposerReplySink::dyn__next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_next"))->offset;
  return *reinterpret_cast<::System::Runtime::Remoting::Messaging::IMessageSink**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IDisposable _disposable
[[deprecated("Use field access instead!")]] ::System::IDisposable*& System::Runtime::Remoting::DisposerReplySink::dyn__disposable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::DisposerReplySink::dyn__disposable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposable"))->offset;
  return *reinterpret_cast<::System::IDisposable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Remoting.DisposerReplySink.SyncProcessMessage
::System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::DisposerReplySink::SyncProcessMessage(::System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::DisposerReplySink::SyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::DisposerReplySink*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.DisposerReplySink.AsyncProcessMessage
::System::Runtime::Remoting::Messaging::IMessageCtrl* System::Runtime::Remoting::DisposerReplySink::AsyncProcessMessage(::System::Runtime::Remoting::Messaging::IMessage* msg, ::System::Runtime::Remoting::Messaging::IMessageSink* replySink) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::DisposerReplySink::AsyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::Remoting::DisposerReplySink*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Messaging::IMessageCtrl*, false>(this, ___internal__method, msg, replySink);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.SoapServices
#include "System/Runtime/Remoting/SoapServices.hpp"
// Including type: System.Runtime.Remoting.SoapServices/TypeInfo
#include "System/Runtime/Remoting/SoapServices_TypeInfo.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _xmlTypes
::System::Collections::Hashtable* System::Runtime::Remoting::SoapServices::_get__xmlTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::_get__xmlTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Runtime.Remoting", "SoapServices", "_xmlTypes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _xmlTypes
void System::Runtime::Remoting::SoapServices::_set__xmlTypes(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::_set__xmlTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "SoapServices", "_xmlTypes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _xmlElements
::System::Collections::Hashtable* System::Runtime::Remoting::SoapServices::_get__xmlElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::_get__xmlElements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Runtime.Remoting", "SoapServices", "_xmlElements"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _xmlElements
void System::Runtime::Remoting::SoapServices::_set__xmlElements(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::_set__xmlElements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "SoapServices", "_xmlElements", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _soapActions
::System::Collections::Hashtable* System::Runtime::Remoting::SoapServices::_get__soapActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::_get__soapActions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Runtime.Remoting", "SoapServices", "_soapActions"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _soapActions
void System::Runtime::Remoting::SoapServices::_set__soapActions(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::_set__soapActions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "SoapServices", "_soapActions", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _soapActionsMethods
::System::Collections::Hashtable* System::Runtime::Remoting::SoapServices::_get__soapActionsMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::_get__soapActionsMethods");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Runtime.Remoting", "SoapServices", "_soapActionsMethods"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _soapActionsMethods
void System::Runtime::Remoting::SoapServices::_set__soapActionsMethods(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::_set__soapActionsMethods");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "SoapServices", "_soapActionsMethods", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _typeInfos
::System::Collections::Hashtable* System::Runtime::Remoting::SoapServices::_get__typeInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::_get__typeInfos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Runtime.Remoting", "SoapServices", "_typeInfos"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _typeInfos
void System::Runtime::Remoting::SoapServices::_set__typeInfos(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::_set__typeInfos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "SoapServices", "_typeInfos", value));
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.get_XmlNsForClrTypeWithAssembly
::StringW System::Runtime::Remoting::SoapServices::get_XmlNsForClrTypeWithAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::get_XmlNsForClrTypeWithAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "get_XmlNsForClrTypeWithAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.get_XmlNsForClrTypeWithNs
::StringW System::Runtime::Remoting::SoapServices::get_XmlNsForClrTypeWithNs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::get_XmlNsForClrTypeWithNs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "get_XmlNsForClrTypeWithNs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.get_XmlNsForClrTypeWithNsAndAssembly
::StringW System::Runtime::Remoting::SoapServices::get_XmlNsForClrTypeWithNsAndAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::get_XmlNsForClrTypeWithNsAndAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "get_XmlNsForClrTypeWithNsAndAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace
::StringW System::Runtime::Remoting::SoapServices::CodeXmlNamespaceForClrTypeNamespace(::StringW typeNamespace, ::StringW assemblyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::CodeXmlNamespaceForClrTypeNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "CodeXmlNamespaceForClrTypeNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeNamespace), ::il2cpp_utils::ExtractType(assemblyName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeNamespace, assemblyName);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.GetNameKey
::StringW System::Runtime::Remoting::SoapServices::GetNameKey(::StringW name, ::StringW namspace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::GetNameKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "GetNameKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(namspace)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, namspace);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.GetAssemblyName
::StringW System::Runtime::Remoting::SoapServices::GetAssemblyName(::System::Reflection::MethodBase* mb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::GetAssemblyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "GetAssemblyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mb)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mb);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType
bool System::Runtime::Remoting::SoapServices::GetXmlElementForInteropType(::System::Type* type, ByRef<::StringW> xmlElement, ByRef<::StringW> xmlNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::GetXmlElementForInteropType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "GetXmlElementForInteropType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, byref(xmlElement), byref(xmlNamespace));
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall
::StringW System::Runtime::Remoting::SoapServices::GetXmlNamespaceForMethodCall(::System::Reflection::MethodBase* mb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::GetXmlNamespaceForMethodCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "GetXmlNamespaceForMethodCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mb)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mb);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse
::StringW System::Runtime::Remoting::SoapServices::GetXmlNamespaceForMethodResponse(::System::Reflection::MethodBase* mb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::GetXmlNamespaceForMethodResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "GetXmlNamespaceForMethodResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mb)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mb);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType
bool System::Runtime::Remoting::SoapServices::GetXmlTypeForInteropType(::System::Type* type, ByRef<::StringW> xmlType, ByRef<::StringW> xmlTypeNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::GetXmlTypeForInteropType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "GetXmlTypeForInteropType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, byref(xmlType), byref(xmlTypeNamespace));
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.PreLoad
void System::Runtime::Remoting::SoapServices::PreLoad(::System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::PreLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "PreLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assembly);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.PreLoad
void System::Runtime::Remoting::SoapServices::PreLoad(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::PreLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "PreLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement
void System::Runtime::Remoting::SoapServices::RegisterInteropXmlElement(::StringW xmlElement, ::StringW xmlNamespace, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::RegisterInteropXmlElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "RegisterInteropXmlElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlElement), ::il2cpp_utils::ExtractType(xmlNamespace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xmlElement, xmlNamespace, type);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.RegisterInteropXmlType
void System::Runtime::Remoting::SoapServices::RegisterInteropXmlType(::StringW xmlType, ::StringW xmlTypeNamespace, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::RegisterInteropXmlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "RegisterInteropXmlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlType), ::il2cpp_utils::ExtractType(xmlTypeNamespace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xmlType, xmlTypeNamespace, type);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.EncodeNs
::StringW System::Runtime::Remoting::SoapServices::EncodeNs(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::EncodeNs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "EncodeNs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ns);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices..cctor
void System::Runtime::Remoting::SoapServices::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.SoapServices/TypeInfo
#include "System/Runtime/Remoting/SoapServices_TypeInfo.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Hashtable Attributes
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Runtime::Remoting::SoapServices::TypeInfo::dyn_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::TypeInfo::dyn_Attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Hashtable Elements
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Runtime::Remoting::SoapServices::TypeInfo::dyn_Elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Remoting::SoapServices::TypeInfo::dyn_Elements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Elements"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
