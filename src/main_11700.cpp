// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass6_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass6_0.hpp"
// Including type: Mono.Security.Interface.MonoLocalCertificateSelectionCallback
#include "Mono/Security/Interface/MonoLocalCertificateSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Mono.Security.Interface.MonoLocalCertificateSelectionCallback callback
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoLocalCertificateSelectionCallback*& Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass6_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass6_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoLocalCertificateSelectionCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass6_0.<MonoToInternal>b__0
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass6_0::$MonoToInternal$b__0(::StringW t, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* lc, ::System::Security::Cryptography::X509Certificates::X509Certificate* rc, ::ArrayW<::StringW> ai) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass6_0::<MonoToInternal>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<MonoToInternal>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(lc), ::il2cpp_utils::ExtractType(rc), ::il2cpp_utils::ExtractType(ai)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, t, lc, rc, ai);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Http.NtlmSession
#include "Mono/Http/NtlmSession.hpp"
// Including type: Mono.Security.Protocol.Ntlm.MessageBase
#include "Mono/Security/Protocol/Ntlm/MessageBase.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Ntlm.MessageBase message
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Ntlm::MessageBase*& Mono::Http::NtlmSession::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmSession::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Ntlm::MessageBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Http.NtlmSession.Authenticate
::System::Net::Authorization* Mono::Http::NtlmSession::Authenticate(::StringW challenge, ::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmSession::Authenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Authenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(this, ___internal__method, challenge, webRequest, credentials);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Http.NtlmClient
#include "Mono/Http/NtlmClient.hpp"
// Including type: Mono.Http.NtlmClient/<>c
#include "Mono/Http/NtlmClient_--c.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: Mono.Http.NtlmSession
#include "Mono/Http/NtlmSession.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Net.HttpWebRequest,Mono.Http.NtlmSession> cache
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Net::HttpWebRequest*, ::Mono::Http::NtlmSession*>* Mono::Http::NtlmClient::_get_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::_get_cache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Net::HttpWebRequest*, ::Mono::Http::NtlmSession*>*>("Mono.Http", "NtlmClient", "cache")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Net.HttpWebRequest,Mono.Http.NtlmSession> cache
void Mono::Http::NtlmClient::_set_cache(::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Net::HttpWebRequest*, ::Mono::Http::NtlmSession*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::_set_cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Http", "NtlmClient", "cache", value));
}
// Autogenerated method: Mono.Http.NtlmClient.Authenticate
::System::Net::Authorization* Mono::Http::NtlmClient::Authenticate(::StringW challenge, ::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::Authenticate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Http::NtlmClient*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(this, ___internal__method, challenge, webRequest, credentials);
}
// Autogenerated method: Mono.Http.NtlmClient.PreAuthenticate
::System::Net::Authorization* Mono::Http::NtlmClient::PreAuthenticate(::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Http::NtlmClient*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(this, ___internal__method, webRequest, credentials);
}
// Autogenerated method: Mono.Http.NtlmClient.get_AuthenticationType
::StringW Mono::Http::NtlmClient::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::get_AuthenticationType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Http::NtlmClient*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Http.NtlmClient.get_CanPreAuthenticate
bool Mono::Http::NtlmClient::get_CanPreAuthenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::get_CanPreAuthenticate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Http::NtlmClient*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Http.NtlmClient..cctor
void Mono::Http::NtlmClient::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Http", "NtlmClient", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Http.NtlmClient/<>c
#include "Mono/Http/NtlmClient_--c.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: Mono.Http.NtlmSession
#include "Mono/Http/NtlmSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Mono.Http.NtlmClient/<>c <>9
::Mono::Http::NtlmClient::$$c* Mono::Http::NtlmClient::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Mono::Http::NtlmClient::$$c*>("Mono.Http", "NtlmClient/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Http.NtlmClient/<>c <>9
void Mono::Http::NtlmClient::$$c::_set_$$9(::Mono::Http::NtlmClient::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Mono.Http", "NtlmClient/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback<System.Net.HttpWebRequest,Mono.Http.NtlmSession> <>9__1_0
typename ::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Net::HttpWebRequest*, ::Mono::Http::NtlmSession*>::CreateValueCallback* Mono::Http::NtlmClient::$$c::_get_$$9__1_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::$$c::_get_$$9__1_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Net::HttpWebRequest*, ::Mono::Http::NtlmSession*>::CreateValueCallback*>("Mono.Http", "NtlmClient/<>c", "<>9__1_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback<System.Net.HttpWebRequest,Mono.Http.NtlmSession> <>9__1_0
void Mono::Http::NtlmClient::$$c::_set_$$9__1_0(typename ::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Net::HttpWebRequest*, ::Mono::Http::NtlmSession*>::CreateValueCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::$$c::_set_$$9__1_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Mono.Http", "NtlmClient/<>c", "<>9__1_0", value)));
}
// Autogenerated method: Mono.Http.NtlmClient/<>c..cctor
void Mono::Http::NtlmClient::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Http", "NtlmClient/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Http.NtlmClient/<>c.<Authenticate>b__1_0
::Mono::Http::NtlmSession* Mono::Http::NtlmClient::$$c::$Authenticate$b__1_0(::System::Net::HttpWebRequest* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::$$c::<Authenticate>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Authenticate>b__1_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Http::NtlmSession*, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Internal.Cryptography.OidLookup
#include "Internal/Cryptography/OidLookup.hpp"
// Including type: Internal.Cryptography.OidLookup/<>c
#include "Internal/Cryptography/OidLookup_--c.hpp"
// Including type: System.Collections.Concurrent.ConcurrentDictionary`2
#include "System/Collections/Concurrent/ConcurrentDictionary_2.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Security.Cryptography.OidGroup
#include "System/Security/Cryptography/OidGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Concurrent.ConcurrentDictionary`2<System.String,System.String> s_lateBoundOidToFriendlyName
::System::Collections::Concurrent::ConcurrentDictionary_2<::StringW, ::StringW>* Internal::Cryptography::OidLookup::_get_s_lateBoundOidToFriendlyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::_get_s_lateBoundOidToFriendlyName");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Concurrent::ConcurrentDictionary_2<::StringW, ::StringW>*>("Internal.Cryptography", "OidLookup", "s_lateBoundOidToFriendlyName")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Concurrent.ConcurrentDictionary`2<System.String,System.String> s_lateBoundOidToFriendlyName
void Internal::Cryptography::OidLookup::_set_s_lateBoundOidToFriendlyName(::System::Collections::Concurrent::ConcurrentDictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::_set_s_lateBoundOidToFriendlyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Cryptography", "OidLookup", "s_lateBoundOidToFriendlyName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Concurrent.ConcurrentDictionary`2<System.String,System.String> s_lateBoundFriendlyNameToOid
::System::Collections::Concurrent::ConcurrentDictionary_2<::StringW, ::StringW>* Internal::Cryptography::OidLookup::_get_s_lateBoundFriendlyNameToOid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::_get_s_lateBoundFriendlyNameToOid");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Concurrent::ConcurrentDictionary_2<::StringW, ::StringW>*>("Internal.Cryptography", "OidLookup", "s_lateBoundFriendlyNameToOid")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Concurrent.ConcurrentDictionary`2<System.String,System.String> s_lateBoundFriendlyNameToOid
void Internal::Cryptography::OidLookup::_set_s_lateBoundFriendlyNameToOid(::System::Collections::Concurrent::ConcurrentDictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::_set_s_lateBoundFriendlyNameToOid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Cryptography", "OidLookup", "s_lateBoundFriendlyNameToOid", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> s_friendlyNameToOid
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Internal::Cryptography::OidLookup::_get_s_friendlyNameToOid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::_get_s_friendlyNameToOid");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>("Internal.Cryptography", "OidLookup", "s_friendlyNameToOid")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> s_friendlyNameToOid
void Internal::Cryptography::OidLookup::_set_s_friendlyNameToOid(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::_set_s_friendlyNameToOid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Cryptography", "OidLookup", "s_friendlyNameToOid", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> s_oidToFriendlyName
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Internal::Cryptography::OidLookup::_get_s_oidToFriendlyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::_get_s_oidToFriendlyName");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>("Internal.Cryptography", "OidLookup", "s_oidToFriendlyName")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> s_oidToFriendlyName
void Internal::Cryptography::OidLookup::_set_s_oidToFriendlyName(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::_set_s_oidToFriendlyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Cryptography", "OidLookup", "s_oidToFriendlyName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> s_compatOids
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Internal::Cryptography::OidLookup::_get_s_compatOids() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::_get_s_compatOids");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>("Internal.Cryptography", "OidLookup", "s_compatOids")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> s_compatOids
void Internal::Cryptography::OidLookup::_set_s_compatOids(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::_set_s_compatOids");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Cryptography", "OidLookup", "s_compatOids", value));
}
// Autogenerated method: Internal.Cryptography.OidLookup.ToFriendlyName
::StringW Internal::Cryptography::OidLookup::ToFriendlyName(::StringW oid, ::System::Security::Cryptography::OidGroup oidGroup, bool fallBackToAllGroups) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::ToFriendlyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Cryptography", "OidLookup", "ToFriendlyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid), ::il2cpp_utils::ExtractType(oidGroup), ::il2cpp_utils::ExtractType(fallBackToAllGroups)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oid, oidGroup, fallBackToAllGroups);
}
// Autogenerated method: Internal.Cryptography.OidLookup.ToOid
::StringW Internal::Cryptography::OidLookup::ToOid(::StringW friendlyName, ::System::Security::Cryptography::OidGroup oidGroup, bool fallBackToAllGroups) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::ToOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Cryptography", "OidLookup", "ToOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(friendlyName), ::il2cpp_utils::ExtractType(oidGroup), ::il2cpp_utils::ExtractType(fallBackToAllGroups)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, friendlyName, oidGroup, fallBackToAllGroups);
}
// Autogenerated method: Internal.Cryptography.OidLookup.ShouldUseCache
bool Internal::Cryptography::OidLookup::ShouldUseCache(::System::Security::Cryptography::OidGroup oidGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::ShouldUseCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Cryptography", "OidLookup", "ShouldUseCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oidGroup)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oidGroup);
}
// Autogenerated method: Internal.Cryptography.OidLookup.NativeOidToFriendlyName
::StringW Internal::Cryptography::OidLookup::NativeOidToFriendlyName(::StringW oid, ::System::Security::Cryptography::OidGroup oidGroup, bool fallBackToAllGroups) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::NativeOidToFriendlyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Cryptography", "OidLookup", "NativeOidToFriendlyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid), ::il2cpp_utils::ExtractType(oidGroup), ::il2cpp_utils::ExtractType(fallBackToAllGroups)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oid, oidGroup, fallBackToAllGroups);
}
// Autogenerated method: Internal.Cryptography.OidLookup.NativeFriendlyNameToOid
::StringW Internal::Cryptography::OidLookup::NativeFriendlyNameToOid(::StringW friendlyName, ::System::Security::Cryptography::OidGroup oidGroup, bool fallBackToAllGroups) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::NativeFriendlyNameToOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Cryptography", "OidLookup", "NativeFriendlyNameToOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(friendlyName), ::il2cpp_utils::ExtractType(oidGroup), ::il2cpp_utils::ExtractType(fallBackToAllGroups)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, friendlyName, oidGroup, fallBackToAllGroups);
}
// Autogenerated method: Internal.Cryptography.OidLookup..cctor
void Internal::Cryptography::OidLookup::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Cryptography", "OidLookup", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Internal.Cryptography.OidLookup/<>c
#include "Internal/Cryptography/OidLookup_--c.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Internal.Cryptography.OidLookup/<>c <>9
::Internal::Cryptography::OidLookup::$$c* Internal::Cryptography::OidLookup::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Internal::Cryptography::OidLookup::$$c*>("Internal.Cryptography", "OidLookup/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Internal.Cryptography.OidLookup/<>c <>9
void Internal::Cryptography::OidLookup::$$c::_set_$$9(::Internal::Cryptography::OidLookup::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Internal.Cryptography", "OidLookup/<>c", "<>9", value)));
}
// Autogenerated method: Internal.Cryptography.OidLookup/<>c..cctor
void Internal::Cryptography::OidLookup::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Cryptography", "OidLookup/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Internal.Cryptography.OidLookup/<>c.<.cctor>b__10_0
::StringW Internal::Cryptography::OidLookup::$$c::$_cctor$b__10_0(::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW> kvp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::$$c::<.cctor>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kvp)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, kvp);
}
// Autogenerated method: Internal.Cryptography.OidLookup/<>c.<.cctor>b__10_1
::StringW Internal::Cryptography::OidLookup::$$c::$_cctor$b__10_1(::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW> kvp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::OidLookup::$$c::<.cctor>b__10_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__10_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kvp)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, kvp);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Internal.Cryptography.Pal.GeneralNameType
#include "Internal/Cryptography/Pal/GeneralNameType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Internal.Cryptography.Pal.GeneralNameType OtherName
::Internal::Cryptography::Pal::GeneralNameType Internal::Cryptography::Pal::GeneralNameType::_get_OtherName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_get_OtherName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Internal::Cryptography::Pal::GeneralNameType>("Internal.Cryptography.Pal", "GeneralNameType", "OtherName"));
}
// Autogenerated static field setter
// Set static field: static public Internal.Cryptography.Pal.GeneralNameType OtherName
void Internal::Cryptography::Pal::GeneralNameType::_set_OtherName(::Internal::Cryptography::Pal::GeneralNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_set_OtherName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Cryptography.Pal", "GeneralNameType", "OtherName", value));
}
// Autogenerated static field getter
// Get static field: static public Internal.Cryptography.Pal.GeneralNameType Rfc822Name
::Internal::Cryptography::Pal::GeneralNameType Internal::Cryptography::Pal::GeneralNameType::_get_Rfc822Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_get_Rfc822Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Internal::Cryptography::Pal::GeneralNameType>("Internal.Cryptography.Pal", "GeneralNameType", "Rfc822Name"));
}
// Autogenerated static field setter
// Set static field: static public Internal.Cryptography.Pal.GeneralNameType Rfc822Name
void Internal::Cryptography::Pal::GeneralNameType::_set_Rfc822Name(::Internal::Cryptography::Pal::GeneralNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_set_Rfc822Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Cryptography.Pal", "GeneralNameType", "Rfc822Name", value));
}
// Autogenerated static field getter
// Get static field: static public Internal.Cryptography.Pal.GeneralNameType Email
::Internal::Cryptography::Pal::GeneralNameType Internal::Cryptography::Pal::GeneralNameType::_get_Email() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_get_Email");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Internal::Cryptography::Pal::GeneralNameType>("Internal.Cryptography.Pal", "GeneralNameType", "Email"));
}
// Autogenerated static field setter
// Set static field: static public Internal.Cryptography.Pal.GeneralNameType Email
void Internal::Cryptography::Pal::GeneralNameType::_set_Email(::Internal::Cryptography::Pal::GeneralNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_set_Email");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Cryptography.Pal", "GeneralNameType", "Email", value));
}
// Autogenerated static field getter
// Get static field: static public Internal.Cryptography.Pal.GeneralNameType DnsName
::Internal::Cryptography::Pal::GeneralNameType Internal::Cryptography::Pal::GeneralNameType::_get_DnsName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_get_DnsName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Internal::Cryptography::Pal::GeneralNameType>("Internal.Cryptography.Pal", "GeneralNameType", "DnsName"));
}
// Autogenerated static field setter
// Set static field: static public Internal.Cryptography.Pal.GeneralNameType DnsName
void Internal::Cryptography::Pal::GeneralNameType::_set_DnsName(::Internal::Cryptography::Pal::GeneralNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_set_DnsName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Cryptography.Pal", "GeneralNameType", "DnsName", value));
}
// Autogenerated static field getter
// Get static field: static public Internal.Cryptography.Pal.GeneralNameType X400Address
::Internal::Cryptography::Pal::GeneralNameType Internal::Cryptography::Pal::GeneralNameType::_get_X400Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_get_X400Address");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Internal::Cryptography::Pal::GeneralNameType>("Internal.Cryptography.Pal", "GeneralNameType", "X400Address"));
}
// Autogenerated static field setter
// Set static field: static public Internal.Cryptography.Pal.GeneralNameType X400Address
void Internal::Cryptography::Pal::GeneralNameType::_set_X400Address(::Internal::Cryptography::Pal::GeneralNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_set_X400Address");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Cryptography.Pal", "GeneralNameType", "X400Address", value));
}
// Autogenerated static field getter
// Get static field: static public Internal.Cryptography.Pal.GeneralNameType DirectoryName
::Internal::Cryptography::Pal::GeneralNameType Internal::Cryptography::Pal::GeneralNameType::_get_DirectoryName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_get_DirectoryName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Internal::Cryptography::Pal::GeneralNameType>("Internal.Cryptography.Pal", "GeneralNameType", "DirectoryName"));
}
// Autogenerated static field setter
// Set static field: static public Internal.Cryptography.Pal.GeneralNameType DirectoryName
void Internal::Cryptography::Pal::GeneralNameType::_set_DirectoryName(::Internal::Cryptography::Pal::GeneralNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_set_DirectoryName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Cryptography.Pal", "GeneralNameType", "DirectoryName", value));
}
// Autogenerated static field getter
// Get static field: static public Internal.Cryptography.Pal.GeneralNameType EdiPartyName
::Internal::Cryptography::Pal::GeneralNameType Internal::Cryptography::Pal::GeneralNameType::_get_EdiPartyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_get_EdiPartyName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Internal::Cryptography::Pal::GeneralNameType>("Internal.Cryptography.Pal", "GeneralNameType", "EdiPartyName"));
}
// Autogenerated static field setter
// Set static field: static public Internal.Cryptography.Pal.GeneralNameType EdiPartyName
void Internal::Cryptography::Pal::GeneralNameType::_set_EdiPartyName(::Internal::Cryptography::Pal::GeneralNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_set_EdiPartyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Cryptography.Pal", "GeneralNameType", "EdiPartyName", value));
}
// Autogenerated static field getter
// Get static field: static public Internal.Cryptography.Pal.GeneralNameType UniformResourceIdentifier
::Internal::Cryptography::Pal::GeneralNameType Internal::Cryptography::Pal::GeneralNameType::_get_UniformResourceIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_get_UniformResourceIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Internal::Cryptography::Pal::GeneralNameType>("Internal.Cryptography.Pal", "GeneralNameType", "UniformResourceIdentifier"));
}
// Autogenerated static field setter
// Set static field: static public Internal.Cryptography.Pal.GeneralNameType UniformResourceIdentifier
void Internal::Cryptography::Pal::GeneralNameType::_set_UniformResourceIdentifier(::Internal::Cryptography::Pal::GeneralNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_set_UniformResourceIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Cryptography.Pal", "GeneralNameType", "UniformResourceIdentifier", value));
}
// Autogenerated static field getter
// Get static field: static public Internal.Cryptography.Pal.GeneralNameType IPAddress
::Internal::Cryptography::Pal::GeneralNameType Internal::Cryptography::Pal::GeneralNameType::_get_IPAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_get_IPAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Internal::Cryptography::Pal::GeneralNameType>("Internal.Cryptography.Pal", "GeneralNameType", "IPAddress"));
}
// Autogenerated static field setter
// Set static field: static public Internal.Cryptography.Pal.GeneralNameType IPAddress
void Internal::Cryptography::Pal::GeneralNameType::_set_IPAddress(::Internal::Cryptography::Pal::GeneralNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_set_IPAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Cryptography.Pal", "GeneralNameType", "IPAddress", value));
}
// Autogenerated static field getter
// Get static field: static public Internal.Cryptography.Pal.GeneralNameType RegisteredId
::Internal::Cryptography::Pal::GeneralNameType Internal::Cryptography::Pal::GeneralNameType::_get_RegisteredId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_get_RegisteredId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Internal::Cryptography::Pal::GeneralNameType>("Internal.Cryptography.Pal", "GeneralNameType", "RegisteredId"));
}
// Autogenerated static field setter
// Set static field: static public Internal.Cryptography.Pal.GeneralNameType RegisteredId
void Internal::Cryptography::Pal::GeneralNameType::_set_RegisteredId(::Internal::Cryptography::Pal::GeneralNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::_set_RegisteredId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Cryptography.Pal", "GeneralNameType", "RegisteredId", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Internal::Cryptography::Pal::GeneralNameType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::GeneralNameType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Internal.Cryptography.Pal.CertificateData
#include "Internal/Cryptography/Pal/CertificateData.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
#include "System/Security/Cryptography/X509Certificates/X500DistinguishedName.hpp"
// Including type: Internal.Cryptography.Pal.CertificateData/<ReadReverseRdns>d__21
#include "Internal/Cryptography/Pal/CertificateData_-ReadReverseRdns-d__21.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Extension
#include "System/Security/Cryptography/X509Certificates/X509Extension.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509NameType
#include "System/Security/Cryptography/X509Certificates/X509NameType.hpp"
// Including type: Internal.Cryptography.Pal.GeneralNameType
#include "Internal/Cryptography/Pal/GeneralNameType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Byte[] RawData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Internal::Cryptography::Pal::CertificateData::dyn_RawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::dyn_RawData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RawData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] SubjectPublicKeyInfo
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Internal::Cryptography::Pal::CertificateData::dyn_SubjectPublicKeyInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::dyn_SubjectPublicKeyInfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SubjectPublicKeyInfo"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Version
[[deprecated("Use field access instead!")]] int& Internal::Cryptography::Pal::CertificateData::dyn_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::dyn_Version");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] SerialNumber
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Internal::Cryptography::Pal::CertificateData::dyn_SerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::dyn_SerialNumber");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SerialNumber"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Internal.Cryptography.Pal.CertificateData/AlgorithmIdentifier TbsSignature
[[deprecated("Use field access instead!")]] ::Internal::Cryptography::Pal::CertificateData::AlgorithmIdentifier& Internal::Cryptography::Pal::CertificateData::dyn_TbsSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::dyn_TbsSignature");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TbsSignature"))->offset;
  return *reinterpret_cast<::Internal::Cryptography::Pal::CertificateData::AlgorithmIdentifier*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Security.Cryptography.X509Certificates.X500DistinguishedName Issuer
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X500DistinguishedName*& Internal::Cryptography::Pal::CertificateData::dyn_Issuer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::dyn_Issuer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Issuer"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X500DistinguishedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.DateTime NotBefore
[[deprecated("Use field access instead!")]] ::System::DateTime& Internal::Cryptography::Pal::CertificateData::dyn_NotBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::dyn_NotBefore");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NotBefore"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.DateTime NotAfter
[[deprecated("Use field access instead!")]] ::System::DateTime& Internal::Cryptography::Pal::CertificateData::dyn_NotAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::dyn_NotAfter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NotAfter"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Security.Cryptography.X509Certificates.X500DistinguishedName Subject
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X500DistinguishedName*& Internal::Cryptography::Pal::CertificateData::dyn_Subject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::dyn_Subject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Subject"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X500DistinguishedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Internal.Cryptography.Pal.CertificateData/AlgorithmIdentifier PublicKeyAlgorithm
[[deprecated("Use field access instead!")]] ::Internal::Cryptography::Pal::CertificateData::AlgorithmIdentifier& Internal::Cryptography::Pal::CertificateData::dyn_PublicKeyAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::dyn_PublicKeyAlgorithm");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublicKeyAlgorithm"))->offset;
  return *reinterpret_cast<::Internal::Cryptography::Pal::CertificateData::AlgorithmIdentifier*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] PublicKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Internal::Cryptography::Pal::CertificateData::dyn_PublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::dyn_PublicKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublicKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] IssuerUniqueId
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Internal::Cryptography::Pal::CertificateData::dyn_IssuerUniqueId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::dyn_IssuerUniqueId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IssuerUniqueId"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] SubjectUniqueId
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Internal::Cryptography::Pal::CertificateData::dyn_SubjectUniqueId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::dyn_SubjectUniqueId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SubjectUniqueId"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Security.Cryptography.X509Certificates.X509Extension> Extensions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509Extension*>*& Internal::Cryptography::Pal::CertificateData::dyn_Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::dyn_Extensions");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Extensions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509Extension*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Internal.Cryptography.Pal.CertificateData/AlgorithmIdentifier SignatureAlgorithm
[[deprecated("Use field access instead!")]] ::Internal::Cryptography::Pal::CertificateData::AlgorithmIdentifier& Internal::Cryptography::Pal::CertificateData::dyn_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::dyn_SignatureAlgorithm");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SignatureAlgorithm"))->offset;
  return *reinterpret_cast<::Internal::Cryptography::Pal::CertificateData::AlgorithmIdentifier*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] SignatureValue
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Internal::Cryptography::Pal::CertificateData::dyn_SignatureValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::dyn_SignatureValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SignatureValue"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Internal.Cryptography.Pal.CertificateData..ctor
Internal::Cryptography::Pal::CertificateData::CertificateData(::ArrayW<uint8_t> rawData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rawData);
}
// Autogenerated method: Internal.Cryptography.Pal.CertificateData.GetNameInfo
::StringW Internal::Cryptography::Pal::CertificateData::GetNameInfo(::System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::GetNameInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetNameInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameType), ::il2cpp_utils::ExtractType(forIssuer)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, nameType, forIssuer);
}
// Autogenerated method: Internal.Cryptography.Pal.CertificateData.GetSimpleNameInfo
::StringW Internal::Cryptography::Pal::CertificateData::GetSimpleNameInfo(::System::Security::Cryptography::X509Certificates::X500DistinguishedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::GetSimpleNameInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Cryptography.Pal", "CertificateData", "GetSimpleNameInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Internal.Cryptography.Pal.CertificateData.FindAltNameMatch
::StringW Internal::Cryptography::Pal::CertificateData::FindAltNameMatch(::ArrayW<uint8_t> extensionBytes, ::Internal::Cryptography::Pal::GeneralNameType matchType, ::StringW otherOid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::FindAltNameMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Cryptography.Pal", "CertificateData", "FindAltNameMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extensionBytes), ::il2cpp_utils::ExtractType(matchType), ::il2cpp_utils::ExtractType(otherOid)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extensionBytes, matchType, otherOid);
}
// Autogenerated method: Internal.Cryptography.Pal.CertificateData.ReadReverseRdns
::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>>* Internal::Cryptography::Pal::CertificateData::ReadReverseRdns(::System::Security::Cryptography::X509Certificates::X500DistinguishedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::ReadReverseRdns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Cryptography.Pal", "CertificateData", "ReadReverseRdns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Internal.Cryptography.Pal.CertificateData/<ReadReverseRdns>d__21
#include "Internal/Cryptography/Pal/CertificateData_-ReadReverseRdns-d__21.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
#include "System/Security/Cryptography/X509Certificates/X500DistinguishedName.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: System.Security.Cryptography.DerSequenceReader
#include "System/Security/Cryptography/DerSequenceReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.KeyValuePair`2<System.String,System.String> <>2__current
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>& Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X500DistinguishedName name
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X500DistinguishedName*& Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X500DistinguishedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Security.Cryptography.X509Certificates.X500DistinguishedName <>3__name
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X500DistinguishedName*& Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::dyn_$$3__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::dyn_$$3__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__name"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X500DistinguishedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Stack`1<System.Security.Cryptography.DerSequenceReader> <rdnReaders>5__2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::System::Security::Cryptography::DerSequenceReader*>*& Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::dyn_$rdnReaders$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::dyn_$rdnReaders$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rdnReaders>5__2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::System::Security::Cryptography::DerSequenceReader*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.DerSequenceReader <rdnReader>5__3
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::DerSequenceReader*& Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::dyn_$rdnReader$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::dyn_$rdnReader$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rdnReader>5__3"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::DerSequenceReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Internal.Cryptography.Pal.CertificateData/<ReadReverseRdns>d__21.System.IDisposable.Dispose
void Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Internal.Cryptography.Pal.CertificateData/<ReadReverseRdns>d__21.MoveNext
bool Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Internal.Cryptography.Pal.CertificateData/<ReadReverseRdns>d__21.System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.String>>.get_Current
::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW> Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::System_Collections_Generic_IEnumerator$System_Collections_Generic_KeyValuePair$System_String_System_String$$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.String>>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Internal.Cryptography.Pal.CertificateData/<ReadReverseRdns>d__21.System.Collections.IEnumerator.Reset
void Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Internal.Cryptography.Pal.CertificateData/<ReadReverseRdns>d__21.System.Collections.IEnumerator.get_Current
::Il2CppObject* Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Internal.Cryptography.Pal.CertificateData/<ReadReverseRdns>d__21.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>>* Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::System_Collections_Generic_IEnumerable$System_Collections_Generic_KeyValuePair$System_String_System_String$$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>>*, false>(this, ___internal__method);
}
// Autogenerated method: Internal.Cryptography.Pal.CertificateData/<ReadReverseRdns>d__21.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Internal::Cryptography::Pal::CertificateData::$ReadReverseRdns$d__21*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.NativeMethods
#include "Microsoft/Win32/NativeMethods.hpp"
// Including type: System.Runtime.InteropServices.HandleRef
#include "System/Runtime/InteropServices/HandleRef.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeWaitHandle
#include "Microsoft/Win32/SafeHandles/SafeWaitHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeProcessHandle
#include "Microsoft/Win32/SafeHandles/SafeProcessHandle.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.NativeMethods.DuplicateHandle
bool Microsoft::Win32::NativeMethods::DuplicateHandle(::System::Runtime::InteropServices::HandleRef hSourceProcessHandle, ::System::Runtime::InteropServices::SafeHandle* hSourceHandle, ::System::Runtime::InteropServices::HandleRef hTargetProcess, ByRef<::Microsoft::Win32::SafeHandles::SafeWaitHandle*> targetHandle, int dwDesiredAccess, bool bInheritHandle, int dwOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::DuplicateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "DuplicateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hSourceProcessHandle), ::il2cpp_utils::ExtractType(hSourceHandle), ::il2cpp_utils::ExtractType(hTargetProcess), ::il2cpp_utils::ExtractIndependentType<::Microsoft::Win32::SafeHandles::SafeWaitHandle*&>(), ::il2cpp_utils::ExtractType(dwDesiredAccess), ::il2cpp_utils::ExtractType(bInheritHandle), ::il2cpp_utils::ExtractType(dwOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hSourceProcessHandle, hSourceHandle, hTargetProcess, byref(targetHandle), dwDesiredAccess, bInheritHandle, dwOptions);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.DuplicateHandle
bool Microsoft::Win32::NativeMethods::DuplicateHandle(::System::Runtime::InteropServices::HandleRef hSourceProcessHandle, ::System::Runtime::InteropServices::HandleRef hSourceHandle, ::System::Runtime::InteropServices::HandleRef hTargetProcess, ByRef<::Microsoft::Win32::SafeHandles::SafeProcessHandle*> targetHandle, int dwDesiredAccess, bool bInheritHandle, int dwOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::DuplicateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "DuplicateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hSourceProcessHandle), ::il2cpp_utils::ExtractType(hSourceHandle), ::il2cpp_utils::ExtractType(hTargetProcess), ::il2cpp_utils::ExtractIndependentType<::Microsoft::Win32::SafeHandles::SafeProcessHandle*&>(), ::il2cpp_utils::ExtractType(dwDesiredAccess), ::il2cpp_utils::ExtractType(bInheritHandle), ::il2cpp_utils::ExtractType(dwOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hSourceProcessHandle, hSourceHandle, hTargetProcess, byref(targetHandle), dwDesiredAccess, bInheritHandle, dwOptions);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetCurrentProcess
::System::IntPtr Microsoft::Win32::NativeMethods::GetCurrentProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::GetCurrentProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetCurrentProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetExitCodeProcess
bool Microsoft::Win32::NativeMethods::GetExitCodeProcess(::System::IntPtr processHandle, ByRef<int> exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::GetExitCodeProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetExitCodeProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processHandle), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, processHandle, byref(exitCode));
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetExitCodeProcess
bool Microsoft::Win32::NativeMethods::GetExitCodeProcess(::Microsoft::Win32::SafeHandles::SafeProcessHandle* processHandle, ByRef<int> exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::GetExitCodeProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetExitCodeProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processHandle), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, processHandle, byref(exitCode));
}
// Autogenerated method: Microsoft.Win32.NativeMethods.TerminateProcess
bool Microsoft::Win32::NativeMethods::TerminateProcess(::System::IntPtr processHandle, int exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::TerminateProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "TerminateProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processHandle), ::il2cpp_utils::ExtractType(exitCode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, processHandle, exitCode);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.TerminateProcess
bool Microsoft::Win32::NativeMethods::TerminateProcess(::Microsoft::Win32::SafeHandles::SafeProcessHandle* processHandle, int exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::TerminateProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "TerminateProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processHandle), ::il2cpp_utils::ExtractType(exitCode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, processHandle, exitCode);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetCurrentProcessId
int Microsoft::Win32::NativeMethods::GetCurrentProcessId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::GetCurrentProcessId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetCurrentProcessId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.CloseProcess
bool Microsoft::Win32::NativeMethods::CloseProcess(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::CloseProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "CloseProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeGssNameHandle
#include "Microsoft/Win32/SafeHandles/SafeGssNameHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeGssNameHandle.CreateUser
::Microsoft::Win32::SafeHandles::SafeGssNameHandle* Microsoft::Win32::SafeHandles::SafeGssNameHandle::CreateUser(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeGssNameHandle::CreateUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32.SafeHandles", "SafeGssNameHandle", "CreateUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::SafeHandles::SafeGssNameHandle*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeGssNameHandle.CreatePrincipal
::Microsoft::Win32::SafeHandles::SafeGssNameHandle* Microsoft::Win32::SafeHandles::SafeGssNameHandle::CreatePrincipal(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeGssNameHandle::CreatePrincipal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32.SafeHandles", "SafeGssNameHandle", "CreatePrincipal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::SafeHandles::SafeGssNameHandle*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeGssNameHandle.get_IsInvalid
bool Microsoft::Win32::SafeHandles::SafeGssNameHandle::get_IsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeGssNameHandle::get_IsInvalid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeGssNameHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeGssNameHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeGssNameHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeGssCredHandle
#include "Microsoft/Win32/SafeHandles/SafeGssCredHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeGssCredHandle.Create
::Microsoft::Win32::SafeHandles::SafeGssCredHandle* Microsoft::Win32::SafeHandles::SafeGssCredHandle::Create(::StringW username, ::StringW password, bool isNtlmOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeGssCredHandle::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32.SafeHandles", "SafeGssCredHandle", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(username), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(isNtlmOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::SafeHandles::SafeGssCredHandle*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, username, password, isNtlmOnly);
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeGssCredHandle.get_IsInvalid
bool Microsoft::Win32::SafeHandles::SafeGssCredHandle::get_IsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeGssCredHandle::get_IsInvalid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeGssCredHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeGssCredHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeGssCredHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeGssContextHandle
#include "Microsoft/Win32/SafeHandles/SafeGssContextHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeGssContextHandle.get_IsInvalid
bool Microsoft::Win32::SafeHandles::SafeGssContextHandle::get_IsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeGssContextHandle::get_IsInvalid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeGssContextHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeGssContextHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeGssContextHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeProcessHandle
#include "Microsoft/Win32/SafeHandles/SafeProcessHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static Microsoft.Win32.SafeHandles.SafeProcessHandle InvalidHandle
::Microsoft::Win32::SafeHandles::SafeProcessHandle* Microsoft::Win32::SafeHandles::SafeProcessHandle::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeProcessHandle::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::SafeHandles::SafeProcessHandle*>("Microsoft.Win32.SafeHandles", "SafeProcessHandle", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static Microsoft.Win32.SafeHandles.SafeProcessHandle InvalidHandle
void Microsoft::Win32::SafeHandles::SafeProcessHandle::_set_InvalidHandle(::Microsoft::Win32::SafeHandles::SafeProcessHandle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeProcessHandle::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32.SafeHandles", "SafeProcessHandle", "InvalidHandle", value));
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeProcessHandle..cctor
void Microsoft::Win32::SafeHandles::SafeProcessHandle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeProcessHandle::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32.SafeHandles", "SafeProcessHandle", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeProcessHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeProcessHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeProcessHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IPv4AddressHelper
#include "System/IPv4AddressHelper.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IPv4AddressHelper.ParseHostNumber
int System::IPv4AddressHelper::ParseHostNumber(::System::ReadOnlySpan_1<::Il2CppChar> str, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::ParseHostNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "ParseHostNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, start, end);
}
// Autogenerated method: System.IPv4AddressHelper.IsValid
bool System::IPv4AddressHelper::IsValid(::Il2CppChar* name, int start, ByRef<int> end, bool allowIPv6, bool notImplicitFile, bool unknownScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(allowIPv6), ::il2cpp_utils::ExtractType(notImplicitFile), ::il2cpp_utils::ExtractType(unknownScheme)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(end), allowIPv6, notImplicitFile, unknownScheme);
}
// Autogenerated method: System.IPv4AddressHelper.ParseCanonical
bool System::IPv4AddressHelper::ParseCanonical(::System::ReadOnlySpan_1<::Il2CppChar> name, uint8_t* numbers, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::ParseCanonical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "ParseCanonical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(numbers), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, numbers, start, end);
}
// Autogenerated method: System.IPv4AddressHelper.IsValidCanonical
bool System::IPv4AddressHelper::IsValidCanonical(::Il2CppChar* name, int start, ByRef<int> end, bool allowIPv6, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::IsValidCanonical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "IsValidCanonical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(allowIPv6), ::il2cpp_utils::ExtractType(notImplicitFile)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(end), allowIPv6, notImplicitFile);
}
// Autogenerated method: System.IPv4AddressHelper.ParseNonCanonical
int64_t System::IPv4AddressHelper::ParseNonCanonical(::Il2CppChar* name, int start, ByRef<int> end, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::ParseNonCanonical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "ParseNonCanonical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(notImplicitFile)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(end), notImplicitFile);
}
// Autogenerated method: System.IPv4AddressHelper.ParseCanonicalName
::StringW System::IPv4AddressHelper::ParseCanonicalName(::StringW str, int start, int end, ByRef<bool> isLoopback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::ParseCanonicalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "ParseCanonicalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(isLoopback)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, start, end, byref(isLoopback));
}
// Autogenerated method: System.IPv4AddressHelper.Parse
bool System::IPv4AddressHelper::Parse(::StringW name, uint8_t* numbers, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(numbers), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, numbers, start, end);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IPv6AddressHelper
#include "System/IPv6AddressHelper.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IPv6AddressHelper.FindCompressionRange
::System::ValueTuple_2<int, int> System::IPv6AddressHelper::FindCompressionRange(::System::ReadOnlySpan_1<uint16_t> numbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::FindCompressionRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "FindCompressionRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numbers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, int>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, numbers);
}
// Autogenerated method: System.IPv6AddressHelper.ShouldHaveIpv4Embedded
bool System::IPv6AddressHelper::ShouldHaveIpv4Embedded(::System::ReadOnlySpan_1<uint16_t> numbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::ShouldHaveIpv4Embedded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "ShouldHaveIpv4Embedded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numbers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, numbers);
}
// Autogenerated method: System.IPv6AddressHelper.IsValidStrict
bool System::IPv6AddressHelper::IsValidStrict(::Il2CppChar* name, int start, ByRef<int> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::IsValidStrict");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "IsValidStrict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(end));
}
// Autogenerated method: System.IPv6AddressHelper.Parse
void System::IPv6AddressHelper::Parse(::System::ReadOnlySpan_1<::Il2CppChar> address, uint16_t* numbers, int start, ByRef<::StringW> scopeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(numbers), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(scopeId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address, numbers, start, byref(scopeId));
}
// Autogenerated method: System.IPv6AddressHelper.ParseCanonicalName
::StringW System::IPv6AddressHelper::ParseCanonicalName(::StringW str, int start, ByRef<bool> isLoopback, ByRef<::StringW> scopeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::ParseCanonicalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "ParseCanonicalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(isLoopback), ::il2cpp_utils::ExtractType(scopeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, start, byref(isLoopback), byref(scopeId));
}
// Autogenerated method: System.IPv6AddressHelper.IsLoopback
bool System::IPv6AddressHelper::IsLoopback(::System::ReadOnlySpan_1<uint16_t> numbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::IsLoopback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "IsLoopback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numbers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, numbers);
}
// Autogenerated method: System.IPv6AddressHelper.InternalIsValid
bool System::IPv6AddressHelper::InternalIsValid(::Il2CppChar* name, int start, ByRef<int> end, bool validateStrictAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::InternalIsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "InternalIsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(validateStrictAddress)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(end), validateStrictAddress);
}
// Autogenerated method: System.IPv6AddressHelper.IsValid
bool System::IPv6AddressHelper::IsValid(::Il2CppChar* name, int start, ByRef<int> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(end));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.NotImplemented
#include "System/NotImplemented_.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.NotImplemented.ByDesignWithMessage
::System::Exception* System::NotImplemented_::ByDesignWithMessage(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::NotImplemented_::ByDesignWithMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "NotImplemented", "ByDesignWithMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.PasteArguments
#include "System/PasteArguments.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.PasteArguments.AppendArgument
void System::PasteArguments::AppendArgument(::System::Text::StringBuilder* stringBuilder, ::StringW argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::PasteArguments::AppendArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "PasteArguments", "AppendArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringBuilder), ::il2cpp_utils::ExtractType(argument)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringBuilder, argument);
}
// Autogenerated method: System.PasteArguments.ContainsNoWhitespaceOrQuotes
bool System::PasteArguments::ContainsNoWhitespaceOrQuotes(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::PasteArguments::ContainsNoWhitespaceOrQuotes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "PasteArguments", "ContainsNoWhitespaceOrQuotes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.StringExtensions
#include "System/StringExtensions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.StringExtensions.SubstringTrim
::StringW System::StringExtensions::SubstringTrim(::StringW value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringExtensions::SubstringTrim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "StringExtensions", "SubstringTrim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.StringExtensions.SubstringTrim
::StringW System::StringExtensions::SubstringTrim(::StringW value, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringExtensions::SubstringTrim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "StringExtensions", "SubstringTrim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex, length);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UriBuilder
#include "System/UriBuilder.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _changed
[[deprecated("Use field access instead!")]] bool& System::UriBuilder::dyn__changed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__changed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_changed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _fragment
[[deprecated("Use field access instead!")]] ::StringW& System::UriBuilder::dyn__fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__fragment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fragment"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _host
[[deprecated("Use field access instead!")]] ::StringW& System::UriBuilder::dyn__host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__host");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_host"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _password
[[deprecated("Use field access instead!")]] ::StringW& System::UriBuilder::dyn__password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_password"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _path
[[deprecated("Use field access instead!")]] ::StringW& System::UriBuilder::dyn__path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _port
[[deprecated("Use field access instead!")]] int& System::UriBuilder::dyn__port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _query
[[deprecated("Use field access instead!")]] ::StringW& System::UriBuilder::dyn__query() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__query");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_query"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _scheme
[[deprecated("Use field access instead!")]] ::StringW& System::UriBuilder::dyn__scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__scheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scheme"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _schemeDelimiter
[[deprecated("Use field access instead!")]] ::StringW& System::UriBuilder::dyn__schemeDelimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__schemeDelimiter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_schemeDelimiter"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri _uri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::UriBuilder::dyn__uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _username
[[deprecated("Use field access instead!")]] ::StringW& System::UriBuilder::dyn__username() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__username");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_username"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.UriBuilder.Init
void System::UriBuilder::Init(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.UriBuilder.get_Host
::StringW System::UriBuilder::get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::get_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.UriBuilder.set_Host
void System::UriBuilder::set_Host(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::set_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.set_Path
void System::UriBuilder::set_Path(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::set_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.set_Port
void System::UriBuilder::set_Port(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::set_Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.get_Query
::StringW System::UriBuilder::get_Query() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::get_Query");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Query", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.UriBuilder.set_Query
void System::UriBuilder::set_Query(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::set_Query");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Query", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.get_Scheme
::StringW System::UriBuilder::get_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::get_Scheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Scheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.UriBuilder.set_Scheme
void System::UriBuilder::set_Scheme(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::set_Scheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Scheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.get_Uri
::System::Uri* System::UriBuilder::get_Uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::get_Uri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Uri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.UriBuilder.SetFieldsFromUri
void System::UriBuilder::SetFieldsFromUri(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::SetFieldsFromUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFieldsFromUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.UriBuilder.Equals
bool System::UriBuilder::Equals(::Il2CppObject* rparam) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rparam);
}
// Autogenerated method: System.UriBuilder.GetHashCode
int System::UriBuilder::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.UriBuilder.ToString
::StringW System::UriBuilder::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.SecurityUtils
#include "System/SecurityUtils.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.SecurityUtils.DemandReflectionAccess
void System::SecurityUtils::DemandReflectionAccess(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SecurityUtils::DemandReflectionAccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SecurityUtils", "DemandReflectionAccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.SecurityUtils.DemandGrantSet
void System::SecurityUtils::DemandGrantSet(::System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SecurityUtils::DemandGrantSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SecurityUtils", "DemandGrantSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assembly);
}
// Autogenerated method: System.SecurityUtils.HasReflectionPermission
bool System::SecurityUtils::HasReflectionPermission(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SecurityUtils::HasReflectionPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SecurityUtils", "HasReflectionPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.SecurityUtils.SecureCreateInstance
::Il2CppObject* System::SecurityUtils::SecureCreateInstance(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SecurityUtils::SecureCreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SecurityUtils", "SecureCreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.SecurityUtils.SecureCreateInstance
::Il2CppObject* System::SecurityUtils::SecureCreateInstance(::System::Type* type, ::ArrayW<::Il2CppObject*> args, bool allowNonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SecurityUtils::SecureCreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SecurityUtils", "SecureCreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(allowNonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, args, allowNonPublic);
}
// Autogenerated method: System.SecurityUtils.SecureCreateInstance
::Il2CppObject* System::SecurityUtils::SecureCreateInstance(::System::Type* type, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SecurityUtils::SecureCreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SecurityUtils", "SecureCreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, args);
}
// Autogenerated method: System.SecurityUtils.SecureConstructorInvoke
::Il2CppObject* System::SecurityUtils::SecureConstructorInvoke(::System::Type* type, ::ArrayW<::System::Type*> argTypes, ::ArrayW<::Il2CppObject*> args, bool allowNonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SecurityUtils::SecureConstructorInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SecurityUtils", "SecureConstructorInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(argTypes), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(allowNonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, argTypes, args, allowNonPublic);
}
// Autogenerated method: System.SecurityUtils.SecureConstructorInvoke
::Il2CppObject* System::SecurityUtils::SecureConstructorInvoke(::System::Type* type, ::ArrayW<::System::Type*> argTypes, ::ArrayW<::Il2CppObject*> args, bool allowNonPublic, ::System::Reflection::BindingFlags extraFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SecurityUtils::SecureConstructorInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SecurityUtils", "SecureConstructorInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(argTypes), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(allowNonPublic), ::il2cpp_utils::ExtractType(extraFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, argTypes, args, allowNonPublic, extraFlags);
}
// Autogenerated method: System.SecurityUtils.GenericArgumentsAreVisible
bool System::SecurityUtils::GenericArgumentsAreVisible(::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SecurityUtils::GenericArgumentsAreVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SecurityUtils", "GenericArgumentsAreVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method);
}
// Autogenerated method: System.SecurityUtils.MethodInfoInvoke
::Il2CppObject* System::SecurityUtils::MethodInfoInvoke(::System::Reflection::MethodInfo* method, ::Il2CppObject* target, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SecurityUtils::MethodInfoInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SecurityUtils", "MethodInfoInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, target, args);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.InvariantComparer
#include "System/InvariantComparer.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.InvariantComparer Default
::System::InvariantComparer* System::InvariantComparer::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::InvariantComparer::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::InvariantComparer*>("System", "InvariantComparer", "Default"));
}
// Autogenerated static field setter
// Set static field: static readonly System.InvariantComparer Default
void System::InvariantComparer::_set_Default(::System::InvariantComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::InvariantComparer::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "InvariantComparer", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareInfo m_compareInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareInfo*& System::InvariantComparer::dyn_m_compareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::InvariantComparer::dyn_m_compareInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_compareInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.InvariantComparer.Compare
int System::InvariantComparer::Compare(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::InvariantComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::InvariantComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.InvariantComparer..cctor
void System::InvariantComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::InvariantComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "InvariantComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.GenericUriParserOptions
#include "System/GenericUriParserOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.GenericUriParserOptions Default
::System::GenericUriParserOptions System::GenericUriParserOptions::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::GenericUriParserOptions>("System", "GenericUriParserOptions", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.GenericUriParserOptions Default
void System::GenericUriParserOptions::_set_Default(::System::GenericUriParserOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "GenericUriParserOptions", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.GenericUriParserOptions GenericAuthority
::System::GenericUriParserOptions System::GenericUriParserOptions::_get_GenericAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_get_GenericAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::GenericUriParserOptions>("System", "GenericUriParserOptions", "GenericAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.GenericUriParserOptions GenericAuthority
void System::GenericUriParserOptions::_set_GenericAuthority(::System::GenericUriParserOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_set_GenericAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "GenericUriParserOptions", "GenericAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.GenericUriParserOptions AllowEmptyAuthority
::System::GenericUriParserOptions System::GenericUriParserOptions::_get_AllowEmptyAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_get_AllowEmptyAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::GenericUriParserOptions>("System", "GenericUriParserOptions", "AllowEmptyAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.GenericUriParserOptions AllowEmptyAuthority
void System::GenericUriParserOptions::_set_AllowEmptyAuthority(::System::GenericUriParserOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_set_AllowEmptyAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "GenericUriParserOptions", "AllowEmptyAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.GenericUriParserOptions NoUserInfo
::System::GenericUriParserOptions System::GenericUriParserOptions::_get_NoUserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_get_NoUserInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::GenericUriParserOptions>("System", "GenericUriParserOptions", "NoUserInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.GenericUriParserOptions NoUserInfo
void System::GenericUriParserOptions::_set_NoUserInfo(::System::GenericUriParserOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_set_NoUserInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "GenericUriParserOptions", "NoUserInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.GenericUriParserOptions NoPort
::System::GenericUriParserOptions System::GenericUriParserOptions::_get_NoPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_get_NoPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::GenericUriParserOptions>("System", "GenericUriParserOptions", "NoPort"));
}
// Autogenerated static field setter
// Set static field: static public System.GenericUriParserOptions NoPort
void System::GenericUriParserOptions::_set_NoPort(::System::GenericUriParserOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_set_NoPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "GenericUriParserOptions", "NoPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.GenericUriParserOptions NoQuery
::System::GenericUriParserOptions System::GenericUriParserOptions::_get_NoQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_get_NoQuery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::GenericUriParserOptions>("System", "GenericUriParserOptions", "NoQuery"));
}
// Autogenerated static field setter
// Set static field: static public System.GenericUriParserOptions NoQuery
void System::GenericUriParserOptions::_set_NoQuery(::System::GenericUriParserOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_set_NoQuery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "GenericUriParserOptions", "NoQuery", value));
}
// Autogenerated static field getter
// Get static field: static public System.GenericUriParserOptions NoFragment
::System::GenericUriParserOptions System::GenericUriParserOptions::_get_NoFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_get_NoFragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::GenericUriParserOptions>("System", "GenericUriParserOptions", "NoFragment"));
}
// Autogenerated static field setter
// Set static field: static public System.GenericUriParserOptions NoFragment
void System::GenericUriParserOptions::_set_NoFragment(::System::GenericUriParserOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_set_NoFragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "GenericUriParserOptions", "NoFragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.GenericUriParserOptions DontConvertPathBackslashes
::System::GenericUriParserOptions System::GenericUriParserOptions::_get_DontConvertPathBackslashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_get_DontConvertPathBackslashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::GenericUriParserOptions>("System", "GenericUriParserOptions", "DontConvertPathBackslashes"));
}
// Autogenerated static field setter
// Set static field: static public System.GenericUriParserOptions DontConvertPathBackslashes
void System::GenericUriParserOptions::_set_DontConvertPathBackslashes(::System::GenericUriParserOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_set_DontConvertPathBackslashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "GenericUriParserOptions", "DontConvertPathBackslashes", value));
}
// Autogenerated static field getter
// Get static field: static public System.GenericUriParserOptions DontCompressPath
::System::GenericUriParserOptions System::GenericUriParserOptions::_get_DontCompressPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_get_DontCompressPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::GenericUriParserOptions>("System", "GenericUriParserOptions", "DontCompressPath"));
}
// Autogenerated static field setter
// Set static field: static public System.GenericUriParserOptions DontCompressPath
void System::GenericUriParserOptions::_set_DontCompressPath(::System::GenericUriParserOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_set_DontCompressPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "GenericUriParserOptions", "DontCompressPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.GenericUriParserOptions DontUnescapePathDotsAndSlashes
::System::GenericUriParserOptions System::GenericUriParserOptions::_get_DontUnescapePathDotsAndSlashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_get_DontUnescapePathDotsAndSlashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::GenericUriParserOptions>("System", "GenericUriParserOptions", "DontUnescapePathDotsAndSlashes"));
}
// Autogenerated static field setter
// Set static field: static public System.GenericUriParserOptions DontUnescapePathDotsAndSlashes
void System::GenericUriParserOptions::_set_DontUnescapePathDotsAndSlashes(::System::GenericUriParserOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_set_DontUnescapePathDotsAndSlashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "GenericUriParserOptions", "DontUnescapePathDotsAndSlashes", value));
}
// Autogenerated static field getter
// Get static field: static public System.GenericUriParserOptions Idn
::System::GenericUriParserOptions System::GenericUriParserOptions::_get_Idn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_get_Idn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::GenericUriParserOptions>("System", "GenericUriParserOptions", "Idn"));
}
// Autogenerated static field setter
// Set static field: static public System.GenericUriParserOptions Idn
void System::GenericUriParserOptions::_set_Idn(::System::GenericUriParserOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_set_Idn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "GenericUriParserOptions", "Idn", value));
}
// Autogenerated static field getter
// Get static field: static public System.GenericUriParserOptions IriParsing
::System::GenericUriParserOptions System::GenericUriParserOptions::_get_IriParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_get_IriParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::GenericUriParserOptions>("System", "GenericUriParserOptions", "IriParsing"));
}
// Autogenerated static field setter
// Set static field: static public System.GenericUriParserOptions IriParsing
void System::GenericUriParserOptions::_set_IriParsing(::System::GenericUriParserOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::_set_IriParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "GenericUriParserOptions", "IriParsing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::GenericUriParserOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GenericUriParserOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IriHelper
#include "System/IriHelper.hpp"
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IriHelper.CheckIriUnicodeRange
bool System::IriHelper::CheckIriUnicodeRange(::Il2CppChar unicode, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IriHelper::CheckIriUnicodeRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IriHelper", "CheckIriUnicodeRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(isQuery)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unicode, isQuery);
}
// Autogenerated method: System.IriHelper.CheckIriUnicodeRange
bool System::IriHelper::CheckIriUnicodeRange(::Il2CppChar highSurr, ::Il2CppChar lowSurr, ByRef<bool> surrogatePair, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IriHelper::CheckIriUnicodeRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IriHelper", "CheckIriUnicodeRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highSurr), ::il2cpp_utils::ExtractType(lowSurr), ::il2cpp_utils::ExtractType(surrogatePair), ::il2cpp_utils::ExtractType(isQuery)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, highSurr, lowSurr, byref(surrogatePair), isQuery);
}
// Autogenerated method: System.IriHelper.CheckIsReserved
bool System::IriHelper::CheckIsReserved(::Il2CppChar ch, ::System::UriComponents component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IriHelper::CheckIsReserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IriHelper", "CheckIsReserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, component);
}
// Autogenerated method: System.IriHelper.EscapeUnescapeIri
::StringW System::IriHelper::EscapeUnescapeIri(::Il2CppChar* pInput, int start, int end, ::System::UriComponents component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IriHelper::EscapeUnescapeIri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IriHelper", "EscapeUnescapeIri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pInput), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pInput, start, end, component);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Uri/UriInfo
#include "System/Uri_UriInfo.hpp"
// Including type: System.Uri/Offset
#include "System/Uri_Offset.hpp"
// Including type: System.Uri/MoreInfo
#include "System/Uri_MoreInfo.hpp"
// Including type: System.Uri/Check
#include "System/Uri_Check.hpp"
// Including type: System.UriParser
#include "System/UriParser.hpp"
// Including type: System.ParsingError
#include "System/ParsingError.hpp"
// Including type: System.UriFormatException
#include "System/UriFormatException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.UriHostNameType
#include "System/UriHostNameType.hpp"
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeFile
::StringW System::Uri::_get_UriSchemeFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeFile"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeFile
void System::Uri::_set_UriSchemeFile(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeFile", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeFtp
::StringW System::Uri::_get_UriSchemeFtp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeFtp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeFtp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeFtp
void System::Uri::_set_UriSchemeFtp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeFtp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeFtp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeGopher
::StringW System::Uri::_get_UriSchemeGopher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeGopher");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeGopher"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeGopher
void System::Uri::_set_UriSchemeGopher(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeGopher");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeGopher", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeHttp
::StringW System::Uri::_get_UriSchemeHttp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeHttp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeHttp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeHttp
void System::Uri::_set_UriSchemeHttp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeHttp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeHttp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeHttps
::StringW System::Uri::_get_UriSchemeHttps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeHttps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeHttps"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeHttps
void System::Uri::_set_UriSchemeHttps(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeHttps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeHttps", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String UriSchemeWs
::StringW System::Uri::_get_UriSchemeWs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeWs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeWs"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String UriSchemeWs
void System::Uri::_set_UriSchemeWs(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeWs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeWs", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String UriSchemeWss
::StringW System::Uri::_get_UriSchemeWss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeWss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeWss"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String UriSchemeWss
void System::Uri::_set_UriSchemeWss(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeWss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeWss", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeMailto
::StringW System::Uri::_get_UriSchemeMailto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeMailto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeMailto"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeMailto
void System::Uri::_set_UriSchemeMailto(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeMailto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeMailto", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNews
::StringW System::Uri::_get_UriSchemeNews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeNews");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeNews"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNews
void System::Uri::_set_UriSchemeNews(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeNews");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNews", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNntp
::StringW System::Uri::_get_UriSchemeNntp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeNntp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeNntp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNntp
void System::Uri::_set_UriSchemeNntp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeNntp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNntp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNetTcp
::StringW System::Uri::_get_UriSchemeNetTcp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeNetTcp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeNetTcp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNetTcp
void System::Uri::_set_UriSchemeNetTcp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeNetTcp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNetTcp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNetPipe
::StringW System::Uri::_get_UriSchemeNetPipe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeNetPipe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeNetPipe"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNetPipe
void System::Uri::_set_UriSchemeNetPipe(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeNetPipe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNetPipe", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String SchemeDelimiter
::StringW System::Uri::_get_SchemeDelimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_SchemeDelimiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "SchemeDelimiter"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String SchemeDelimiter
void System::Uri::_set_SchemeDelimiter(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_SchemeDelimiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "SchemeDelimiter", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 c_Max16BitUtf8SequenceLength
int System::Uri::_get_c_Max16BitUtf8SequenceLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_c_Max16BitUtf8SequenceLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Uri", "c_Max16BitUtf8SequenceLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 c_Max16BitUtf8SequenceLength
void System::Uri::_set_c_Max16BitUtf8SequenceLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_c_Max16BitUtf8SequenceLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "c_Max16BitUtf8SequenceLength", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 c_MaxUriBufferSize
int System::Uri::_get_c_MaxUriBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_c_MaxUriBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Uri", "c_MaxUriBufferSize"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 c_MaxUriBufferSize
void System::Uri::_set_c_MaxUriBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_c_MaxUriBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "c_MaxUriBufferSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 c_MaxUriSchemeName
int System::Uri::_get_c_MaxUriSchemeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_c_MaxUriSchemeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Uri", "c_MaxUriSchemeName"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 c_MaxUriSchemeName
void System::Uri::_set_c_MaxUriSchemeName(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_c_MaxUriSchemeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "c_MaxUriSchemeName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_ConfigInitialized
bool System::Uri::_get_s_ConfigInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_s_ConfigInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "s_ConfigInitialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_ConfigInitialized
void System::Uri::_set_s_ConfigInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_s_ConfigInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_ConfigInitialized", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_ConfigInitializing
bool System::Uri::_get_s_ConfigInitializing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_s_ConfigInitializing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "s_ConfigInitializing"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_ConfigInitializing
void System::Uri::_set_s_ConfigInitializing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_s_ConfigInitializing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_ConfigInitializing", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriIdnScope s_IdnScope
::System::UriIdnScope System::Uri::_get_s_IdnScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_s_IdnScope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriIdnScope>("System", "Uri", "s_IdnScope"));
}
// Autogenerated static field setter
// Set static field: static private System.UriIdnScope s_IdnScope
void System::Uri::_set_s_IdnScope(::System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_s_IdnScope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_IdnScope", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_IriParsing
bool System::Uri::_get_s_IriParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_s_IriParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "s_IriParsing"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_IriParsing
void System::Uri::_set_s_IriParsing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_s_IriParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_IriParsing", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean useDotNetRelativeOrAbsolute
bool System::Uri::_get_useDotNetRelativeOrAbsolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_useDotNetRelativeOrAbsolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "useDotNetRelativeOrAbsolute"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean useDotNetRelativeOrAbsolute
void System::Uri::_set_useDotNetRelativeOrAbsolute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_useDotNetRelativeOrAbsolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "useDotNetRelativeOrAbsolute", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriKind DotNetRelativeOrAbsolute
::System::UriKind System::Uri::_get_DotNetRelativeOrAbsolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_DotNetRelativeOrAbsolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriKind>("System", "Uri", "DotNetRelativeOrAbsolute"));
}
// Autogenerated static field setter
// Set static field: static private System.UriKind DotNetRelativeOrAbsolute
void System::Uri::_set_DotNetRelativeOrAbsolute(::System::UriKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_DotNetRelativeOrAbsolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "DotNetRelativeOrAbsolute", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Boolean IsWindowsFileSystem
bool System::Uri::_get_IsWindowsFileSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_IsWindowsFileSystem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "IsWindowsFileSystem"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean IsWindowsFileSystem
void System::Uri::_set_IsWindowsFileSystem(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_IsWindowsFileSystem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "IsWindowsFileSystem", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object s_initLock
::Il2CppObject* System::Uri::_get_s_initLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_s_initLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System", "Uri", "s_initLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_initLock
void System::Uri::_set_s_initLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_s_initLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_initLock", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriFormat V1ToStringUnescape
::System::UriFormat System::Uri::_get_V1ToStringUnescape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_V1ToStringUnescape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriFormat>("System", "Uri", "V1ToStringUnescape"));
}
// Autogenerated static field setter
// Set static field: static private System.UriFormat V1ToStringUnescape
void System::Uri::_set_V1ToStringUnescape(::System::UriFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_V1ToStringUnescape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "V1ToStringUnescape", value));
}
// Autogenerated static field getter
// Get static field: static System.Char c_DummyChar
::Il2CppChar System::Uri::_get_c_DummyChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_c_DummyChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System", "Uri", "c_DummyChar"));
}
// Autogenerated static field setter
// Set static field: static System.Char c_DummyChar
void System::Uri::_set_c_DummyChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_c_DummyChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "c_DummyChar", value));
}
// Autogenerated static field getter
// Get static field: static System.Char c_EOL
::Il2CppChar System::Uri::_get_c_EOL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_c_EOL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System", "Uri", "c_EOL"));
}
// Autogenerated static field setter
// Set static field: static System.Char c_EOL
void System::Uri::_set_c_EOL(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_c_EOL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "c_EOL", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] HexLowerChars
::ArrayW<::Il2CppChar> System::Uri::_get_HexLowerChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_HexLowerChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System", "Uri", "HexLowerChars"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] HexLowerChars
void System::Uri::_set_HexLowerChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_HexLowerChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "HexLowerChars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] _WSchars
::ArrayW<::Il2CppChar> System::Uri::_get__WSchars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get__WSchars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System", "Uri", "_WSchars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] _WSchars
void System::Uri::_set__WSchars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set__WSchars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "_WSchars", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_String
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::dyn_m_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_String");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_String"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_originalUnicodeString
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::dyn_m_originalUnicodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_originalUnicodeString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_originalUnicodeString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UriParser m_Syntax
[[deprecated("Use field access instead!")]] ::System::UriParser*& System::Uri::dyn_m_Syntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_Syntax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Syntax"))->offset;
  return *reinterpret_cast<::System::UriParser**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_DnsSafeHost
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::dyn_m_DnsSafeHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_DnsSafeHost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DnsSafeHost"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri/Flags m_Flags
[[deprecated("Use field access instead!")]] ::System::Uri::Flags& System::Uri::dyn_m_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_Flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Flags"))->offset;
  return *reinterpret_cast<::System::Uri::Flags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri/UriInfo m_Info
[[deprecated("Use field access instead!")]] ::System::Uri::UriInfo*& System::Uri::dyn_m_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_Info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Info"))->offset;
  return *reinterpret_cast<::System::Uri::UriInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_iriParsing
[[deprecated("Use field access instead!")]] bool& System::Uri::dyn_m_iriParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_iriParsing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_iriParsing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Uri.get_IsImplicitFile
bool System::Uri::get_IsImplicitFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsImplicitFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsImplicitFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsUncOrDosPath
bool System::Uri::get_IsUncOrDosPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsUncOrDosPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUncOrDosPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsDosPath
bool System::Uri::get_IsDosPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsDosPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDosPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsUncPath
bool System::Uri::get_IsUncPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsUncPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUncPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_HostType
::System::Uri::Flags System::Uri::get_HostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_HostType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HostType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri::Flags, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Syntax
::System::UriParser* System::Uri::get_Syntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Syntax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Syntax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriParser*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsNotAbsoluteUri
bool System::Uri::get_IsNotAbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsNotAbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNotAbsoluteUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.IriParsingStatic
bool System::Uri::IriParsingStatic(::System::UriParser* syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IriParsingStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IriParsingStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, syntax);
}
// Autogenerated method: System.Uri.get_AllowIdn
bool System::Uri::get_AllowIdn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_AllowIdn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowIdn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.AllowIdnStatic
bool System::Uri::AllowIdnStatic(::System::UriParser* syntax, ::System::Uri::Flags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::AllowIdnStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllowIdnStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syntax), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, syntax, flags);
}
// Autogenerated method: System.Uri.IsIntranet
bool System::Uri::IsIntranet(::StringW schemeHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsIntranet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsIntranet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemeHost)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, schemeHost);
}
// Autogenerated method: System.Uri.get_UserDrivenParsing
bool System::Uri::get_UserDrivenParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_UserDrivenParsing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserDrivenParsing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.SetUserDrivenParsing
void System::Uri::SetUserDrivenParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::SetUserDrivenParsing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUserDrivenParsing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_SecuredPathIndex
uint16_t System::Uri::get_SecuredPathIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_SecuredPathIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SecuredPathIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.NotAny
bool System::Uri::NotAny(::System::Uri::Flags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::NotAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.Uri.InFact
bool System::Uri::InFact(::System::Uri::Flags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::InFact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InFact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.Uri.StaticNotAny
bool System::Uri::StaticNotAny(::System::Uri::Flags allFlags, ::System::Uri::Flags checkFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::StaticNotAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "StaticNotAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allFlags), ::il2cpp_utils::ExtractType(checkFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, allFlags, checkFlags);
}
// Autogenerated method: System.Uri.StaticInFact
bool System::Uri::StaticInFact(::System::Uri::Flags allFlags, ::System::Uri::Flags checkFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::StaticInFact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "StaticInFact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allFlags), ::il2cpp_utils::ExtractType(checkFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, allFlags, checkFlags);
}
// Autogenerated method: System.Uri.EnsureUriInfo
::System::Uri::UriInfo* System::Uri::EnsureUriInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::EnsureUriInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureUriInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri::UriInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.EnsureParseRemaining
void System::Uri::EnsureParseRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::EnsureParseRemaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureParseRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.EnsureHostString
void System::Uri::EnsureHostString(bool allowDnsOptimization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::EnsureHostString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureHostString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allowDnsOptimization)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, allowDnsOptimization);
}
// Autogenerated method: System.Uri.CreateUri
void System::Uri::CreateUri(::System::Uri* baseUri, ::StringW relativeUri, bool dontEscape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(relativeUri), ::il2cpp_utils::ExtractType(dontEscape)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri, relativeUri, dontEscape);
}
// Autogenerated method: System.Uri.GetCombinedString
::System::ParsingError System::Uri::GetCombinedString(::System::Uri* baseUri, ::StringW relativeStr, bool dontEscape, ByRef<::StringW> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetCombinedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "GetCombinedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(relativeStr), ::il2cpp_utils::ExtractType(dontEscape), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ParsingError, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseUri, relativeStr, dontEscape, byref(result));
}
// Autogenerated method: System.Uri.GetException
::System::UriFormatException* System::Uri::GetException(::System::ParsingError err) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "GetException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(err)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriFormatException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, err);
}
// Autogenerated method: System.Uri.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Uri::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Uri*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Uri.GetObjectData
void System::Uri::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Uri.get_AbsolutePath
::StringW System::Uri::get_AbsolutePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_AbsolutePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbsolutePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_PrivateAbsolutePath
::StringW System::Uri::get_PrivateAbsolutePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_PrivateAbsolutePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrivateAbsolutePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_AbsoluteUri
::StringW System::Uri::get_AbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_AbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbsoluteUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_LocalPath
::StringW System::Uri::get_LocalPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_LocalPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Authority
::StringW System::Uri::get_Authority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Authority");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Authority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_HostNameType
::System::UriHostNameType System::Uri::get_HostNameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_HostNameType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HostNameType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriHostNameType, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsDefaultPort
bool System::Uri::get_IsDefaultPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsDefaultPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefaultPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsFile
bool System::Uri::get_IsFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsLoopback
bool System::Uri::get_IsLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsLoopback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLoopback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_PathAndQuery
::StringW System::Uri::get_PathAndQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_PathAndQuery");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PathAndQuery", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Segments
::ArrayW<::StringW> System::Uri::get_Segments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Segments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Segments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsUnc
bool System::Uri::get_IsUnc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsUnc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUnc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Host
::StringW System::Uri::get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.StaticIsFile
bool System::Uri::StaticIsFile(::System::UriParser* syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::StaticIsFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "StaticIsFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, syntax);
}
// Autogenerated method: System.Uri.get_InitializeLock
::Il2CppObject* System::Uri::get_InitializeLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_InitializeLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "get_InitializeLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Uri.InitializeUriConfig
void System::Uri::InitializeUriConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::InitializeUriConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "InitializeUriConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Uri.GetLocalPath
::StringW System::Uri::GetLocalPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetLocalPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Port
int System::Uri::get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Query
::StringW System::Uri::get_Query() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Query");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Query", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Fragment
::StringW System::Uri::get_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Fragment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Fragment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Scheme
::StringW System::Uri::get_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Scheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Scheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_OriginalStringSwitched
bool System::Uri::get_OriginalStringSwitched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_OriginalStringSwitched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OriginalStringSwitched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_OriginalString
::StringW System::Uri::get_OriginalString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_OriginalString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OriginalString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_DnsSafeHost
::StringW System::Uri::get_DnsSafeHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_DnsSafeHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DnsSafeHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IdnHost
::StringW System::Uri::get_IdnHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IdnHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IdnHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsAbsoluteUri
bool System::Uri::get_IsAbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsAbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAbsoluteUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_UserEscaped
bool System::Uri::get_UserEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_UserEscaped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserEscaped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_UserInfo
::StringW System::Uri::get_UserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_UserInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.CheckHostName
::System::UriHostNameType System::Uri::CheckHostName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckHostName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CheckHostName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriHostNameType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Uri.IsGenDelim
bool System::Uri::IsGenDelim(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsGenDelim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsGenDelim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Uri.CheckSchemeName
bool System::Uri::CheckSchemeName(::StringW schemeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckSchemeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CheckSchemeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemeName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemeName);
}
// Autogenerated method: System.Uri.IsHexDigit
bool System::Uri::IsHexDigit(::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsHexDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsHexDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, character);
}
// Autogenerated method: System.Uri.FromHex
int System::Uri::FromHex(::Il2CppChar digit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::FromHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "FromHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(digit)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, digit);
}
// Autogenerated method: System.Uri.CheckForColonInFirstPathSegment
bool System::Uri::CheckForColonInFirstPathSegment(::StringW uriString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckForColonInFirstPathSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CheckForColonInFirstPathSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriString)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uriString);
}
// Autogenerated method: System.Uri.InternalEscapeString
::StringW System::Uri::InternalEscapeString(::StringW rawString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::InternalEscapeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "InternalEscapeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawString)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawString);
}
// Autogenerated method: System.Uri.ParseScheme
::System::ParsingError System::Uri::ParseScheme(::StringW uriString, ByRef<::System::Uri::Flags> flags, ByRef<::System::UriParser*> syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ParseScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "ParseScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriString), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ParsingError, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uriString, byref(flags), byref(syntax));
}
// Autogenerated method: System.Uri.ParseMinimal
::System::UriFormatException* System::Uri::ParseMinimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ParseMinimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseMinimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriFormatException*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.PrivateParseMinimal
::System::ParsingError System::Uri::PrivateParseMinimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::PrivateParseMinimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrivateParseMinimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ParsingError, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.PrivateParseMinimalIri
void System::Uri::PrivateParseMinimalIri(::StringW newHost, uint16_t idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::PrivateParseMinimalIri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrivateParseMinimalIri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newHost), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newHost, idx);
}
// Autogenerated method: System.Uri.CreateUriInfo
void System::Uri::CreateUriInfo(::System::Uri::Flags cF) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateUriInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUriInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cF)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cF);
}
// Autogenerated method: System.Uri.CreateHostString
void System::Uri::CreateHostString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateHostString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateHostString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.CreateHostStringHelper
::StringW System::Uri::CreateHostStringHelper(::StringW str, uint16_t idx, uint16_t end, ByRef<::System::Uri::Flags> flags, ByRef<::StringW> scopeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateHostStringHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CreateHostStringHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(scopeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, idx, end, byref(flags), byref(scopeId));
}
// Autogenerated method: System.Uri.GetHostViaCustomSyntax
void System::Uri::GetHostViaCustomSyntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetHostViaCustomSyntax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHostViaCustomSyntax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.GetParts
::StringW System::Uri::GetParts(::System::UriComponents uriParts, ::System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriParts), ::il2cpp_utils::ExtractType(formatAs)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uriParts, formatAs);
}
// Autogenerated method: System.Uri.GetEscapedParts
::StringW System::Uri::GetEscapedParts(::System::UriComponents uriParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetEscapedParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEscapedParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriParts)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uriParts);
}
// Autogenerated method: System.Uri.GetUnescapedParts
::StringW System::Uri::GetUnescapedParts(::System::UriComponents uriParts, ::System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetUnescapedParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnescapedParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriParts), ::il2cpp_utils::ExtractType(formatAs)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uriParts, formatAs);
}
// Autogenerated method: System.Uri.ReCreateParts
::StringW System::Uri::ReCreateParts(::System::UriComponents parts, uint16_t nonCanonical, ::System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ReCreateParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReCreateParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parts), ::il2cpp_utils::ExtractType(nonCanonical), ::il2cpp_utils::ExtractType(formatAs)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, parts, nonCanonical, formatAs);
}
// Autogenerated method: System.Uri.GetUriPartsFromUserString
::StringW System::Uri::GetUriPartsFromUserString(::System::UriComponents uriParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetUriPartsFromUserString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUriPartsFromUserString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriParts)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uriParts);
}
// Autogenerated method: System.Uri.ParseRemaining
void System::Uri::ParseRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ParseRemaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.ParseSchemeCheckImplicitFile
uint16_t System::Uri::ParseSchemeCheckImplicitFile(::Il2CppChar* uriString, uint16_t length, ByRef<::System::ParsingError> err, ByRef<::System::Uri::Flags> flags, ByRef<::System::UriParser*> syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ParseSchemeCheckImplicitFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "ParseSchemeCheckImplicitFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriString), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(err), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uriString, length, byref(err), byref(flags), byref(syntax));
}
// Autogenerated method: System.Uri.CheckKnownSchemes
bool System::Uri::CheckKnownSchemes(int64_t* lptr, uint16_t nChars, ByRef<::System::UriParser*> syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckKnownSchemes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CheckKnownSchemes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lptr), ::il2cpp_utils::ExtractType(nChars), ::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lptr, nChars, byref(syntax));
}
// Autogenerated method: System.Uri.CheckSchemeSyntax
::System::ParsingError System::Uri::CheckSchemeSyntax(::Il2CppChar* ptr, uint16_t length, ByRef<::System::UriParser*> syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckSchemeSyntax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CheckSchemeSyntax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ParsingError, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, length, byref(syntax));
}
// Autogenerated method: System.Uri.CheckAuthorityHelper
uint16_t System::Uri::CheckAuthorityHelper(::Il2CppChar* pString, uint16_t idx, uint16_t length, ByRef<::System::ParsingError> err, ByRef<::System::Uri::Flags> flags, ::System::UriParser* syntax, ByRef<::StringW> newHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckAuthorityHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAuthorityHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pString), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(err), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(syntax), ::il2cpp_utils::ExtractType(newHost)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, pString, idx, length, byref(err), byref(flags), syntax, byref(newHost));
}
// Autogenerated method: System.Uri.CheckAuthorityHelperHandleDnsIri
void System::Uri::CheckAuthorityHelperHandleDnsIri(::Il2CppChar* pString, uint16_t start, int end, int startInput, bool iriParsing, bool hasUnicode, ::System::UriParser* syntax, ::StringW userInfoString, ByRef<::System::Uri::Flags> flags, ByRef<bool> justNormalized, ByRef<::StringW> newHost, ByRef<::System::ParsingError> err) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckAuthorityHelperHandleDnsIri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAuthorityHelperHandleDnsIri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pString), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(startInput), ::il2cpp_utils::ExtractType(iriParsing), ::il2cpp_utils::ExtractType(hasUnicode), ::il2cpp_utils::ExtractType(syntax), ::il2cpp_utils::ExtractType(userInfoString), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(justNormalized), ::il2cpp_utils::ExtractType(newHost), ::il2cpp_utils::ExtractType(err)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pString, start, end, startInput, iriParsing, hasUnicode, syntax, userInfoString, byref(flags), byref(justNormalized), byref(newHost), byref(err));
}
// Autogenerated method: System.Uri.CheckAuthorityHelperHandleAnyHostIri
void System::Uri::CheckAuthorityHelperHandleAnyHostIri(::Il2CppChar* pString, int startInput, int end, bool iriParsing, bool hasUnicode, ::System::UriParser* syntax, ByRef<::System::Uri::Flags> flags, ByRef<::StringW> newHost, ByRef<::System::ParsingError> err) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckAuthorityHelperHandleAnyHostIri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAuthorityHelperHandleAnyHostIri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pString), ::il2cpp_utils::ExtractType(startInput), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(iriParsing), ::il2cpp_utils::ExtractType(hasUnicode), ::il2cpp_utils::ExtractType(syntax), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(newHost), ::il2cpp_utils::ExtractType(err)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pString, startInput, end, iriParsing, hasUnicode, syntax, byref(flags), byref(newHost), byref(err));
}
// Autogenerated method: System.Uri.FindEndOfComponent
void System::Uri::FindEndOfComponent(::StringW input, ByRef<uint16_t> idx, uint16_t end, ::Il2CppChar delim) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::FindEndOfComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindEndOfComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(delim)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, byref(idx), end, delim);
}
// Autogenerated method: System.Uri.FindEndOfComponent
void System::Uri::FindEndOfComponent(::Il2CppChar* str, ByRef<uint16_t> idx, uint16_t end, ::Il2CppChar delim) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::FindEndOfComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindEndOfComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(delim)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str, byref(idx), end, delim);
}
// Autogenerated method: System.Uri.CheckCanonical
::System::Uri::Check System::Uri::CheckCanonical(::Il2CppChar* str, ByRef<uint16_t> idx, uint16_t end, ::Il2CppChar delim) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckCanonical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCanonical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(delim)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri::Check, false>(this, ___internal__method, str, byref(idx), end, delim);
}
// Autogenerated method: System.Uri.GetCanonicalPath
::ArrayW<::Il2CppChar> System::Uri::GetCanonicalPath(::ArrayW<::Il2CppChar> dest, ByRef<int> pos, ::System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetCanonicalPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCanonicalPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(formatAs)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method, dest, byref(pos), formatAs);
}
// Autogenerated method: System.Uri.UnescapeOnly
void System::Uri::UnescapeOnly(::Il2CppChar* pch, int start, ByRef<int> end, ::Il2CppChar ch1, ::Il2CppChar ch2, ::Il2CppChar ch3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UnescapeOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "UnescapeOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pch), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(ch1), ::il2cpp_utils::ExtractType(ch2), ::il2cpp_utils::ExtractType(ch3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pch, start, byref(end), ch1, ch2, ch3);
}
// Autogenerated method: System.Uri.Compress
::ArrayW<::Il2CppChar> System::Uri::Compress(::ArrayW<::Il2CppChar> dest, uint16_t start, ByRef<int> destLength, ::System::UriParser* syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Compress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "Compress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(destLength), ::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, start, byref(destLength), syntax);
}
// Autogenerated method: System.Uri.CalculateCaseInsensitiveHashCode
int System::Uri::CalculateCaseInsensitiveHashCode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CalculateCaseInsensitiveHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CalculateCaseInsensitiveHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text);
}
// Autogenerated method: System.Uri.CombineUri
::StringW System::Uri::CombineUri(::System::Uri* basePart, ::StringW relativePart, ::System::UriFormat uriFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CombineUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CombineUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basePart), ::il2cpp_utils::ExtractType(relativePart), ::il2cpp_utils::ExtractType(uriFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, basePart, relativePart, uriFormat);
}
// Autogenerated method: System.Uri.get_HasAuthority
bool System::Uri::get_HasAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_HasAuthority");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasAuthority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.IsLWS
bool System::Uri::IsLWS(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsLWS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsLWS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Uri.IsAsciiLetter
bool System::Uri::IsAsciiLetter(::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsAsciiLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsAsciiLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, character);
}
// Autogenerated method: System.Uri.IsAsciiLetterOrDigit
bool System::Uri::IsAsciiLetterOrDigit(::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsAsciiLetterOrDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsAsciiLetterOrDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, character);
}
// Autogenerated method: System.Uri.IsBidiControlCharacter
bool System::Uri::IsBidiControlCharacter(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsBidiControlCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsBidiControlCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Uri.StripBidiControlCharacter
::StringW System::Uri::StripBidiControlCharacter(::Il2CppChar* strToClean, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::StripBidiControlCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "StripBidiControlCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strToClean), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strToClean, start, length);
}
// Autogenerated method: System.Uri.CreateThis
void System::Uri::CreateThis(::StringW uri, bool dontEscape, ::System::UriKind uriKind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateThis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateThis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(dontEscape), ::il2cpp_utils::ExtractType(uriKind)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri, dontEscape, uriKind);
}
// Autogenerated method: System.Uri.InitializeUri
void System::Uri::InitializeUri(::System::ParsingError err, ::System::UriKind uriKind, ByRef<::System::UriFormatException*> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::InitializeUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(err), ::il2cpp_utils::ExtractType(uriKind), ::il2cpp_utils::ExtractIndependentType<::System::UriFormatException*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, err, uriKind, byref(e));
}
// Autogenerated method: System.Uri.CheckForConfigLoad
bool System::Uri::CheckForConfigLoad(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckForConfigLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForConfigLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Uri.CheckForUnicode
bool System::Uri::CheckForUnicode(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckForUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Uri.CheckForEscapedUnreserved
bool System::Uri::CheckForEscapedUnreserved(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckForEscapedUnreserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForEscapedUnreserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Uri.TryCreate
bool System::Uri::TryCreate(::StringW uriString, ::System::UriKind uriKind, ByRef<::System::Uri*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::TryCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "TryCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriString), ::il2cpp_utils::ExtractType(uriKind), ::il2cpp_utils::ExtractIndependentType<::System::Uri*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uriString, uriKind, byref(result));
}
// Autogenerated method: System.Uri.TryCreate
bool System::Uri::TryCreate(::System::Uri* baseUri, ::StringW relativeUri, ByRef<::System::Uri*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::TryCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "TryCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(relativeUri), ::il2cpp_utils::ExtractIndependentType<::System::Uri*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseUri, relativeUri, byref(result));
}
// Autogenerated method: System.Uri.TryCreate
bool System::Uri::TryCreate(::System::Uri* baseUri, ::System::Uri* relativeUri, ByRef<::System::Uri*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::TryCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "TryCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(relativeUri), ::il2cpp_utils::ExtractIndependentType<::System::Uri*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseUri, relativeUri, byref(result));
}
// Autogenerated method: System.Uri.GetComponents
::StringW System::Uri::GetComponents(::System::UriComponents components, ::System::UriFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(components), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, components, format);
}
// Autogenerated method: System.Uri.IsWellFormedOriginalString
bool System::Uri::IsWellFormedOriginalString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsWellFormedOriginalString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsWellFormedOriginalString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.IsWellFormedUriString
bool System::Uri::IsWellFormedUriString(::StringW uriString, ::System::UriKind uriKind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsWellFormedUriString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsWellFormedUriString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriString), ::il2cpp_utils::ExtractType(uriKind)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uriString, uriKind);
}
// Autogenerated method: System.Uri.InternalIsWellFormedOriginalString
bool System::Uri::InternalIsWellFormedOriginalString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::InternalIsWellFormedOriginalString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalIsWellFormedOriginalString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.UnescapeDataString
::StringW System::Uri::UnescapeDataString(::StringW stringToUnescape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UnescapeDataString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "UnescapeDataString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringToUnescape)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringToUnescape);
}
// Autogenerated method: System.Uri.EscapeUriString
::StringW System::Uri::EscapeUriString(::StringW stringToEscape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::EscapeUriString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "EscapeUriString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringToEscape)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringToEscape);
}
// Autogenerated method: System.Uri.EscapeDataString
::StringW System::Uri::EscapeDataString(::StringW stringToEscape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::EscapeDataString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "EscapeDataString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringToEscape)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringToEscape);
}
// Autogenerated method: System.Uri.EscapeUnescapeIri
::StringW System::Uri::EscapeUnescapeIri(::StringW input, int start, int end, ::System::UriComponents component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::EscapeUnescapeIri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EscapeUnescapeIri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, input, start, end, component);
}
// Autogenerated method: System.Uri.CreateHelper
::System::Uri* System::Uri::CreateHelper(::StringW uriString, bool dontEscape, ::System::UriKind uriKind, ByRef<::System::UriFormatException*> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CreateHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriString), ::il2cpp_utils::ExtractType(dontEscape), ::il2cpp_utils::ExtractType(uriKind), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uriString, dontEscape, uriKind, byref(e));
}
// Autogenerated method: System.Uri.ResolveHelper
::System::Uri* System::Uri::ResolveHelper(::System::Uri* baseUri, ::System::Uri* relativeUri, ByRef<::StringW> newUriString, ByRef<bool> userEscaped, ByRef<::System::UriFormatException*> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ResolveHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "ResolveHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(relativeUri), ::il2cpp_utils::ExtractType(newUriString), ::il2cpp_utils::ExtractType(userEscaped), ::il2cpp_utils::ExtractIndependentType<::System::UriFormatException*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseUri, relativeUri, byref(newUriString), byref(userEscaped), byref(e));
}
// Autogenerated method: System.Uri.GetRelativeSerializationString
::StringW System::Uri::GetRelativeSerializationString(::System::UriFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetRelativeSerializationString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRelativeSerializationString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: System.Uri.GetComponentsHelper
::StringW System::Uri::GetComponentsHelper(::System::UriComponents uriComponents, ::System::UriFormat uriFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetComponentsHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentsHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriComponents), ::il2cpp_utils::ExtractType(uriFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uriComponents, uriFormat);
}
// Autogenerated method: System.Uri.IsBaseOf
bool System::Uri::IsBaseOf(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsBaseOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBaseOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Uri.IsBaseOfHelper
bool System::Uri::IsBaseOfHelper(::System::Uri* uriLink) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsBaseOfHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBaseOfHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriLink)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uriLink);
}
// Autogenerated method: System.Uri.CreateThisFromUri
void System::Uri::CreateThisFromUri(::System::Uri* otherUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateThisFromUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateThisFromUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherUri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherUri);
}
// Autogenerated method: System.Uri..cctor
void System::Uri::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Uri.GetHashCode
int System::Uri::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.ToString
::StringW System::Uri::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.Equals
bool System::Uri::Equals(::Il2CppObject* comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, comparand);
}
// Autogenerated method: System.Uri.op_Equality
bool System::operator ==(::System::Uri* uri1, ::System::Uri& uri2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri1), ::il2cpp_utils::ExtractType(&uri2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri1, &uri2);
}
// Autogenerated method: System.Uri.op_Inequality
bool System::operator !=(::System::Uri* uri1, ::System::Uri& uri2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri1), ::il2cpp_utils::ExtractType(&uri2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri1, &uri2);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Uri/Flags
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags Zero
::System::Uri::Flags System::Uri::Flags::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags Zero
void System::Uri::Flags::_set_Zero(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags SchemeNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_SchemeNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_SchemeNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "SchemeNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags SchemeNotCanonical
void System::Uri::Flags::_set_SchemeNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_SchemeNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "SchemeNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UserNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_UserNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UserNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UserNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UserNotCanonical
void System::Uri::Flags::_set_UserNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UserNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags HostNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_HostNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_HostNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "HostNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags HostNotCanonical
void System::Uri::Flags::_set_HostNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_HostNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags PortNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_PortNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_PortNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "PortNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags PortNotCanonical
void System::Uri::Flags::_set_PortNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_PortNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "PortNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags PathNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_PathNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_PathNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "PathNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags PathNotCanonical
void System::Uri::Flags::_set_PathNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_PathNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "PathNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags QueryNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_QueryNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_QueryNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "QueryNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags QueryNotCanonical
void System::Uri::Flags::_set_QueryNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_QueryNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "QueryNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags FragmentNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_FragmentNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_FragmentNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "FragmentNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags FragmentNotCanonical
void System::Uri::Flags::_set_FragmentNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_FragmentNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "FragmentNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags CannotDisplayCanonical
::System::Uri::Flags System::Uri::Flags::_get_CannotDisplayCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_CannotDisplayCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "CannotDisplayCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags CannotDisplayCanonical
void System::Uri::Flags::_set_CannotDisplayCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_CannotDisplayCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "CannotDisplayCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_UserNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_UserNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_UserNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_UserNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_UserNotCanonical
void System::Uri::Flags::_set_E_UserNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_UserNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_UserNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_HostNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_HostNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_HostNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_HostNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_HostNotCanonical
void System::Uri::Flags::_set_E_HostNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_HostNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_HostNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_PortNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_PortNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_PortNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_PortNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_PortNotCanonical
void System::Uri::Flags::_set_E_PortNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_PortNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_PortNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_PathNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_PathNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_PathNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_PathNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_PathNotCanonical
void System::Uri::Flags::_set_E_PathNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_PathNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_PathNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_QueryNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_QueryNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_QueryNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_QueryNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_QueryNotCanonical
void System::Uri::Flags::_set_E_QueryNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_QueryNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_QueryNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_FragmentNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_FragmentNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_FragmentNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_FragmentNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_FragmentNotCanonical
void System::Uri::Flags::_set_E_FragmentNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_FragmentNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_FragmentNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_CannotDisplayCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_CannotDisplayCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_CannotDisplayCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_CannotDisplayCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_CannotDisplayCanonical
void System::Uri::Flags::_set_E_CannotDisplayCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_CannotDisplayCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_CannotDisplayCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags ShouldBeCompressed
::System::Uri::Flags System::Uri::Flags::_get_ShouldBeCompressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_ShouldBeCompressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "ShouldBeCompressed"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags ShouldBeCompressed
void System::Uri::Flags::_set_ShouldBeCompressed(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_ShouldBeCompressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "ShouldBeCompressed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags FirstSlashAbsent
::System::Uri::Flags System::Uri::Flags::_get_FirstSlashAbsent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_FirstSlashAbsent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "FirstSlashAbsent"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags FirstSlashAbsent
void System::Uri::Flags::_set_FirstSlashAbsent(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_FirstSlashAbsent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "FirstSlashAbsent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags BackslashInPath
::System::Uri::Flags System::Uri::Flags::_get_BackslashInPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_BackslashInPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "BackslashInPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags BackslashInPath
void System::Uri::Flags::_set_BackslashInPath(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_BackslashInPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "BackslashInPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags IndexMask
::System::Uri::Flags System::Uri::Flags::_get_IndexMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_IndexMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "IndexMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags IndexMask
void System::Uri::Flags::_set_IndexMask(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_IndexMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IndexMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags HostTypeMask
::System::Uri::Flags System::Uri::Flags::_get_HostTypeMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_HostTypeMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "HostTypeMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags HostTypeMask
void System::Uri::Flags::_set_HostTypeMask(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_HostTypeMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostTypeMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags HostNotParsed
::System::Uri::Flags System::Uri::Flags::_get_HostNotParsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_HostNotParsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "HostNotParsed"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags HostNotParsed
void System::Uri::Flags::_set_HostNotParsed(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_HostNotParsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostNotParsed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags IPv6HostType
::System::Uri::Flags System::Uri::Flags::_get_IPv6HostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_IPv6HostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "IPv6HostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags IPv6HostType
void System::Uri::Flags::_set_IPv6HostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_IPv6HostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IPv6HostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags IPv4HostType
::System::Uri::Flags System::Uri::Flags::_get_IPv4HostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_IPv4HostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "IPv4HostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags IPv4HostType
void System::Uri::Flags::_set_IPv4HostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_IPv4HostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IPv4HostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags DnsHostType
::System::Uri::Flags System::Uri::Flags::_get_DnsHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_DnsHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "DnsHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags DnsHostType
void System::Uri::Flags::_set_DnsHostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_DnsHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "DnsHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UncHostType
::System::Uri::Flags System::Uri::Flags::_get_UncHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UncHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UncHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UncHostType
void System::Uri::Flags::_set_UncHostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UncHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UncHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags BasicHostType
::System::Uri::Flags System::Uri::Flags::_get_BasicHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_BasicHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "BasicHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags BasicHostType
void System::Uri::Flags::_set_BasicHostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_BasicHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "BasicHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UnusedHostType
::System::Uri::Flags System::Uri::Flags::_get_UnusedHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UnusedHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UnusedHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UnusedHostType
void System::Uri::Flags::_set_UnusedHostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UnusedHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UnusedHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UnknownHostType
::System::Uri::Flags System::Uri::Flags::_get_UnknownHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UnknownHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UnknownHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UnknownHostType
void System::Uri::Flags::_set_UnknownHostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UnknownHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UnknownHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UserEscaped
::System::Uri::Flags System::Uri::Flags::_get_UserEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UserEscaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UserEscaped"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UserEscaped
void System::Uri::Flags::_set_UserEscaped(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UserEscaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserEscaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags AuthorityFound
::System::Uri::Flags System::Uri::Flags::_get_AuthorityFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_AuthorityFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "AuthorityFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags AuthorityFound
void System::Uri::Flags::_set_AuthorityFound(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_AuthorityFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "AuthorityFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags HasUserInfo
::System::Uri::Flags System::Uri::Flags::_get_HasUserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_HasUserInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "HasUserInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags HasUserInfo
void System::Uri::Flags::_set_HasUserInfo(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_HasUserInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HasUserInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags LoopbackHost
::System::Uri::Flags System::Uri::Flags::_get_LoopbackHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_LoopbackHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "LoopbackHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags LoopbackHost
void System::Uri::Flags::_set_LoopbackHost(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_LoopbackHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "LoopbackHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags NotDefaultPort
::System::Uri::Flags System::Uri::Flags::_get_NotDefaultPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_NotDefaultPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "NotDefaultPort"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags NotDefaultPort
void System::Uri::Flags::_set_NotDefaultPort(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_NotDefaultPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "NotDefaultPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UserDrivenParsing
::System::Uri::Flags System::Uri::Flags::_get_UserDrivenParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UserDrivenParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UserDrivenParsing"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UserDrivenParsing
void System::Uri::Flags::_set_UserDrivenParsing(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UserDrivenParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserDrivenParsing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags CanonicalDnsHost
::System::Uri::Flags System::Uri::Flags::_get_CanonicalDnsHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_CanonicalDnsHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "CanonicalDnsHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags CanonicalDnsHost
void System::Uri::Flags::_set_CanonicalDnsHost(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_CanonicalDnsHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "CanonicalDnsHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags ErrorOrParsingRecursion
::System::Uri::Flags System::Uri::Flags::_get_ErrorOrParsingRecursion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_ErrorOrParsingRecursion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "ErrorOrParsingRecursion"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags ErrorOrParsingRecursion
void System::Uri::Flags::_set_ErrorOrParsingRecursion(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_ErrorOrParsingRecursion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "ErrorOrParsingRecursion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags DosPath
::System::Uri::Flags System::Uri::Flags::_get_DosPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_DosPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "DosPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags DosPath
void System::Uri::Flags::_set_DosPath(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_DosPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "DosPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UncPath
::System::Uri::Flags System::Uri::Flags::_get_UncPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UncPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UncPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UncPath
void System::Uri::Flags::_set_UncPath(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UncPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UncPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags ImplicitFile
::System::Uri::Flags System::Uri::Flags::_get_ImplicitFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_ImplicitFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "ImplicitFile"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags ImplicitFile
void System::Uri::Flags::_set_ImplicitFile(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_ImplicitFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "ImplicitFile", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags MinimalUriInfoSet
::System::Uri::Flags System::Uri::Flags::_get_MinimalUriInfoSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_MinimalUriInfoSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "MinimalUriInfoSet"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags MinimalUriInfoSet
void System::Uri::Flags::_set_MinimalUriInfoSet(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_MinimalUriInfoSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "MinimalUriInfoSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags AllUriInfoSet
::System::Uri::Flags System::Uri::Flags::_get_AllUriInfoSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_AllUriInfoSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "AllUriInfoSet"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags AllUriInfoSet
void System::Uri::Flags::_set_AllUriInfoSet(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_AllUriInfoSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "AllUriInfoSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags IdnHost
::System::Uri::Flags System::Uri::Flags::_get_IdnHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_IdnHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "IdnHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags IdnHost
void System::Uri::Flags::_set_IdnHost(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_IdnHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IdnHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags HasUnicode
::System::Uri::Flags System::Uri::Flags::_get_HasUnicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_HasUnicode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "HasUnicode"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags HasUnicode
void System::Uri::Flags::_set_HasUnicode(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_HasUnicode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HasUnicode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags HostUnicodeNormalized
::System::Uri::Flags System::Uri::Flags::_get_HostUnicodeNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_HostUnicodeNormalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "HostUnicodeNormalized"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags HostUnicodeNormalized
void System::Uri::Flags::_set_HostUnicodeNormalized(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_HostUnicodeNormalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostUnicodeNormalized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags RestUnicodeNormalized
::System::Uri::Flags System::Uri::Flags::_get_RestUnicodeNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_RestUnicodeNormalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "RestUnicodeNormalized"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags RestUnicodeNormalized
void System::Uri::Flags::_set_RestUnicodeNormalized(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_RestUnicodeNormalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "RestUnicodeNormalized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UnicodeHost
::System::Uri::Flags System::Uri::Flags::_get_UnicodeHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UnicodeHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UnicodeHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UnicodeHost
void System::Uri::Flags::_set_UnicodeHost(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UnicodeHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UnicodeHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags IntranetUri
::System::Uri::Flags System::Uri::Flags::_get_IntranetUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_IntranetUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "IntranetUri"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags IntranetUri
void System::Uri::Flags::_set_IntranetUri(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_IntranetUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IntranetUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UseOrigUncdStrOffset
::System::Uri::Flags System::Uri::Flags::_get_UseOrigUncdStrOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UseOrigUncdStrOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UseOrigUncdStrOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UseOrigUncdStrOffset
void System::Uri::Flags::_set_UseOrigUncdStrOffset(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UseOrigUncdStrOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UseOrigUncdStrOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UserIriCanonical
::System::Uri::Flags System::Uri::Flags::_get_UserIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UserIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UserIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UserIriCanonical
void System::Uri::Flags::_set_UserIriCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UserIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags PathIriCanonical
::System::Uri::Flags System::Uri::Flags::_get_PathIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_PathIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "PathIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags PathIriCanonical
void System::Uri::Flags::_set_PathIriCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_PathIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "PathIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags QueryIriCanonical
::System::Uri::Flags System::Uri::Flags::_get_QueryIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_QueryIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "QueryIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags QueryIriCanonical
void System::Uri::Flags::_set_QueryIriCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_QueryIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "QueryIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags FragmentIriCanonical
::System::Uri::Flags System::Uri::Flags::_get_FragmentIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_FragmentIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "FragmentIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags FragmentIriCanonical
void System::Uri::Flags::_set_FragmentIriCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_FragmentIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "FragmentIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags IriCanonical
::System::Uri::Flags System::Uri::Flags::_get_IriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_IriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "IriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags IriCanonical
void System::Uri::Flags::_set_IriCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_IriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags CompressedSlashes
::System::Uri::Flags System::Uri::Flags::_get_CompressedSlashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_CompressedSlashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "CompressedSlashes"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags CompressedSlashes
void System::Uri::Flags::_set_CompressedSlashes(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_CompressedSlashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "CompressedSlashes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 value__
[[deprecated("Use field access instead!")]] uint64_t& System::Uri::Flags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Uri/UriInfo
#include "System/Uri_UriInfo.hpp"
// Including type: System.Uri/MoreInfo
#include "System/Uri_MoreInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Host
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::UriInfo::dyn_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UriInfo::dyn_Host");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Host"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ScopeId
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::UriInfo::dyn_ScopeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UriInfo::dyn_ScopeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScopeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String String
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::UriInfo::dyn_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UriInfo::dyn_String");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "String"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Uri/Offset Offset
[[deprecated("Use field access instead!")]] ::System::Uri::Offset& System::Uri::UriInfo::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UriInfo::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<::System::Uri::Offset*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String DnsSafeHost
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::UriInfo::dyn_DnsSafeHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UriInfo::dyn_DnsSafeHost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DnsSafeHost"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Uri/MoreInfo MoreInfo
[[deprecated("Use field access instead!")]] ::System::Uri::MoreInfo*& System::Uri::UriInfo::dyn_MoreInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UriInfo::dyn_MoreInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MoreInfo"))->offset;
  return *reinterpret_cast<::System::Uri::MoreInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Uri/MoreInfo
#include "System/Uri_MoreInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Path
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::MoreInfo::dyn_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::MoreInfo::dyn_Path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Query
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::MoreInfo::dyn_Query() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::MoreInfo::dyn_Query");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Query"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Fragment
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::MoreInfo::dyn_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::MoreInfo::dyn_Fragment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Fragment"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String AbsoluteUri
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::MoreInfo::dyn_AbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::MoreInfo::dyn_AbsoluteUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AbsoluteUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Hash
[[deprecated("Use field access instead!")]] int& System::Uri::MoreInfo::dyn_Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::MoreInfo::dyn_Hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RemoteUrl
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::MoreInfo::dyn_RemoteUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::MoreInfo::dyn_RemoteUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RemoteUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Uri/Check
#include "System/Uri_Check.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Uri/Check None
::System::Uri::Check System::Uri::Check::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check None
void System::Uri::Check::_set_None(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check EscapedCanonical
::System::Uri::Check System::Uri::Check::_get_EscapedCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_EscapedCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "EscapedCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check EscapedCanonical
void System::Uri::Check::_set_EscapedCanonical(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_EscapedCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "EscapedCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check DisplayCanonical
::System::Uri::Check System::Uri::Check::_get_DisplayCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_DisplayCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "DisplayCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check DisplayCanonical
void System::Uri::Check::_set_DisplayCanonical(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_DisplayCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "DisplayCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check DotSlashAttn
::System::Uri::Check System::Uri::Check::_get_DotSlashAttn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_DotSlashAttn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "DotSlashAttn"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check DotSlashAttn
void System::Uri::Check::_set_DotSlashAttn(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_DotSlashAttn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "DotSlashAttn", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check DotSlashEscaped
::System::Uri::Check System::Uri::Check::_get_DotSlashEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_DotSlashEscaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "DotSlashEscaped"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check DotSlashEscaped
void System::Uri::Check::_set_DotSlashEscaped(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_DotSlashEscaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "DotSlashEscaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check BackslashInPath
::System::Uri::Check System::Uri::Check::_get_BackslashInPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_BackslashInPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "BackslashInPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check BackslashInPath
void System::Uri::Check::_set_BackslashInPath(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_BackslashInPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "BackslashInPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check ReservedFound
::System::Uri::Check System::Uri::Check::_get_ReservedFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_ReservedFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "ReservedFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check ReservedFound
void System::Uri::Check::_set_ReservedFound(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_ReservedFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "ReservedFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check NotIriCanonical
::System::Uri::Check System::Uri::Check::_get_NotIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_NotIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "NotIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check NotIriCanonical
void System::Uri::Check::_set_NotIriCanonical(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_NotIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "NotIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check FoundNonAscii
::System::Uri::Check System::Uri::Check::_get_FoundNonAscii() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_FoundNonAscii");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "FoundNonAscii"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check FoundNonAscii
void System::Uri::Check::_set_FoundNonAscii(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_FoundNonAscii");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "FoundNonAscii", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Uri::Check::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.UriFormatException
#include "System/UriFormatException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UriFormatException.System.Runtime.Serialization.ISerializable.GetObjectData
void System::UriFormatException::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormatException::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::UriFormatException*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.UriKind
#include "System/UriKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriKind RelativeOrAbsolute
::System::UriKind System::UriKind::_get_RelativeOrAbsolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::_get_RelativeOrAbsolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriKind>("System", "UriKind", "RelativeOrAbsolute"));
}
// Autogenerated static field setter
// Set static field: static public System.UriKind RelativeOrAbsolute
void System::UriKind::_set_RelativeOrAbsolute(::System::UriKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::_set_RelativeOrAbsolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriKind", "RelativeOrAbsolute", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriKind Absolute
::System::UriKind System::UriKind::_get_Absolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::_get_Absolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriKind>("System", "UriKind", "Absolute"));
}
// Autogenerated static field setter
// Set static field: static public System.UriKind Absolute
void System::UriKind::_set_Absolute(::System::UriKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::_set_Absolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriKind", "Absolute", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriKind Relative
::System::UriKind System::UriKind::_get_Relative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::_get_Relative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriKind>("System", "UriKind", "Relative"));
}
// Autogenerated static field setter
// Set static field: static public System.UriKind Relative
void System::UriKind::_set_Relative(::System::UriKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::_set_Relative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriKind", "Relative", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::UriKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriComponents Scheme
::System::UriComponents System::UriComponents::_get_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_Scheme");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "Scheme"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Scheme
void System::UriComponents::_set_Scheme(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_Scheme");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Scheme", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents UserInfo
::System::UriComponents System::UriComponents::_get_UserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_UserInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "UserInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents UserInfo
void System::UriComponents::_set_UserInfo(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_UserInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "UserInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Host
::System::UriComponents System::UriComponents::_get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_Host");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "Host"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Host
void System::UriComponents::_set_Host(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_Host");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Host", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Port
::System::UriComponents System::UriComponents::_get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_Port");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "Port"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Port
void System::UriComponents::_set_Port(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_Port");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Port", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Path
::System::UriComponents System::UriComponents::_get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_Path");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "Path"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Path
void System::UriComponents::_set_Path(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_Path");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Path", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Query
::System::UriComponents System::UriComponents::_get_Query() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_Query");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "Query"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Query
void System::UriComponents::_set_Query(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_Query");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Query", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Fragment
::System::UriComponents System::UriComponents::_get_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_Fragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "Fragment"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Fragment
void System::UriComponents::_set_Fragment(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_Fragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Fragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents StrongPort
::System::UriComponents System::UriComponents::_get_StrongPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_StrongPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "StrongPort"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents StrongPort
void System::UriComponents::_set_StrongPort(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_StrongPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "StrongPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents NormalizedHost
::System::UriComponents System::UriComponents::_get_NormalizedHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_NormalizedHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "NormalizedHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents NormalizedHost
void System::UriComponents::_set_NormalizedHost(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_NormalizedHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "NormalizedHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents KeepDelimiter
::System::UriComponents System::UriComponents::_get_KeepDelimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_KeepDelimiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "KeepDelimiter"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents KeepDelimiter
void System::UriComponents::_set_KeepDelimiter(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_KeepDelimiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "KeepDelimiter", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents SerializationInfoString
::System::UriComponents System::UriComponents::_get_SerializationInfoString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_SerializationInfoString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "SerializationInfoString"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents SerializationInfoString
void System::UriComponents::_set_SerializationInfoString(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_SerializationInfoString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "SerializationInfoString", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents AbsoluteUri
::System::UriComponents System::UriComponents::_get_AbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_AbsoluteUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "AbsoluteUri"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents AbsoluteUri
void System::UriComponents::_set_AbsoluteUri(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_AbsoluteUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "AbsoluteUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents HostAndPort
::System::UriComponents System::UriComponents::_get_HostAndPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_HostAndPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "HostAndPort"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents HostAndPort
void System::UriComponents::_set_HostAndPort(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_HostAndPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "HostAndPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents StrongAuthority
::System::UriComponents System::UriComponents::_get_StrongAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_StrongAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "StrongAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents StrongAuthority
void System::UriComponents::_set_StrongAuthority(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_StrongAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "StrongAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents SchemeAndServer
::System::UriComponents System::UriComponents::_get_SchemeAndServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_SchemeAndServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "SchemeAndServer"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents SchemeAndServer
void System::UriComponents::_set_SchemeAndServer(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_SchemeAndServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "SchemeAndServer", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents HttpRequestUrl
::System::UriComponents System::UriComponents::_get_HttpRequestUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_HttpRequestUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "HttpRequestUrl"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents HttpRequestUrl
void System::UriComponents::_set_HttpRequestUrl(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_HttpRequestUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "HttpRequestUrl", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents PathAndQuery
::System::UriComponents System::UriComponents::_get_PathAndQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_PathAndQuery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "PathAndQuery"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents PathAndQuery
void System::UriComponents::_set_PathAndQuery(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_PathAndQuery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "PathAndQuery", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::UriComponents::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.UriFormat
#include "System/UriFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriFormat UriEscaped
::System::UriFormat System::UriFormat::_get_UriEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::_get_UriEscaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriFormat>("System", "UriFormat", "UriEscaped"));
}
// Autogenerated static field setter
// Set static field: static public System.UriFormat UriEscaped
void System::UriFormat::_set_UriEscaped(::System::UriFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::_set_UriEscaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriFormat", "UriEscaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriFormat Unescaped
::System::UriFormat System::UriFormat::_get_Unescaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::_get_Unescaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriFormat>("System", "UriFormat", "Unescaped"));
}
// Autogenerated static field setter
// Set static field: static public System.UriFormat Unescaped
void System::UriFormat::_set_Unescaped(::System::UriFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::_set_Unescaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriFormat", "Unescaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriFormat SafeUnescaped
::System::UriFormat System::UriFormat::_get_SafeUnescaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::_get_SafeUnescaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriFormat>("System", "UriFormat", "SafeUnescaped"));
}
// Autogenerated static field setter
// Set static field: static public System.UriFormat SafeUnescaped
void System::UriFormat::_set_SafeUnescaped(::System::UriFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::_set_SafeUnescaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriFormat", "SafeUnescaped", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::UriFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.UriIdnScope
#include "System/UriIdnScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriIdnScope None
::System::UriIdnScope System::UriIdnScope::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriIdnScope>("System", "UriIdnScope", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.UriIdnScope None
void System::UriIdnScope::_set_None(::System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriIdnScope", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriIdnScope AllExceptIntranet
::System::UriIdnScope System::UriIdnScope::_get_AllExceptIntranet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::_get_AllExceptIntranet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriIdnScope>("System", "UriIdnScope", "AllExceptIntranet"));
}
// Autogenerated static field setter
// Set static field: static public System.UriIdnScope AllExceptIntranet
void System::UriIdnScope::_set_AllExceptIntranet(::System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::_set_AllExceptIntranet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriIdnScope", "AllExceptIntranet", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriIdnScope All
::System::UriIdnScope System::UriIdnScope::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriIdnScope>("System", "UriIdnScope", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.UriIdnScope All
void System::UriIdnScope::_set_All(::System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriIdnScope", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::UriIdnScope::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ParsingError
#include "System/ParsingError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ParsingError None
::System::ParsingError System::ParsingError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError None
void System::ParsingError::_set_None(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadFormat
::System::ParsingError System::ParsingError::_get_BadFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_BadFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "BadFormat"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadFormat
void System::ParsingError::_set_BadFormat(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_BadFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadFormat", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadScheme
::System::ParsingError System::ParsingError::_get_BadScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_BadScheme");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "BadScheme"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadScheme
void System::ParsingError::_set_BadScheme(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_BadScheme");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadScheme", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadAuthority
::System::ParsingError System::ParsingError::_get_BadAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_BadAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "BadAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadAuthority
void System::ParsingError::_set_BadAuthority(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_BadAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError EmptyUriString
::System::ParsingError System::ParsingError::_get_EmptyUriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_EmptyUriString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "EmptyUriString"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError EmptyUriString
void System::ParsingError::_set_EmptyUriString(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_EmptyUriString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "EmptyUriString", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError LastRelativeUriOkErrIndex
::System::ParsingError System::ParsingError::_get_LastRelativeUriOkErrIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_LastRelativeUriOkErrIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "LastRelativeUriOkErrIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError LastRelativeUriOkErrIndex
void System::ParsingError::_set_LastRelativeUriOkErrIndex(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_LastRelativeUriOkErrIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "LastRelativeUriOkErrIndex", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError SchemeLimit
::System::ParsingError System::ParsingError::_get_SchemeLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_SchemeLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "SchemeLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError SchemeLimit
void System::ParsingError::_set_SchemeLimit(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_SchemeLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "SchemeLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError SizeLimit
::System::ParsingError System::ParsingError::_get_SizeLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_SizeLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "SizeLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError SizeLimit
void System::ParsingError::_set_SizeLimit(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_SizeLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "SizeLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError MustRootedPath
::System::ParsingError System::ParsingError::_get_MustRootedPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_MustRootedPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "MustRootedPath"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError MustRootedPath
void System::ParsingError::_set_MustRootedPath(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_MustRootedPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "MustRootedPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadHostName
::System::ParsingError System::ParsingError::_get_BadHostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_BadHostName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "BadHostName"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadHostName
void System::ParsingError::_set_BadHostName(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_BadHostName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadHostName", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError NonEmptyHost
::System::ParsingError System::ParsingError::_get_NonEmptyHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_NonEmptyHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "NonEmptyHost"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError NonEmptyHost
void System::ParsingError::_set_NonEmptyHost(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_NonEmptyHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "NonEmptyHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadPort
::System::ParsingError System::ParsingError::_get_BadPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_BadPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "BadPort"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadPort
void System::ParsingError::_set_BadPort(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_BadPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadAuthorityTerminator
::System::ParsingError System::ParsingError::_get_BadAuthorityTerminator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_BadAuthorityTerminator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "BadAuthorityTerminator"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadAuthorityTerminator
void System::ParsingError::_set_BadAuthorityTerminator(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_BadAuthorityTerminator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadAuthorityTerminator", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError CannotCreateRelative
::System::ParsingError System::ParsingError::_get_CannotCreateRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_CannotCreateRelative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "CannotCreateRelative"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError CannotCreateRelative
void System::ParsingError::_set_CannotCreateRelative(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_CannotCreateRelative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "CannotCreateRelative", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ParsingError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.UnescapeMode
#include "System/UnescapeMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode CopyOnly
::System::UnescapeMode System::UnescapeMode::_get_CopyOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_CopyOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "CopyOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode CopyOnly
void System::UnescapeMode::_set_CopyOnly(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_CopyOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "CopyOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode Escape
::System::UnescapeMode System::UnescapeMode::_get_Escape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_Escape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "Escape"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode Escape
void System::UnescapeMode::_set_Escape(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_Escape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "Escape", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode Unescape
::System::UnescapeMode System::UnescapeMode::_get_Unescape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_Unescape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "Unescape"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode Unescape
void System::UnescapeMode::_set_Unescape(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_Unescape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "Unescape", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode EscapeUnescape
::System::UnescapeMode System::UnescapeMode::_get_EscapeUnescape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_EscapeUnescape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "EscapeUnescape"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode EscapeUnescape
void System::UnescapeMode::_set_EscapeUnescape(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_EscapeUnescape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "EscapeUnescape", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode V1ToStringFlag
::System::UnescapeMode System::UnescapeMode::_get_V1ToStringFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_V1ToStringFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "V1ToStringFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode V1ToStringFlag
void System::UnescapeMode::_set_V1ToStringFlag(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_V1ToStringFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "V1ToStringFlag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode UnescapeAll
::System::UnescapeMode System::UnescapeMode::_get_UnescapeAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_UnescapeAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "UnescapeAll"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode UnescapeAll
void System::UnescapeMode::_set_UnescapeAll(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_UnescapeAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "UnescapeAll", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode UnescapeAllOrThrow
::System::UnescapeMode System::UnescapeMode::_get_UnescapeAllOrThrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_UnescapeAllOrThrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "UnescapeAllOrThrow"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode UnescapeAllOrThrow
void System::UnescapeMode::_set_UnescapeAllOrThrow(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_UnescapeAllOrThrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "UnescapeAllOrThrow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::UnescapeMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.UriHelper
#include "System/UriHelper.hpp"
// Including type: System.UnescapeMode
#include "System/UnescapeMode.hpp"
// Including type: System.UriParser
#include "System/UriParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] HexUpperChars
::ArrayW<::Il2CppChar> System::UriHelper::_get_HexUpperChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::_get_HexUpperChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System", "UriHelper", "HexUpperChars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] HexUpperChars
void System::UriHelper::_set_HexUpperChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::_set_HexUpperChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHelper", "HexUpperChars", value));
}
// Autogenerated method: System.UriHelper.TestForSubPath
bool System::UriHelper::TestForSubPath(::Il2CppChar* pMe, uint16_t meLength, ::Il2CppChar* pShe, uint16_t sheLength, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::TestForSubPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "TestForSubPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pMe), ::il2cpp_utils::ExtractType(meLength), ::il2cpp_utils::ExtractType(pShe), ::il2cpp_utils::ExtractType(sheLength), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pMe, meLength, pShe, sheLength, ignoreCase);
}
// Autogenerated method: System.UriHelper.EscapeString
::ArrayW<::Il2CppChar> System::UriHelper::EscapeString(::StringW input, int start, int end, ::ArrayW<::Il2CppChar> dest, ByRef<int> destPos, bool isUriString, ::Il2CppChar force1, ::Il2CppChar force2, ::Il2CppChar rsvd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::EscapeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "EscapeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(destPos), ::il2cpp_utils::ExtractType(isUriString), ::il2cpp_utils::ExtractType(force1), ::il2cpp_utils::ExtractType(force2), ::il2cpp_utils::ExtractType(rsvd)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, start, end, dest, byref(destPos), isUriString, force1, force2, rsvd);
}
// Autogenerated method: System.UriHelper.EnsureDestinationSize
::ArrayW<::Il2CppChar> System::UriHelper::EnsureDestinationSize(::Il2CppChar* pStr, ::ArrayW<::Il2CppChar> dest, int currentInputPos, int16_t charsToAdd, int16_t minReallocateChars, ByRef<int> destPos, int prevInputPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::EnsureDestinationSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "EnsureDestinationSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pStr), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(currentInputPos), ::il2cpp_utils::ExtractType(charsToAdd), ::il2cpp_utils::ExtractType(minReallocateChars), ::il2cpp_utils::ExtractType(destPos), ::il2cpp_utils::ExtractType(prevInputPos)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pStr, dest, currentInputPos, charsToAdd, minReallocateChars, byref(destPos), prevInputPos);
}
// Autogenerated method: System.UriHelper.UnescapeString
::ArrayW<::Il2CppChar> System::UriHelper::UnescapeString(::StringW input, int start, int end, ::ArrayW<::Il2CppChar> dest, ByRef<int> destPosition, ::Il2CppChar rsvd1, ::Il2CppChar rsvd2, ::Il2CppChar rsvd3, ::System::UnescapeMode unescapeMode, ::System::UriParser* syntax, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::UnescapeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "UnescapeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(destPosition), ::il2cpp_utils::ExtractType(rsvd1), ::il2cpp_utils::ExtractType(rsvd2), ::il2cpp_utils::ExtractType(rsvd3), ::il2cpp_utils::ExtractType(unescapeMode), ::il2cpp_utils::ExtractType(syntax), ::il2cpp_utils::ExtractType(isQuery)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, start, end, dest, byref(destPosition), rsvd1, rsvd2, rsvd3, unescapeMode, syntax, isQuery);
}
// Autogenerated method: System.UriHelper.UnescapeString
::ArrayW<::Il2CppChar> System::UriHelper::UnescapeString(::Il2CppChar* pStr, int start, int end, ::ArrayW<::Il2CppChar> dest, ByRef<int> destPosition, ::Il2CppChar rsvd1, ::Il2CppChar rsvd2, ::Il2CppChar rsvd3, ::System::UnescapeMode unescapeMode, ::System::UriParser* syntax, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::UnescapeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "UnescapeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pStr), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(destPosition), ::il2cpp_utils::ExtractType(rsvd1), ::il2cpp_utils::ExtractType(rsvd2), ::il2cpp_utils::ExtractType(rsvd3), ::il2cpp_utils::ExtractType(unescapeMode), ::il2cpp_utils::ExtractType(syntax), ::il2cpp_utils::ExtractType(isQuery)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pStr, start, end, dest, byref(destPosition), rsvd1, rsvd2, rsvd3, unescapeMode, syntax, isQuery);
}
// Autogenerated method: System.UriHelper.MatchUTF8Sequence
void System::UriHelper::MatchUTF8Sequence(::Il2CppChar* pDest, ::ArrayW<::Il2CppChar> dest, ByRef<int> destOffset, ::ArrayW<::Il2CppChar> unescapedChars, int charCount, ::ArrayW<uint8_t> bytes, int byteCount, bool isQuery, bool iriParsing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::MatchUTF8Sequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "MatchUTF8Sequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDest), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(destOffset), ::il2cpp_utils::ExtractType(unescapedChars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(isQuery), ::il2cpp_utils::ExtractType(iriParsing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDest, dest, byref(destOffset), unescapedChars, charCount, bytes, byteCount, isQuery, iriParsing);
}
// Autogenerated method: System.UriHelper.EscapeAsciiChar
void System::UriHelper::EscapeAsciiChar(::Il2CppChar ch, ::ArrayW<::Il2CppChar> to, ByRef<int> pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::EscapeAsciiChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "EscapeAsciiChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, to, byref(pos));
}
// Autogenerated method: System.UriHelper.EscapedAscii
::Il2CppChar System::UriHelper::EscapedAscii(::Il2CppChar digit, ::Il2CppChar next) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::EscapedAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "EscapedAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(digit), ::il2cpp_utils::ExtractType(next)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, digit, next);
}
// Autogenerated method: System.UriHelper.IsNotSafeForUnescape
bool System::UriHelper::IsNotSafeForUnescape(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::IsNotSafeForUnescape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "IsNotSafeForUnescape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.UriHelper.IsReservedUnreservedOrHash
bool System::UriHelper::IsReservedUnreservedOrHash(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::IsReservedUnreservedOrHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "IsReservedUnreservedOrHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.UriHelper.IsUnreserved
bool System::UriHelper::IsUnreserved(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::IsUnreserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "IsUnreserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.UriHelper.Is3986Unreserved
bool System::UriHelper::Is3986Unreserved(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::Is3986Unreserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "Is3986Unreserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.UriHelper..cctor
void System::UriHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.UriHostNameType
#include "System/UriHostNameType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType Unknown
::System::UriHostNameType System::UriHostNameType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriHostNameType>("System", "UriHostNameType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType Unknown
void System::UriHostNameType::_set_Unknown(::System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType Basic
::System::UriHostNameType System::UriHostNameType::_get_Basic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_get_Basic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriHostNameType>("System", "UriHostNameType", "Basic"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType Basic
void System::UriHostNameType::_set_Basic(::System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_set_Basic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "Basic", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType Dns
::System::UriHostNameType System::UriHostNameType::_get_Dns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_get_Dns");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriHostNameType>("System", "UriHostNameType", "Dns"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType Dns
void System::UriHostNameType::_set_Dns(::System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_set_Dns");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "Dns", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType IPv4
::System::UriHostNameType System::UriHostNameType::_get_IPv4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_get_IPv4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriHostNameType>("System", "UriHostNameType", "IPv4"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType IPv4
void System::UriHostNameType::_set_IPv4(::System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_set_IPv4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "IPv4", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType IPv6
::System::UriHostNameType System::UriHostNameType::_get_IPv6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_get_IPv6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriHostNameType>("System", "UriHostNameType", "IPv6"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType IPv6
void System::UriHostNameType::_set_IPv6(::System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_set_IPv6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "IPv6", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::UriHostNameType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.UriParser
#include "System/UriParser.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.UriParser/BuiltInUriParser
#include "System/UriParser_BuiltInUriParser.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.UriFormatException
#include "System/UriFormatException.hpp"
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
// Including type: System.UriFormat
#include "System/UriFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UriSyntaxFlags SchemeOnlyFlags
::System::UriSyntaxFlags System::UriParser::_get_SchemeOnlyFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_SchemeOnlyFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "SchemeOnlyFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.UriSyntaxFlags SchemeOnlyFlags
void System::UriParser::_set_SchemeOnlyFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_SchemeOnlyFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "SchemeOnlyFlags", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_Table
::System::Collections::Generic::Dictionary_2<::StringW, ::System::UriParser*>* System::UriParser::_get_m_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_m_Table");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::UriParser*>*>("System", "UriParser", "m_Table")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_Table
void System::UriParser::_set_m_Table(::System::Collections::Generic::Dictionary_2<::StringW, ::System::UriParser*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_m_Table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "m_Table", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_TempTable
::System::Collections::Generic::Dictionary_2<::StringW, ::System::UriParser*>* System::UriParser::_get_m_TempTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_m_TempTable");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::UriParser*>*>("System", "UriParser", "m_TempTable")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_TempTable
void System::UriParser::_set_m_TempTable(::System::Collections::Generic::Dictionary_2<::StringW, ::System::UriParser*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_m_TempTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "m_TempTable", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriSyntaxFlags c_UpdatableFlags
::System::UriSyntaxFlags System::UriParser::_get_c_UpdatableFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_c_UpdatableFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "c_UpdatableFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.UriSyntaxFlags c_UpdatableFlags
void System::UriParser::_set_c_UpdatableFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_c_UpdatableFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "c_UpdatableFlags", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 NoDefaultPort
int System::UriParser::_get_NoDefaultPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_NoDefaultPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "UriParser", "NoDefaultPort"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 NoDefaultPort
void System::UriParser::_set_NoDefaultPort(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_NoDefaultPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NoDefaultPort", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 c_InitialTableSize
int System::UriParser::_get_c_InitialTableSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_c_InitialTableSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "UriParser", "c_InitialTableSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 c_InitialTableSize
void System::UriParser::_set_c_InitialTableSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_c_InitialTableSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "c_InitialTableSize", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser HttpUri
::System::UriParser* System::UriParser::_get_HttpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_HttpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "HttpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser HttpUri
void System::UriParser::_set_HttpUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_HttpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "HttpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser HttpsUri
::System::UriParser* System::UriParser::_get_HttpsUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_HttpsUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "HttpsUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser HttpsUri
void System::UriParser::_set_HttpsUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_HttpsUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "HttpsUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser WsUri
::System::UriParser* System::UriParser::_get_WsUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_WsUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "WsUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser WsUri
void System::UriParser::_set_WsUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_WsUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "WsUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser WssUri
::System::UriParser* System::UriParser::_get_WssUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_WssUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "WssUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser WssUri
void System::UriParser::_set_WssUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_WssUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "WssUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser FtpUri
::System::UriParser* System::UriParser::_get_FtpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_FtpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "FtpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser FtpUri
void System::UriParser::_set_FtpUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_FtpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "FtpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser FileUri
::System::UriParser* System::UriParser::_get_FileUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_FileUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "FileUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser FileUri
void System::UriParser::_set_FileUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_FileUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "FileUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser GopherUri
::System::UriParser* System::UriParser::_get_GopherUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_GopherUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "GopherUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser GopherUri
void System::UriParser::_set_GopherUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_GopherUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "GopherUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NntpUri
::System::UriParser* System::UriParser::_get_NntpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_NntpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "NntpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NntpUri
void System::UriParser::_set_NntpUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_NntpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NntpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NewsUri
::System::UriParser* System::UriParser::_get_NewsUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_NewsUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "NewsUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NewsUri
void System::UriParser::_set_NewsUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_NewsUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NewsUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser MailToUri
::System::UriParser* System::UriParser::_get_MailToUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_MailToUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "MailToUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser MailToUri
void System::UriParser::_set_MailToUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_MailToUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "MailToUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser UuidUri
::System::UriParser* System::UriParser::_get_UuidUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_UuidUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "UuidUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser UuidUri
void System::UriParser::_set_UuidUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_UuidUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "UuidUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser TelnetUri
::System::UriParser* System::UriParser::_get_TelnetUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_TelnetUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "TelnetUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser TelnetUri
void System::UriParser::_set_TelnetUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_TelnetUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "TelnetUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser LdapUri
::System::UriParser* System::UriParser::_get_LdapUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_LdapUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "LdapUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser LdapUri
void System::UriParser::_set_LdapUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_LdapUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "LdapUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NetTcpUri
::System::UriParser* System::UriParser::_get_NetTcpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_NetTcpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "NetTcpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NetTcpUri
void System::UriParser::_set_NetTcpUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_NetTcpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NetTcpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NetPipeUri
::System::UriParser* System::UriParser::_get_NetPipeUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_NetPipeUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "NetPipeUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NetPipeUri
void System::UriParser::_set_NetPipeUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_NetPipeUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NetPipeUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser VsMacrosUri
::System::UriParser* System::UriParser::_get_VsMacrosUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_VsMacrosUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "VsMacrosUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser VsMacrosUri
void System::UriParser::_set_VsMacrosUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_VsMacrosUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "VsMacrosUri", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UriParser/UriQuirksVersion s_QuirksVersion
::System::UriParser::UriQuirksVersion System::UriParser::_get_s_QuirksVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_s_QuirksVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser::UriQuirksVersion>("System", "UriParser", "s_QuirksVersion"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UriParser/UriQuirksVersion s_QuirksVersion
void System::UriParser::_set_s_QuirksVersion(::System::UriParser::UriQuirksVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_s_QuirksVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "s_QuirksVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 c_MaxCapacity
int System::UriParser::_get_c_MaxCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_c_MaxCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "UriParser", "c_MaxCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 c_MaxCapacity
void System::UriParser::_set_c_MaxCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_c_MaxCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "c_MaxCapacity", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriSyntaxFlags UnknownV1SyntaxFlags
::System::UriSyntaxFlags System::UriParser::_get_UnknownV1SyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_UnknownV1SyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "UnknownV1SyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.UriSyntaxFlags UnknownV1SyntaxFlags
void System::UriParser::_set_UnknownV1SyntaxFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_UnknownV1SyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "UnknownV1SyntaxFlags", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UriSyntaxFlags HttpSyntaxFlags
::System::UriSyntaxFlags System::UriParser::_get_HttpSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_HttpSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "HttpSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UriSyntaxFlags HttpSyntaxFlags
void System::UriParser::_set_HttpSyntaxFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_HttpSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "HttpSyntaxFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriSyntaxFlags FtpSyntaxFlags
::System::UriSyntaxFlags System::UriParser::_get_FtpSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_FtpSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "FtpSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.UriSyntaxFlags FtpSyntaxFlags
void System::UriParser::_set_FtpSyntaxFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_FtpSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "FtpSyntaxFlags", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UriSyntaxFlags FileSyntaxFlags
::System::UriSyntaxFlags System::UriParser::_get_FileSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_FileSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "FileSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UriSyntaxFlags FileSyntaxFlags
void System::UriParser::_set_FileSyntaxFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_FileSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "FileSyntaxFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriSyntaxFlags VsmacrosSyntaxFlags
::System::UriSyntaxFlags System::UriParser::_get_VsmacrosSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_VsmacrosSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "VsmacrosSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.UriSyntaxFlags VsmacrosSyntaxFlags
void System::UriParser::_set_VsmacrosSyntaxFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_VsmacrosSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "VsmacrosSyntaxFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriSyntaxFlags GopherSyntaxFlags
::System::UriSyntaxFlags System::UriParser::_get_GopherSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_GopherSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "GopherSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.UriSyntaxFlags GopherSyntaxFlags
void System::UriParser::_set_GopherSyntaxFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_GopherSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "GopherSyntaxFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriSyntaxFlags NewsSyntaxFlags
::System::UriSyntaxFlags System::UriParser::_get_NewsSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_NewsSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "NewsSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.UriSyntaxFlags NewsSyntaxFlags
void System::UriParser::_set_NewsSyntaxFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_NewsSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NewsSyntaxFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriSyntaxFlags NntpSyntaxFlags
::System::UriSyntaxFlags System::UriParser::_get_NntpSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_NntpSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "NntpSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.UriSyntaxFlags NntpSyntaxFlags
void System::UriParser::_set_NntpSyntaxFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_NntpSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NntpSyntaxFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriSyntaxFlags TelnetSyntaxFlags
::System::UriSyntaxFlags System::UriParser::_get_TelnetSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_TelnetSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "TelnetSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.UriSyntaxFlags TelnetSyntaxFlags
void System::UriParser::_set_TelnetSyntaxFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_TelnetSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "TelnetSyntaxFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriSyntaxFlags LdapSyntaxFlags
::System::UriSyntaxFlags System::UriParser::_get_LdapSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_LdapSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "LdapSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.UriSyntaxFlags LdapSyntaxFlags
void System::UriParser::_set_LdapSyntaxFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_LdapSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "LdapSyntaxFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriSyntaxFlags MailtoSyntaxFlags
::System::UriSyntaxFlags System::UriParser::_get_MailtoSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_MailtoSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "MailtoSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.UriSyntaxFlags MailtoSyntaxFlags
void System::UriParser::_set_MailtoSyntaxFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_MailtoSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "MailtoSyntaxFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriSyntaxFlags NetPipeSyntaxFlags
::System::UriSyntaxFlags System::UriParser::_get_NetPipeSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_NetPipeSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "NetPipeSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.UriSyntaxFlags NetPipeSyntaxFlags
void System::UriParser::_set_NetPipeSyntaxFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_NetPipeSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NetPipeSyntaxFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriSyntaxFlags NetTcpSyntaxFlags
::System::UriSyntaxFlags System::UriParser::_get_NetTcpSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_NetTcpSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "NetTcpSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.UriSyntaxFlags NetTcpSyntaxFlags
void System::UriParser::_set_NetTcpSyntaxFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_NetTcpSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NetTcpSyntaxFlags", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UriSyntaxFlags m_Flags
[[deprecated("Use field access instead!")]] ::System::UriSyntaxFlags& System::UriParser::dyn_m_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::dyn_m_Flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Flags"))->offset;
  return *reinterpret_cast<::System::UriSyntaxFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UriSyntaxFlags m_UpdatableFlags
[[deprecated("Use field access instead!")]] ::System::UriSyntaxFlags& System::UriParser::dyn_m_UpdatableFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::dyn_m_UpdatableFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdatableFlags"))->offset;
  return *reinterpret_cast<::System::UriSyntaxFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UpdatableFlagsUsed
[[deprecated("Use field access instead!")]] bool& System::UriParser::dyn_m_UpdatableFlagsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::dyn_m_UpdatableFlagsUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdatableFlagsUsed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Port
[[deprecated("Use field access instead!")]] int& System::UriParser::dyn_m_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::dyn_m_Port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_Scheme
[[deprecated("Use field access instead!")]] ::StringW& System::UriParser::dyn_m_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::dyn_m_Scheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Scheme"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.UriParser.get_SchemeName
::StringW System::UriParser::get_SchemeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::get_SchemeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.get_DefaultPort
int System::UriParser::get_DefaultPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::get_DefaultPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.OnNewUri
::System::UriParser* System::UriParser::OnNewUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::OnNewUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::UriParser*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriParser*, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.InitializeAndValidate
void System::UriParser::InitializeAndValidate(::System::Uri* uri, ByRef<::System::UriFormatException*> parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InitializeAndValidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::UriParser*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri, byref(parsingError));
}
// Autogenerated method: System.UriParser.Resolve
::StringW System::UriParser::Resolve(::System::Uri* baseUri, ::System::Uri* relativeUri, ByRef<::System::UriFormatException*> parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::Resolve");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::UriParser*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, baseUri, relativeUri, byref(parsingError));
}
// Autogenerated method: System.UriParser.IsBaseOf
bool System::UriParser::IsBaseOf(::System::Uri* baseUri, ::System::Uri* relativeUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::IsBaseOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::UriParser*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, baseUri, relativeUri);
}
// Autogenerated method: System.UriParser.GetComponents
::StringW System::UriParser::GetComponents(::System::Uri* uri, ::System::UriComponents components, ::System::UriFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::GetComponents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::UriParser*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uri, components, format);
}
// Autogenerated method: System.UriParser.IsWellFormedOriginalString
bool System::UriParser::IsWellFormedOriginalString(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::IsWellFormedOriginalString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::UriParser*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.UriParser.get_ShouldUseLegacyV2Quirks
bool System::UriParser::get_ShouldUseLegacyV2Quirks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::get_ShouldUseLegacyV2Quirks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriParser", "get_ShouldUseLegacyV2Quirks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.UriParser..cctor
void System::UriParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriParser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.UriParser.get_Flags
::System::UriSyntaxFlags System::UriParser::get_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::get_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriSyntaxFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.NotAny
bool System::UriParser::NotAny(::System::UriSyntaxFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::NotAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.UriParser.InFact
bool System::UriParser::InFact(::System::UriSyntaxFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InFact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InFact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.UriParser.IsAllSet
bool System::UriParser::IsAllSet(::System::UriSyntaxFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::IsAllSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAllSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.UriParser.IsFullMatch
bool System::UriParser::IsFullMatch(::System::UriSyntaxFlags flags, ::System::UriSyntaxFlags expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::IsFullMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsFullMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(expected)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags, expected);
}
// Autogenerated method: System.UriParser.FindOrFetchAsUnknownV1Syntax
::System::UriParser* System::UriParser::FindOrFetchAsUnknownV1Syntax(::StringW lwrCaseScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::FindOrFetchAsUnknownV1Syntax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriParser", "FindOrFetchAsUnknownV1Syntax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lwrCaseScheme)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriParser*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lwrCaseScheme);
}
// Autogenerated method: System.UriParser.GetSyntax
::System::UriParser* System::UriParser::GetSyntax(::StringW lwrCaseScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::GetSyntax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriParser", "GetSyntax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lwrCaseScheme)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriParser*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lwrCaseScheme);
}
// Autogenerated method: System.UriParser.get_IsSimple
bool System::UriParser::get_IsSimple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::get_IsSimple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSimple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.InternalOnNewUri
::System::UriParser* System::UriParser::InternalOnNewUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InternalOnNewUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalOnNewUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriParser*, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.InternalValidate
void System::UriParser::InternalValidate(::System::Uri* thisUri, ByRef<::System::UriFormatException*> parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InternalValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisUri), ::il2cpp_utils::ExtractIndependentType<::System::UriFormatException*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thisUri, byref(parsingError));
}
// Autogenerated method: System.UriParser.InternalResolve
::StringW System::UriParser::InternalResolve(::System::Uri* thisBaseUri, ::System::Uri* uriLink, ByRef<::System::UriFormatException*> parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InternalResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisBaseUri), ::il2cpp_utils::ExtractType(uriLink), ::il2cpp_utils::ExtractIndependentType<::System::UriFormatException*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, thisBaseUri, uriLink, byref(parsingError));
}
// Autogenerated method: System.UriParser.InternalIsBaseOf
bool System::UriParser::InternalIsBaseOf(::System::Uri* thisBaseUri, ::System::Uri* uriLink) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InternalIsBaseOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalIsBaseOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisBaseUri), ::il2cpp_utils::ExtractType(uriLink)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, thisBaseUri, uriLink);
}
// Autogenerated method: System.UriParser.InternalGetComponents
::StringW System::UriParser::InternalGetComponents(::System::Uri* thisUri, ::System::UriComponents uriComponents, ::System::UriFormat uriFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InternalGetComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisUri), ::il2cpp_utils::ExtractType(uriComponents), ::il2cpp_utils::ExtractType(uriFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, thisUri, uriComponents, uriFormat);
}
// Autogenerated method: System.UriParser.InternalIsWellFormedOriginalString
bool System::UriParser::InternalIsWellFormedOriginalString(::System::Uri* thisUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InternalIsWellFormedOriginalString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalIsWellFormedOriginalString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisUri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, thisUri);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.UriParser/UriQuirksVersion
#include "System/UriParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriParser/UriQuirksVersion V2
::System::UriParser::UriQuirksVersion System::UriParser::UriQuirksVersion::_get_V2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::UriQuirksVersion::_get_V2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser::UriQuirksVersion>("System", "UriParser/UriQuirksVersion", "V2"));
}
// Autogenerated static field setter
// Set static field: static public System.UriParser/UriQuirksVersion V2
void System::UriParser::UriQuirksVersion::_set_V2(::System::UriParser::UriQuirksVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::UriQuirksVersion::_set_V2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser/UriQuirksVersion", "V2", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriParser/UriQuirksVersion V3
::System::UriParser::UriQuirksVersion System::UriParser::UriQuirksVersion::_get_V3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::UriQuirksVersion::_get_V3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser::UriQuirksVersion>("System", "UriParser/UriQuirksVersion", "V3"));
}
// Autogenerated static field setter
// Set static field: static public System.UriParser/UriQuirksVersion V3
void System::UriParser::UriQuirksVersion::_set_V3(::System::UriParser::UriQuirksVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::UriQuirksVersion::_set_V3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser/UriQuirksVersion", "V3", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::UriParser::UriQuirksVersion::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::UriQuirksVersion::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.UriParser/BuiltInUriParser
#include "System/UriParser_BuiltInUriParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.DomainNameHelper
#include "System/DomainNameHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.DomainNameHelper.ParseCanonicalName
::StringW System::DomainNameHelper::ParseCanonicalName(::StringW str, int start, int end, ByRef<bool> loopback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::ParseCanonicalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "ParseCanonicalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(loopback)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, start, end, byref(loopback));
}
// Autogenerated method: System.DomainNameHelper.IsValid
bool System::DomainNameHelper::IsValid(::Il2CppChar* name, uint16_t pos, ByRef<int> returnedEnd, ByRef<bool> notCanonical, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(returnedEnd), ::il2cpp_utils::ExtractType(notCanonical), ::il2cpp_utils::ExtractType(notImplicitFile)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, pos, byref(returnedEnd), byref(notCanonical), notImplicitFile);
}
// Autogenerated method: System.DomainNameHelper.IsValidByIri
bool System::DomainNameHelper::IsValidByIri(::Il2CppChar* name, uint16_t pos, ByRef<int> returnedEnd, ByRef<bool> notCanonical, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IsValidByIri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsValidByIri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(returnedEnd), ::il2cpp_utils::ExtractType(notCanonical), ::il2cpp_utils::ExtractType(notImplicitFile)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, pos, byref(returnedEnd), byref(notCanonical), notImplicitFile);
}
// Autogenerated method: System.DomainNameHelper.IdnEquivalent
::StringW System::DomainNameHelper::IdnEquivalent(::StringW hostname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IdnEquivalent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IdnEquivalent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostname)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostname);
}
// Autogenerated method: System.DomainNameHelper.IdnEquivalent
::StringW System::DomainNameHelper::IdnEquivalent(::Il2CppChar* hostname, int start, int end, ByRef<bool> allAscii, ByRef<bool> atLeastOneValidIdn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IdnEquivalent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IdnEquivalent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostname), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(allAscii), ::il2cpp_utils::ExtractType(atLeastOneValidIdn)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostname, start, end, byref(allAscii), byref(atLeastOneValidIdn));
}
// Autogenerated method: System.DomainNameHelper.IdnEquivalent
::StringW System::DomainNameHelper::IdnEquivalent(::Il2CppChar* hostname, int start, int end, ByRef<bool> allAscii, ByRef<::StringW> bidiStrippedHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IdnEquivalent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IdnEquivalent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostname), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(allAscii), ::il2cpp_utils::ExtractType(bidiStrippedHost)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostname, start, end, byref(allAscii), byref(bidiStrippedHost));
}
// Autogenerated method: System.DomainNameHelper.IsIdnAce
bool System::DomainNameHelper::IsIdnAce(::StringW input, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IsIdnAce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsIdnAce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, index);
}
// Autogenerated method: System.DomainNameHelper.IsIdnAce
bool System::DomainNameHelper::IsIdnAce(::Il2CppChar* input, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IsIdnAce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsIdnAce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, index);
}
// Autogenerated method: System.DomainNameHelper.UnicodeEquivalent
::StringW System::DomainNameHelper::UnicodeEquivalent(::StringW idnHost, ::Il2CppChar* hostname, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::UnicodeEquivalent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "UnicodeEquivalent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idnHost), ::il2cpp_utils::ExtractType(hostname), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idnHost, hostname, start, end);
}
// Autogenerated method: System.DomainNameHelper.UnicodeEquivalent
::StringW System::DomainNameHelper::UnicodeEquivalent(::Il2CppChar* hostname, int start, int end, ByRef<bool> allAscii, ByRef<bool> atLeastOneValidIdn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::UnicodeEquivalent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "UnicodeEquivalent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostname), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(allAscii), ::il2cpp_utils::ExtractType(atLeastOneValidIdn)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostname, start, end, byref(allAscii), byref(atLeastOneValidIdn));
}
// Autogenerated method: System.DomainNameHelper.IsASCIILetterOrDigit
bool System::DomainNameHelper::IsASCIILetterOrDigit(::Il2CppChar character, ByRef<bool> notCanonical) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IsASCIILetterOrDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsASCIILetterOrDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(notCanonical)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, character, byref(notCanonical));
}
// Autogenerated method: System.DomainNameHelper.IsValidDomainLabelCharacter
bool System::DomainNameHelper::IsValidDomainLabelCharacter(::Il2CppChar character, ByRef<bool> notCanonical) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IsValidDomainLabelCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsValidDomainLabelCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(notCanonical)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, character, byref(notCanonical));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.UncNameHelper
#include "System/UncNameHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UncNameHelper.ParseCanonicalName
::StringW System::UncNameHelper::ParseCanonicalName(::StringW str, int start, int end, ByRef<bool> loopback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UncNameHelper::ParseCanonicalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UncNameHelper", "ParseCanonicalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(loopback)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, start, end, byref(loopback));
}
// Autogenerated method: System.UncNameHelper.IsValid
bool System::UncNameHelper::IsValid(::Il2CppChar* name, uint16_t start, ByRef<int> returnedEnd, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UncNameHelper::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UncNameHelper", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(returnedEnd), ::il2cpp_utils::ExtractType(notImplicitFile)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(returnedEnd), notImplicitFile);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.UriSyntaxFlags
#include "System/UriSyntaxFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags None
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags None
void System::UriSyntaxFlags::_set_None(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MustHaveAuthority
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MustHaveAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MustHaveAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MustHaveAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MustHaveAuthority
void System::UriSyntaxFlags::_set_MustHaveAuthority(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MustHaveAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MustHaveAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags OptionalAuthority
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_OptionalAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_OptionalAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "OptionalAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags OptionalAuthority
void System::UriSyntaxFlags::_set_OptionalAuthority(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_OptionalAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "OptionalAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHaveUserInfo
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHaveUserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MayHaveUserInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHaveUserInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHaveUserInfo
void System::UriSyntaxFlags::_set_MayHaveUserInfo(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MayHaveUserInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHaveUserInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHavePort
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHavePort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MayHavePort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHavePort"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHavePort
void System::UriSyntaxFlags::_set_MayHavePort(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MayHavePort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHavePort", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHavePath
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHavePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MayHavePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHavePath"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHavePath
void System::UriSyntaxFlags::_set_MayHavePath(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MayHavePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHavePath", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHaveQuery
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHaveQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MayHaveQuery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHaveQuery"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHaveQuery
void System::UriSyntaxFlags::_set_MayHaveQuery(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MayHaveQuery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHaveQuery", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHaveFragment
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHaveFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MayHaveFragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHaveFragment"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHaveFragment
void System::UriSyntaxFlags::_set_MayHaveFragment(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MayHaveFragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHaveFragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowEmptyHost
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowEmptyHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowEmptyHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowEmptyHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowEmptyHost
void System::UriSyntaxFlags::_set_AllowEmptyHost(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowEmptyHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowEmptyHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowUncHost
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowUncHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowUncHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowUncHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowUncHost
void System::UriSyntaxFlags::_set_AllowUncHost(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowUncHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowUncHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowDnsHost
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowDnsHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowDnsHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowDnsHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowDnsHost
void System::UriSyntaxFlags::_set_AllowDnsHost(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowDnsHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowDnsHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowIPv4Host
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowIPv4Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowIPv4Host");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowIPv4Host"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowIPv4Host
void System::UriSyntaxFlags::_set_AllowIPv4Host(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowIPv4Host");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowIPv4Host", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowIPv6Host
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowIPv6Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowIPv6Host");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowIPv6Host"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowIPv6Host
void System::UriSyntaxFlags::_set_AllowIPv6Host(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowIPv6Host");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowIPv6Host", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowAnInternetHost
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowAnInternetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowAnInternetHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowAnInternetHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowAnInternetHost
void System::UriSyntaxFlags::_set_AllowAnInternetHost(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowAnInternetHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowAnInternetHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowAnyOtherHost
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowAnyOtherHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowAnyOtherHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowAnyOtherHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowAnyOtherHost
void System::UriSyntaxFlags::_set_AllowAnyOtherHost(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowAnyOtherHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowAnyOtherHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags FileLikeUri
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_FileLikeUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_FileLikeUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "FileLikeUri"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags FileLikeUri
void System::UriSyntaxFlags::_set_FileLikeUri(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_FileLikeUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "FileLikeUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MailToLikeUri
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MailToLikeUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MailToLikeUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MailToLikeUri"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MailToLikeUri
void System::UriSyntaxFlags::_set_MailToLikeUri(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MailToLikeUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MailToLikeUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags V1_UnknownUri
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_V1_UnknownUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_V1_UnknownUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "V1_UnknownUri"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags V1_UnknownUri
void System::UriSyntaxFlags::_set_V1_UnknownUri(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_V1_UnknownUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "V1_UnknownUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags SimpleUserSyntax
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_SimpleUserSyntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_SimpleUserSyntax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "SimpleUserSyntax"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags SimpleUserSyntax
void System::UriSyntaxFlags::_set_SimpleUserSyntax(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_SimpleUserSyntax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "SimpleUserSyntax", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags BuiltInSyntax
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_BuiltInSyntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_BuiltInSyntax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "BuiltInSyntax"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags BuiltInSyntax
void System::UriSyntaxFlags::_set_BuiltInSyntax(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_BuiltInSyntax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "BuiltInSyntax", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags ParserSchemeOnly
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_ParserSchemeOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_ParserSchemeOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "ParserSchemeOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags ParserSchemeOnly
void System::UriSyntaxFlags::_set_ParserSchemeOnly(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_ParserSchemeOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "ParserSchemeOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowDOSPath
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowDOSPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowDOSPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowDOSPath"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowDOSPath
void System::UriSyntaxFlags::_set_AllowDOSPath(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowDOSPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowDOSPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags PathIsRooted
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_PathIsRooted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_PathIsRooted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "PathIsRooted"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags PathIsRooted
void System::UriSyntaxFlags::_set_PathIsRooted(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_PathIsRooted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "PathIsRooted", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags ConvertPathSlashes
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_ConvertPathSlashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_ConvertPathSlashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "ConvertPathSlashes"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags ConvertPathSlashes
void System::UriSyntaxFlags::_set_ConvertPathSlashes(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_ConvertPathSlashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "ConvertPathSlashes", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags CompressPath
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_CompressPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_CompressPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "CompressPath"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags CompressPath
void System::UriSyntaxFlags::_set_CompressPath(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_CompressPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "CompressPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags CanonicalizeAsFilePath
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_CanonicalizeAsFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_CanonicalizeAsFilePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "CanonicalizeAsFilePath"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags CanonicalizeAsFilePath
void System::UriSyntaxFlags::_set_CanonicalizeAsFilePath(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_CanonicalizeAsFilePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "CanonicalizeAsFilePath", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags UnEscapeDotsAndSlashes
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_UnEscapeDotsAndSlashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_UnEscapeDotsAndSlashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "UnEscapeDotsAndSlashes"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags UnEscapeDotsAndSlashes
void System::UriSyntaxFlags::_set_UnEscapeDotsAndSlashes(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_UnEscapeDotsAndSlashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "UnEscapeDotsAndSlashes", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowIdn
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowIdn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowIdn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowIdn"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowIdn
void System::UriSyntaxFlags::_set_AllowIdn(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowIdn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowIdn", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowIriParsing
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowIriParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowIriParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowIriParsing"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowIriParsing
void System::UriSyntaxFlags::_set_AllowIriParsing(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowIriParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowIriParsing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::UriSyntaxFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.LocalAppContextSwitches
#include "System/LocalAppContextSwitches.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean MemberDescriptorEqualsReturnsFalseIfEquivalent
bool System::LocalAppContextSwitches::_get_MemberDescriptorEqualsReturnsFalseIfEquivalent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalAppContextSwitches::_get_MemberDescriptorEqualsReturnsFalseIfEquivalent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "LocalAppContextSwitches", "MemberDescriptorEqualsReturnsFalseIfEquivalent"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean MemberDescriptorEqualsReturnsFalseIfEquivalent
void System::LocalAppContextSwitches::_set_MemberDescriptorEqualsReturnsFalseIfEquivalent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalAppContextSwitches::_set_MemberDescriptorEqualsReturnsFalseIfEquivalent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LocalAppContextSwitches", "MemberDescriptorEqualsReturnsFalseIfEquivalent", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IOOperation
#include "System/IOOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IOOperation Read
::System::IOOperation System::IOOperation::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOOperation::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IOOperation>("System", "IOOperation", "Read"));
}
// Autogenerated static field setter
// Set static field: static public System.IOOperation Read
void System::IOOperation::_set_Read(::System::IOOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOOperation::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "IOOperation", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public System.IOOperation Write
::System::IOOperation System::IOOperation::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOOperation::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IOOperation>("System", "IOOperation", "Write"));
}
// Autogenerated static field setter
// Set static field: static public System.IOOperation Write
void System::IOOperation::_set_Write(::System::IOOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOOperation::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "IOOperation", "Write", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IOOperation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOOperation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IOAsyncCallback
#include "System/IOAsyncCallback.hpp"
// Including type: System.IOAsyncResult
#include "System/IOAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IOAsyncCallback.Invoke
void System::IOAsyncCallback::Invoke(::System::IOAsyncResult* ioares) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IOAsyncCallback*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ioares);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IOAsyncResult
#include "System/IOAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback async_callback
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& System::IOAsyncResult::dyn_async_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::dyn_async_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "async_callback"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object async_state
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::IOAsyncResult::dyn_async_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::dyn_async_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "async_state"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent wait_handle
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& System::IOAsyncResult::dyn_wait_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::dyn_wait_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wait_handle"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean completed_synchronously
[[deprecated("Use field access instead!")]] bool& System::IOAsyncResult::dyn_completed_synchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::dyn_completed_synchronously");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed_synchronously"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean completed
[[deprecated("Use field access instead!")]] bool& System::IOAsyncResult::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IOAsyncResult.Init
void System::IOAsyncResult::Init(::System::AsyncCallback* async_callback, ::Il2CppObject* async_state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(async_callback), ::il2cpp_utils::ExtractType(async_state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, async_callback, async_state);
}
// Autogenerated method: System.IOAsyncResult.get_AsyncCallback
::System::AsyncCallback* System::IOAsyncResult::get_AsyncCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::get_AsyncCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::AsyncCallback*, false>(this, ___internal__method);
}
// Autogenerated method: System.IOAsyncResult.get_AsyncState
::Il2CppObject* System::IOAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IOAsyncResult*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.IOAsyncResult.get_AsyncWaitHandle
::System::Threading::WaitHandle* System::IOAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IOAsyncResult*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.IOAsyncResult.get_CompletedSynchronously
bool System::IOAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IOAsyncResult*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IOAsyncResult.set_CompletedSynchronously
void System::IOAsyncResult::set_CompletedSynchronously(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::set_CompletedSynchronously");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IOAsyncResult.get_IsCompleted
bool System::IOAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IOAsyncResult*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IOAsyncResult.set_IsCompleted
void System::IOAsyncResult::set_IsCompleted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::set_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IOAsyncResult.CompleteDisposed
void System::IOAsyncResult::CompleteDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::CompleteDisposed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IOAsyncResult*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IOSelectorJob
#include "System/IOSelectorJob.hpp"
// Including type: System.IOAsyncCallback
#include "System/IOAsyncCallback.hpp"
// Including type: System.IOAsyncResult
#include "System/IOAsyncResult.hpp"
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IOOperation operation
[[deprecated("Use field access instead!")]] ::System::IOOperation& System::IOSelectorJob::dyn_operation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelectorJob::dyn_operation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "operation"))->offset;
  return *reinterpret_cast<::System::IOOperation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IOAsyncCallback callback
[[deprecated("Use field access instead!")]] ::System::IOAsyncCallback*& System::IOSelectorJob::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelectorJob::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::IOAsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IOAsyncResult state
[[deprecated("Use field access instead!")]] ::System::IOAsyncResult*& System::IOSelectorJob::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelectorJob::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::System::IOAsyncResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IOSelectorJob.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem
void System::IOSelectorJob::System_Threading_IThreadPoolWorkItem_ExecuteWorkItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelectorJob::System.Threading.IThreadPoolWorkItem.ExecuteWorkItem");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IOSelectorJob*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IOSelectorJob.System.Threading.IThreadPoolWorkItem.MarkAborted
void System::IOSelectorJob::System_Threading_IThreadPoolWorkItem_MarkAborted(::System::Threading::ThreadAbortException* tae) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelectorJob::System.Threading.IThreadPoolWorkItem.MarkAborted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IOSelectorJob*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tae);
}
// Autogenerated method: System.IOSelectorJob.MarkDisposed
void System::IOSelectorJob::MarkDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelectorJob::MarkDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IOSelector
#include "System/IOSelector.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.IOSelectorJob
#include "System/IOSelectorJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IOSelector.Add
void System::IOSelector::Add(::System::IntPtr handle, ::System::IOSelectorJob* job) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelector::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IOSelector", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(job)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, job);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Platform
#include "System/Platform.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean checkedOS
bool System::Platform::_get_checkedOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::_get_checkedOS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Platform", "checkedOS"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean checkedOS
void System::Platform::_set_checkedOS(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::_set_checkedOS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Platform", "checkedOS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isMacOS
bool System::Platform::_get_isMacOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::_get_isMacOS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Platform", "isMacOS"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isMacOS
void System::Platform::_set_isMacOS(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::_set_isMacOS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Platform", "isMacOS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isAix
bool System::Platform::_get_isAix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::_get_isAix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Platform", "isAix"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isAix
void System::Platform::_set_isAix(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::_set_isAix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Platform", "isAix", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isIBMi
bool System::Platform::_get_isIBMi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::_get_isIBMi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Platform", "isIBMi"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isIBMi
void System::Platform::_set_isIBMi(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::_set_isIBMi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Platform", "isIBMi", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isFreeBSD
bool System::Platform::_get_isFreeBSD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::_get_isFreeBSD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Platform", "isFreeBSD"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isFreeBSD
void System::Platform::_set_isFreeBSD(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::_set_isFreeBSD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Platform", "isFreeBSD", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isOpenBSD
bool System::Platform::_get_isOpenBSD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::_get_isOpenBSD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Platform", "isOpenBSD"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isOpenBSD
void System::Platform::_set_isOpenBSD(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::_set_isOpenBSD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Platform", "isOpenBSD", value));
}
// Autogenerated method: System.Platform.uname
int System::Platform::uname(::System::IntPtr buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::uname");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Platform", "uname", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buf);
}
// Autogenerated method: System.Platform.CheckOS
void System::Platform::CheckOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::CheckOS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Platform", "CheckOS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Platform.get_IsMacOS
bool System::Platform::get_IsMacOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::get_IsMacOS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Platform", "get_IsMacOS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Platform.get_IsFreeBSD
bool System::Platform::get_IsFreeBSD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::get_IsFreeBSD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Platform", "get_IsFreeBSD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Platform.get_IsOpenBSD
bool System::Platform::get_IsOpenBSD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::get_IsOpenBSD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Platform", "get_IsOpenBSD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Platform.get_IsIBMi
bool System::Platform::get_IsIBMi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::get_IsIBMi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Platform", "get_IsIBMi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Platform.get_IsAix
bool System::Platform::get_IsAix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::get_IsAix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Platform", "get_IsAix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.SRDescriptionAttribute
#include "System/SRDescriptionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean isReplaced
[[deprecated("Use field access instead!")]] bool& System::SRDescriptionAttribute::dyn_isReplaced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SRDescriptionAttribute::dyn_isReplaced");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isReplaced"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.SRDescriptionAttribute.get_Description
::StringW System::SRDescriptionAttribute::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SRDescriptionAttribute::get_Description");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::DescriptionAttribute*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UriTypeConverter
#include "System/UriTypeConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UriTypeConverter.CanConvert
bool System::UriTypeConverter::CanConvert(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriTypeConverter::CanConvert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: System.UriTypeConverter.CanConvertFrom
bool System::UriTypeConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriTypeConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.UriTypeConverter.CanConvertTo
bool System::UriTypeConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriTypeConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.UriTypeConverter.ConvertFrom
::Il2CppObject* System::UriTypeConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriTypeConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.UriTypeConverter.ConvertTo
::Il2CppObject* System::UriTypeConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriTypeConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Threading.Semaphore
#include "System/Threading/Semaphore.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Semaphore.CreateSemaphore_internal
::System::IntPtr System::Threading::Semaphore::CreateSemaphore_internal(int initialCount, int maximumCount, ::StringW name, ByRef<int> errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Semaphore::CreateSemaphore_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Semaphore", "CreateSemaphore_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialCount), ::il2cpp_utils::ExtractType(maximumCount), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, initialCount, maximumCount, name, byref(errorCode));
}
// Autogenerated method: System.Threading.Semaphore.CreateSemaphore_icall
::System::IntPtr System::Threading::Semaphore::CreateSemaphore_icall(int initialCount, int maximumCount, ::Il2CppChar* name, int name_length, ByRef<int> errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Semaphore::CreateSemaphore_icall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Semaphore", "CreateSemaphore_icall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialCount), ::il2cpp_utils::ExtractType(maximumCount), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(name_length), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, initialCount, maximumCount, name, name_length, byref(errorCode));
}
// Autogenerated method: System.Threading.Semaphore.ReleaseSemaphore_internal
bool System::Threading::Semaphore::ReleaseSemaphore_internal(::System::IntPtr handle, int releaseCount, ByRef<int> previousCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Semaphore::ReleaseSemaphore_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "Semaphore", "ReleaseSemaphore_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(releaseCount), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, releaseCount, byref(previousCount));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.InteropServices.DefaultParameterValueAttribute
#include "System/Runtime/InteropServices/DefaultParameterValueAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Runtime::InteropServices::DefaultParameterValueAttribute::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DefaultParameterValueAttribute::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.InteropServices.DefaultParameterValueAttribute.get_Value
::Il2CppObject* System::Runtime::InteropServices::DefaultParameterValueAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DefaultParameterValueAttribute::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.HandleCollector
#include "System/Runtime/InteropServices/HandleCollector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 deltaPercent
int System::Runtime::InteropServices::HandleCollector::_get_deltaPercent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::HandleCollector::_get_deltaPercent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Runtime.InteropServices", "HandleCollector", "deltaPercent"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 deltaPercent
void System::Runtime::InteropServices::HandleCollector::_set_deltaPercent(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::HandleCollector::_set_deltaPercent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "HandleCollector", "deltaPercent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::InteropServices::HandleCollector::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::HandleCollector::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 initialThreshold
[[deprecated("Use field access instead!")]] int& System::Runtime::InteropServices::HandleCollector::dyn_initialThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::HandleCollector::dyn_initialThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialThreshold"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maximumThreshold
[[deprecated("Use field access instead!")]] int& System::Runtime::InteropServices::HandleCollector::dyn_maximumThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::HandleCollector::dyn_maximumThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maximumThreshold"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 threshold
[[deprecated("Use field access instead!")]] int& System::Runtime::InteropServices::HandleCollector::dyn_threshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::HandleCollector::dyn_threshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threshold"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 handleCount
[[deprecated("Use field access instead!")]] int& System::Runtime::InteropServices::HandleCollector::dyn_handleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::HandleCollector::dyn_handleCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handleCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] gc_counts
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Runtime::InteropServices::HandleCollector::dyn_gc_counts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::HandleCollector::dyn_gc_counts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gc_counts"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 gc_gen
[[deprecated("Use field access instead!")]] int& System::Runtime::InteropServices::HandleCollector::dyn_gc_gen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::HandleCollector::dyn_gc_gen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gc_gen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.InteropServices.HandleCollector.get_Count
int System::Runtime::InteropServices::HandleCollector::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::HandleCollector::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.HandleCollector.get_InitialThreshold
int System::Runtime::InteropServices::HandleCollector::get_InitialThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::HandleCollector::get_InitialThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InitialThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.HandleCollector.get_MaximumThreshold
int System::Runtime::InteropServices::HandleCollector::get_MaximumThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::HandleCollector::get_MaximumThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaximumThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.HandleCollector.get_Name
::StringW System::Runtime::InteropServices::HandleCollector::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::HandleCollector::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.HandleCollector.Add
void System::Runtime::InteropServices::HandleCollector::Add() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::HandleCollector::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.HandleCollector.Remove
void System::Runtime::InteropServices::HandleCollector::Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::HandleCollector::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Timers.ElapsedEventHandler
#include "System/Timers/ElapsedEventHandler.hpp"
// Including type: System.Timers.ElapsedEventArgs
#include "System/Timers/ElapsedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Timers.ElapsedEventHandler.Invoke
void System::Timers::ElapsedEventHandler::Invoke(::Il2CppObject* sender, ::System::Timers::ElapsedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::ElapsedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Timers::ElapsedEventHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Timers.Timer
#include "System/Timers/Timer.hpp"
// Including type: System.Timers.ElapsedEventHandler
#include "System/Timers/ElapsedEventHandler.hpp"
// Including type: System.ComponentModel.ISynchronizeInvoke
#include "System/ComponentModel/ISynchronizeInvoke.hpp"
// Including type: System.Threading.Timer
#include "System/Threading/Timer.hpp"
// Including type: System.Threading.TimerCallback
#include "System/Threading/TimerCallback.hpp"
// Including type: System.ComponentModel.ISite
#include "System/ComponentModel/ISite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Double interval
[[deprecated("Use field access instead!")]] double& System::Timers::Timer::dyn_interval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::dyn_interval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interval"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enabled
[[deprecated("Use field access instead!")]] bool& System::Timers::Timer::dyn_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::dyn_enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initializing
[[deprecated("Use field access instead!")]] bool& System::Timers::Timer::dyn_initializing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::dyn_initializing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initializing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean delayedEnable
[[deprecated("Use field access instead!")]] bool& System::Timers::Timer::dyn_delayedEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::dyn_delayedEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delayedEnable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Timers.ElapsedEventHandler onIntervalElapsed
[[deprecated("Use field access instead!")]] ::System::Timers::ElapsedEventHandler*& System::Timers::Timer::dyn_onIntervalElapsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::dyn_onIntervalElapsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onIntervalElapsed"))->offset;
  return *reinterpret_cast<::System::Timers::ElapsedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean autoReset
[[deprecated("Use field access instead!")]] bool& System::Timers::Timer::dyn_autoReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::dyn_autoReset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoReset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ISynchronizeInvoke synchronizingObject
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ISynchronizeInvoke*& System::Timers::Timer::dyn_synchronizingObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::dyn_synchronizingObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synchronizingObject"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ISynchronizeInvoke**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Timers::Timer::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Timer timer
[[deprecated("Use field access instead!")]] ::System::Threading::Timer*& System::Timers::Timer::dyn_timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::dyn_timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timer"))->offset;
  return *reinterpret_cast<::System::Threading::Timer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.TimerCallback callback
[[deprecated("Use field access instead!")]] ::System::Threading::TimerCallback*& System::Timers::Timer::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Threading::TimerCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object cookie
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Timers::Timer::dyn_cookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::dyn_cookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cookie"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Timers.Timer.set_AutoReset
void System::Timers::Timer::set_AutoReset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::set_AutoReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AutoReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Timers.Timer.set_Enabled
void System::Timers::Timer::set_Enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::set_Enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Timers.Timer.CalculateRoundedInterval
int System::Timers::Timer::CalculateRoundedInterval(double interval, bool argumentCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::CalculateRoundedInterval");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Timers", "Timer", "CalculateRoundedInterval", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interval), ::il2cpp_utils::ExtractType(argumentCheck)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interval, argumentCheck);
}
// Autogenerated method: System.Timers.Timer.UpdateTimer
void System::Timers::Timer::UpdateTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::UpdateTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Timers.Timer.set_Interval
void System::Timers::Timer::set_Interval(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::set_Interval");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Interval", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Timers.Timer.add_Elapsed
void System::Timers::Timer::add_Elapsed(::System::Timers::ElapsedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::add_Elapsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Elapsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Timers.Timer.remove_Elapsed
void System::Timers::Timer::remove_Elapsed(::System::Timers::ElapsedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::remove_Elapsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Elapsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Timers.Timer.get_SynchronizingObject
::System::ComponentModel::ISynchronizeInvoke* System::Timers::Timer::get_SynchronizingObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::get_SynchronizingObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SynchronizingObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ISynchronizeInvoke*, false>(this, ___internal__method);
}
// Autogenerated method: System.Timers.Timer.BeginInit
void System::Timers::Timer::BeginInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::BeginInit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Timers::Timer*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Timers.Timer.Close
void System::Timers::Timer::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Timers.Timer.EndInit
void System::Timers::Timer::EndInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::EndInit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Timers::Timer*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Timers.Timer.Start
void System::Timers::Timer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Timers.Timer.Stop
void System::Timers::Timer::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Timers.Timer.MyTimerCallback
void System::Timers::Timer::MyTimerCallback(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::MyTimerCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MyTimerCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Timers.Timer.set_Site
void System::Timers::Timer::set_Site(::System::ComponentModel::ISite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::set_Site");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::Component*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Timers.Timer.get_Site
::System::ComponentModel::ISite* System::Timers::Timer::get_Site() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::get_Site");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::Component*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ISite*, false>(this, ___internal__method);
}
// Autogenerated method: System.Timers.Timer.Dispose
void System::Timers::Timer::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::Timer::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::Component*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Timers.TimersDescriptionAttribute
#include "System/Timers/TimersDescriptionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean replaced
[[deprecated("Use field access instead!")]] bool& System::Timers::TimersDescriptionAttribute::dyn_replaced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::TimersDescriptionAttribute::dyn_replaced");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "replaced"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Timers.TimersDescriptionAttribute.get_Description
::StringW System::Timers::TimersDescriptionAttribute::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::TimersDescriptionAttribute::get_Description");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::DescriptionAttribute*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Timers.ElapsedEventArgs
#include "System/Timers/ElapsedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.DateTime time
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Timers::ElapsedEventArgs::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Timers::ElapsedEventArgs::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.Capture
#include "System/Text/RegularExpressions/Capture.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Index>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::Capture::dyn_$Index$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::dyn_$Index$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Index>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Length>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::Capture::dyn_$Length$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::dyn_$Length$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Length>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Text>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::Capture::dyn_$Text$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::dyn_$Text$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Text>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.get_Index
int System::Text::RegularExpressions::Capture::get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::get_Index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.set_Index
void System::Text::RegularExpressions::Capture::set_Index(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::set_Index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.get_Length
int System::Text::RegularExpressions::Capture::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.set_Length
void System::Text::RegularExpressions::Capture::set_Length(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::set_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.get_Text
::StringW System::Text::RegularExpressions::Capture::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.set_Text
void System::Text::RegularExpressions::Capture::set_Text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::set_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.get_Value
::StringW System::Text::RegularExpressions::Capture::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.GetLeftSubstring
::System::ReadOnlySpan_1<::Il2CppChar> System::Text::RegularExpressions::Capture::GetLeftSubstring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::GetLeftSubstring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeftSubstring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.GetRightSubstring
::System::ReadOnlySpan_1<::Il2CppChar> System::Text::RegularExpressions::Capture::GetRightSubstring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::GetRightSubstring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRightSubstring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.ToString
::StringW System::Text::RegularExpressions::Capture::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.Group
#include "System/Text/RegularExpressions/Group.hpp"
// Including type: System.Text.RegularExpressions.CaptureCollection
#include "System/Text/RegularExpressions/CaptureCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Text.RegularExpressions.Group s_emptyGroup
::System::Text::RegularExpressions::Group* System::Text::RegularExpressions::Group::_get_s_emptyGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::_get_s_emptyGroup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Group*>("System.Text.RegularExpressions", "Group", "s_emptyGroup"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Text.RegularExpressions.Group s_emptyGroup
void System::Text::RegularExpressions::Group::_set_s_emptyGroup(::System::Text::RegularExpressions::Group* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::_set_s_emptyGroup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Group", "s_emptyGroup", value));
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32[] _caps
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::Group::dyn__caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::dyn__caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caps"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _capcount
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::Group::dyn__capcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::dyn__capcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capcount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.CaptureCollection _capcoll
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::CaptureCollection*& System::Text::RegularExpressions::Group::dyn__capcoll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::dyn__capcoll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capcoll"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::CaptureCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::Group::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.Group.get_Success
bool System::Text::RegularExpressions::Group::get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::get_Success");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Success", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Group..cctor
void System::Text::RegularExpressions::Group::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Group", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.GroupCollection
#include "System/Text/RegularExpressions/GroupCollection.hpp"
// Including type: System.Text.RegularExpressions.GroupCollection/Enumerator
#include "System/Text/RegularExpressions/GroupCollection_Enumerator.hpp"
// Including type: System.Text.RegularExpressions.Group
#include "System/Text/RegularExpressions/Group.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Text.RegularExpressions.Match _match
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::Match*& System::Text::RegularExpressions::GroupCollection::dyn__match() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::dyn__match");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_match"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Match**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Hashtable _captureMap
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::GroupCollection::dyn__captureMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::dyn__captureMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_captureMap"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.Group[] _groups
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Text::RegularExpressions::Group*>& System::Text::RegularExpressions::GroupCollection::dyn__groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::dyn__groups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groups"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Text::RegularExpressions::Group*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.get_IsReadOnly
bool System::Text::RegularExpressions::GroupCollection::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.get_Count
int System::Text::RegularExpressions::GroupCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 32));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.get_Item
::System::Text::RegularExpressions::Group* System::Text::RegularExpressions::GroupCollection::get_Item(int groupnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Group*, false>(this, ___internal__method, groupnum);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.get_Item
::System::Text::RegularExpressions::Group* System::Text::RegularExpressions::GroupCollection::get_Item(::StringW groupname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupname)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Group*, false>(this, ___internal__method, groupname);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.GetEnumerator
::System::Collections::IEnumerator* System::Text::RegularExpressions::GroupCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.Generic.IEnumerable<System.Text.RegularExpressions.Group>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Text::RegularExpressions::Group*>* System::Text::RegularExpressions::GroupCollection::System_Collections_Generic_IEnumerable$System_Text_RegularExpressions_Group$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.Generic.IEnumerable<System.Text.RegularExpressions.Group>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Text::RegularExpressions::Group*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.GetGroup
::System::Text::RegularExpressions::Group* System::Text::RegularExpressions::GroupCollection::GetGroup(int groupnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::GetGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupnum)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Group*, false>(this, ___internal__method, groupnum);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.GetGroupImpl
::System::Text::RegularExpressions::Group* System::Text::RegularExpressions::GroupCollection::GetGroupImpl(int groupnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::GetGroupImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGroupImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupnum)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Group*, false>(this, ___internal__method, groupnum);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.get_IsSynchronized
bool System::Text::RegularExpressions::GroupCollection::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 34));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.get_SyncRoot
::Il2CppObject* System::Text::RegularExpressions::GroupCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.CopyTo
void System::Text::RegularExpressions::GroupCollection::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.CopyTo
void System::Text::RegularExpressions::GroupCollection::CopyTo(::ArrayW<::System::Text::RegularExpressions::Group*> array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.IndexOf
int System::Text::RegularExpressions::GroupCollection::System_Collections_Generic_IList$System_Text_RegularExpressions_Group$_IndexOf(::System::Text::RegularExpressions::Group* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.Insert
void System::Text::RegularExpressions::GroupCollection::System_Collections_Generic_IList$System_Text_RegularExpressions_Group$_Insert(int index, ::System::Text::RegularExpressions::Group* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.RemoveAt
void System::Text::RegularExpressions::GroupCollection::System_Collections_Generic_IList$System_Text_RegularExpressions_Group$_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.get_Item
::System::Text::RegularExpressions::Group* System::Text::RegularExpressions::GroupCollection::System_Collections_Generic_IList$System_Text_RegularExpressions_Group$_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Group*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.set_Item
void System::Text::RegularExpressions::GroupCollection::System_Collections_Generic_IList$System_Text_RegularExpressions_Group$_set_Item(int index, ::System::Text::RegularExpressions::Group* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Add
void System::Text::RegularExpressions::GroupCollection::System_Collections_Generic_ICollection$System_Text_RegularExpressions_Group$_Add(::System::Text::RegularExpressions::Group* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Clear
void System::Text::RegularExpressions::GroupCollection::System_Collections_Generic_ICollection$System_Text_RegularExpressions_Group$_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Contains
bool System::Text::RegularExpressions::GroupCollection::System_Collections_Generic_ICollection$System_Text_RegularExpressions_Group$_Contains(::System::Text::RegularExpressions::Group* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Remove
bool System::Text::RegularExpressions::GroupCollection::System_Collections_Generic_ICollection$System_Text_RegularExpressions_Group$_Remove(::System::Text::RegularExpressions::Group* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.IList.Add
int System::Text::RegularExpressions::GroupCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 22));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.IList.Clear
void System::Text::RegularExpressions::GroupCollection::System_Collections_IList_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.IList.Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.IList.Contains
bool System::Text::RegularExpressions::GroupCollection::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.IList.IndexOf
int System::Text::RegularExpressions::GroupCollection::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 27));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.IList.Insert
void System::Text::RegularExpressions::GroupCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.IList.get_IsFixedSize
bool System::Text::RegularExpressions::GroupCollection::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 26));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.IList.Remove
void System::Text::RegularExpressions::GroupCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.IList.RemoveAt
void System::Text::RegularExpressions::GroupCollection::System_Collections_IList_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.IList.RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.IList.get_Item
::Il2CppObject* System::Text::RegularExpressions::GroupCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.System.Collections.IList.set_Item
void System::Text::RegularExpressions::GroupCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.GroupCollection/Enumerator
#include "System/Text/RegularExpressions/GroupCollection_Enumerator.hpp"
// Including type: System.Text.RegularExpressions.Group
#include "System/Text/RegularExpressions/Group.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Text.RegularExpressions.GroupCollection _collection
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::GroupCollection*& System::Text::RegularExpressions::GroupCollection::Enumerator::dyn__collection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::Enumerator::dyn__collection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collection"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::GroupCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::GroupCollection::Enumerator::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::Enumerator::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection/Enumerator.MoveNext
bool System::Text::RegularExpressions::GroupCollection::Enumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::Enumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection::Enumerator*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection/Enumerator.get_Current
::System::Text::RegularExpressions::Group* System::Text::RegularExpressions::GroupCollection::Enumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::Enumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection::Enumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Group*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection/Enumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Text::RegularExpressions::GroupCollection::Enumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::Enumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection::Enumerator*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection/Enumerator.System.Collections.IEnumerator.Reset
void System::Text::RegularExpressions::GroupCollection::Enumerator::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::Enumerator::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection::Enumerator*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection/Enumerator.System.IDisposable.Dispose
void System::Text::RegularExpressions::GroupCollection::Enumerator::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::Enumerator::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::GroupCollection::Enumerator*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Text.RegularExpressions.GroupCollection
#include "System/Text/RegularExpressions/GroupCollection.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Text.RegularExpressions.Match <Empty>k__BackingField
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Match::_get_$Empty$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::_get_$Empty$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Match*>("System.Text.RegularExpressions", "Match", "<Empty>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Text.RegularExpressions.Match <Empty>k__BackingField
void System::Text::RegularExpressions::Match::_set_$Empty$k__BackingField(::System::Text::RegularExpressions::Match* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::_set_$Empty$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Match", "<Empty>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.GroupCollection _groupcoll
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::GroupCollection*& System::Text::RegularExpressions::Match::dyn__groupcoll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__groupcoll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groupcoll"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::GroupCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.Regex _regex
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::Regex*& System::Text::RegularExpressions::Match::dyn__regex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__regex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_regex"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Regex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _textbeg
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::Match::dyn__textbeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__textbeg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textbeg"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _textpos
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::Match::dyn__textpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__textpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textpos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _textend
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::Match::dyn__textend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__textend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textend"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _textstart
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::Match::dyn__textstart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__textstart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textstart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[][] _matches
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<int>>& System::Text::RegularExpressions::Match::dyn__matches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__matches");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matches"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<int>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] _matchcount
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::Match::dyn__matchcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__matchcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matchcount"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _balancing
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::Match::dyn__balancing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__balancing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_balancing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.Match.get_Empty
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Match::get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::get_Empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Match", "get_Empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Match.Reset
void System::Text::RegularExpressions::Match::Reset(::System::Text::RegularExpressions::Regex* regex, ::StringW text, int textbeg, int textend, int textstart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::Match*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, regex, text, textbeg, textend, textstart);
}
// Autogenerated method: System.Text.RegularExpressions.Match.get_Groups
::System::Text::RegularExpressions::GroupCollection* System::Text::RegularExpressions::Match::get_Groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::get_Groups");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::Match*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::GroupCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Match.NextMatch
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Match::NextMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::NextMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Match.GroupToStringImpl
::System::ReadOnlySpan_1<::Il2CppChar> System::Text::RegularExpressions::Match::GroupToStringImpl(int groupnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::GroupToStringImpl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::Match*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(this, ___internal__method, groupnum);
}
// Autogenerated method: System.Text.RegularExpressions.Match.LastGroupToStringImpl
::System::ReadOnlySpan_1<::Il2CppChar> System::Text::RegularExpressions::Match::LastGroupToStringImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::LastGroupToStringImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastGroupToStringImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Match.AddMatch
void System::Text::RegularExpressions::Match::AddMatch(int cap, int start, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::AddMatch");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::Match*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cap, start, len);
}
// Autogenerated method: System.Text.RegularExpressions.Match.BalanceMatch
void System::Text::RegularExpressions::Match::BalanceMatch(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::BalanceMatch");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::Match*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.RemoveMatch
void System::Text::RegularExpressions::Match::RemoveMatch(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::RemoveMatch");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::Match*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.IsMatched
bool System::Text::RegularExpressions::Match::IsMatched(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::IsMatched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::Match*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.MatchIndex
int System::Text::RegularExpressions::Match::MatchIndex(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::MatchIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::Match*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.MatchLength
int System::Text::RegularExpressions::Match::MatchLength(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::MatchLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::Match*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.Tidy
void System::Text::RegularExpressions::Match::Tidy(int textpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::Tidy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::Match*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textpos);
}
// Autogenerated method: System.Text.RegularExpressions.Match..cctor
void System::Text::RegularExpressions::Match::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Match", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.MatchSparse
#include "System/Text/RegularExpressions/MatchSparse.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Text.RegularExpressions.GroupCollection
#include "System/Text/RegularExpressions/GroupCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Collections.Hashtable _caps
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::MatchSparse::dyn__caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchSparse::dyn__caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.MatchSparse.get_Groups
::System::Text::RegularExpressions::GroupCollection* System::Text::RegularExpressions::MatchSparse::get_Groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchSparse::get_Groups");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::Match*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::GroupCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.MatchCollection
#include "System/Text/RegularExpressions/MatchCollection.hpp"
// Including type: System.Text.RegularExpressions.MatchCollection/Enumerator
#include "System/Text/RegularExpressions/MatchCollection_Enumerator.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Text.RegularExpressions.Regex _regex
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::Regex*& System::Text::RegularExpressions::MatchCollection::dyn__regex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__regex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_regex"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Regex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Text.RegularExpressions.Match> _matches
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Text::RegularExpressions::Match*>*& System::Text::RegularExpressions::MatchCollection::dyn__matches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__matches");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matches"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Text::RegularExpressions::Match*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _done
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::MatchCollection::dyn__done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__done");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_done"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _input
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::MatchCollection::dyn__input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__input");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_input"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _beginning
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::MatchCollection::dyn__beginning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__beginning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beginning"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _length
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::MatchCollection::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _startat
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::MatchCollection::dyn__startat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__startat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startat"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevlen
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::MatchCollection::dyn__prevlen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__prevlen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevlen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.get_IsReadOnly
bool System::Text::RegularExpressions::MatchCollection::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.get_Count
int System::Text::RegularExpressions::MatchCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 32));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.get_Item
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::MatchCollection::get_Item(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.GetEnumerator
::System::Collections::IEnumerator* System::Text::RegularExpressions::MatchCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.Generic.IEnumerable<System.Text.RegularExpressions.Match>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Text::RegularExpressions::Match*>* System::Text::RegularExpressions::MatchCollection::System_Collections_Generic_IEnumerable$System_Text_RegularExpressions_Match$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.Generic.IEnumerable<System.Text.RegularExpressions.Match>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Text::RegularExpressions::Match*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.GetMatch
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::MatchCollection::GetMatch(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::GetMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.EnsureInitialized
void System::Text::RegularExpressions::MatchCollection::EnsureInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::EnsureInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.get_IsSynchronized
bool System::Text::RegularExpressions::MatchCollection::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 34));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.get_SyncRoot
::Il2CppObject* System::Text::RegularExpressions::MatchCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.CopyTo
void System::Text::RegularExpressions::MatchCollection::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.CopyTo
void System::Text::RegularExpressions::MatchCollection::CopyTo(::ArrayW<::System::Text::RegularExpressions::Match*> array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.IndexOf
int System::Text::RegularExpressions::MatchCollection::System_Collections_Generic_IList$System_Text_RegularExpressions_Match$_IndexOf(::System::Text::RegularExpressions::Match* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.Insert
void System::Text::RegularExpressions::MatchCollection::System_Collections_Generic_IList$System_Text_RegularExpressions_Match$_Insert(int index, ::System::Text::RegularExpressions::Match* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.RemoveAt
void System::Text::RegularExpressions::MatchCollection::System_Collections_Generic_IList$System_Text_RegularExpressions_Match$_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.get_Item
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::MatchCollection::System_Collections_Generic_IList$System_Text_RegularExpressions_Match$_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.set_Item
void System::Text::RegularExpressions::MatchCollection::System_Collections_Generic_IList$System_Text_RegularExpressions_Match$_set_Item(int index, ::System::Text::RegularExpressions::Match* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.Generic.ICollection<System.Text.RegularExpressions.Match>.Add
void System::Text::RegularExpressions::MatchCollection::System_Collections_Generic_ICollection$System_Text_RegularExpressions_Match$_Add(::System::Text::RegularExpressions::Match* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.Generic.ICollection<System.Text.RegularExpressions.Match>.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.Generic.ICollection<System.Text.RegularExpressions.Match>.Clear
void System::Text::RegularExpressions::MatchCollection::System_Collections_Generic_ICollection$System_Text_RegularExpressions_Match$_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.Generic.ICollection<System.Text.RegularExpressions.Match>.Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.Generic.ICollection<System.Text.RegularExpressions.Match>.Contains
bool System::Text::RegularExpressions::MatchCollection::System_Collections_Generic_ICollection$System_Text_RegularExpressions_Match$_Contains(::System::Text::RegularExpressions::Match* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.Generic.ICollection<System.Text.RegularExpressions.Match>.Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.Generic.ICollection<System.Text.RegularExpressions.Match>.Remove
bool System::Text::RegularExpressions::MatchCollection::System_Collections_Generic_ICollection$System_Text_RegularExpressions_Match$_Remove(::System::Text::RegularExpressions::Match* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.Generic.ICollection<System.Text.RegularExpressions.Match>.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.IList.Add
int System::Text::RegularExpressions::MatchCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 22));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.IList.Clear
void System::Text::RegularExpressions::MatchCollection::System_Collections_IList_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.IList.Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.IList.Contains
bool System::Text::RegularExpressions::MatchCollection::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.IList.IndexOf
int System::Text::RegularExpressions::MatchCollection::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 27));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.IList.Insert
void System::Text::RegularExpressions::MatchCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.IList.get_IsFixedSize
bool System::Text::RegularExpressions::MatchCollection::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 26));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.IList.Remove
void System::Text::RegularExpressions::MatchCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.IList.RemoveAt
void System::Text::RegularExpressions::MatchCollection::System_Collections_IList_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.IList.RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.IList.get_Item
::Il2CppObject* System::Text::RegularExpressions::MatchCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.System.Collections.IList.set_Item
void System::Text::RegularExpressions::MatchCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.MatchCollection/Enumerator
#include "System/Text/RegularExpressions/MatchCollection_Enumerator.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Text.RegularExpressions.MatchCollection _collection
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::MatchCollection*& System::Text::RegularExpressions::MatchCollection::Enumerator::dyn__collection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::Enumerator::dyn__collection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collection"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::MatchCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::MatchCollection::Enumerator::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::Enumerator::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection/Enumerator.MoveNext
bool System::Text::RegularExpressions::MatchCollection::Enumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::Enumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection::Enumerator*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection/Enumerator.get_Current
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::MatchCollection::Enumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::Enumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection::Enumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection/Enumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Text::RegularExpressions::MatchCollection::Enumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::Enumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection::Enumerator*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection/Enumerator.System.Collections.IEnumerator.Reset
void System::Text::RegularExpressions::MatchCollection::Enumerator::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::Enumerator::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection::Enumerator*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection/Enumerator.System.IDisposable.Dispose
void System::Text::RegularExpressions::MatchCollection::Enumerator::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::Enumerator::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchCollection::Enumerator*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.ExclusiveReference
#include "System/Text/RegularExpressions/ExclusiveReference.hpp"
// Including type: System.Text.RegularExpressions.RegexRunner
#include "System/Text/RegularExpressions/RegexRunner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.RegexRunner _ref
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexRunner*& System::Text::RegularExpressions::ExclusiveReference::dyn__ref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::ExclusiveReference::dyn__ref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ref"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexRunner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.RegexRunner _obj
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexRunner*& System::Text::RegularExpressions::ExclusiveReference::dyn__obj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::ExclusiveReference::dyn__obj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obj"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexRunner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _locked
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::ExclusiveReference::dyn__locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::ExclusiveReference::dyn__locked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_locked"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.ExclusiveReference.Get
::System::Text::RegularExpressions::RegexRunner* System::Text::RegularExpressions::ExclusiveReference::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::ExclusiveReference::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexRunner*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.ExclusiveReference.Release
void System::Text::RegularExpressions::ExclusiveReference::Release(::System::Text::RegularExpressions::RegexRunner* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::ExclusiveReference::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Text.RegularExpressions.Regex/CachedCodeEntry
#include "System/Text/RegularExpressions/Regex_CachedCodeEntry.hpp"
// Including type: System.Text.RegularExpressions.RegexRunnerFactory
#include "System/Text/RegularExpressions/RegexRunnerFactory.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.ExclusiveReference
#include "System/Text/RegularExpressions/ExclusiveReference.hpp"
// Including type: System.WeakReference`1
#include "System/WeakReference_1.hpp"
// Including type: System.Text.RegularExpressions.RegexReplacement
#include "System/Text/RegularExpressions/RegexReplacement.hpp"
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Text.RegularExpressions.MatchCollection
#include "System/Text/RegularExpressions/MatchCollection.hpp"
// Including type: System.Text.RegularExpressions.MatchEvaluator
#include "System/Text/RegularExpressions/MatchEvaluator.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 CacheDictionarySwitchLimit
int System::Text::RegularExpressions::Regex::_get_CacheDictionarySwitchLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_CacheDictionarySwitchLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "Regex", "CacheDictionarySwitchLimit"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CacheDictionarySwitchLimit
void System::Text::RegularExpressions::Regex::_set_CacheDictionarySwitchLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_CacheDictionarySwitchLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "CacheDictionarySwitchLimit", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_cacheSize
int System::Text::RegularExpressions::Regex::_get_s_cacheSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_s_cacheSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "Regex", "s_cacheSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_cacheSize
void System::Text::RegularExpressions::Regex::_set_s_cacheSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_s_cacheSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "s_cacheSize", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Text.RegularExpressions.Regex/CachedCodeEntryKey,System.Text.RegularExpressions.Regex/CachedCodeEntry> s_cache
::System::Collections::Generic::Dictionary_2<::System::Text::RegularExpressions::Regex::CachedCodeEntryKey, ::System::Text::RegularExpressions::Regex::CachedCodeEntry*>* System::Text::RegularExpressions::Regex::_get_s_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_s_cache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Text::RegularExpressions::Regex::CachedCodeEntryKey, ::System::Text::RegularExpressions::Regex::CachedCodeEntry*>*>("System.Text.RegularExpressions", "Regex", "s_cache")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Text.RegularExpressions.Regex/CachedCodeEntryKey,System.Text.RegularExpressions.Regex/CachedCodeEntry> s_cache
void System::Text::RegularExpressions::Regex::_set_s_cache(::System::Collections::Generic::Dictionary_2<::System::Text::RegularExpressions::Regex::CachedCodeEntryKey, ::System::Text::RegularExpressions::Regex::CachedCodeEntry*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_s_cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "s_cache", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_cacheCount
int System::Text::RegularExpressions::Regex::_get_s_cacheCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_s_cacheCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "Regex", "s_cacheCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_cacheCount
void System::Text::RegularExpressions::Regex::_set_s_cacheCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_s_cacheCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "s_cacheCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.RegularExpressions.Regex/CachedCodeEntry s_cacheFirst
::System::Text::RegularExpressions::Regex::CachedCodeEntry* System::Text::RegularExpressions::Regex::_get_s_cacheFirst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_s_cacheFirst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Regex::CachedCodeEntry*>("System.Text.RegularExpressions", "Regex", "s_cacheFirst"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.RegularExpressions.Regex/CachedCodeEntry s_cacheFirst
void System::Text::RegularExpressions::Regex::_set_s_cacheFirst(::System::Text::RegularExpressions::Regex::CachedCodeEntry* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_s_cacheFirst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "s_cacheFirst", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.RegularExpressions.Regex/CachedCodeEntry s_cacheLast
::System::Text::RegularExpressions::Regex::CachedCodeEntry* System::Text::RegularExpressions::Regex::_get_s_cacheLast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_s_cacheLast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Regex::CachedCodeEntry*>("System.Text.RegularExpressions", "Regex", "s_cacheLast"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.RegularExpressions.Regex/CachedCodeEntry s_cacheLast
void System::Text::RegularExpressions::Regex::_set_s_cacheLast(::System::Text::RegularExpressions::Regex::CachedCodeEntry* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_s_cacheLast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "s_cacheLast", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.TimeSpan s_maximumMatchTimeout
::System::TimeSpan System::Text::RegularExpressions::Regex::_get_s_maximumMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_s_maximumMatchTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System.Text.RegularExpressions", "Regex", "s_maximumMatchTimeout"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.TimeSpan s_maximumMatchTimeout
void System::Text::RegularExpressions::Regex::_set_s_maximumMatchTimeout(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_s_maximumMatchTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "s_maximumMatchTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.String DefaultMatchTimeout_ConfigKeyName
::StringW System::Text::RegularExpressions::Regex::_get_DefaultMatchTimeout_ConfigKeyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_DefaultMatchTimeout_ConfigKeyName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "Regex", "DefaultMatchTimeout_ConfigKeyName"));
}
// Autogenerated static field setter
// Set static field: static private System.String DefaultMatchTimeout_ConfigKeyName
void System::Text::RegularExpressions::Regex::_set_DefaultMatchTimeout_ConfigKeyName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_DefaultMatchTimeout_ConfigKeyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "DefaultMatchTimeout_ConfigKeyName", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.TimeSpan s_defaultMatchTimeout
::System::TimeSpan System::Text::RegularExpressions::Regex::_get_s_defaultMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_s_defaultMatchTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System.Text.RegularExpressions", "Regex", "s_defaultMatchTimeout"));
}
// Autogenerated static field setter
// Set static field: static readonly System.TimeSpan s_defaultMatchTimeout
void System::Text::RegularExpressions::Regex::_set_s_defaultMatchTimeout(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_s_defaultMatchTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "s_defaultMatchTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.TimeSpan InfiniteMatchTimeout
::System::TimeSpan System::Text::RegularExpressions::Regex::_get_InfiniteMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_InfiniteMatchTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System.Text.RegularExpressions", "Regex", "InfiniteMatchTimeout"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.TimeSpan InfiniteMatchTimeout
void System::Text::RegularExpressions::Regex::_set_InfiniteMatchTimeout(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_InfiniteMatchTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "InfiniteMatchTimeout", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MaxOptionShift
int System::Text::RegularExpressions::Regex::_get_MaxOptionShift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_MaxOptionShift");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "Regex", "MaxOptionShift"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MaxOptionShift
void System::Text::RegularExpressions::Regex::_set_MaxOptionShift(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_MaxOptionShift");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "MaxOptionShift", value));
}
// Autogenerated instance field getter
// Get instance field: protected internal System.TimeSpan internalMatchTimeout
[[deprecated("Use field access instead!")]] ::System::TimeSpan& System::Text::RegularExpressions::Regex::dyn_internalMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_internalMatchTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalMatchTimeout"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.String pattern
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::Regex::dyn_pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_pattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Text.RegularExpressions.RegexOptions roptions
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexOptions& System::Text::RegularExpressions::Regex::dyn_roptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_roptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roptions"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Text.RegularExpressions.RegexRunnerFactory factory
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexRunnerFactory*& System::Text::RegularExpressions::Regex::dyn_factory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_factory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "factory"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexRunnerFactory**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Collections.Hashtable caps
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::Regex::dyn_caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Collections.Hashtable capnames
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::Regex::dyn_capnames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_capnames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "capnames"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.String[] capslist
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Text::RegularExpressions::Regex::dyn_capslist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_capslist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "capslist"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 capsize
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::Regex::dyn_capsize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_capsize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "capsize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.ExclusiveReference _runnerref
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::ExclusiveReference*& System::Text::RegularExpressions::Regex::dyn__runnerref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn__runnerref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_runnerref"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::ExclusiveReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.WeakReference`1<System.Text.RegularExpressions.RegexReplacement> _replref
[[deprecated("Use field access instead!")]] ::System::WeakReference_1<::System::Text::RegularExpressions::RegexReplacement*>*& System::Text::RegularExpressions::Regex::dyn__replref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn__replref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_replref"))->offset;
  return *reinterpret_cast<::System::WeakReference_1<::System::Text::RegularExpressions::RegexReplacement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexCode _code
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexCode*& System::Text::RegularExpressions::Regex::dyn__code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn__code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_code"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexCode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _refsInitialized
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::Regex::dyn__refsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn__refsInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refsInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.GetCachedCode
::System::Text::RegularExpressions::Regex::CachedCodeEntry* System::Text::RegularExpressions::Regex::GetCachedCode(::System::Text::RegularExpressions::Regex::CachedCodeEntryKey key, bool isToAdd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::GetCachedCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCachedCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(isToAdd)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Regex::CachedCodeEntry*, false>(this, ___internal__method, key, isToAdd);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.GetCachedCodeEntryInternal
::System::Text::RegularExpressions::Regex::CachedCodeEntry* System::Text::RegularExpressions::Regex::GetCachedCodeEntryInternal(::System::Text::RegularExpressions::Regex::CachedCodeEntryKey key, bool isToAdd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::GetCachedCodeEntryInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCachedCodeEntryInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(isToAdd)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Regex::CachedCodeEntry*, false>(this, ___internal__method, key, isToAdd);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.FillCacheDictionary
void System::Text::RegularExpressions::Regex::FillCacheDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::FillCacheDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillCacheDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.TryGetCacheValue
bool System::Text::RegularExpressions::Regex::TryGetCacheValue(::System::Text::RegularExpressions::Regex::CachedCodeEntryKey key, ByRef<::System::Text::RegularExpressions::Regex::CachedCodeEntry*> entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::TryGetCacheValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "TryGetCacheValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<::System::Text::RegularExpressions::Regex::CachedCodeEntry*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, byref(entry));
}
// Autogenerated method: System.Text.RegularExpressions.Regex.TryGetCacheValueSmall
bool System::Text::RegularExpressions::Regex::TryGetCacheValueSmall(::System::Text::RegularExpressions::Regex::CachedCodeEntryKey key, ByRef<::System::Text::RegularExpressions::Regex::CachedCodeEntry*> entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::TryGetCacheValueSmall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "TryGetCacheValueSmall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<::System::Text::RegularExpressions::Regex::CachedCodeEntry*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, byref(entry));
}
// Autogenerated method: System.Text.RegularExpressions.Regex.LookupCachedAndPromote
::System::Text::RegularExpressions::Regex::CachedCodeEntry* System::Text::RegularExpressions::Regex::LookupCachedAndPromote(::System::Text::RegularExpressions::Regex::CachedCodeEntryKey key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::LookupCachedAndPromote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "LookupCachedAndPromote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Regex::CachedCodeEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.IsMatch
bool System::Text::RegularExpressions::Regex::IsMatch(::StringW input, ::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.IsMatch
bool System::Text::RegularExpressions::Regex::IsMatch(::StringW input, ::StringW pattern, ::System::Text::RegularExpressions::RegexOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern, options);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.IsMatch
bool System::Text::RegularExpressions::Regex::IsMatch(::StringW input, ::StringW pattern, ::System::Text::RegularExpressions::RegexOptions options, ::System::TimeSpan matchTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(matchTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern, options, matchTimeout);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.IsMatch
bool System::Text::RegularExpressions::Regex::IsMatch(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.IsMatch
bool System::Text::RegularExpressions::Regex::IsMatch(::StringW input, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Match
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Regex::Match(::StringW input, ::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Match
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Regex::Match(::StringW input, ::StringW pattern, ::System::Text::RegularExpressions::RegexOptions options, ::System::TimeSpan matchTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(matchTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern, options, matchTimeout);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Match
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Regex::Match(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Match
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Regex::Match(::StringW input, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, input, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Matches
::System::Text::RegularExpressions::MatchCollection* System::Text::RegularExpressions::Regex::Matches(::StringW input, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Matches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Matches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::MatchCollection*, false>(this, ___internal__method, input, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::StringW pattern, ::StringW replacement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(replacement)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern, replacement);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::StringW pattern, ::StringW replacement, ::System::Text::RegularExpressions::RegexOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(replacement), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern, replacement, options);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::StringW pattern, ::StringW replacement, ::System::Text::RegularExpressions::RegexOptions options, ::System::TimeSpan matchTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(replacement), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(matchTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern, replacement, options, matchTimeout);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::StringW replacement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(replacement)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, input, replacement);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::StringW replacement, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(replacement), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, input, replacement, count);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::StringW replacement, int count, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(replacement), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, input, replacement, count, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::StringW pattern, ::System::Text::RegularExpressions::MatchEvaluator* evaluator, ::System::Text::RegularExpressions::RegexOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(evaluator), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern, evaluator, options);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::StringW pattern, ::System::Text::RegularExpressions::MatchEvaluator* evaluator, ::System::Text::RegularExpressions::RegexOptions options, ::System::TimeSpan matchTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(evaluator), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(matchTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern, evaluator, options, matchTimeout);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::System::Text::RegularExpressions::MatchEvaluator* evaluator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(evaluator)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, input, evaluator);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::System::Text::RegularExpressions::MatchEvaluator* evaluator, int count, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(evaluator), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, input, evaluator, count, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::System::Text::RegularExpressions::MatchEvaluator* evaluator, ::System::Text::RegularExpressions::Regex* regex, ::StringW input, int count, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evaluator), ::il2cpp_utils::ExtractType(regex), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, evaluator, regex, input, count, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Split
::ArrayW<::StringW> System::Text::RegularExpressions::Regex::Split(::StringW input, ::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Split
::ArrayW<::StringW> System::Text::RegularExpressions::Regex::Split(::StringW input, ::StringW pattern, ::System::Text::RegularExpressions::RegexOptions options, ::System::TimeSpan matchTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(matchTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern, options, matchTimeout);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Split
::ArrayW<::StringW> System::Text::RegularExpressions::Regex::Split(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Split
::ArrayW<::StringW> System::Text::RegularExpressions::Regex::Split(::StringW input, int count, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, input, count, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Split
::ArrayW<::StringW> System::Text::RegularExpressions::Regex::Split(::System::Text::RegularExpressions::Regex* regex, ::StringW input, int count, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(regex), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, regex, input, count, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex..cctor
void System::Text::RegularExpressions::Regex::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.ValidateMatchTimeout
void System::Text::RegularExpressions::Regex::ValidateMatchTimeout(::System::TimeSpan matchTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::ValidateMatchTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "ValidateMatchTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matchTimeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matchTimeout);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.InitDefaultMatchTimeout
::System::TimeSpan System::Text::RegularExpressions::Regex::InitDefaultMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::InitDefaultMatchTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "InitDefaultMatchTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Text::RegularExpressions::Regex::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* si, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::Regex*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, si, context);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Escape
::StringW System::Text::RegularExpressions::Regex::Escape(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Escape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Escape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Unescape
::StringW System::Text::RegularExpressions::Regex::Unescape(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Unescape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Unescape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.get_Options
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::Regex::get_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::get_Options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexOptions, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.get_RightToLeft
bool System::Text::RegularExpressions::Regex::get_RightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::get_RightToLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightToLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.GroupNameFromNumber
::StringW System::Text::RegularExpressions::Regex::GroupNameFromNumber(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::GroupNameFromNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GroupNameFromNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.GroupNumberFromName
int System::Text::RegularExpressions::Regex::GroupNumberFromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::GroupNumberFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GroupNumberFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.InitializeReferences
void System::Text::RegularExpressions::Regex::InitializeReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::InitializeReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Run
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Regex::Run(bool quick, int prevlen, ::StringW input, int beginning, int length, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(quick), ::il2cpp_utils::ExtractType(prevlen), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(beginning), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, quick, prevlen, input, beginning, length, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.UseOptionR
bool System::Text::RegularExpressions::Regex::UseOptionR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::UseOptionR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.UseOptionInvariant
bool System::Text::RegularExpressions::Regex::UseOptionInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::UseOptionInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.ToString
::StringW System::Text::RegularExpressions::Regex::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex/CachedCodeEntryKey.op_Equality
bool System::Text::RegularExpressions::operator ==(const ::System::Text::RegularExpressions::Regex::CachedCodeEntryKey& left, const ::System::Text::RegularExpressions::Regex::CachedCodeEntryKey& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CachedCodeEntryKey::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex/CachedCodeEntryKey", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.Regex/CachedCodeEntryKey
#include "System/Text/RegularExpressions/Regex.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Text.RegularExpressions.RegexOptions _options
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexOptions& System::Text::RegularExpressions::Regex::CachedCodeEntryKey::dyn__options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CachedCodeEntryKey::dyn__options");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_options"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _cultureKey
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::Regex::CachedCodeEntryKey::dyn__cultureKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CachedCodeEntryKey::dyn__cultureKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cultureKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _pattern
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::Regex::CachedCodeEntryKey::dyn__pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CachedCodeEntryKey::dyn__pattern");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.Regex/CachedCodeEntryKey..ctor
// ABORTED elsewhere.  System::Text::RegularExpressions::Regex::CachedCodeEntryKey::CachedCodeEntryKey(::System::Text::RegularExpressions::RegexOptions options, ::StringW cultureKey, ::StringW pattern)
// Autogenerated method: System.Text.RegularExpressions.Regex/CachedCodeEntryKey.Equals
bool System::Text::RegularExpressions::Regex::CachedCodeEntryKey::Equals(::System::Text::RegularExpressions::Regex::CachedCodeEntryKey other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CachedCodeEntryKey::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Text::RegularExpressions::Regex::CachedCodeEntryKey), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Text.RegularExpressions.Regex/CachedCodeEntryKey.Equals
bool System::Text::RegularExpressions::Regex::CachedCodeEntryKey::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CachedCodeEntryKey::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Text.RegularExpressions.Regex/CachedCodeEntryKey.GetHashCode
int System::Text::RegularExpressions::Regex::CachedCodeEntryKey::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CachedCodeEntryKey::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.Regex/CachedCodeEntry
#include "System/Text/RegularExpressions/Regex_CachedCodeEntry.hpp"
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.ExclusiveReference
#include "System/Text/RegularExpressions/ExclusiveReference.hpp"
// Including type: System.WeakReference`1
#include "System/WeakReference_1.hpp"
// Including type: System.Text.RegularExpressions.RegexReplacement
#include "System/Text/RegularExpressions/RegexReplacement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Text.RegularExpressions.Regex/CachedCodeEntry Next
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::Regex::CachedCodeEntry*& System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Regex::CachedCodeEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Text.RegularExpressions.Regex/CachedCodeEntry Previous
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::Regex::CachedCodeEntry*& System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_Previous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_Previous");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Previous"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Regex::CachedCodeEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Text.RegularExpressions.Regex/CachedCodeEntryKey Key
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::Regex::CachedCodeEntryKey& System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_Key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Key"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Regex::CachedCodeEntryKey*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Text.RegularExpressions.RegexCode Code
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexCode*& System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_Code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Code"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexCode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Hashtable Caps
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_Caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_Caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Hashtable Capnames
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_Capnames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_Capnames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Capnames"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String[] Capslist
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_Capslist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_Capslist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Capslist"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Capsize
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_Capsize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_Capsize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Capsize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Text.RegularExpressions.ExclusiveReference Runnerref
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::ExclusiveReference*& System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_Runnerref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_Runnerref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Runnerref"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::ExclusiveReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.WeakReference`1<System.Text.RegularExpressions.RegexReplacement> ReplRef
[[deprecated("Use field access instead!")]] ::System::WeakReference_1<::System::Text::RegularExpressions::RegexReplacement*>*& System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_ReplRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CachedCodeEntry::dyn_ReplRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReplRef"))->offset;
  return *reinterpret_cast<::System::WeakReference_1<::System::Text::RegularExpressions::RegexReplacement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.MatchEvaluator
#include "System/Text/RegularExpressions/MatchEvaluator.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.MatchEvaluator.Invoke
::StringW System::Text::RegularExpressions::MatchEvaluator::Invoke(::System::Text::RegularExpressions::Match* match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchEvaluator::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::MatchEvaluator*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, match);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexBoyerMoore
#include "System/Text/RegularExpressions/RegexBoyerMoore.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[] Positive
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexBoyerMoore::dyn_Positive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn_Positive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Positive"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[] NegativeASCII
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexBoyerMoore::dyn_NegativeASCII() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn_NegativeASCII");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NegativeASCII"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[][] NegativeUnicode
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<int>>& System::Text::RegularExpressions::RegexBoyerMoore::dyn_NegativeUnicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn_NegativeUnicode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NegativeUnicode"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<int>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Pattern
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::RegexBoyerMoore::dyn_Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn_Pattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 LowASCII
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexBoyerMoore::dyn_LowASCII() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn_LowASCII");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LowASCII"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 HighASCII
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexBoyerMoore::dyn_HighASCII() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn_HighASCII");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HighASCII"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean RightToLeft
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexBoyerMoore::dyn_RightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn_RightToLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightToLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean CaseInsensitive
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexBoyerMoore::dyn_CaseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn_CaseInsensitive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CaseInsensitive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Globalization.CultureInfo _culture
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& System::Text::RegularExpressions::RegexBoyerMoore::dyn__culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexBoyerMoore.MatchPattern
bool System::Text::RegularExpressions::RegexBoyerMoore::MatchPattern(::StringW text, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::MatchPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, text, index);
}
// Autogenerated method: System.Text.RegularExpressions.RegexBoyerMoore.IsMatch
bool System::Text::RegularExpressions::RegexBoyerMoore::IsMatch(::StringW text, int index, int beglimit, int endlimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(beglimit), ::il2cpp_utils::ExtractType(endlimit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, text, index, beglimit, endlimit);
}
// Autogenerated method: System.Text.RegularExpressions.RegexBoyerMoore.Scan
int System::Text::RegularExpressions::RegexBoyerMoore::Scan(::StringW text, int index, int beglimit, int endlimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::Scan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(beglimit), ::il2cpp_utils::ExtractType(endlimit)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, text, index, beglimit, endlimit);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexCharClass
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass/SingleRangeComparer
#include "System/Text/RegularExpressions/RegexCharClass_SingleRangeComparer.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Globalization.UnicodeCategory
#include "System/Globalization/UnicodeCategory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String s_internalRegexIgnoreCase
::StringW System::Text::RegularExpressions::RegexCharClass::_get_s_internalRegexIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_s_internalRegexIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "s_internalRegexIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String s_internalRegexIgnoreCase
void System::Text::RegularExpressions::RegexCharClass::_set_s_internalRegexIgnoreCase(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_s_internalRegexIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "s_internalRegexIgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String s_space
::StringW System::Text::RegularExpressions::RegexCharClass::_get_s_space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_s_space");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "s_space"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String s_space
void System::Text::RegularExpressions::RegexCharClass::_set_s_space(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_s_space");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "s_space", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String s_notSpace
::StringW System::Text::RegularExpressions::RegexCharClass::_get_s_notSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_s_notSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "s_notSpace"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String s_notSpace
void System::Text::RegularExpressions::RegexCharClass::_set_s_notSpace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_s_notSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "s_notSpace", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String s_word
::StringW System::Text::RegularExpressions::RegexCharClass::_get_s_word() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_s_word");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "s_word"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String s_word
void System::Text::RegularExpressions::RegexCharClass::_set_s_word(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_s_word");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "s_word", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String s_notWord
::StringW System::Text::RegularExpressions::RegexCharClass::_get_s_notWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_s_notWord");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "s_notWord"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String s_notWord
void System::Text::RegularExpressions::RegexCharClass::_set_s_notWord(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_s_notWord");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "s_notWord", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String SpaceClass
::StringW System::Text::RegularExpressions::RegexCharClass::_get_SpaceClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_SpaceClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "SpaceClass"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String SpaceClass
void System::Text::RegularExpressions::RegexCharClass::_set_SpaceClass(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_SpaceClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "SpaceClass", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String NotSpaceClass
::StringW System::Text::RegularExpressions::RegexCharClass::_get_NotSpaceClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_NotSpaceClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "NotSpaceClass"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String NotSpaceClass
void System::Text::RegularExpressions::RegexCharClass::_set_NotSpaceClass(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_NotSpaceClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotSpaceClass", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String WordClass
::StringW System::Text::RegularExpressions::RegexCharClass::_get_WordClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_WordClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "WordClass"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String WordClass
void System::Text::RegularExpressions::RegexCharClass::_set_WordClass(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_WordClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "WordClass", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String NotWordClass
::StringW System::Text::RegularExpressions::RegexCharClass::_get_NotWordClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_NotWordClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "NotWordClass"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String NotWordClass
void System::Text::RegularExpressions::RegexCharClass::_set_NotWordClass(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_NotWordClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotWordClass", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String DigitClass
::StringW System::Text::RegularExpressions::RegexCharClass::_get_DigitClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_DigitClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "DigitClass"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String DigitClass
void System::Text::RegularExpressions::RegexCharClass::_set_DigitClass(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_DigitClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "DigitClass", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String NotDigitClass
::StringW System::Text::RegularExpressions::RegexCharClass::_get_NotDigitClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_NotDigitClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "NotDigitClass"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String NotDigitClass
void System::Text::RegularExpressions::RegexCharClass::_set_NotDigitClass(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_NotDigitClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotDigitClass", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> s_definedCategories
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* System::Text::RegularExpressions::RegexCharClass::_get_s_definedCategories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_s_definedCategories");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>("System.Text.RegularExpressions", "RegexCharClass", "s_definedCategories")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> s_definedCategories
void System::Text::RegularExpressions::RegexCharClass::_set_s_definedCategories(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_s_definedCategories");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "s_definedCategories", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[][] s_propTable
::ArrayW<::ArrayW<::StringW>> System::Text::RegularExpressions::RegexCharClass::_get_s_propTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_s_propTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::ArrayW<::StringW>>>("System.Text.RegularExpressions", "RegexCharClass", "s_propTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[][] s_propTable
void System::Text::RegularExpressions::RegexCharClass::_set_s_propTable(::ArrayW<::ArrayW<::StringW>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_s_propTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "s_propTable", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Text.RegularExpressions.RegexCharClass/LowerCaseMapping[] s_lcTable
::ArrayW<::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping> System::Text::RegularExpressions::RegexCharClass::_get_s_lcTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_s_lcTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping>>("System.Text.RegularExpressions", "RegexCharClass", "s_lcTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Text.RegularExpressions.RegexCharClass/LowerCaseMapping[] s_lcTable
void System::Text::RegularExpressions::RegexCharClass::_set_s_lcTable(::ArrayW<::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_s_lcTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "s_lcTable", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Text.RegularExpressions.RegexCharClass/SingleRange> _rangelist
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexCharClass::SingleRange>*& System::Text::RegularExpressions::RegexCharClass::dyn__rangelist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::dyn__rangelist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rangelist"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexCharClass::SingleRange>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder _categories
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::Text::RegularExpressions::RegexCharClass::dyn__categories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::dyn__categories");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_categories"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canonical
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexCharClass::dyn__canonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::dyn__canonical");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canonical"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _negate
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexCharClass::dyn__negate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::dyn__negate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_negate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.RegexCharClass _subtractor
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexCharClass*& System::Text::RegularExpressions::RegexCharClass::dyn__subtractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::dyn__subtractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subtractor"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexCharClass**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.get_CanMerge
bool System::Text::RegularExpressions::RegexCharClass::get_CanMerge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::get_CanMerge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanMerge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.set_Negate
void System::Text::RegularExpressions::RegexCharClass::set_Negate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::set_Negate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Negate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddChar
void System::Text::RegularExpressions::RegexCharClass::AddChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddCharClass
void System::Text::RegularExpressions::RegexCharClass::AddCharClass(::System::Text::RegularExpressions::RegexCharClass* cc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddCharClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCharClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cc);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddSet
void System::Text::RegularExpressions::RegexCharClass::AddSet(::StringW set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddSubtraction
void System::Text::RegularExpressions::RegexCharClass::AddSubtraction(::System::Text::RegularExpressions::RegexCharClass* sub) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddSubtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSubtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sub)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sub);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddRange
void System::Text::RegularExpressions::RegexCharClass::AddRange(::Il2CppChar first, ::Il2CppChar last) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(last)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, first, last);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddCategoryFromName
void System::Text::RegularExpressions::RegexCharClass::AddCategoryFromName(::StringW categoryName, bool invert, bool caseInsensitive, ::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddCategoryFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCategoryFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(categoryName), ::il2cpp_utils::ExtractType(invert), ::il2cpp_utils::ExtractType(caseInsensitive), ::il2cpp_utils::ExtractType(pattern)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, categoryName, invert, caseInsensitive, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddCategory
void System::Text::RegularExpressions::RegexCharClass::AddCategory(::StringW category) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(category)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, category);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddLowercase
void System::Text::RegularExpressions::RegexCharClass::AddLowercase(::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddLowercase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLowercase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, culture);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddLowercaseRange
void System::Text::RegularExpressions::RegexCharClass::AddLowercaseRange(::Il2CppChar chMin, ::Il2CppChar chMax, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddLowercaseRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLowercaseRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chMin), ::il2cpp_utils::ExtractType(chMax), ::il2cpp_utils::ExtractType(culture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chMin, chMax, culture);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddWord
void System::Text::RegularExpressions::RegexCharClass::AddWord(bool ecma, bool negate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ecma), ::il2cpp_utils::ExtractType(negate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ecma, negate);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddSpace
void System::Text::RegularExpressions::RegexCharClass::AddSpace(bool ecma, bool negate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ecma), ::il2cpp_utils::ExtractType(negate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ecma, negate);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddDigit
void System::Text::RegularExpressions::RegexCharClass::AddDigit(bool ecma, bool negate, ::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ecma), ::il2cpp_utils::ExtractType(negate), ::il2cpp_utils::ExtractType(pattern)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ecma, negate, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.SingletonChar
::Il2CppChar System::Text::RegularExpressions::RegexCharClass::SingletonChar(::StringW set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::SingletonChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "SingletonChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsMergeable
bool System::Text::RegularExpressions::RegexCharClass::IsMergeable(::StringW charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsMergeable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsMergeable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charClass)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsEmpty
bool System::Text::RegularExpressions::RegexCharClass::IsEmpty(::StringW charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charClass)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsSingleton
bool System::Text::RegularExpressions::RegexCharClass::IsSingleton(::StringW set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsSingleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsSingleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsSingletonInverse
bool System::Text::RegularExpressions::RegexCharClass::IsSingletonInverse(::StringW set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsSingletonInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsSingletonInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsSubtraction
bool System::Text::RegularExpressions::RegexCharClass::IsSubtraction(::StringW charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsSubtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsSubtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charClass)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsNegated
bool System::Text::RegularExpressions::RegexCharClass::IsNegated(::StringW set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsNegated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsNegated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsECMAWordChar
bool System::Text::RegularExpressions::RegexCharClass::IsECMAWordChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsECMAWordChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsECMAWordChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsWordChar
bool System::Text::RegularExpressions::RegexCharClass::IsWordChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsWordChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsWordChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInClass
bool System::Text::RegularExpressions::RegexCharClass::CharInClass(::Il2CppChar ch, ::StringW set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::CharInClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInClassRecursive
bool System::Text::RegularExpressions::RegexCharClass::CharInClassRecursive(::Il2CppChar ch, ::StringW set, int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::CharInClassRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInClassRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(set), ::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, set, start);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInClassInternal
bool System::Text::RegularExpressions::RegexCharClass::CharInClassInternal(::Il2CppChar ch, ::StringW set, int start, int mySetLength, int myCategoryLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::CharInClassInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInClassInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(set), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(mySetLength), ::il2cpp_utils::ExtractType(myCategoryLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, set, start, mySetLength, myCategoryLength);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInCategory
bool System::Text::RegularExpressions::RegexCharClass::CharInCategory(::Il2CppChar ch, ::StringW set, int start, int mySetLength, int myCategoryLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::CharInCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(set), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(mySetLength), ::il2cpp_utils::ExtractType(myCategoryLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, set, start, mySetLength, myCategoryLength);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInCategoryGroup
bool System::Text::RegularExpressions::RegexCharClass::CharInCategoryGroup(::Il2CppChar ch, ::System::Globalization::UnicodeCategory chcategory, ::StringW category, ByRef<int> i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::CharInCategoryGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInCategoryGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(chcategory), ::il2cpp_utils::ExtractType(category), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, chcategory, category, byref(i));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.NegateCategory
::StringW System::Text::RegularExpressions::RegexCharClass::NegateCategory(::StringW category) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::NegateCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "NegateCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(category)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, category);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.Parse
::System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexCharClass::Parse(::StringW charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charClass)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCharClass*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.ParseRecursive
::System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexCharClass::ParseRecursive(::StringW charClass, int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::ParseRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "ParseRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charClass), ::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCharClass*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charClass, start);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.RangeCount
int System::Text::RegularExpressions::RegexCharClass::RangeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::RangeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RangeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.ToStringClass
::StringW System::Text::RegularExpressions::RegexCharClass::ToStringClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::ToStringClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.GetRangeAt
::System::Text::RegularExpressions::RegexCharClass::SingleRange System::Text::RegularExpressions::RegexCharClass::GetRangeAt(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::GetRangeAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRangeAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCharClass::SingleRange, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.Canonicalize
void System::Text::RegularExpressions::RegexCharClass::Canonicalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::Canonicalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Canonicalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.SetFromProperty
::StringW System::Text::RegularExpressions::RegexCharClass::SetFromProperty(::StringW capname, bool invert, ::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::SetFromProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "SetFromProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capname), ::il2cpp_utils::ExtractType(invert), ::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, capname, invert, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass..cctor
void System::Text::RegularExpressions::RegexCharClass::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexCharClass/LowerCaseMapping
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Char ChMin
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn_ChMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn_ChMin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ChMin"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Char ChMax
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn_ChMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn_ChMax");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ChMax"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 LcOp
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn_LcOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn_LcOp");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LcOp"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Data
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn_Data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Data"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass/LowerCaseMapping..ctor
// ABORTED elsewhere.  System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::LowerCaseMapping(::Il2CppChar chMin, ::Il2CppChar chMax, int lcOp, int data)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexCharClass/SingleRangeComparer
#include "System/Text/RegularExpressions/RegexCharClass_SingleRangeComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Text.RegularExpressions.RegexCharClass/SingleRangeComparer Instance
::System::Text::RegularExpressions::RegexCharClass::SingleRangeComparer* System::Text::RegularExpressions::RegexCharClass::SingleRangeComparer::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::SingleRangeComparer::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexCharClass::SingleRangeComparer*>("System.Text.RegularExpressions", "RegexCharClass/SingleRangeComparer", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Text.RegularExpressions.RegexCharClass/SingleRangeComparer Instance
void System::Text::RegularExpressions::RegexCharClass::SingleRangeComparer::_set_Instance(::System::Text::RegularExpressions::RegexCharClass::SingleRangeComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::SingleRangeComparer::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass/SingleRangeComparer", "Instance", value));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass/SingleRangeComparer.Compare
int System::Text::RegularExpressions::RegexCharClass::SingleRangeComparer::Compare(::System::Text::RegularExpressions::RegexCharClass::SingleRange x, ::System::Text::RegularExpressions::RegexCharClass::SingleRange y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::SingleRangeComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::RegexCharClass::SingleRangeComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass/SingleRangeComparer..cctor
void System::Text::RegularExpressions::RegexCharClass::SingleRangeComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::SingleRangeComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass/SingleRangeComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexCharClass/SingleRange
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Char First
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Text::RegularExpressions::RegexCharClass::SingleRange::dyn_First() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::SingleRange::dyn_First");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "First"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Char Last
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Text::RegularExpressions::RegexCharClass::SingleRange::dyn_Last() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::SingleRange::dyn_Last");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Last"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass/SingleRange..ctor
// ABORTED elsewhere.  System::Text::RegularExpressions::RegexCharClass::SingleRange::SingleRange(::Il2CppChar first, ::Il2CppChar last)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.RegexBoyerMoore
#include "System/Text/RegularExpressions/RegexBoyerMoore.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 Onerep
int System::Text::RegularExpressions::RegexCode::_get_Onerep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Onerep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Onerep"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Onerep
void System::Text::RegularExpressions::RegexCode::_set_Onerep(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Onerep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Onerep", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Notonerep
int System::Text::RegularExpressions::RegexCode::_get_Notonerep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Notonerep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Notonerep"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Notonerep
void System::Text::RegularExpressions::RegexCode::_set_Notonerep(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Notonerep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Notonerep", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Setrep
int System::Text::RegularExpressions::RegexCode::_get_Setrep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Setrep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Setrep"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Setrep
void System::Text::RegularExpressions::RegexCode::_set_Setrep(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Setrep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Setrep", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Oneloop
int System::Text::RegularExpressions::RegexCode::_get_Oneloop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Oneloop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Oneloop"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Oneloop
void System::Text::RegularExpressions::RegexCode::_set_Oneloop(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Oneloop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Oneloop", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Notoneloop
int System::Text::RegularExpressions::RegexCode::_get_Notoneloop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Notoneloop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Notoneloop"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Notoneloop
void System::Text::RegularExpressions::RegexCode::_set_Notoneloop(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Notoneloop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Notoneloop", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Setloop
int System::Text::RegularExpressions::RegexCode::_get_Setloop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Setloop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Setloop"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Setloop
void System::Text::RegularExpressions::RegexCode::_set_Setloop(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Setloop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Setloop", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Onelazy
int System::Text::RegularExpressions::RegexCode::_get_Onelazy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Onelazy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Onelazy"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Onelazy
void System::Text::RegularExpressions::RegexCode::_set_Onelazy(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Onelazy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Onelazy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Notonelazy
int System::Text::RegularExpressions::RegexCode::_get_Notonelazy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Notonelazy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Notonelazy"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Notonelazy
void System::Text::RegularExpressions::RegexCode::_set_Notonelazy(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Notonelazy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Notonelazy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Setlazy
int System::Text::RegularExpressions::RegexCode::_get_Setlazy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Setlazy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Setlazy"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Setlazy
void System::Text::RegularExpressions::RegexCode::_set_Setlazy(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Setlazy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Setlazy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 One
int System::Text::RegularExpressions::RegexCode::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "One"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 One
void System::Text::RegularExpressions::RegexCode::_set_One(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "One", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Notone
int System::Text::RegularExpressions::RegexCode::_get_Notone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Notone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Notone"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Notone
void System::Text::RegularExpressions::RegexCode::_set_Notone(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Notone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Notone", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Set
int System::Text::RegularExpressions::RegexCode::_get_Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Set"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Set
void System::Text::RegularExpressions::RegexCode::_set_Set(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Set", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Multi
int System::Text::RegularExpressions::RegexCode::_get_Multi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Multi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Multi"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Multi
void System::Text::RegularExpressions::RegexCode::_set_Multi(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Multi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Multi", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Ref
int System::Text::RegularExpressions::RegexCode::_get_Ref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Ref");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Ref"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Ref
void System::Text::RegularExpressions::RegexCode::_set_Ref(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Ref");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Ref", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Bol
int System::Text::RegularExpressions::RegexCode::_get_Bol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Bol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Bol"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Bol
void System::Text::RegularExpressions::RegexCode::_set_Bol(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Bol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Bol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Eol
int System::Text::RegularExpressions::RegexCode::_get_Eol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Eol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Eol"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Eol
void System::Text::RegularExpressions::RegexCode::_set_Eol(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Eol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Eol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Boundary
int System::Text::RegularExpressions::RegexCode::_get_Boundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Boundary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Boundary"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Boundary
void System::Text::RegularExpressions::RegexCode::_set_Boundary(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Boundary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Boundary", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Nonboundary
int System::Text::RegularExpressions::RegexCode::_get_Nonboundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Nonboundary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Nonboundary"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Nonboundary
void System::Text::RegularExpressions::RegexCode::_set_Nonboundary(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Nonboundary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Nonboundary", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Beginning
int System::Text::RegularExpressions::RegexCode::_get_Beginning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Beginning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Beginning"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Beginning
void System::Text::RegularExpressions::RegexCode::_set_Beginning(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Beginning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Beginning", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Start
int System::Text::RegularExpressions::RegexCode::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Start"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Start
void System::Text::RegularExpressions::RegexCode::_set_Start(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 EndZ
int System::Text::RegularExpressions::RegexCode::_get_EndZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_EndZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "EndZ"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 EndZ
void System::Text::RegularExpressions::RegexCode::_set_EndZ(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_EndZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "EndZ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 End
int System::Text::RegularExpressions::RegexCode::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 End
void System::Text::RegularExpressions::RegexCode::_set_End(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "End", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Nothing
int System::Text::RegularExpressions::RegexCode::_get_Nothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Nothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Nothing"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Nothing
void System::Text::RegularExpressions::RegexCode::_set_Nothing(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Nothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Nothing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Lazybranch
int System::Text::RegularExpressions::RegexCode::_get_Lazybranch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Lazybranch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Lazybranch"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Lazybranch
void System::Text::RegularExpressions::RegexCode::_set_Lazybranch(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Lazybranch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Lazybranch", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Branchmark
int System::Text::RegularExpressions::RegexCode::_get_Branchmark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Branchmark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Branchmark"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Branchmark
void System::Text::RegularExpressions::RegexCode::_set_Branchmark(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Branchmark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Branchmark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Lazybranchmark
int System::Text::RegularExpressions::RegexCode::_get_Lazybranchmark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Lazybranchmark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Lazybranchmark"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Lazybranchmark
void System::Text::RegularExpressions::RegexCode::_set_Lazybranchmark(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Lazybranchmark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Lazybranchmark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Nullcount
int System::Text::RegularExpressions::RegexCode::_get_Nullcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Nullcount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Nullcount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Nullcount
void System::Text::RegularExpressions::RegexCode::_set_Nullcount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Nullcount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Nullcount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Setcount
int System::Text::RegularExpressions::RegexCode::_get_Setcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Setcount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Setcount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Setcount
void System::Text::RegularExpressions::RegexCode::_set_Setcount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Setcount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Setcount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Branchcount
int System::Text::RegularExpressions::RegexCode::_get_Branchcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Branchcount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Branchcount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Branchcount
void System::Text::RegularExpressions::RegexCode::_set_Branchcount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Branchcount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Branchcount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Lazybranchcount
int System::Text::RegularExpressions::RegexCode::_get_Lazybranchcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Lazybranchcount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Lazybranchcount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Lazybranchcount
void System::Text::RegularExpressions::RegexCode::_set_Lazybranchcount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Lazybranchcount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Lazybranchcount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Nullmark
int System::Text::RegularExpressions::RegexCode::_get_Nullmark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Nullmark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Nullmark"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Nullmark
void System::Text::RegularExpressions::RegexCode::_set_Nullmark(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Nullmark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Nullmark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Setmark
int System::Text::RegularExpressions::RegexCode::_get_Setmark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Setmark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Setmark"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Setmark
void System::Text::RegularExpressions::RegexCode::_set_Setmark(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Setmark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Setmark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Capturemark
int System::Text::RegularExpressions::RegexCode::_get_Capturemark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Capturemark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Capturemark"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Capturemark
void System::Text::RegularExpressions::RegexCode::_set_Capturemark(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Capturemark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Capturemark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Getmark
int System::Text::RegularExpressions::RegexCode::_get_Getmark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Getmark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Getmark"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Getmark
void System::Text::RegularExpressions::RegexCode::_set_Getmark(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Getmark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Getmark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Setjump
int System::Text::RegularExpressions::RegexCode::_get_Setjump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Setjump");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Setjump"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Setjump
void System::Text::RegularExpressions::RegexCode::_set_Setjump(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Setjump");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Setjump", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Backjump
int System::Text::RegularExpressions::RegexCode::_get_Backjump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Backjump");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Backjump"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Backjump
void System::Text::RegularExpressions::RegexCode::_set_Backjump(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Backjump");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Backjump", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Forejump
int System::Text::RegularExpressions::RegexCode::_get_Forejump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Forejump");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Forejump"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Forejump
void System::Text::RegularExpressions::RegexCode::_set_Forejump(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Forejump");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Forejump", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Testref
int System::Text::RegularExpressions::RegexCode::_get_Testref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Testref");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Testref"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Testref
void System::Text::RegularExpressions::RegexCode::_set_Testref(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Testref");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Testref", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Goto
int System::Text::RegularExpressions::RegexCode::_get_Goto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Goto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Goto"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Goto
void System::Text::RegularExpressions::RegexCode::_set_Goto(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Goto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Goto", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Prune
int System::Text::RegularExpressions::RegexCode::_get_Prune() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Prune");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Prune"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Prune
void System::Text::RegularExpressions::RegexCode::_set_Prune(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Prune");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Prune", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Stop
int System::Text::RegularExpressions::RegexCode::_get_Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Stop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Stop"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Stop
void System::Text::RegularExpressions::RegexCode::_set_Stop(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Stop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Stop", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ECMABoundary
int System::Text::RegularExpressions::RegexCode::_get_ECMABoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_ECMABoundary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "ECMABoundary"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ECMABoundary
void System::Text::RegularExpressions::RegexCode::_set_ECMABoundary(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_ECMABoundary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "ECMABoundary", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 NonECMABoundary
int System::Text::RegularExpressions::RegexCode::_get_NonECMABoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_NonECMABoundary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "NonECMABoundary"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 NonECMABoundary
void System::Text::RegularExpressions::RegexCode::_set_NonECMABoundary(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_NonECMABoundary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "NonECMABoundary", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Mask
int System::Text::RegularExpressions::RegexCode::_get_Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Mask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Mask"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Mask
void System::Text::RegularExpressions::RegexCode::_set_Mask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Mask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Mask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Rtl
int System::Text::RegularExpressions::RegexCode::_get_Rtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Rtl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Rtl"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Rtl
void System::Text::RegularExpressions::RegexCode::_set_Rtl(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Rtl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Rtl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Back
int System::Text::RegularExpressions::RegexCode::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Back"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Back
void System::Text::RegularExpressions::RegexCode::_set_Back(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Back", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Back2
int System::Text::RegularExpressions::RegexCode::_get_Back2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Back2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Back2"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Back2
void System::Text::RegularExpressions::RegexCode::_set_Back2(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Back2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Back2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Ci
int System::Text::RegularExpressions::RegexCode::_get_Ci() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_get_Ci");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexCode", "Ci"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Ci
void System::Text::RegularExpressions::RegexCode::_set_Ci(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::_set_Ci");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCode", "Ci", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[] Codes
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexCode::dyn_Codes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn_Codes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Codes"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String[] Strings
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Text::RegularExpressions::RegexCode::dyn_Strings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn_Strings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Strings"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 TrackCount
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexCode::dyn_TrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn_TrackCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Hashtable Caps
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::RegexCode::dyn_Caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn_Caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 CapSize
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexCode::dyn_CapSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn_CapSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CapSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Nullable`1<System.Text.RegularExpressions.RegexPrefix> FCPrefix
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::Text::RegularExpressions::RegexPrefix>& System::Text::RegularExpressions::RegexCode::dyn_FCPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn_FCPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FCPrefix"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::Text::RegularExpressions::RegexPrefix>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Text.RegularExpressions.RegexBoyerMoore BMPrefix
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexBoyerMoore*& System::Text::RegularExpressions::RegexCode::dyn_BMPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn_BMPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BMPrefix"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexBoyerMoore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Anchors
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexCode::dyn_Anchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn_Anchors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Anchors"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean RightToLeft
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexCode::dyn_RightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn_RightToLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightToLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCode.OpcodeBacktracks
bool System::Text::RegularExpressions::RegexCode::OpcodeBacktracks(int Op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::OpcodeBacktracks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCode", "OpcodeBacktracks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Op)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, Op);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexFCD
#include "System/Text/RegularExpressions/RegexFCD.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.RegularExpressions.RegexFC
#include "System/Text/RegularExpressions/RegexFC.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Text.RegularExpressions.RegexTree
#include "System/Text/RegularExpressions/RegexTree.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Text.RegularExpressions.RegexFC> _fcStack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexFC*>*& System::Text::RegularExpressions::RegexFCD::dyn__fcStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__fcStack");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fcStack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexFC*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.ValueListBuilder`1<System.Int32> _intStack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::ValueListBuilder_1_<int>& System::Text::RegularExpressions::RegexFCD::dyn__intStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__intStack");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intStack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::ValueListBuilder_1_<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _skipAllChildren
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexFCD::dyn__skipAllChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__skipAllChildren");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skipAllChildren"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _skipchild
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexFCD::dyn__skipchild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__skipchild");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skipchild"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _failed
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexFCD::dyn__failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__failed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD..ctor
System::Text::RegularExpressions::RegexFCD::RegexFCD(::System::Span_1<int> intStack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(intStack)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, intStack);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.FirstChars
::System::Nullable_1<::System::Text::RegularExpressions::RegexPrefix> System::Text::RegularExpressions::RegexFCD::FirstChars(::System::Text::RegularExpressions::RegexTree* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::FirstChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", "FirstChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::Text::RegularExpressions::RegexPrefix>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.Prefix
::System::Text::RegularExpressions::RegexPrefix System::Text::RegularExpressions::RegexFCD::Prefix(::System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", "Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexPrefix, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.Anchors
int System::Text::RegularExpressions::RegexFCD::Anchors(::System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::Anchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", "Anchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.AnchorFromType
int System::Text::RegularExpressions::RegexFCD::AnchorFromType(int type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::AnchorFromType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", "AnchorFromType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PushInt
void System::Text::RegularExpressions::RegexFCD::PushInt(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::PushInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PushInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.IntIsEmpty
bool System::Text::RegularExpressions::RegexFCD::IntIsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::IntIsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IntIsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PopInt
int System::Text::RegularExpressions::RegexFCD::PopInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::PopInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PopInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PushFC
void System::Text::RegularExpressions::RegexFCD::PushFC(::System::Text::RegularExpressions::RegexFC* fc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::PushFC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PushFC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fc);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.FCIsEmpty
bool System::Text::RegularExpressions::RegexFCD::FCIsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::FCIsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FCIsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PopFC
::System::Text::RegularExpressions::RegexFC* System::Text::RegularExpressions::RegexFCD::PopFC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::PopFC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PopFC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexFC*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.TopFC
::System::Text::RegularExpressions::RegexFC* System::Text::RegularExpressions::RegexFCD::TopFC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::TopFC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TopFC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexFC*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.Dispose
void System::Text::RegularExpressions::RegexFCD::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.RegexFCFromRegexTree
::System::Text::RegularExpressions::RegexFC* System::Text::RegularExpressions::RegexFCD::RegexFCFromRegexTree(::System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::RegexFCFromRegexTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RegexFCFromRegexTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexFC*, false>(this, ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.SkipChild
void System::Text::RegularExpressions::RegexFCD::SkipChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::SkipChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SkipChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.CalculateFC
void System::Text::RegularExpressions::RegexFCD::CalculateFC(int NodeType, ::System::Text::RegularExpressions::RegexNode* node, int CurIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::CalculateFC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CalculateFC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(NodeType), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(CurIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, NodeType, node, CurIndex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexFC
#include "System/Text/RegularExpressions/RegexFC.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.RegexCharClass _cc
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexCharClass*& System::Text::RegularExpressions::RegexFC::dyn__cc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::dyn__cc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cc"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexCharClass**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _nullable
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexFC::dyn__nullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::dyn__nullable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nullable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <CaseInsensitive>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexFC::dyn_$CaseInsensitive$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::dyn_$CaseInsensitive$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CaseInsensitive>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFC.AddFC
bool System::Text::RegularExpressions::RegexFC::AddFC(::System::Text::RegularExpressions::RegexFC* fc, bool concatenate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::AddFC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fc), ::il2cpp_utils::ExtractType(concatenate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, fc, concatenate);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFC.get_CaseInsensitive
bool System::Text::RegularExpressions::RegexFC::get_CaseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::get_CaseInsensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CaseInsensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFC.set_CaseInsensitive
void System::Text::RegularExpressions::RegexFC::set_CaseInsensitive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::set_CaseInsensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CaseInsensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFC.GetFirstChars
::StringW System::Text::RegularExpressions::RegexFC::GetFirstChars(::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::GetFirstChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, culture);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexInterpreter
#include "System/Text/RegularExpressions/RegexInterpreter.hpp"
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Text.RegularExpressions.RegexCode _code
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexCode*& System::Text::RegularExpressions::RegexInterpreter::dyn__code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn__code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_code"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexCode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Globalization.CultureInfo _culture
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& System::Text::RegularExpressions::RegexInterpreter::dyn__culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn__culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _operator
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexInterpreter::dyn__operator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn__operator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_operator"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _codepos
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexInterpreter::dyn__codepos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn__codepos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codepos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _rightToLeft
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexInterpreter::dyn__rightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn__rightToLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightToLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _caseInsensitive
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexInterpreter::dyn__caseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn__caseInsensitive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caseInsensitive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Advance
void System::Text::RegularExpressions::RegexInterpreter::Advance(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Advance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Advance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Goto
void System::Text::RegularExpressions::RegexInterpreter::Goto(int newpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Goto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Goto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Textto
void System::Text::RegularExpressions::RegexInterpreter::Textto(int newpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Textto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Textto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Trackto
void System::Text::RegularExpressions::RegexInterpreter::Trackto(int newpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Trackto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trackto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Textstart
int System::Text::RegularExpressions::RegexInterpreter::Textstart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Textstart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Textstart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Textpos
int System::Text::RegularExpressions::RegexInterpreter::Textpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Textpos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Textpos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Trackpos
int System::Text::RegularExpressions::RegexInterpreter::Trackpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Trackpos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trackpos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush
void System::Text::RegularExpressions::RegexInterpreter::TrackPush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush
void System::Text::RegularExpressions::RegexInterpreter::TrackPush(int I1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush
void System::Text::RegularExpressions::RegexInterpreter::TrackPush(int I1, int I2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1), ::il2cpp_utils::ExtractType(I2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1, I2);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush
void System::Text::RegularExpressions::RegexInterpreter::TrackPush(int I1, int I2, int I3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1), ::il2cpp_utils::ExtractType(I2), ::il2cpp_utils::ExtractType(I3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1, I2, I3);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush2
void System::Text::RegularExpressions::RegexInterpreter::TrackPush2(int I1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPush2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPush2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush2
void System::Text::RegularExpressions::RegexInterpreter::TrackPush2(int I1, int I2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPush2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPush2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1), ::il2cpp_utils::ExtractType(I2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1, I2);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Backtrack
void System::Text::RegularExpressions::RegexInterpreter::Backtrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Backtrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Backtrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.SetOperator
void System::Text::RegularExpressions::RegexInterpreter::SetOperator(int op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::SetOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPop
void System::Text::RegularExpressions::RegexInterpreter::TrackPop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPop
void System::Text::RegularExpressions::RegexInterpreter::TrackPop(int framesize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(framesize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, framesize);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPeek
int System::Text::RegularExpressions::RegexInterpreter::TrackPeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPeek
int System::Text::RegularExpressions::RegexInterpreter::TrackPeek(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPush
void System::Text::RegularExpressions::RegexInterpreter::StackPush(int I1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::StackPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StackPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPush
void System::Text::RegularExpressions::RegexInterpreter::StackPush(int I1, int I2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::StackPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StackPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1), ::il2cpp_utils::ExtractType(I2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1, I2);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPop
void System::Text::RegularExpressions::RegexInterpreter::StackPop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::StackPop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StackPop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPop
void System::Text::RegularExpressions::RegexInterpreter::StackPop(int framesize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::StackPop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StackPop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(framesize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, framesize);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPeek
int System::Text::RegularExpressions::RegexInterpreter::StackPeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::StackPeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StackPeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPeek
int System::Text::RegularExpressions::RegexInterpreter::StackPeek(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::StackPeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StackPeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Operator
int System::Text::RegularExpressions::RegexInterpreter::Operator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Operator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Operator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Operand
int System::Text::RegularExpressions::RegexInterpreter::Operand(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Operand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Operand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Leftchars
int System::Text::RegularExpressions::RegexInterpreter::Leftchars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Leftchars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Leftchars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Rightchars
int System::Text::RegularExpressions::RegexInterpreter::Rightchars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Rightchars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rightchars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Bump
int System::Text::RegularExpressions::RegexInterpreter::Bump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Bump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Bump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Forwardchars
int System::Text::RegularExpressions::RegexInterpreter::Forwardchars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Forwardchars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Forwardchars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Forwardcharnext
::Il2CppChar System::Text::RegularExpressions::RegexInterpreter::Forwardcharnext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Forwardcharnext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Forwardcharnext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Stringmatch
bool System::Text::RegularExpressions::RegexInterpreter::Stringmatch(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Stringmatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stringmatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Refmatch
bool System::Text::RegularExpressions::RegexInterpreter::Refmatch(int index, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Refmatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refmatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index, len);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Backwardnext
void System::Text::RegularExpressions::RegexInterpreter::Backwardnext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Backwardnext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Backwardnext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.CharAt
::Il2CppChar System::Text::RegularExpressions::RegexInterpreter::CharAt(int j) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::CharAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CharAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(j)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, j);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.InitTrackCount
void System::Text::RegularExpressions::RegexInterpreter::InitTrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::InitTrackCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::RegexRunner*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.FindFirstChar
bool System::Text::RegularExpressions::RegexInterpreter::FindFirstChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::FindFirstChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::RegexRunner*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Go
void System::Text::RegularExpressions::RegexInterpreter::Go() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Go");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::RegexRunner*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexMatchTimeoutException
#include "System/Text/RegularExpressions/RegexMatchTimeoutException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Input>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::RegexMatchTimeoutException::dyn_$Input$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::dyn_$Input$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Input>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Pattern>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::RegexMatchTimeoutException::dyn_$Pattern$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::dyn_$Pattern$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Pattern>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.TimeSpan <MatchTimeout>k__BackingField
[[deprecated("Use field access instead!")]] ::System::TimeSpan& System::Text::RegularExpressions::RegexMatchTimeoutException::dyn_$MatchTimeout$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::dyn_$MatchTimeout$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MatchTimeout>k__BackingField"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexMatchTimeoutException.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Text::RegularExpressions::RegexMatchTimeoutException::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::RegexMatchTimeoutException*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Text.RegularExpressions.RegexMatchTimeoutException.get_Input
::StringW System::Text::RegularExpressions::RegexMatchTimeoutException::get_Input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::get_Input");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Input", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexMatchTimeoutException.get_Pattern
::StringW System::Text::RegularExpressions::RegexMatchTimeoutException::get_Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::get_Pattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexMatchTimeoutException.get_MatchTimeout
::System::TimeSpan System::Text::RegularExpressions::RegexMatchTimeoutException::get_MatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::get_MatchTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MatchTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 NType
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexNode::dyn_NType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn_NType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Text.RegularExpressions.RegexNode> Children
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexNode*>*& System::Text::RegularExpressions::RegexNode::dyn_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn_Children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Str
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::RegexNode::dyn_Str() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn_Str");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Str"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char Ch
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Text::RegularExpressions::RegexNode::dyn_Ch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn_Ch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ch"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 M
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexNode::dyn_M() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn_M");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "M"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 N
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexNode::dyn_N() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn_N");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "N"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Text.RegularExpressions.RegexOptions Options
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexOptions& System::Text::RegularExpressions::RegexNode::dyn_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn_Options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Options"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Text.RegularExpressions.RegexNode Next
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexNode::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.UseOptionR
bool System::Text::RegularExpressions::RegexNode::UseOptionR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::UseOptionR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReverseLeft
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReverseLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ReverseLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReverseLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.MakeRep
void System::Text::RegularExpressions::RegexNode::MakeRep(int type, int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::MakeRep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeRep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, min, max);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.Reduce
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::Reduce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::Reduce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reduce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.StripEnation
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::StripEnation(int emptyType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::StripEnation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StripEnation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emptyType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method, emptyType);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceGroup
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ReduceGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceRep
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceRep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ReduceRep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceRep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceSet
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ReduceSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceAlternation
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceAlternation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ReduceAlternation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceAlternation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceConcatenation
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceConcatenation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ReduceConcatenation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceConcatenation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.MakeQuantifier
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::MakeQuantifier(bool lazy, int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::MakeQuantifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeQuantifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lazy), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method, lazy, min, max);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.AddChild
void System::Text::RegularExpressions::RegexNode::AddChild(::System::Text::RegularExpressions::RegexNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::AddChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newChild);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.Child
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::Child(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::Child");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Child", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ChildCount
int System::Text::RegularExpressions::RegexNode::ChildCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ChildCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChildCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.Type
int System::Text::RegularExpressions::RegexNode::Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexOptions
#include "System/Text/RegularExpressions/RegexOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions None
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions None
void System::Text::RegularExpressions::RegexOptions::_set_None(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions IgnoreCase
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_IgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_IgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "IgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions IgnoreCase
void System::Text::RegularExpressions::RegexOptions::_set_IgnoreCase(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_IgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "IgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions Multiline
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_Multiline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_Multiline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "Multiline"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions Multiline
void System::Text::RegularExpressions::RegexOptions::_set_Multiline(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_Multiline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "Multiline", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions ExplicitCapture
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_ExplicitCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_ExplicitCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "ExplicitCapture"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions ExplicitCapture
void System::Text::RegularExpressions::RegexOptions::_set_ExplicitCapture(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_ExplicitCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "ExplicitCapture", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions Compiled
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_Compiled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_Compiled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "Compiled"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions Compiled
void System::Text::RegularExpressions::RegexOptions::_set_Compiled(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_Compiled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "Compiled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions Singleline
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_Singleline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_Singleline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "Singleline"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions Singleline
void System::Text::RegularExpressions::RegexOptions::_set_Singleline(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_Singleline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "Singleline", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions IgnorePatternWhitespace
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_IgnorePatternWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_IgnorePatternWhitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "IgnorePatternWhitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions IgnorePatternWhitespace
void System::Text::RegularExpressions::RegexOptions::_set_IgnorePatternWhitespace(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_IgnorePatternWhitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "IgnorePatternWhitespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions RightToLeft
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_RightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_RightToLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "RightToLeft"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions RightToLeft
void System::Text::RegularExpressions::RegexOptions::_set_RightToLeft(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_RightToLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "RightToLeft", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions ECMAScript
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_ECMAScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_ECMAScript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "ECMAScript"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions ECMAScript
void System::Text::RegularExpressions::RegexOptions::_set_ECMAScript(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_ECMAScript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "ECMAScript", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions CultureInvariant
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_CultureInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_CultureInvariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "CultureInvariant"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions CultureInvariant
void System::Text::RegularExpressions::RegexOptions::_set_CultureInvariant(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_CultureInvariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "CultureInvariant", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexParser
#include "System/Text/RegularExpressions/RegexParser.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.RegularExpressions.RegexTree
#include "System/Text/RegularExpressions/RegexTree.hpp"
// Including type: System.Text.RegularExpressions.RegexReplacement
#include "System/Text/RegularExpressions/RegexReplacement.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
// Including type: System.ArgumentException
#include "System/ArgumentException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] s_category
::ArrayW<uint8_t> System::Text::RegularExpressions::RegexParser::_get_s_category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::_get_s_category");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Text.RegularExpressions", "RegexParser", "s_category"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] s_category
void System::Text::RegularExpressions::RegexParser::_set_s_category(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::_set_s_category");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexParser", "s_category", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.RegexNode _stack
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexParser::dyn__stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stack"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.RegexNode _group
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexParser::dyn__group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_group"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.RegexNode _alternation
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexParser::dyn__alternation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__alternation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alternation"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.RegexNode _concatenation
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexParser::dyn__concatenation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__concatenation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_concatenation"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.RegexNode _unit
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexParser::dyn__unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__unit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unit"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _pattern
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::RegexParser::dyn__pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__pattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentPos
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexParser::dyn__currentPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__currentPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo _culture
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& System::Text::RegularExpressions::RegexParser::dyn__culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _autocap
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexParser::dyn__autocap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__autocap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_autocap"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _capcount
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexParser::dyn__capcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__capcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capcount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _captop
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexParser::dyn__captop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__captop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_captop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _capsize
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexParser::dyn__capsize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__capsize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capsize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _caps
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::RegexParser::dyn__caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _capnames
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::RegexParser::dyn__capnames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__capnames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capnames"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _capnumlist
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexParser::dyn__capnumlist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__capnumlist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capnumlist"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _capnamelist
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Text::RegularExpressions::RegexParser::dyn__capnamelist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__capnamelist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capnamelist"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.RegexOptions _options
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexOptions& System::Text::RegularExpressions::RegexParser::dyn__options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_options"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Text.RegularExpressions.RegexOptions> _optionsStack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexOptions>*& System::Text::RegularExpressions::RegexParser::dyn__optionsStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__optionsStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optionsStack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexOptions>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _ignoreNextParen
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexParser::dyn__ignoreNextParen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__ignoreNextParen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoreNextParen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Parse
::System::Text::RegularExpressions::RegexTree* System::Text::RegularExpressions::RegexParser::Parse(::StringW re, ::System::Text::RegularExpressions::RegexOptions op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(re), ::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexTree*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, re, op);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ParseReplacement
::System::Text::RegularExpressions::RegexReplacement* System::Text::RegularExpressions::RegexParser::ParseReplacement(::StringW rep, ::System::Collections::Hashtable* caps, int capsize, ::System::Collections::Hashtable* capnames, ::System::Text::RegularExpressions::RegexOptions op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ParseReplacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "ParseReplacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rep), ::il2cpp_utils::ExtractType(caps), ::il2cpp_utils::ExtractType(capsize), ::il2cpp_utils::ExtractType(capnames), ::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexReplacement*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rep, caps, capsize, capnames, op);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Escape
::StringW System::Text::RegularExpressions::RegexParser::Escape(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::Escape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "Escape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Unescape
::StringW System::Text::RegularExpressions::RegexParser::Unescape(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::Unescape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "Unescape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.SetPattern
void System::Text::RegularExpressions::RegexParser::SetPattern(::StringW Re) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::SetPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Re)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Re);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Reset
void System::Text::RegularExpressions::RegexParser::Reset(::System::Text::RegularExpressions::RegexOptions topopts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topopts)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topopts);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanRegex
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanRegex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanReplacement
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanReplacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanReplacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanReplacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanCharClass
::System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexParser::ScanCharClass(bool caseInsensitive, bool scanOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanCharClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCharClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caseInsensitive), ::il2cpp_utils::ExtractType(scanOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCharClass*, false>(this, ___internal__method, caseInsensitive, scanOnly);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanGroupOpen
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanGroupOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanGroupOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanGroupOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanBlank
void System::Text::RegularExpressions::RegexParser::ScanBlank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanBlank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanBlank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanBackslash
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanBackslash(bool scanOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanBackslash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanBackslash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scanOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method, scanOnly);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanBasicBackslash
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanBasicBackslash(bool scanOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanBasicBackslash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanBasicBackslash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scanOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method, scanOnly);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanDollar
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanDollar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanDollar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanDollar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanCapname
::StringW System::Text::RegularExpressions::RegexParser::ScanCapname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanCapname");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCapname", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanOctal
::Il2CppChar System::Text::RegularExpressions::RegexParser::ScanOctal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanOctal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanOctal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanDecimal
int System::Text::RegularExpressions::RegexParser::ScanDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanHex
::Il2CppChar System::Text::RegularExpressions::RegexParser::ScanHex(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.HexDigit
int System::Text::RegularExpressions::RegexParser::HexDigit(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::HexDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "HexDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanControl
::Il2CppChar System::Text::RegularExpressions::RegexParser::ScanControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsOnlyTopOption
bool System::Text::RegularExpressions::RegexParser::IsOnlyTopOption(::System::Text::RegularExpressions::RegexOptions option) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsOnlyTopOption");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOnlyTopOption", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(option)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, option);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanOptions
void System::Text::RegularExpressions::RegexParser::ScanOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanCharEscape
::Il2CppChar System::Text::RegularExpressions::RegexParser::ScanCharEscape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanCharEscape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCharEscape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ParseProperty
::StringW System::Text::RegularExpressions::RegexParser::ParseProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ParseProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.TypeFromCode
int System::Text::RegularExpressions::RegexParser::TypeFromCode(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::TypeFromCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TypeFromCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.OptionFromCode
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexParser::OptionFromCode(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::OptionFromCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "OptionFromCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexOptions, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.CountCaptures
void System::Text::RegularExpressions::RegexParser::CountCaptures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::CountCaptures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CountCaptures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.NoteCaptureSlot
void System::Text::RegularExpressions::RegexParser::NoteCaptureSlot(int i, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::NoteCaptureSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteCaptureSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, pos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.NoteCaptureName
void System::Text::RegularExpressions::RegexParser::NoteCaptureName(::StringW name, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::NoteCaptureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteCaptureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.NoteCaptures
void System::Text::RegularExpressions::RegexParser::NoteCaptures(::System::Collections::Hashtable* caps, int capsize, ::System::Collections::Hashtable* capnames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::NoteCaptures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteCaptures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caps), ::il2cpp_utils::ExtractType(capsize), ::il2cpp_utils::ExtractType(capnames)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, caps, capsize, capnames);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AssignNameSlots
void System::Text::RegularExpressions::RegexParser::AssignNameSlots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AssignNameSlots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignNameSlots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.CaptureSlotFromName
int System::Text::RegularExpressions::RegexParser::CaptureSlotFromName(::StringW capname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::CaptureSlotFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CaptureSlotFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capname)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, capname);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsCaptureSlot
bool System::Text::RegularExpressions::RegexParser::IsCaptureSlot(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsCaptureSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCaptureSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsCaptureName
bool System::Text::RegularExpressions::RegexParser::IsCaptureName(::StringW capname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsCaptureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCaptureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capname)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, capname);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionN
bool System::Text::RegularExpressions::RegexParser::UseOptionN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::UseOptionN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionI
bool System::Text::RegularExpressions::RegexParser::UseOptionI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::UseOptionI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionM
bool System::Text::RegularExpressions::RegexParser::UseOptionM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::UseOptionM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionS
bool System::Text::RegularExpressions::RegexParser::UseOptionS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::UseOptionS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionX
bool System::Text::RegularExpressions::RegexParser::UseOptionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::UseOptionX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionE
bool System::Text::RegularExpressions::RegexParser::UseOptionE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::UseOptionE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsSpecial
bool System::Text::RegularExpressions::RegexParser::IsSpecial(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsSpecial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "IsSpecial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsStopperX
bool System::Text::RegularExpressions::RegexParser::IsStopperX(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsStopperX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "IsStopperX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsQuantifier
bool System::Text::RegularExpressions::RegexParser::IsQuantifier(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsQuantifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "IsQuantifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsTrueQuantifier
bool System::Text::RegularExpressions::RegexParser::IsTrueQuantifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsTrueQuantifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTrueQuantifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsSpace
bool System::Text::RegularExpressions::RegexParser::IsSpace(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "IsSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsMetachar
bool System::Text::RegularExpressions::RegexParser::IsMetachar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsMetachar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "IsMetachar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddConcatenate
void System::Text::RegularExpressions::RegexParser::AddConcatenate(int pos, int cch, bool isReplacement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddConcatenate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddConcatenate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(cch), ::il2cpp_utils::ExtractType(isReplacement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, cch, isReplacement);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PushGroup
void System::Text::RegularExpressions::RegexParser::PushGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::PushGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PopGroup
void System::Text::RegularExpressions::RegexParser::PopGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::PopGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.EmptyStack
bool System::Text::RegularExpressions::RegexParser::EmptyStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::EmptyStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EmptyStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.StartGroup
void System::Text::RegularExpressions::RegexParser::StartGroup(::System::Text::RegularExpressions::RegexNode* openGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::StartGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(openGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, openGroup);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddAlternate
void System::Text::RegularExpressions::RegexParser::AddAlternate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddAlternate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAlternate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddConcatenate
void System::Text::RegularExpressions::RegexParser::AddConcatenate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddConcatenate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddConcatenate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddConcatenate
void System::Text::RegularExpressions::RegexParser::AddConcatenate(bool lazy, int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddConcatenate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddConcatenate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lazy), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lazy, min, max);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Unit
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::Unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::Unit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitOne
void System::Text::RegularExpressions::RegexParser::AddUnitOne(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddUnitOne");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUnitOne", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitNotone
void System::Text::RegularExpressions::RegexParser::AddUnitNotone(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddUnitNotone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUnitNotone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitSet
void System::Text::RegularExpressions::RegexParser::AddUnitSet(::StringW cc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddUnitSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUnitSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cc);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitNode
void System::Text::RegularExpressions::RegexParser::AddUnitNode(::System::Text::RegularExpressions::RegexNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddUnitNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUnitNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitType
void System::Text::RegularExpressions::RegexParser::AddUnitType(int type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddUnitType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUnitType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddGroup
void System::Text::RegularExpressions::RegexParser::AddGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PushOptions
void System::Text::RegularExpressions::RegexParser::PushOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::PushOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PopOptions
void System::Text::RegularExpressions::RegexParser::PopOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::PopOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.EmptyOptionsStack
bool System::Text::RegularExpressions::RegexParser::EmptyOptionsStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::EmptyOptionsStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EmptyOptionsStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PopKeepOptions
void System::Text::RegularExpressions::RegexParser::PopKeepOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::PopKeepOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopKeepOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MakeException
::System::ArgumentException* System::Text::RegularExpressions::RegexParser::MakeException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::MakeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArgumentException*, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Textpos
int System::Text::RegularExpressions::RegexParser::Textpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::Textpos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Textpos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Textto
void System::Text::RegularExpressions::RegexParser::Textto(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::Textto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Textto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.RightCharMoveRight
::Il2CppChar System::Text::RegularExpressions::RegexParser::RightCharMoveRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::RightCharMoveRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RightCharMoveRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MoveRight
void System::Text::RegularExpressions::RegexParser::MoveRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::MoveRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MoveRight
void System::Text::RegularExpressions::RegexParser::MoveRight(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::MoveRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MoveLeft
void System::Text::RegularExpressions::RegexParser::MoveLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::MoveLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.CharAt
::Il2CppChar System::Text::RegularExpressions::RegexParser::CharAt(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::CharAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CharAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.RightChar
::Il2CppChar System::Text::RegularExpressions::RegexParser::RightChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::RightChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RightChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.RightChar
::Il2CppChar System::Text::RegularExpressions::RegexParser::RightChar(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::RightChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RightChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.CharsRight
int System::Text::RegularExpressions::RegexParser::CharsRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::CharsRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CharsRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser..cctor
void System::Text::RegularExpressions::RegexParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexPrefix
#include "System/Text/RegularExpressions/RegexPrefix.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Text.RegularExpressions.RegexPrefix <Empty>k__BackingField
::System::Text::RegularExpressions::RegexPrefix System::Text::RegularExpressions::RegexPrefix::_get_$Empty$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::_get_$Empty$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexPrefix>("System.Text.RegularExpressions", "RegexPrefix", "<Empty>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Text.RegularExpressions.RegexPrefix <Empty>k__BackingField
void System::Text::RegularExpressions::RegexPrefix::_set_$Empty$k__BackingField(::System::Text::RegularExpressions::RegexPrefix value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::_set_$Empty$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexPrefix", "<Empty>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <CaseInsensitive>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexPrefix::dyn_$CaseInsensitive$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::dyn_$CaseInsensitive$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CaseInsensitive>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Prefix>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::RegexPrefix::dyn_$Prefix$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::dyn_$Prefix$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Prefix>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix..ctor
System::Text::RegularExpressions::RegexPrefix::RegexPrefix(::StringW prefix, bool ci) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ci)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, ci);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix.get_CaseInsensitive
bool System::Text::RegularExpressions::RegexPrefix::get_CaseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::get_CaseInsensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CaseInsensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix.get_Empty
::System::Text::RegularExpressions::RegexPrefix System::Text::RegularExpressions::RegexPrefix::get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::get_Empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexPrefix", "get_Empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexPrefix, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix.get_Prefix
::StringW System::Text::RegularExpressions::RegexPrefix::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix..cctor
void System::Text::RegularExpressions::RegexPrefix::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexPrefix", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexReplacement
#include "System/Text/RegularExpressions/RegexReplacement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.WeakReference`1
#include "System/WeakReference_1.hpp"
// Including type: System.Text.RegularExpressions.RegexOptions
#include "System/Text/RegularExpressions/RegexOptions.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 Specials
int System::Text::RegularExpressions::RegexReplacement::_get_Specials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::_get_Specials");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexReplacement", "Specials"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Specials
void System::Text::RegularExpressions::RegexReplacement::_set_Specials(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::_set_Specials");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexReplacement", "Specials", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LeftPortion
int System::Text::RegularExpressions::RegexReplacement::_get_LeftPortion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::_get_LeftPortion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexReplacement", "LeftPortion"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LeftPortion
void System::Text::RegularExpressions::RegexReplacement::_set_LeftPortion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::_set_LeftPortion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexReplacement", "LeftPortion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 RightPortion
int System::Text::RegularExpressions::RegexReplacement::_get_RightPortion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::_get_RightPortion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexReplacement", "RightPortion"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 RightPortion
void System::Text::RegularExpressions::RegexReplacement::_set_RightPortion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::_set_RightPortion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexReplacement", "RightPortion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LastGroup
int System::Text::RegularExpressions::RegexReplacement::_get_LastGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::_get_LastGroup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexReplacement", "LastGroup"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LastGroup
void System::Text::RegularExpressions::RegexReplacement::_set_LastGroup(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::_set_LastGroup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexReplacement", "LastGroup", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 WholeString
int System::Text::RegularExpressions::RegexReplacement::_get_WholeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::_get_WholeString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexReplacement", "WholeString"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 WholeString
void System::Text::RegularExpressions::RegexReplacement::_set_WholeString(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::_set_WholeString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexReplacement", "WholeString", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.String> _strings
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Text::RegularExpressions::RegexReplacement::dyn__strings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::dyn__strings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strings"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Int32> _rules
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& System::Text::RegularExpressions::RegexReplacement::dyn__rules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::dyn__rules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rules"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Pattern>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::RegexReplacement::dyn_$Pattern$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::dyn_$Pattern$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Pattern>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexReplacement.GetOrCreate
::System::Text::RegularExpressions::RegexReplacement* System::Text::RegularExpressions::RegexReplacement::GetOrCreate(::System::WeakReference_1<::System::Text::RegularExpressions::RegexReplacement*>* replRef, ::StringW replacement, ::System::Collections::Hashtable* caps, int capsize, ::System::Collections::Hashtable* capnames, ::System::Text::RegularExpressions::RegexOptions roptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::GetOrCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexReplacement", "GetOrCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replRef), ::il2cpp_utils::ExtractType(replacement), ::il2cpp_utils::ExtractType(caps), ::il2cpp_utils::ExtractType(capsize), ::il2cpp_utils::ExtractType(capnames), ::il2cpp_utils::ExtractType(roptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexReplacement*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replRef, replacement, caps, capsize, capnames, roptions);
}
// Autogenerated method: System.Text.RegularExpressions.RegexReplacement.get_Pattern
::StringW System::Text::RegularExpressions::RegexReplacement::get_Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::get_Pattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexReplacement.ReplacementImpl
void System::Text::RegularExpressions::RegexReplacement::ReplacementImpl(::System::Text::StringBuilder* sb, ::System::Text::RegularExpressions::Match* match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::ReplacementImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplacementImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(match)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb, match);
}
// Autogenerated method: System.Text.RegularExpressions.RegexReplacement.ReplacementImplRTL
void System::Text::RegularExpressions::RegexReplacement::ReplacementImplRTL(::System::Collections::Generic::List_1<::StringW>* al, ::System::Text::RegularExpressions::Match* match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::ReplacementImplRTL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplacementImplRTL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(al), ::il2cpp_utils::ExtractType(match)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, al, match);
}
// Autogenerated method: System.Text.RegularExpressions.RegexReplacement.Replace
::StringW System::Text::RegularExpressions::RegexReplacement::Replace(::System::Text::RegularExpressions::Regex* regex, ::StringW input, int count, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(regex), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, regex, input, count, startat);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexRunner
#include "System/Text/RegularExpressions/RegexRunner.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 TimeoutCheckFrequency
int System::Text::RegularExpressions::RegexRunner::_get_TimeoutCheckFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::_get_TimeoutCheckFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "RegexRunner", "TimeoutCheckFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TimeoutCheckFrequency
void System::Text::RegularExpressions::RegexRunner::_set_TimeoutCheckFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::_set_TimeoutCheckFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexRunner", "TimeoutCheckFrequency", value));
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runtextbeg
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_runtextbeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtextbeg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtextbeg"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runtextend
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_runtextend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtextend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtextend"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runtextstart
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_runtextstart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtextstart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtextstart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.String runtext
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::RegexRunner::dyn_runtext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtext"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runtextpos
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_runtextpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtextpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtextpos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32[] runtrack
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexRunner::dyn_runtrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtrack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtrack"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runtrackpos
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_runtrackpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtrackpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtrackpos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32[] runstack
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexRunner::dyn_runstack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runstack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runstack"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runstackpos
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_runstackpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runstackpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runstackpos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32[] runcrawl
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexRunner::dyn_runcrawl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runcrawl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runcrawl"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runcrawlpos
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_runcrawlpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runcrawlpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runcrawlpos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runtrackcount
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_runtrackcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtrackcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtrackcount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Text.RegularExpressions.Match runmatch
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::Match*& System::Text::RegularExpressions::RegexRunner::dyn_runmatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runmatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runmatch"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Match**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Text.RegularExpressions.Regex runregex
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::Regex*& System::Text::RegularExpressions::RegexRunner::dyn_runregex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runregex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runregex"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Regex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _timeout
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn__timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn__timeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeout"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _ignoreTimeout
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexRunner::dyn__ignoreTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn__ignoreTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoreTimeout"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _timeoutOccursAt
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn__timeoutOccursAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn__timeoutOccursAt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeoutOccursAt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _timeoutChecksToSkip
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn__timeoutChecksToSkip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn__timeoutChecksToSkip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeoutChecksToSkip"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Scan
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::RegexRunner::Scan(::System::Text::RegularExpressions::Regex* regex, ::StringW text, int textbeg, int textend, int textstart, int prevlen, bool quick, ::System::TimeSpan timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Scan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(regex), ::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(textbeg), ::il2cpp_utils::ExtractType(textend), ::il2cpp_utils::ExtractType(textstart), ::il2cpp_utils::ExtractType(prevlen), ::il2cpp_utils::ExtractType(quick), ::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, regex, text, textbeg, textend, textstart, prevlen, quick, timeout);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.StartTimeoutWatch
void System::Text::RegularExpressions::RegexRunner::StartTimeoutWatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::StartTimeoutWatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTimeoutWatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.CheckTimeout
void System::Text::RegularExpressions::RegexRunner::CheckTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::CheckTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoCheckTimeout
void System::Text::RegularExpressions::RegexRunner::DoCheckTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::DoCheckTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoCheckTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Go
void System::Text::RegularExpressions::RegexRunner::Go() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Go");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::RegexRunner*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.FindFirstChar
bool System::Text::RegularExpressions::RegexRunner::FindFirstChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::FindFirstChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::RegexRunner*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.InitTrackCount
void System::Text::RegularExpressions::RegexRunner::InitTrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::InitTrackCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::RegexRunner*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.InitMatch
void System::Text::RegularExpressions::RegexRunner::InitMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::InitMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.TidyMatch
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::RegexRunner::TidyMatch(bool quick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::TidyMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TidyMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(quick)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, quick);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.EnsureStorage
void System::Text::RegularExpressions::RegexRunner::EnsureStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::EnsureStorage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureStorage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.IsBoundary
bool System::Text::RegularExpressions::RegexRunner::IsBoundary(int index, int startpos, int endpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::IsBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(startpos), ::il2cpp_utils::ExtractType(endpos)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index, startpos, endpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.IsECMABoundary
bool System::Text::RegularExpressions::RegexRunner::IsECMABoundary(int index, int startpos, int endpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::IsECMABoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsECMABoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(startpos), ::il2cpp_utils::ExtractType(endpos)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index, startpos, endpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoubleTrack
void System::Text::RegularExpressions::RegexRunner::DoubleTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::DoubleTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoubleTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoubleStack
void System::Text::RegularExpressions::RegexRunner::DoubleStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::DoubleStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoubleStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoubleCrawl
void System::Text::RegularExpressions::RegexRunner::DoubleCrawl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::DoubleCrawl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoubleCrawl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Crawl
void System::Text::RegularExpressions::RegexRunner::Crawl(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Crawl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Crawl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Popcrawl
int System::Text::RegularExpressions::RegexRunner::Popcrawl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Popcrawl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Popcrawl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Crawlpos
int System::Text::RegularExpressions::RegexRunner::Crawlpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Crawlpos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Crawlpos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Capture
void System::Text::RegularExpressions::RegexRunner::Capture(int capnum, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Capture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Capture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capnum), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capnum, start, end);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.TransferCapture
void System::Text::RegularExpressions::RegexRunner::TransferCapture(int capnum, int uncapnum, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::TransferCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransferCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capnum), ::il2cpp_utils::ExtractType(uncapnum), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capnum, uncapnum, start, end);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Uncapture
void System::Text::RegularExpressions::RegexRunner::Uncapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Uncapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Uncapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.IsMatched
bool System::Text::RegularExpressions::RegexRunner::IsMatched(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::IsMatched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.MatchIndex
int System::Text::RegularExpressions::RegexRunner::MatchIndex(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::MatchIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.MatchLength
int System::Text::RegularExpressions::RegexRunner::MatchLength(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::MatchLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cap);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexRunnerFactory
#include "System/Text/RegularExpressions/RegexRunnerFactory.hpp"
// Including type: System.Text.RegularExpressions.RegexRunner
#include "System/Text/RegularExpressions/RegexRunner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance
::System::Text::RegularExpressions::RegexRunner* System::Text::RegularExpressions::RegexRunnerFactory::CreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunnerFactory::CreateInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::RegularExpressions::RegexRunnerFactory*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexRunner*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexTree
#include "System/Text/RegularExpressions/RegexTree.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Text.RegularExpressions.RegexNode Root
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexTree::dyn_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn_Root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Root"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Hashtable Caps
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::RegexTree::dyn_Caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn_Caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[] CapNumList
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexTree::dyn_CapNumList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn_CapNumList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CapNumList"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 CapTop
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexTree::dyn_CapTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn_CapTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CapTop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Hashtable CapNames
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::RegexTree::dyn_CapNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn_CapNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CapNames"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String[] CapsList
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Text::RegularExpressions::RegexTree::dyn_CapsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn_CapsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CapsList"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Text.RegularExpressions.RegexOptions Options
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexOptions& System::Text::RegularExpressions::RegexTree::dyn_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn_Options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Options"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexWriter
#include "System/Text/RegularExpressions/RegexWriter.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Text.RegularExpressions.RegexTree
#include "System/Text/RegularExpressions/RegexTree.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.ValueListBuilder`1<System.Int32> _emitted
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::ValueListBuilder_1_<int>& System::Text::RegularExpressions::RegexWriter::dyn__emitted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__emitted");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emitted"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::ValueListBuilder_1_<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.ValueListBuilder`1<System.Int32> _intStack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::ValueListBuilder_1_<int>& System::Text::RegularExpressions::RegexWriter::dyn__intStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__intStack");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intStack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::ValueListBuilder_1_<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Int32> _stringHash
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, int>*& System::Text::RegularExpressions::RegexWriter::dyn__stringHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__stringHash");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringHash"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.String> _stringTable
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Text::RegularExpressions::RegexWriter::dyn__stringTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__stringTable");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringTable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _caps
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::RegexWriter::dyn__caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__caps");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _trackCount
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexWriter::dyn__trackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__trackCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter..ctor
System::Text::RegularExpressions::RegexWriter::RegexWriter(::System::Span_1<int> emittedSpan, ::System::Span_1<int> intStackSpan) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emittedSpan), ::il2cpp_utils::ExtractType(intStackSpan)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, emittedSpan, intStackSpan);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.Write
::System::Text::RegularExpressions::RegexCode* System::Text::RegularExpressions::RegexWriter::Write(::System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexWriter", "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.Dispose
void System::Text::RegularExpressions::RegexWriter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.RegexCodeFromRegexTree
::System::Text::RegularExpressions::RegexCode* System::Text::RegularExpressions::RegexWriter::RegexCodeFromRegexTree(::System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::RegexCodeFromRegexTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RegexCodeFromRegexTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCode*, false>(this, ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.PatchJump
void System::Text::RegularExpressions::RegexWriter::PatchJump(int offset, int jumpDest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::PatchJump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PatchJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(jumpDest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset, jumpDest);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.Emit
void System::Text::RegularExpressions::RegexWriter::Emit(int op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::Emit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Emit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.Emit
void System::Text::RegularExpressions::RegexWriter::Emit(int op, int opd1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::Emit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Emit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(opd1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op, opd1);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.Emit
void System::Text::RegularExpressions::RegexWriter::Emit(int op, int opd1, int opd2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::Emit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Emit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(opd1), ::il2cpp_utils::ExtractType(opd2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op, opd1, opd2);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.StringCode
int System::Text::RegularExpressions::RegexWriter::StringCode(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::StringCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "StringCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.MapCapnum
int System::Text::RegularExpressions::RegexWriter::MapCapnum(int capnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::MapCapnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MapCapnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capnum)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, capnum);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.EmitFragment
void System::Text::RegularExpressions::RegexWriter::EmitFragment(int nodetype, ::System::Text::RegularExpressions::RegexNode* node, int curIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::EmitFragment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "EmitFragment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodetype), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(curIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodetype, node, curIndex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.CodeDom.Compiler.GeneratedCodeAttribute
#include "System/CodeDom/Compiler/GeneratedCodeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String tool
[[deprecated("Use field access instead!")]] ::StringW& System::CodeDom::Compiler::GeneratedCodeAttribute::dyn_tool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CodeDom::Compiler::GeneratedCodeAttribute::dyn_tool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tool"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String version
[[deprecated("Use field access instead!")]] ::StringW& System::CodeDom::Compiler::GeneratedCodeAttribute::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CodeDom::Compiler::GeneratedCodeAttribute::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.BooleanSwitch
#include "System/Diagnostics/BooleanSwitch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Debug
#include "System/Diagnostics/Debug.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Debug.WriteLine
void System::Diagnostics::Debug::WriteLine(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debug::WriteLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debug", "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Switch
#include "System/Diagnostics/Switch.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.WeakReference
#include "System/WeakReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.WeakReference> switches
::System::Collections::Generic::List_1<::System::WeakReference*>* System::Diagnostics::Switch::_get_switches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::_get_switches");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::System::WeakReference*>*>("System.Diagnostics", "Switch", "switches"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.WeakReference> switches
void System::Diagnostics::Switch::_set_switches(::System::Collections::Generic::List_1<::System::WeakReference*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::_set_switches");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Switch", "switches", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_LastCollectionCount
int System::Diagnostics::Switch::_get_s_LastCollectionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::_get_s_LastCollectionCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "Switch", "s_LastCollectionCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_LastCollectionCount
void System::Diagnostics::Switch::_set_s_LastCollectionCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::_set_s_LastCollectionCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Switch", "s_LastCollectionCount", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String description
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Switch::dyn_description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::dyn_description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String displayName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Switch::dyn_displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::dyn_displayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "displayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String switchValueString
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Switch::dyn_switchValueString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::dyn_switchValueString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "switchValueString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String defaultValue
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Switch::dyn_defaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::dyn_defaultValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Switch._pruneCachedSwitches
void System::Diagnostics::Switch::_pruneCachedSwitches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::_pruneCachedSwitches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Switch", "_pruneCachedSwitches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Switch..cctor
void System::Diagnostics::Switch::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Switch", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
