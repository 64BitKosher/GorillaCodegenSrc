// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Result
#include "GlobalNamespace/OVRLipSync.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result Success
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result Success
void GlobalNamespace::OVRLipSync::Result::_set_Success(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result Unknown
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result Unknown
void GlobalNamespace::OVRLipSync::Result::_set_Unknown(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result CannotCreateContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_CannotCreateContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_CannotCreateContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "CannotCreateContext"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result CannotCreateContext
void GlobalNamespace::OVRLipSync::Result::_set_CannotCreateContext(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_CannotCreateContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "CannotCreateContext", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result InvalidParam
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_InvalidParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_InvalidParam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "InvalidParam"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result InvalidParam
void GlobalNamespace::OVRLipSync::Result::_set_InvalidParam(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_InvalidParam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "InvalidParam", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result BadSampleRate
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_BadSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_BadSampleRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "BadSampleRate"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result BadSampleRate
void GlobalNamespace::OVRLipSync::Result::_set_BadSampleRate(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_BadSampleRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "BadSampleRate", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result MissingDLL
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_MissingDLL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_MissingDLL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "MissingDLL"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result MissingDLL
void GlobalNamespace::OVRLipSync::Result::_set_MissingDLL(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_MissingDLL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "MissingDLL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result BadVersion
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_BadVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_BadVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "BadVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result BadVersion
void GlobalNamespace::OVRLipSync::Result::_set_BadVersion(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_BadVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "BadVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result UndefinedFunction
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_UndefinedFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_UndefinedFunction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "UndefinedFunction"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result UndefinedFunction
void GlobalNamespace::OVRLipSync::Result::_set_UndefinedFunction(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_UndefinedFunction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "UndefinedFunction", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRLipSync/AudioDataType
#include "GlobalNamespace/OVRLipSync_AudioDataType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType S16_Mono
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "S16_Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType S16_Mono
void GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Mono(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "S16_Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType S16_Stereo
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "S16_Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType S16_Stereo
void GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Stereo(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "S16_Stereo", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType F32_Mono
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "F32_Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType F32_Mono
void GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Mono(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "F32_Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType F32_Stereo
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "F32_Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType F32_Stereo
void GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Stereo(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "F32_Stereo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::AudioDataType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Viseme
#include "GlobalNamespace/OVRLipSync_Viseme.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme sil
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_sil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_sil");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "sil"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme sil
void GlobalNamespace::OVRLipSync::Viseme::_set_sil(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_sil");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "sil", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme PP
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_PP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_PP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "PP"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme PP
void GlobalNamespace::OVRLipSync::Viseme::_set_PP(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_PP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "PP", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme FF
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_FF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_FF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "FF"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme FF
void GlobalNamespace::OVRLipSync::Viseme::_set_FF(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_FF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "FF", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme TH
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_TH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_TH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "TH"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme TH
void GlobalNamespace::OVRLipSync::Viseme::_set_TH(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_TH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "TH", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme DD
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_DD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_DD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "DD"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme DD
void GlobalNamespace::OVRLipSync::Viseme::_set_DD(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_DD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "DD", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme kk
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_kk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_kk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "kk"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme kk
void GlobalNamespace::OVRLipSync::Viseme::_set_kk(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_kk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "kk", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme CH
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_CH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_CH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "CH"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme CH
void GlobalNamespace::OVRLipSync::Viseme::_set_CH(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_CH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "CH", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme SS
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_SS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_SS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "SS"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme SS
void GlobalNamespace::OVRLipSync::Viseme::_set_SS(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_SS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "SS", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme nn
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_nn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_nn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "nn"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme nn
void GlobalNamespace::OVRLipSync::Viseme::_set_nn(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_nn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "nn", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme RR
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_RR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_RR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "RR"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme RR
void GlobalNamespace::OVRLipSync::Viseme::_set_RR(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_RR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "RR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme aa
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_aa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_aa");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "aa"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme aa
void GlobalNamespace::OVRLipSync::Viseme::_set_aa(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_aa");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "aa", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme E
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_E() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_E");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "E"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme E
void GlobalNamespace::OVRLipSync::Viseme::_set_E(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_E");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "E", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme ih
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_ih() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_ih");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "ih"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme ih
void GlobalNamespace::OVRLipSync::Viseme::_set_ih(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_ih");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "ih", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme oh
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_oh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_oh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "oh"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme oh
void GlobalNamespace::OVRLipSync::Viseme::_set_oh(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_oh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "oh", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme ou
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_ou() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_ou");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "ou"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme ou
void GlobalNamespace::OVRLipSync::Viseme::_set_ou(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_ou");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "ou", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::Viseme::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Signals
#include "GlobalNamespace/OVRLipSync_Signals.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeOn
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeOn"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeOn
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeOn(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeOn", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeOff
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeOff"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeOff
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeOff(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeOff", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeAmount
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeAmount"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeAmount
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeAmount(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeAmount", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeSmoothing
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeSmoothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeSmoothing"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeSmoothing
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeSmoothing(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeSmoothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeSmoothing", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals LaughterAmount
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_LaughterAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_LaughterAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "LaughterAmount"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals LaughterAmount
void GlobalNamespace::OVRLipSync::Signals::_set_LaughterAmount(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_LaughterAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "LaughterAmount", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::Signals::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRLipSync/ContextProviders
#include "GlobalNamespace/OVRLipSync_ContextProviders.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/ContextProviders Original
::GlobalNamespace::OVRLipSync::ContextProviders GlobalNamespace::OVRLipSync::ContextProviders::_get_Original() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_get_Original");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::ContextProviders>("", "OVRLipSync/ContextProviders", "Original"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/ContextProviders Original
void GlobalNamespace::OVRLipSync::ContextProviders::_set_Original(::GlobalNamespace::OVRLipSync::ContextProviders value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_set_Original");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/ContextProviders", "Original", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/ContextProviders Enhanced
::GlobalNamespace::OVRLipSync::ContextProviders GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::ContextProviders>("", "OVRLipSync/ContextProviders", "Enhanced"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/ContextProviders Enhanced
void GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced(::GlobalNamespace::OVRLipSync::ContextProviders value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/ContextProviders", "Enhanced", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/ContextProviders Enhanced_with_Laughter
::GlobalNamespace::OVRLipSync::ContextProviders GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced_with_Laughter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced_with_Laughter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::ContextProviders>("", "OVRLipSync/ContextProviders", "Enhanced_with_Laughter"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/ContextProviders Enhanced_with_Laughter
void GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced_with_Laughter(::GlobalNamespace::OVRLipSync::ContextProviders value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced_with_Laughter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/ContextProviders", "Enhanced_with_Laughter", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::ContextProviders::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 frameNumber
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::Frame::dyn_frameNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_frameNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 frameDelay
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::Frame::dyn_frameDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_frameDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameDelay"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] Visemes
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::OVRLipSync::Frame::dyn_Visemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_Visemes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Visemes"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterScore
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSync::Frame::dyn_laughterScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_laughterScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterScore"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSync/Frame.CopyInput
void GlobalNamespace::OVRLipSync::Frame::CopyInput(::GlobalNamespace::OVRLipSync::Frame* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::CopyInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: OVRLipSync/Frame.Reset
void GlobalNamespace::OVRLipSync::Frame::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContext
#include "GlobalNamespace/OVRLipSyncContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableKeyboardInput
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_enableKeyboardInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_enableKeyboardInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableKeyboardInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableTouchInput
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_enableTouchInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_enableTouchInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableTouchInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean audioLoopback
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_audioLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_audioLoopback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioLoopback"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode loopbackKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContext::dyn_loopbackKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_loopbackKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loopbackKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showVisemes
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_showVisemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_showVisemes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showVisemes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode debugVisemesKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContext::dyn_debugVisemesKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_debugVisemesKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugVisemesKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean skipAudioSource
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_skipAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_skipAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skipAudioSource"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gain
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncContext::dyn_gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_gain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasDebugConsole
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_hasDebugConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_hasDebugConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasDebugConsole"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode debugLaughterKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContext::dyn_debugLaughterKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_debugLaughterKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugLaughterKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showLaughter
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_showLaughter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_showLaughter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showLaughter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterScore
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncContext::dyn_laughterScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_laughterScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterScore"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContext.Start
void GlobalNamespace::OVRLipSyncContext::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.HandleKeyboard
void GlobalNamespace::OVRLipSyncContext::HandleKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::HandleKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.Update
void GlobalNamespace::OVRLipSyncContext::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.PreprocessAudioSamples
void GlobalNamespace::OVRLipSyncContext::PreprocessAudioSamples(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::PreprocessAudioSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessAudioSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.PostprocessAudioSamples
void GlobalNamespace::OVRLipSyncContext::PostprocessAudioSamples(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::PostprocessAudioSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostprocessAudioSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.ProcessAudioSamplesRaw
void GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAudioSamplesRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.ProcessAudioSamplesRaw
void GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw(::ArrayW<int16_t> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAudioSamplesRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.ProcessAudioSamples
void GlobalNamespace::OVRLipSyncContext::ProcessAudioSamples(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ProcessAudioSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAudioSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.OnAudioFilterRead
void GlobalNamespace::OVRLipSyncContext::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.DebugShowVisemesAndLaughter
void GlobalNamespace::OVRLipSyncContext::DebugShowVisemesAndLaughter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::DebugShowVisemesAndLaughter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugShowVisemesAndLaughter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.ToggleAudioLoopback
void GlobalNamespace::OVRLipSyncContext::ToggleAudioLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ToggleAudioLoopback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleAudioLoopback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.LocalTouchEventCallback
void GlobalNamespace::OVRLipSyncContext::LocalTouchEventCallback(::GlobalNamespace::OVRTouchpad::TouchEvent touchEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::LocalTouchEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalTouchEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touchEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, touchEvent);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextBase
#include "GlobalNamespace/OVRLipSyncContextBase.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::OVRLipSyncContextBase::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRLipSync/ContextProviders provider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSync::ContextProviders& GlobalNamespace::OVRLipSyncContextBase::dyn_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSync::ContextProviders*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableAcceleration
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContextBase::dyn_enableAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_enableAcceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableAcceleration"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSync/Frame frame
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSync::Frame*& GlobalNamespace::OVRLipSyncContextBase::dyn_frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_frame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frame"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSync::Frame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 context
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::OVRLipSyncContextBase::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _smoothing
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncContextBase::dyn__smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn__smoothing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextBase.set_Smoothing
void GlobalNamespace::OVRLipSyncContextBase::set_Smoothing(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::set_Smoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Smoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRLipSyncContextBase.get_Smoothing
int GlobalNamespace::OVRLipSyncContextBase::get_Smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::get_Smoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Smoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.get_Context
uint GlobalNamespace::OVRLipSyncContextBase::get_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::get_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.get_Frame
::GlobalNamespace::OVRLipSync::Frame* GlobalNamespace::OVRLipSyncContextBase::get_Frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::get_Frame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Frame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Frame*, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.Awake
void GlobalNamespace::OVRLipSyncContextBase::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.OnDestroy
void GlobalNamespace::OVRLipSyncContextBase::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.GetCurrentPhonemeFrame
::GlobalNamespace::OVRLipSync::Frame* GlobalNamespace::OVRLipSyncContextBase::GetCurrentPhonemeFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::GetCurrentPhonemeFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentPhonemeFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Frame*, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.SetVisemeBlend
void GlobalNamespace::OVRLipSyncContextBase::SetVisemeBlend(int viseme, int amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::SetVisemeBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisemeBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viseme), ::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viseme, amount);
}
// Autogenerated method: OVRLipSyncContextBase.SetLaughterBlend
void GlobalNamespace::OVRLipSyncContextBase::SetLaughterBlend(int amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::SetLaughterBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLaughterBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amount);
}
// Autogenerated method: OVRLipSyncContextBase.ResetContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSyncContextBase::ResetContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::ResetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextCanned
#include "GlobalNamespace/OVRLipSyncContextCanned.hpp"
// Including type: OVRLipSyncSequence
#include "GlobalNamespace/OVRLipSyncSequence.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRLipSyncSequence currentSequence
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSyncSequence*& GlobalNamespace::OVRLipSyncContextCanned::dyn_currentSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextCanned::dyn_currentSequence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSequence"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncSequence**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextCanned.Update
void GlobalNamespace::OVRLipSyncContextCanned::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextCanned::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextMorphTarget
#include "GlobalNamespace/OVRLipSyncContextMorphTarget.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: OVRLipSyncContextBase
#include "GlobalNamespace/OVRLipSyncContextBase.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SkinnedMeshRenderer skinnedMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_skinnedMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_skinnedMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skinnedMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] visemeToBlendTargets
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeToBlendTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeToBlendTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visemeToBlendTargets"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableVisemeTestKeys
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_enableVisemeTestKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_enableVisemeTestKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableVisemeTestKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode[] visemeTestKeys
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::KeyCode>& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeTestKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeTestKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visemeTestKeys"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::KeyCode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode laughterKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 laughterBlendTarget
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterBlendTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterBlendTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterBlendTarget"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 smoothAmount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_smoothAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_smoothAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothAmount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSyncContextBase lipsyncContext
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSyncContextBase*& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_lipsyncContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_lipsyncContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lipsyncContext"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncContextBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.Start
void GlobalNamespace::OVRLipSyncContextMorphTarget::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.Update
void GlobalNamespace::OVRLipSyncContextMorphTarget::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.CheckForKeys
void GlobalNamespace::OVRLipSyncContextMorphTarget::CheckForKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::CheckForKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.SetVisemeToMorphTarget
void GlobalNamespace::OVRLipSyncContextMorphTarget::SetVisemeToMorphTarget(::GlobalNamespace::OVRLipSync::Frame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::SetVisemeToMorphTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisemeToMorphTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.SetLaughterToMorphTarget
void GlobalNamespace::OVRLipSyncContextMorphTarget::SetLaughterToMorphTarget(::GlobalNamespace::OVRLipSync::Frame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::SetLaughterToMorphTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLaughterToMorphTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.CheckVisemeKey
void GlobalNamespace::OVRLipSyncContextMorphTarget::CheckVisemeKey(::UnityEngine::KeyCode key, int viseme, int amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::CheckVisemeKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckVisemeKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(viseme), ::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, viseme, amount);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.CheckLaughterKey
void GlobalNamespace::OVRLipSyncContextMorphTarget::CheckLaughterKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::CheckLaughterKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckLaughterKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextTextureFlip
#include "GlobalNamespace/OVRLipSyncContextTextureFlip.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: OVRLipSyncContextBase
#include "GlobalNamespace/OVRLipSyncContextBase.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture[] Textures
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture*>& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_Textures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_Textures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Textures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 smoothAmount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_smoothAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_smoothAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothAmount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSyncContextBase lipsyncContext
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSyncContextBase*& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_lipsyncContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_lipsyncContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lipsyncContext"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncContextBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSync/Frame oldFrame
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSync::Frame*& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_oldFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_oldFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldFrame"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSync::Frame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextTextureFlip.Start
void GlobalNamespace::OVRLipSyncContextTextureFlip::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextTextureFlip.Update
void GlobalNamespace::OVRLipSyncContextTextureFlip::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextTextureFlip.SetVisemeToTexture
void GlobalNamespace::OVRLipSyncContextTextureFlip::SetVisemeToTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::SetVisemeToTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisemeToTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRLipSyncMicInput
#include "GlobalNamespace/OVRLipSyncMicInput.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::OVRLipSyncMicInput::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableMicSelectionGUI
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncMicInput::dyn_enableMicSelectionGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_enableMicSelectionGUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableMicSelectionGUI"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode micSelectionGUIKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncMicInput::dyn_micSelectionGUIKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micSelectionGUIKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micSelectionGUIKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single micInputVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncMicInput::dyn_micInputVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micInputVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micInputVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 micFrequency
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncMicInput::dyn_micFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micFrequency"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRLipSyncMicInput/micActivation micControl
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSyncMicInput::micActivation& GlobalNamespace::OVRLipSyncMicInput::dyn_micControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micControl"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncMicInput::micActivation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode micActivationKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncMicInput::dyn_micActivationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micActivationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micActivationKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String selectedDevice
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRLipSyncMicInput::dyn_selectedDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_selectedDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedDevice"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean micSelected
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncMicInput::dyn_micSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micSelected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minFreq
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncMicInput::dyn_minFreq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_minFreq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minFreq"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxFreq
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncMicInput::dyn_maxFreq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_maxFreq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxFreq"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean focused
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncMicInput::dyn_focused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_focused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "focused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncMicInput::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncMicInput.get_MicFrequency
float GlobalNamespace::OVRLipSyncMicInput::get_MicFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::get_MicFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MicFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.set_MicFrequency
void GlobalNamespace::OVRLipSyncMicInput::set_MicFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::set_MicFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MicFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRLipSyncMicInput.Awake
void GlobalNamespace::OVRLipSyncMicInput::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.Start
void GlobalNamespace::OVRLipSyncMicInput::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.InitializeMicrophone
void GlobalNamespace::OVRLipSyncMicInput::InitializeMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::InitializeMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.Update
void GlobalNamespace::OVRLipSyncMicInput::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.OnApplicationFocus
void GlobalNamespace::OVRLipSyncMicInput::OnApplicationFocus(bool focus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focus);
}
// Autogenerated method: OVRLipSyncMicInput.OnApplicationPause
void GlobalNamespace::OVRLipSyncMicInput::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pauseStatus);
}
// Autogenerated method: OVRLipSyncMicInput.OnDisable
void GlobalNamespace::OVRLipSyncMicInput::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.OnGUI
void GlobalNamespace::OVRLipSyncMicInput::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.MicDeviceGUI
void GlobalNamespace::OVRLipSyncMicInput::MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::MicDeviceGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MicDeviceGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(top), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(buttonSpaceTop), ::il2cpp_utils::ExtractType(buttonSpaceLeft)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, left, top, width, height, buttonSpaceTop, buttonSpaceLeft);
}
// Autogenerated method: OVRLipSyncMicInput.GetMicCaps
void GlobalNamespace::OVRLipSyncMicInput::GetMicCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::GetMicCaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMicCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.StartMicrophone
void GlobalNamespace::OVRLipSyncMicInput::StartMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::StartMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.StopMicrophone
void GlobalNamespace::OVRLipSyncMicInput::StopMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::StopMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.GetAveragedVolume
float GlobalNamespace::OVRLipSyncMicInput::GetAveragedVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::GetAveragedVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAveragedVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRLipSyncMicInput/micActivation
#include "GlobalNamespace/OVRLipSyncMicInput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSyncMicInput/micActivation HoldToSpeak
::GlobalNamespace::OVRLipSyncMicInput::micActivation GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_HoldToSpeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_HoldToSpeak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncMicInput::micActivation>("", "OVRLipSyncMicInput/micActivation", "HoldToSpeak"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSyncMicInput/micActivation HoldToSpeak
void GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_HoldToSpeak(::GlobalNamespace::OVRLipSyncMicInput::micActivation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_HoldToSpeak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncMicInput/micActivation", "HoldToSpeak", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSyncMicInput/micActivation PushToSpeak
::GlobalNamespace::OVRLipSyncMicInput::micActivation GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_PushToSpeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_PushToSpeak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncMicInput::micActivation>("", "OVRLipSyncMicInput/micActivation", "PushToSpeak"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSyncMicInput/micActivation PushToSpeak
void GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_PushToSpeak(::GlobalNamespace::OVRLipSyncMicInput::micActivation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_PushToSpeak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncMicInput/micActivation", "PushToSpeak", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSyncMicInput/micActivation ConstantSpeak
::GlobalNamespace::OVRLipSyncMicInput::micActivation GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_ConstantSpeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_ConstantSpeak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncMicInput::micActivation>("", "OVRLipSyncMicInput/micActivation", "ConstantSpeak"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSyncMicInput/micActivation ConstantSpeak
void GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_ConstantSpeak(::GlobalNamespace::OVRLipSyncMicInput::micActivation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_ConstantSpeak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncMicInput/micActivation", "ConstantSpeak", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncMicInput::micActivation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRLipSyncSequence
#include "GlobalNamespace/OVRLipSyncSequence.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<OVRLipSync/Frame> entries
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRLipSync::Frame*>*& GlobalNamespace::OVRLipSyncSequence::dyn_entries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncSequence::dyn_entries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entries"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRLipSync::Frame*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single length
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncSequence::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncSequence::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncSequence.GetFrameAtTime
::GlobalNamespace::OVRLipSync::Frame* GlobalNamespace::OVRLipSyncSequence::GetFrameAtTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncSequence::GetFrameAtTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrameAtTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Frame*, false>(this, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_________________________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GroupPresenceSample
#include "GlobalNamespace/GroupPresenceSample.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceJoinIntent
#include "Oculus/Platform/Models/GroupPresenceJoinIntent.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceLeaveIntent
#include "Oculus/Platform/Models/GroupPresenceLeaveIntent.hpp"
// Including type: Oculus.Platform.Models.LaunchInvitePanelFlowResult
#include "Oculus/Platform/Models/LaunchInvitePanelFlowResult.hpp"
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Models.InvitePanelResultInfo
#include "Oculus/Platform/Models/InvitePanelResultInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsJoinable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GroupPresenceSample::dyn_IsJoinable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_IsJoinable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsJoinable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String LobbySessionID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GroupPresenceSample::dyn_LobbySessionID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_LobbySessionID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LobbySessionID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MatchSessionID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GroupPresenceSample::dyn_MatchSessionID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_MatchSessionID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchSessionID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 SuggestedUserID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::GroupPresenceSample::dyn_SuggestedUserID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_SuggestedUserID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SuggestedUserID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text InVRConsole
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GroupPresenceSample::dyn_InVRConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_InVRConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InVRConsole"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text DestinationsConsole
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GroupPresenceSample::dyn_DestinationsConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_DestinationsConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationsConsole"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> DestinationAPINames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::GroupPresenceSample::dyn_DestinationAPINames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_DestinationAPINames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationAPINames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 LoggedInUserID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::GroupPresenceSample::dyn_LoggedInUserID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_LoggedInUserID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoggedInUserID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 DestinationIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GroupPresenceSample::dyn_DestinationIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_DestinationIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean OnlyPushUpOnce
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GroupPresenceSample::dyn_OnlyPushUpOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_OnlyPushUpOnce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnlyPushUpOnce"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GroupPresenceSample.Start
void GlobalNamespace::GroupPresenceSample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.SetPresence
void GlobalNamespace::GroupPresenceSample::SetPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::SetPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.ClearPresence
void GlobalNamespace::GroupPresenceSample::ClearPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::ClearPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.LaunchInvitePanel
void GlobalNamespace::GroupPresenceSample::LaunchInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::LaunchInvitePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.LaunchRosterPanel
void GlobalNamespace::GroupPresenceSample::LaunchRosterPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::LaunchRosterPanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchRosterPanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.OnJoinIntentChangeNotif
void GlobalNamespace::GroupPresenceSample::OnJoinIntentChangeNotif(::Oculus::Platform::Message_1<::Oculus::Platform::Models::GroupPresenceJoinIntent*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnJoinIntentChangeNotif");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnJoinIntentChangeNotif", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.OnLeaveIntentChangeNotif
void GlobalNamespace::GroupPresenceSample::OnLeaveIntentChangeNotif(::Oculus::Platform::Message_1<::Oculus::Platform::Models::GroupPresenceLeaveIntent*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnLeaveIntentChangeNotif");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLeaveIntentChangeNotif", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.OnInviteSentNotif
void GlobalNamespace::GroupPresenceSample::OnInviteSentNotif(::Oculus::Platform::Message_1<::Oculus::Platform::Models::LaunchInvitePanelFlowResult*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnInviteSentNotif");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInviteSentNotif", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.OnGetDestinations
void GlobalNamespace::GroupPresenceSample::OnGetDestinations(::Oculus::Platform::Message_1<::Oculus::Platform::Models::DestinationList*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnGetDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGetDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.Update
void GlobalNamespace::GroupPresenceSample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.ScrollThroughDestinations
void GlobalNamespace::GroupPresenceSample::ScrollThroughDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::ScrollThroughDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollThroughDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.UpdateDestinationsConsole
void GlobalNamespace::GroupPresenceSample::UpdateDestinationsConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::UpdateDestinationsConsole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDestinationsConsole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.OnLoggedInUser
void GlobalNamespace::GroupPresenceSample::OnLoggedInUser(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnLoggedInUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLoggedInUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.UpdateConsole
void GlobalNamespace::GroupPresenceSample::UpdateConsole(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::UpdateConsole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConsole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GroupPresenceSample.PressAButton
bool GlobalNamespace::GroupPresenceSample::PressAButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressAButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressAButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressBButton
bool GlobalNamespace::GroupPresenceSample::PressBButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressBButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressBButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressXButton
bool GlobalNamespace::GroupPresenceSample::PressXButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressXButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressXButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressYButton
bool GlobalNamespace::GroupPresenceSample::PressYButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressYButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressYButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressUp
bool GlobalNamespace::GroupPresenceSample::PressUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressDown
bool GlobalNamespace::GroupPresenceSample::PressDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.<Start>b__8_0
void GlobalNamespace::GroupPresenceSample::$Start$b__8_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::PlatformInitialize*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<Start>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.<SetPresence>b__9_0
void GlobalNamespace::GroupPresenceSample::$SetPresence$b__9_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<SetPresence>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetPresence>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.<SetPresence>b__9_1
void GlobalNamespace::GroupPresenceSample::$SetPresence$b__9_1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<SetPresence>b__9_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetPresence>b__9_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message2);
}
// Autogenerated method: GroupPresenceSample.<ClearPresence>b__10_0
void GlobalNamespace::GroupPresenceSample::$ClearPresence$b__10_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<ClearPresence>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearPresence>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.<ClearPresence>b__10_1
void GlobalNamespace::GroupPresenceSample::$ClearPresence$b__10_1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<ClearPresence>b__10_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearPresence>b__10_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message2);
}
// Autogenerated method: GroupPresenceSample.<LaunchInvitePanel>b__11_0
void GlobalNamespace::GroupPresenceSample::$LaunchInvitePanel$b__11_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::InvitePanelResultInfo*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<LaunchInvitePanel>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LaunchInvitePanel>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.<LaunchRosterPanel>b__12_0
void GlobalNamespace::GroupPresenceSample::$LaunchRosterPanel$b__12_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<LaunchRosterPanel>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LaunchRosterPanel>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ReportingCallbackSample
#include "GlobalNamespace/ReportingCallbackSample.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text InVRConsole
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::ReportingCallbackSample::dyn_InVRConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReportingCallbackSample::dyn_InVRConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InVRConsole"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text DestinationsConsole
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::ReportingCallbackSample::dyn_DestinationsConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReportingCallbackSample::dyn_DestinationsConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationsConsole"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ReportingCallbackSample.Start
void GlobalNamespace::ReportingCallbackSample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReportingCallbackSample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ReportingCallbackSample.OnReportButtonIntentNotif
void GlobalNamespace::ReportingCallbackSample::OnReportButtonIntentNotif(::Oculus::Platform::Message_1<::StringW>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReportingCallbackSample::OnReportButtonIntentNotif");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnReportButtonIntentNotif", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: ReportingCallbackSample.UpdateConsole
void GlobalNamespace::ReportingCallbackSample::UpdateConsole(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReportingCallbackSample::UpdateConsole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConsole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ReportingCallbackSample.<Start>b__2_0
void GlobalNamespace::ReportingCallbackSample::$Start$b__2_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::PlatformInitialize*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReportingCallbackSample::<Start>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BufferedAudioStream
#include "GlobalNamespace/BufferedAudioStream.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean VerboseLogging
bool GlobalNamespace::BufferedAudioStream::_get_VerboseLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_VerboseLogging");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "BufferedAudioStream", "VerboseLogging"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean VerboseLogging
void GlobalNamespace::BufferedAudioStream::_set_VerboseLogging(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_VerboseLogging");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "VerboseLogging", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single bufferLengthSeconds
float GlobalNamespace::BufferedAudioStream::_get_bufferLengthSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_bufferLengthSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BufferedAudioStream", "bufferLengthSeconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Single bufferLengthSeconds
void GlobalNamespace::BufferedAudioStream::_set_bufferLengthSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_bufferLengthSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "bufferLengthSeconds", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 sampleRate
int GlobalNamespace::BufferedAudioStream::_get_sampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_sampleRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BufferedAudioStream", "sampleRate"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 sampleRate
void GlobalNamespace::BufferedAudioStream::_set_sampleRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_sampleRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "sampleRate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 bufferSize
int GlobalNamespace::BufferedAudioStream::_get_bufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_bufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BufferedAudioStream", "bufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 bufferSize
void GlobalNamespace::BufferedAudioStream::_set_bufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_bufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "bufferSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single playbackDelayTimeSeconds
float GlobalNamespace::BufferedAudioStream::_get_playbackDelayTimeSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_playbackDelayTimeSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BufferedAudioStream", "playbackDelayTimeSeconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Single playbackDelayTimeSeconds
void GlobalNamespace::BufferedAudioStream::_set_playbackDelayTimeSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_playbackDelayTimeSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "playbackDelayTimeSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audio
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::BufferedAudioStream::dyn_audio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_audio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audio"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] audioBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::BufferedAudioStream::dyn_audioBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_audioBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 writePos
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BufferedAudioStream::dyn_writePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_writePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single playbackDelayRemaining
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BufferedAudioStream::dyn_playbackDelayRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_playbackDelayRemaining");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playbackDelayRemaining"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single remainingBufferTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BufferedAudioStream::dyn_remainingBufferTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_remainingBufferTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remainingBufferTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BufferedAudioStream.Update
void GlobalNamespace::BufferedAudioStream::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BufferedAudioStream.Stop
void GlobalNamespace::BufferedAudioStream::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BufferedAudioStream.AddData
void GlobalNamespace::BufferedAudioStream::AddData(::ArrayW<float> samples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::AddData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samples)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, samples);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_________________________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1__________________________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_________________________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_________________________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_________________________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_________________________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.AbuseReportOptions
#include "Oculus/Platform/AbuseReportOptions.hpp"
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::AbuseReportOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.AbuseReportOptions.SetPreventPeopleChooser
void Oculus::Platform::AbuseReportOptions::SetPreventPeopleChooser(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::SetPreventPeopleChooser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPreventPeopleChooser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AbuseReportOptions.SetReportType
void Oculus::Platform::AbuseReportOptions::SetReportType(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AbuseReportOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::AbuseReportOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.AbuseReportOptions.Finalize
void Oculus::Platform::AbuseReportOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportType Unknown
::Oculus::Platform::AbuseReportType Oculus::Platform::AbuseReportType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportType>("Oculus.Platform", "AbuseReportType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportType Unknown
void Oculus::Platform::AbuseReportType::_set_Unknown(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportType Object
::Oculus::Platform::AbuseReportType Oculus::Platform::AbuseReportType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportType>("Oculus.Platform", "AbuseReportType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportType Object
void Oculus::Platform::AbuseReportType::_set_Object(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportType User
::Oculus::Platform::AbuseReportType Oculus::Platform::AbuseReportType::_get_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_get_User");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportType>("Oculus.Platform", "AbuseReportType", "User"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportType User
void Oculus::Platform::AbuseReportType::_set_User(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_set_User");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportType", "User", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::AbuseReportType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AbuseReportVideoMode
#include "Oculus/Platform/AbuseReportVideoMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Unknown
::Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Unknown
void Oculus::Platform::AbuseReportVideoMode::_set_Unknown(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Collect
::Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Collect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_get_Collect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Collect"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Collect
void Oculus::Platform::AbuseReportVideoMode::_set_Collect(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_set_Collect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Collect", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Optional
::Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Optional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_get_Optional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Optional"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Optional
void Oculus::Platform::AbuseReportVideoMode::_set_Optional(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_set_Optional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Optional", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Skip
::Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Skip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_get_Skip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Skip"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Skip
void Oculus::Platform::AbuseReportVideoMode::_set_Skip(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_set_Skip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Skip", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::AbuseReportVideoMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AccountAgeCategory
#include "Oculus/Platform/AccountAgeCategory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AccountAgeCategory Unknown
::Oculus::Platform::AccountAgeCategory Oculus::Platform::AccountAgeCategory::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AccountAgeCategory::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AccountAgeCategory>("Oculus.Platform", "AccountAgeCategory", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AccountAgeCategory Unknown
void Oculus::Platform::AccountAgeCategory::_set_Unknown(::Oculus::Platform::AccountAgeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AccountAgeCategory::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AccountAgeCategory", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AccountAgeCategory Ch
::Oculus::Platform::AccountAgeCategory Oculus::Platform::AccountAgeCategory::_get_Ch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AccountAgeCategory::_get_Ch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AccountAgeCategory>("Oculus.Platform", "AccountAgeCategory", "Ch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AccountAgeCategory Ch
void Oculus::Platform::AccountAgeCategory::_set_Ch(::Oculus::Platform::AccountAgeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AccountAgeCategory::_set_Ch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AccountAgeCategory", "Ch", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AccountAgeCategory Tn
::Oculus::Platform::AccountAgeCategory Oculus::Platform::AccountAgeCategory::_get_Tn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AccountAgeCategory::_get_Tn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AccountAgeCategory>("Oculus.Platform", "AccountAgeCategory", "Tn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AccountAgeCategory Tn
void Oculus::Platform::AccountAgeCategory::_set_Tn(::Oculus::Platform::AccountAgeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AccountAgeCategory::_set_Tn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AccountAgeCategory", "Tn", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AccountAgeCategory Ad
::Oculus::Platform::AccountAgeCategory Oculus::Platform::AccountAgeCategory::_get_Ad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AccountAgeCategory::_get_Ad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AccountAgeCategory>("Oculus.Platform", "AccountAgeCategory", "Ad"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AccountAgeCategory Ad
void Oculus::Platform::AccountAgeCategory::_set_Ad(::Oculus::Platform::AccountAgeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AccountAgeCategory::_set_Ad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AccountAgeCategory", "Ad", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::AccountAgeCategory::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AccountAgeCategory::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AchievementType
#include "Oculus/Platform/AchievementType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Unknown
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Unknown
void Oculus::Platform::AchievementType::_set_Unknown(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Simple
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Simple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Simple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Simple"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Simple
void Oculus::Platform::AchievementType::_set_Simple(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Simple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Simple", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Bitfield
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Bitfield() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Bitfield");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Bitfield"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Bitfield
void Oculus::Platform::AchievementType::_set_Bitfield(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Bitfield");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Bitfield", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Count
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Count"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Count
void Oculus::Platform::AchievementType::_set_Count(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::AchievementType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.AdvancedAbuseReportOptions
#include "Oculus/Platform/AdvancedAbuseReportOptions.hpp"
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
// Including type: Oculus.Platform.AbuseReportVideoMode
#include "Oculus/Platform/AbuseReportVideoMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::AdvancedAbuseReportOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.SetDeveloperDefinedContext
void Oculus::Platform::AdvancedAbuseReportOptions::SetDeveloperDefinedContext(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::SetDeveloperDefinedContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDeveloperDefinedContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.ClearDeveloperDefinedContext
void Oculus::Platform::AdvancedAbuseReportOptions::ClearDeveloperDefinedContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::ClearDeveloperDefinedContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDeveloperDefinedContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.SetObjectType
void Oculus::Platform::AdvancedAbuseReportOptions::SetObjectType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::SetObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.SetReportType
void Oculus::Platform::AdvancedAbuseReportOptions::SetReportType(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.AddSuggestedUser
void Oculus::Platform::AdvancedAbuseReportOptions::AddSuggestedUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::AddSuggestedUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSuggestedUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.ClearSuggestedUsers
void Oculus::Platform::AdvancedAbuseReportOptions::ClearSuggestedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::ClearSuggestedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSuggestedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.SetVideoMode
void Oculus::Platform::AdvancedAbuseReportOptions::SetVideoMode(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::SetVideoMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVideoMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::AdvancedAbuseReportOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.Finalize
void Oculus::Platform::AdvancedAbuseReportOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AndroidPlatform
#include "Oculus/Platform/AndroidPlatform.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.AndroidPlatform.Initialize
bool Oculus::Platform::AndroidPlatform::Initialize(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AndroidPlatform::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.AndroidPlatform.AsyncInitialize
::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::AndroidPlatform::AsyncInitialize(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AndroidPlatform::AsyncInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>*, false>(this, ___internal__method, appId);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AppAgeCategory
#include "Oculus/Platform/AppAgeCategory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AppAgeCategory Unknown
::Oculus::Platform::AppAgeCategory Oculus::Platform::AppAgeCategory::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppAgeCategory::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AppAgeCategory>("Oculus.Platform", "AppAgeCategory", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AppAgeCategory Unknown
void Oculus::Platform::AppAgeCategory::_set_Unknown(::Oculus::Platform::AppAgeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppAgeCategory::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AppAgeCategory", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AppAgeCategory Ch
::Oculus::Platform::AppAgeCategory Oculus::Platform::AppAgeCategory::_get_Ch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppAgeCategory::_get_Ch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AppAgeCategory>("Oculus.Platform", "AppAgeCategory", "Ch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AppAgeCategory Ch
void Oculus::Platform::AppAgeCategory::_set_Ch(::Oculus::Platform::AppAgeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppAgeCategory::_set_Ch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AppAgeCategory", "Ch", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AppAgeCategory Nch
::Oculus::Platform::AppAgeCategory Oculus::Platform::AppAgeCategory::_get_Nch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppAgeCategory::_get_Nch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AppAgeCategory>("Oculus.Platform", "AppAgeCategory", "Nch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AppAgeCategory Nch
void Oculus::Platform::AppAgeCategory::_set_Nch(::Oculus::Platform::AppAgeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppAgeCategory::_set_Nch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AppAgeCategory", "Nch", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::AppAgeCategory::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppAgeCategory::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.ApplicationOptions
#include "Oculus/Platform/ApplicationOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::ApplicationOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.ApplicationOptions.SetDeeplinkMessage
void Oculus::Platform::ApplicationOptions::SetDeeplinkMessage(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationOptions::SetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ApplicationOptions.SetDestinationApiName
void Oculus::Platform::ApplicationOptions::SetDestinationApiName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationOptions::SetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ApplicationOptions.SetLobbySessionId
void Oculus::Platform::ApplicationOptions::SetLobbySessionId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationOptions::SetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ApplicationOptions.SetMatchSessionId
void Oculus::Platform::ApplicationOptions::SetMatchSessionId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationOptions::SetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ApplicationOptions.SetRoomId
void Oculus::Platform::ApplicationOptions::SetRoomId(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationOptions::SetRoomId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRoomId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ApplicationOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::ApplicationOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.ApplicationOptions.Finalize
void Oculus::Platform::ApplicationOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AppStatus
#include "Oculus/Platform/AppStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AppStatus Unknown
::Oculus::Platform::AppStatus Oculus::Platform::AppStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AppStatus>("Oculus.Platform", "AppStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AppStatus Unknown
void Oculus::Platform::AppStatus::_set_Unknown(::Oculus::Platform::AppStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AppStatus", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AppStatus Entitled
::Oculus::Platform::AppStatus Oculus::Platform::AppStatus::_get_Entitled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppStatus::_get_Entitled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AppStatus>("Oculus.Platform", "AppStatus", "Entitled"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AppStatus Entitled
void Oculus::Platform::AppStatus::_set_Entitled(::Oculus::Platform::AppStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppStatus::_set_Entitled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AppStatus", "Entitled", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AppStatus DownloadQueued
::Oculus::Platform::AppStatus Oculus::Platform::AppStatus::_get_DownloadQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppStatus::_get_DownloadQueued");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AppStatus>("Oculus.Platform", "AppStatus", "DownloadQueued"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AppStatus DownloadQueued
void Oculus::Platform::AppStatus::_set_DownloadQueued(::Oculus::Platform::AppStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppStatus::_set_DownloadQueued");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AppStatus", "DownloadQueued", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AppStatus Downloading
::Oculus::Platform::AppStatus Oculus::Platform::AppStatus::_get_Downloading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppStatus::_get_Downloading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AppStatus>("Oculus.Platform", "AppStatus", "Downloading"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AppStatus Downloading
void Oculus::Platform::AppStatus::_set_Downloading(::Oculus::Platform::AppStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppStatus::_set_Downloading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AppStatus", "Downloading", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AppStatus Installing
::Oculus::Platform::AppStatus Oculus::Platform::AppStatus::_get_Installing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppStatus::_get_Installing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AppStatus>("Oculus.Platform", "AppStatus", "Installing"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AppStatus Installing
void Oculus::Platform::AppStatus::_set_Installing(::Oculus::Platform::AppStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppStatus::_set_Installing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AppStatus", "Installing", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AppStatus Installed
::Oculus::Platform::AppStatus Oculus::Platform::AppStatus::_get_Installed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppStatus::_get_Installed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AppStatus>("Oculus.Platform", "AppStatus", "Installed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AppStatus Installed
void Oculus::Platform::AppStatus::_set_Installed(::Oculus::Platform::AppStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppStatus::_set_Installed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AppStatus", "Installed", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AppStatus Uninstalling
::Oculus::Platform::AppStatus Oculus::Platform::AppStatus::_get_Uninstalling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppStatus::_get_Uninstalling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AppStatus>("Oculus.Platform", "AppStatus", "Uninstalling"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AppStatus Uninstalling
void Oculus::Platform::AppStatus::_set_Uninstalling(::Oculus::Platform::AppStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppStatus::_set_Uninstalling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AppStatus", "Uninstalling", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::AppStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AppStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.AvatarEditorOptions
#include "Oculus/Platform/AvatarEditorOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::AvatarEditorOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AvatarEditorOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.AvatarEditorOptions.SetSourceOverride
void Oculus::Platform::AvatarEditorOptions::SetSourceOverride(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AvatarEditorOptions::SetSourceOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSourceOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AvatarEditorOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::AvatarEditorOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.AvatarEditorOptions.Finalize
void Oculus::Platform::AvatarEditorOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AvatarEditorOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Callback
#include "Oculus/Platform/Callback.hpp"
// Including type: Oculus.Platform.Callback/RequestCallback
#include "Oculus/Platform/Callback_RequestCallback.hpp"
// Including type: Oculus.Platform.Callback/RequestCallback`1
#include "Oculus/Platform/Callback_RequestCallback_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.Message/Callback
#include "Oculus/Platform/Message_Callback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.UInt64,Oculus.Platform.Request> requestIDsToRequests
::System::Collections::Generic::Dictionary_2<uint64_t, ::Oculus::Platform::Request*>* Oculus::Platform::Callback::_get_requestIDsToRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_get_requestIDsToRequests");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<uint64_t, ::Oculus::Platform::Request*>*>("Oculus.Platform", "Callback", "requestIDsToRequests")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.UInt64,Oculus.Platform.Request> requestIDsToRequests
void Oculus::Platform::Callback::_set_requestIDsToRequests(::System::Collections::Generic::Dictionary_2<uint64_t, ::Oculus::Platform::Request*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_set_requestIDsToRequests");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Callback", "requestIDsToRequests", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<Oculus.Platform.Message/MessageType,Oculus.Platform.Callback/RequestCallback> notificationCallbacks
::System::Collections::Generic::Dictionary_2<::Oculus::Platform::Message::MessageType, ::Oculus::Platform::Callback::RequestCallback*>* Oculus::Platform::Callback::_get_notificationCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_get_notificationCallbacks");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::Oculus::Platform::Message::MessageType, ::Oculus::Platform::Callback::RequestCallback*>*>("Oculus.Platform", "Callback", "notificationCallbacks")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<Oculus.Platform.Message/MessageType,Oculus.Platform.Callback/RequestCallback> notificationCallbacks
void Oculus::Platform::Callback::_set_notificationCallbacks(::System::Collections::Generic::Dictionary_2<::Oculus::Platform::Message::MessageType, ::Oculus::Platform::Callback::RequestCallback*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_set_notificationCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Callback", "notificationCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean hasRegisteredJoinIntentNotificationHandler
bool Oculus::Platform::Callback::_get_hasRegisteredJoinIntentNotificationHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_get_hasRegisteredJoinIntentNotificationHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "Callback", "hasRegisteredJoinIntentNotificationHandler"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean hasRegisteredJoinIntentNotificationHandler
void Oculus::Platform::Callback::_set_hasRegisteredJoinIntentNotificationHandler(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_set_hasRegisteredJoinIntentNotificationHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Callback", "hasRegisteredJoinIntentNotificationHandler", value));
}
// Autogenerated static field getter
// Get static field: static private Oculus.Platform.Message latestPendingJoinIntentNotifications
::Oculus::Platform::Message* Oculus::Platform::Callback::_get_latestPendingJoinIntentNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_get_latestPendingJoinIntentNotifications");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message*>("Oculus.Platform", "Callback", "latestPendingJoinIntentNotifications"));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Platform.Message latestPendingJoinIntentNotifications
void Oculus::Platform::Callback::_set_latestPendingJoinIntentNotifications(::Oculus::Platform::Message* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_set_latestPendingJoinIntentNotifications");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Callback", "latestPendingJoinIntentNotifications", value));
}
// Autogenerated method: Oculus.Platform.Callback.SetNotificationCallback
void Oculus::Platform::Callback::SetNotificationCallback(::Oculus::Platform::Message::MessageType type, ::Oculus::Platform::Message::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::SetNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "SetNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, callback);
}
// Autogenerated method: Oculus.Platform.Callback.AddRequest
void Oculus::Platform::Callback::AddRequest(::Oculus::Platform::Request* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::AddRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "AddRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request);
}
// Autogenerated method: Oculus.Platform.Callback.RunCallbacks
void Oculus::Platform::Callback::RunCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::RunCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "RunCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Callback.RunLimitedCallbacks
void Oculus::Platform::Callback::RunLimitedCallbacks(uint limit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::RunLimitedCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "RunLimitedCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(limit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, limit);
}
// Autogenerated method: Oculus.Platform.Callback.OnApplicationQuit
void Oculus::Platform::Callback::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Callback.FlushJoinIntentNotificationQueue
void Oculus::Platform::Callback::FlushJoinIntentNotificationQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::FlushJoinIntentNotificationQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "FlushJoinIntentNotificationQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Callback.HandleMessage
void Oculus::Platform::Callback::HandleMessage(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::HandleMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "HandleMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Callback..cctor
void Oculus::Platform::Callback::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Callback/RequestCallback
#include "Oculus/Platform/Callback_RequestCallback.hpp"
// Including type: Oculus.Platform.Message/Callback
#include "Oculus/Platform/Message_Callback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Message/Callback messageCallback
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Message::Callback*& Oculus::Platform::Callback::RequestCallback::dyn_messageCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::RequestCallback::dyn_messageCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messageCallback"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Message::Callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Callback/RequestCallback.HandleMessage
void Oculus::Platform::Callback::RequestCallback::HandleMessage(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::RequestCallback::HandleMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Callback::RequestCallback*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CallbackRunner
#include "Oculus/Platform/CallbackRunner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsPersistantBetweenSceneLoads
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::CallbackRunner::dyn_IsPersistantBetweenSceneLoads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CallbackRunner::dyn_IsPersistantBetweenSceneLoads");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsPersistantBetweenSceneLoads"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.ovr_UnityResetTestPlatform
void Oculus::Platform::CallbackRunner::ovr_UnityResetTestPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CallbackRunner::ovr_UnityResetTestPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CallbackRunner", "ovr_UnityResetTestPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.Awake
void Oculus::Platform::CallbackRunner::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CallbackRunner::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.Update
void Oculus::Platform::CallbackRunner::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CallbackRunner::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.OnDestroy
void Oculus::Platform::CallbackRunner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CallbackRunner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.OnApplicationQuit
void Oculus::Platform::CallbackRunner::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CallbackRunner::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.CAPI
#include "Oculus/Platform/CAPI.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.CAPI/ovrNetSyncVec3
#include "Oculus/Platform/CAPI_ovrNetSyncVec3.hpp"
// Including type: Oculus.Platform.CAPI/OculusInitParams
#include "Oculus/Platform/CAPI_OculusInitParams.hpp"
// Including type: Oculus.Platform.CAPI/FilterCallback
#include "Oculus/Platform/CAPI_FilterCallback.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Text.UTF8Encoding
#include "System/Text/UTF8Encoding.hpp"
// Including type: Oculus.Platform.LaunchResult
#include "Oculus/Platform/LaunchResult.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.UIntPtr
#include "System/UIntPtr.hpp"
// Including type: Oculus.Platform.VoipMuteState
#include "Oculus/Platform/VoipMuteState.hpp"
// Including type: Oculus.Platform.LogEventName
#include "Oculus/Platform/LogEventName.hpp"
// Including type: Oculus.Platform.SystemVoipStatus
#include "Oculus/Platform/SystemVoipStatus.hpp"
// Including type: Oculus.Platform.VoipDtxState
#include "Oculus/Platform/VoipDtxState.hpp"
// Including type: Oculus.Platform.VoipBitrate
#include "Oculus/Platform/VoipBitrate.hpp"
// Including type: Oculus.Platform.VoipSampleRate
#include "Oculus/Platform/VoipSampleRate.hpp"
// Including type: Oculus.Platform.ReportRequestResponse
#include "Oculus/Platform/ReportRequestResponse.hpp"
// Including type: Oculus.Platform.LeaderboardFilterType
#include "Oculus/Platform/LeaderboardFilterType.hpp"
// Including type: Oculus.Platform.LeaderboardStartAt
#include "Oculus/Platform/LeaderboardStartAt.hpp"
// Including type: Oculus.Platform.LivestreamingAudience
#include "Oculus/Platform/LivestreamingAudience.hpp"
// Including type: Oculus.Platform.LivestreamingMicrophoneStatus
#include "Oculus/Platform/LivestreamingMicrophoneStatus.hpp"
// Including type: Oculus.Platform.MediaContentType
#include "Oculus/Platform/MediaContentType.hpp"
// Including type: Oculus.Platform.NetSyncVoipMicSource
#include "Oculus/Platform/NetSyncVoipMicSource.hpp"
// Including type: Oculus.Platform.NetSyncVoipStreamMode
#include "Oculus/Platform/NetSyncVoipStreamMode.hpp"
// Including type: Oculus.Platform.AppAgeCategory
#include "Oculus/Platform/AppAgeCategory.hpp"
// Including type: Oculus.Platform.AchievementType
#include "Oculus/Platform/AchievementType.hpp"
// Including type: Oculus.Platform.AppStatus
#include "Oculus/Platform/AppStatus.hpp"
// Including type: Oculus.Platform.ChallengeCreationType
#include "Oculus/Platform/ChallengeCreationType.hpp"
// Including type: Oculus.Platform.ChallengeVisibility
#include "Oculus/Platform/ChallengeVisibility.hpp"
// Including type: Oculus.Platform.LaunchType
#include "Oculus/Platform/LaunchType.hpp"
// Including type: Oculus.Platform.ServiceProvider
#include "Oculus/Platform/ServiceProvider.hpp"
// Including type: Oculus.Platform.LivestreamingStartStatus
#include "Oculus/Platform/LivestreamingStartStatus.hpp"
// Including type: Oculus.Platform.NetSyncDisconnectReason
#include "Oculus/Platform/NetSyncDisconnectReason.hpp"
// Including type: Oculus.Platform.NetSyncConnectionStatus
#include "Oculus/Platform/NetSyncConnectionStatus.hpp"
// Including type: Oculus.Platform.PartyUpdateAction
#include "Oculus/Platform/PartyUpdateAction.hpp"
// Including type: Oculus.Platform.PlatformInitializeResult
#include "Oculus/Platform/PlatformInitializeResult.hpp"
// Including type: Oculus.Platform.SdkAccountType
#include "Oculus/Platform/SdkAccountType.hpp"
// Including type: Oculus.Platform.ShareMediaStatus
#include "Oculus/Platform/ShareMediaStatus.hpp"
// Including type: Oculus.Platform.UserPresenceStatus
#include "Oculus/Platform/UserPresenceStatus.hpp"
// Including type: Oculus.Platform.AccountAgeCategory
#include "Oculus/Platform/AccountAgeCategory.hpp"
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
// Including type: Oculus.Platform.AbuseReportVideoMode
#include "Oculus/Platform/AbuseReportVideoMode.hpp"
// Including type: Oculus.Platform.ChallengeViewerFilter
#include "Oculus/Platform/ChallengeViewerFilter.hpp"
// Including type: Oculus.Platform.MultiplayerErrorErrorKey
#include "Oculus/Platform/MultiplayerErrorErrorKey.hpp"
// Including type: Oculus.Platform.TimeWindow
#include "Oculus/Platform/TimeWindow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String DLL_NAME
::StringW Oculus::Platform::CAPI::_get_DLL_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_get_DLL_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform", "CAPI", "DLL_NAME"));
}
// Autogenerated static field setter
// Set static field: static public System.String DLL_NAME
void Oculus::Platform::CAPI::_set_DLL_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_set_DLL_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CAPI", "DLL_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.UTF8Encoding nativeStringEncoding
::System::Text::UTF8Encoding* Oculus::Platform::CAPI::_get_nativeStringEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_get_nativeStringEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::UTF8Encoding*>("Oculus.Platform", "CAPI", "nativeStringEncoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.UTF8Encoding nativeStringEncoding
void Oculus::Platform::CAPI::_set_nativeStringEncoding(::System::Text::UTF8Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_set_nativeStringEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CAPI", "nativeStringEncoding", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 VoipFilterBufferSize
int Oculus::Platform::CAPI::_get_VoipFilterBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_get_VoipFilterBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform", "CAPI", "VoipFilterBufferSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 VoipFilterBufferSize
void Oculus::Platform::CAPI::_set_VoipFilterBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_set_VoipFilterBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CAPI", "VoipFilterBufferSize", value));
}
// Autogenerated method: Oculus.Platform.CAPI.ArrayOfStructsToIntPtr
::System::IntPtr Oculus::Platform::CAPI::ArrayOfStructsToIntPtr(::System::Array* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ArrayOfStructsToIntPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ArrayOfStructsToIntPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ar);
}
// Autogenerated method: Oculus.Platform.CAPI.DictionaryToOVRKeyValuePairs
::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> Oculus::Platform::CAPI::DictionaryToOVRKeyValuePairs(::System::Collections::Generic::Dictionary_2<::Oculus::Platform::InitConfigOptions, bool>* dict) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::DictionaryToOVRKeyValuePairs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DictionaryToOVRKeyValuePairs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dict)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dict);
}
// Autogenerated method: Oculus.Platform.CAPI.DictionaryToOVRKeyValuePairs
::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> Oculus::Platform::CAPI::DictionaryToOVRKeyValuePairs(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* dict) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::DictionaryToOVRKeyValuePairs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DictionaryToOVRKeyValuePairs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dict)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dict);
}
// Autogenerated method: Oculus.Platform.CAPI.IntPtrToByteArray
::ArrayW<uint8_t> Oculus::Platform::CAPI::IntPtrToByteArray(::System::IntPtr data, uint64_t size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::IntPtrToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "IntPtrToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, size);
}
// Autogenerated method: Oculus.Platform.CAPI.DataStoreFromNative
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Oculus::Platform::CAPI::DataStoreFromNative(::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::DataStoreFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DataStoreFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.StringFromNative
::StringW Oculus::Platform::CAPI::StringFromNative(::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::StringFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "StringFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.GetNativeStringLengthNotIncludingNullTerminator
int Oculus::Platform::CAPI::GetNativeStringLengthNotIncludingNullTerminator(::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::GetNativeStringLengthNotIncludingNullTerminator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "GetNativeStringLengthNotIncludingNullTerminator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.DateTimeFromNative
::System::DateTime Oculus::Platform::CAPI::DateTimeFromNative(uint64_t seconds_since_the_one_true_epoch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::DateTimeFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DateTimeFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seconds_since_the_one_true_epoch)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, seconds_since_the_one_true_epoch);
}
// Autogenerated method: Oculus.Platform.CAPI.DateTimeToNative
uint64_t Oculus::Platform::CAPI::DateTimeToNative(::System::DateTime dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::DateTimeToNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DateTimeToNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dt);
}
// Autogenerated method: Oculus.Platform.CAPI.BlobFromNative
::ArrayW<uint8_t> Oculus::Platform::CAPI::BlobFromNative(uint size, ::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::BlobFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "BlobFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.FiledataFromNative
::ArrayW<uint8_t> Oculus::Platform::CAPI::FiledataFromNative(uint size, ::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::FiledataFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "FiledataFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.StringToNative
::System::IntPtr Oculus::Platform::CAPI::StringToNative(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::StringToNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "StringToNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapper
bool Oculus::Platform::CAPI::ovr_UnityInitWrapper(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitGlobals
void Oculus::Platform::CAPI::ovr_UnityInitGlobals(::System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitGlobals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitGlobals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loggingCB)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperAsynchronous
uint64_t Oculus::Platform::CAPI::ovr_UnityInitWrapperAsynchronous(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapperAsynchronous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperAsynchronous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperStandalone
bool Oculus::Platform::CAPI::ovr_UnityInitWrapperStandalone(::StringW accessToken, ::System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapperStandalone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperStandalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accessToken), ::il2cpp_utils::ExtractType(loggingCB)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, accessToken, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Platform_InitializeStandaloneOculus
uint64_t Oculus::Platform::CAPI::ovr_Platform_InitializeStandaloneOculus(ByRef<::Oculus::Platform::CAPI::OculusInitParams> init) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Platform_InitializeStandaloneOculus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Platform_InitializeStandaloneOculus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(init)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(init));
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PlatformInitializeWithAccessToken
uint64_t Oculus::Platform::CAPI::ovr_PlatformInitializeWithAccessToken(uint64_t appId, ::StringW accessToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PlatformInitializeWithAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PlatformInitializeWithAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(accessToken)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId, accessToken);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PlatformInitializeWithAccessTokenAndOptions
uint64_t Oculus::Platform::CAPI::ovr_PlatformInitializeWithAccessTokenAndOptions(uint64_t appId, ::StringW accessToken, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> configOptions, ::System::UIntPtr numOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PlatformInitializeWithAccessTokenAndOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PlatformInitializeWithAccessTokenAndOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(accessToken), ::il2cpp_utils::ExtractType(configOptions), ::il2cpp_utils::ExtractType(numOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId, accessToken, configOptions, numOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperWindows
bool Oculus::Platform::CAPI::ovr_UnityInitWrapperWindows(::StringW appId, ::System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapperWindows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperWindows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(loggingCB)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperWindowsAsynchronous
uint64_t Oculus::Platform::CAPI::ovr_UnityInitWrapperWindowsAsynchronous(::StringW appId, ::System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapperWindowsAsynchronous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperWindowsAsynchronous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(loggingCB)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SetDeveloperAccessToken
bool Oculus::Platform::CAPI::ovr_SetDeveloperAccessToken(::StringW accessToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SetDeveloperAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SetDeveloperAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accessToken)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, accessToken);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GetLoggedInUserLocale
::StringW Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GetLoggedInUserLocale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GetLoggedInUserLocale_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale_Native() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GetLoggedInUserLocale_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PopMessage
::System::IntPtr Oculus::Platform::CAPI::ovr_PopMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PopMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PopMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_FreeMessage
void Oculus::Platform::CAPI::ovr_FreeMessage(::System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_FreeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_FreeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_CreateEncoder
::System::IntPtr Oculus::Platform::CAPI::ovr_Voip_CreateEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_CreateEncoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_CreateEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_DestroyEncoder
void Oculus::Platform::CAPI::ovr_Voip_DestroyEncoder(::System::IntPtr encoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_DestroyEncoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_DestroyEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, encoder);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_CreateDecoder
::System::IntPtr Oculus::Platform::CAPI::ovr_Voip_CreateDecoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_CreateDecoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_CreateDecoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_DestroyDecoder
void Oculus::Platform::CAPI::ovr_Voip_DestroyDecoder(::System::IntPtr decoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_DestroyDecoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_DestroyDecoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(decoder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, decoder);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipDecoder_Decode
void Oculus::Platform::CAPI::ovr_VoipDecoder_Decode(::System::IntPtr obj, ::ArrayW<uint8_t> compressedData, uint64_t compressedSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipDecoder_Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipDecoder_Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(compressedData), ::il2cpp_utils::ExtractType(compressedSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, compressedData, compressedSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_Microphone_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Destroy
void Oculus::Platform::CAPI::ovr_Microphone_Destroy(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetSystemVoipPassthrough
void Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipPassthrough(bool passthrough) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetSystemVoipPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(passthrough)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, passthrough);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetSystemVoipMicrophoneMuted
void Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipMicrophoneMuted(::Oculus::Platform::VoipMuteState muted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(muted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, muted);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityResetTestPlatform
void Oculus::Platform::CAPI::ovr_UnityResetTestPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityResetTestPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityResetTestPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_GetWithMessageType
uint64_t Oculus::Platform::CAPI::ovr_HTTP_GetWithMessageType(::StringW url, int messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_GetWithMessageType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_GetWithMessageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(messageType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, messageType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CrashApplication
void Oculus::Platform::CAPI::ovr_CrashApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CrashApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CrashApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetMicrophoneFilterCallback
void Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallback(::Oculus::Platform::CAPI::FilterCallback* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetMicrophoneFilterCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cb);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer
void Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(::Oculus::Platform::CAPI::FilterCallback* cb, ::System::UIntPtr bufferSizeElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(bufferSizeElements)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cb, bufferSizeElements);
}
// Autogenerated method: Oculus.Platform.CAPI.LogNewUnifiedEvent
void Oculus::Platform::CAPI::LogNewUnifiedEvent(::Oculus::Platform::LogEventName eventName, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::LogNewUnifiedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "LogNewUnifiedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventName, values);
}
// Autogenerated method: Oculus.Platform.CAPI.LogNewEvent
void Oculus::Platform::CAPI::LogNewEvent(::StringW eventName, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::LogNewEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "LogNewEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventName, values);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Log_NewEvent
void Oculus::Platform::CAPI::ovr_Log_NewEvent(::System::IntPtr eventName, ::ArrayW<::System::IntPtr> values, ::System::UIntPtr length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Log_NewEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Log_NewEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventName, values, length);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_GetLaunchDetails
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetLaunchDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetLaunchDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_GetLaunchDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_LogDeeplinkResult
void Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult(::StringW trackingID, ::Oculus::Platform::LaunchResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_LogDeeplinkResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingID), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingID, result);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_LogDeeplinkResult_Native
void Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult_Native(::System::IntPtr trackingID, ::Oculus::Platform::LaunchResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_LogDeeplinkResult_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingID), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingID, result);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_StartTransfer
uint64_t Oculus::Platform::CAPI::ovr_HTTP_StartTransfer(::StringW url, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_StartTransfer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_StartTransfer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(headers)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, headers);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_StartTransfer_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_StartTransfer_Native(::System::IntPtr url, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> headers, ::System::UIntPtr numItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_StartTransfer_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_StartTransfer_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(headers), ::il2cpp_utils::ExtractType(numItems)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, headers, numItems);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Write
bool Oculus::Platform::CAPI::ovr_HTTP_Write(uint64_t transferId, ::ArrayW<uint8_t> bytes, ::System::UIntPtr length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transferId), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transferId, bytes, length);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_WriteEOM
void Oculus::Platform::CAPI::ovr_HTTP_WriteEOM(uint64_t transferId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_WriteEOM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_WriteEOM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transferId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transferId);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetStringForJavascript
::StringW Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript(::System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetStringForJavascript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetStringForJavascript_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript_Native(::System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetStringForJavascript_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicFloatPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicFloatPCM(int64_t connection_id, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicFloatPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicFloatPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicInt16PCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInt16PCM(int64_t connection_id, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInt16PCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicInt16PCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicInterleavedFloatPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedFloatPCM(int64_t connection_id, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedFloatPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicInterleavedFloatPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicInterleavedInt16PCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedInt16PCM(int64_t connection_id, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedInt16PCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicInterleavedInt16PCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetListenerPosition
bool Oculus::Platform::CAPI::ovr_NetSync_GetListenerPosition(int64_t connection_id, uint64_t sessionId, ByRef<::Oculus::Platform::CAPI::ovrNetSyncVec3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetListenerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetListenerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, sessionId, byref(position));
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetMonostreamFloatPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamFloatPCM(int64_t connection_id, uint64_t sessionId, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamFloatPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetMonostreamFloatPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, sessionId, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetMonostreamInt16PCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamInt16PCM(int64_t connection_id, uint64_t session_id, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamInt16PCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetMonostreamInt16PCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(session_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, session_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetPcmBufferMaxSamples
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetPcmBufferMaxSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetPcmBufferMaxSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetPcmBufferMaxSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetVoipAmplitude
bool Oculus::Platform::CAPI::ovr_NetSync_GetVoipAmplitude(int64_t connection_id, uint64_t sessionId, ByRef<float> amplitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetVoipAmplitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetVoipAmplitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(amplitude)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, sessionId, byref(amplitude));
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetListenerPosition
void Oculus::Platform::CAPI::ovr_NetSync_SetListenerPosition(int64_t connection_id, ByRef<::Oculus::Platform::CAPI::ovrNetSyncVec3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetListenerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetListenerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, byref(position));
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetSharedMemHandle
int Oculus::Platform::CAPI::ovr_Party_PluginGetSharedMemHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_PluginGetSharedMemHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetSharedMemHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetVoipMicrophoneMuted
::Oculus::Platform::VoipMuteState Oculus::Platform::CAPI::ovr_Party_PluginGetVoipMicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_PluginGetVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetVoipPassthrough
bool Oculus::Platform::CAPI::ovr_Party_PluginGetVoipPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_PluginGetVoipPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetVoipPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetVoipStatus
::Oculus::Platform::SystemVoipStatus Oculus::Platform::CAPI::ovr_Party_PluginGetVoipStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_PluginGetVoipStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetVoipStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_Accept
void Oculus::Platform::CAPI::ovr_Voip_Accept(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetIsConnectionUsingDtx
::Oculus::Platform::VoipDtxState Oculus::Platform::CAPI::ovr_Voip_GetIsConnectionUsingDtx(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetIsConnectionUsingDtx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetIsConnectionUsingDtx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipDtxState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetLocalBitrate
::Oculus::Platform::VoipBitrate Oculus::Platform::CAPI::ovr_Voip_GetLocalBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetLocalBitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetLocalBitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetOutputBufferMaxSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetOutputBufferMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetOutputBufferMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetOutputBufferMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCM(uint64_t senderID, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMFloat
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMFloat(uint64_t senderID, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCMFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMSize(uint64_t senderID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCMSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMWithTimestamp
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestamp(uint64_t senderID, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements, ::ArrayW<uint> timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMWithTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements, timestamp);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMWithTimestampFloat
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestampFloat(uint64_t senderID, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements, ::ArrayW<uint> timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestampFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMWithTimestampFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements, timestamp);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetRemoteBitrate
::Oculus::Platform::VoipBitrate Oculus::Platform::CAPI::ovr_Voip_GetRemoteBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetRemoteBitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetRemoteBitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSyncTimestamp
uint Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestamp(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSyncTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSyncTimestampDifference
int64_t Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestampDifference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSyncTimestampDifference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSystemVoipMicrophoneMuted
::Oculus::Platform::VoipMuteState Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipMicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSystemVoipStatus
::Oculus::Platform::SystemVoipStatus Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSystemVoipStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetMicrophoneMuted
void Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneMuted(::Oculus::Platform::VoipMuteState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetNewConnectionOptions
void Oculus::Platform::CAPI::ovr_Voip_SetNewConnectionOptions(::System::IntPtr voipOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetNewConnectionOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetNewConnectionOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voipOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, voipOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetOutputSampleRate
void Oculus::Platform::CAPI::ovr_Voip_SetOutputSampleRate(::Oculus::Platform::VoipSampleRate rate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetOutputSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetOutputSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_Start
void Oculus::Platform::CAPI::ovr_Voip_Start(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_Stop
void Oculus::Platform::CAPI::ovr_Voip_Stop(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReport_LaunchAdvancedReportFlow
uint64_t Oculus::Platform::CAPI::ovr_AbuseReport_LaunchAdvancedReportFlow(uint64_t content_id, ::System::IntPtr abuse_report_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReport_LaunchAdvancedReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReport_LaunchAdvancedReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(content_id), ::il2cpp_utils::ExtractType(abuse_report_options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, content_id, abuse_report_options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReport_ReportRequestHandled
uint64_t Oculus::Platform::CAPI::ovr_AbuseReport_ReportRequestHandled(::Oculus::Platform::ReportRequestResponse response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReport_ReportRequestHandled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReport_ReportRequestHandled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, response);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddCount
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddCount(::StringW name, uint64_t count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_AddCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddCount_Native
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddCount_Native(::System::IntPtr name, uint64_t count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_AddCount_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddCount_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddFields
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddFields(::StringW name, ::StringW fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_AddFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, fields);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddFields_Native
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddFields_Native(::System::IntPtr name, ::System::IntPtr fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_AddFields_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddFields_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, fields);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetAllDefinitions
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetAllDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_GetAllDefinitions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetAllDefinitions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetAllProgress
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetAllProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_GetAllProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetAllProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetDefinitionsByName
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetDefinitionsByName(::ArrayW<::StringW> names, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_GetDefinitionsByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetDefinitionsByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, names, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetProgressByName
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetProgressByName(::ArrayW<::StringW> names, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_GetProgressByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetProgressByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, names, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_Unlock
uint64_t Oculus::Platform::CAPI::ovr_Achievements_Unlock(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_Unlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_Unlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_Unlock_Native
uint64_t Oculus::Platform::CAPI::ovr_Achievements_Unlock_Native(::System::IntPtr name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_Unlock_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_Unlock_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_CancelAppDownload
uint64_t Oculus::Platform::CAPI::ovr_Application_CancelAppDownload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_CancelAppDownload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_CancelAppDownload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_CheckAppDownloadProgress
uint64_t Oculus::Platform::CAPI::ovr_Application_CheckAppDownloadProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_CheckAppDownloadProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_CheckAppDownloadProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_GetInstalledApplications
uint64_t Oculus::Platform::CAPI::ovr_Application_GetInstalledApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_GetInstalledApplications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_GetInstalledApplications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_GetVersion
uint64_t Oculus::Platform::CAPI::ovr_Application_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_InstallAppUpdateAndRelaunch
uint64_t Oculus::Platform::CAPI::ovr_Application_InstallAppUpdateAndRelaunch(::System::IntPtr deeplink_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_InstallAppUpdateAndRelaunch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_InstallAppUpdateAndRelaunch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deeplink_options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deeplink_options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_LaunchOtherApp
uint64_t Oculus::Platform::CAPI::ovr_Application_LaunchOtherApp(uint64_t appID, ::System::IntPtr deeplink_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_LaunchOtherApp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_LaunchOtherApp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID), ::il2cpp_utils::ExtractType(deeplink_options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appID, deeplink_options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_StartAppDownload
uint64_t Oculus::Platform::CAPI::ovr_Application_StartAppDownload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_StartAppDownload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_StartAppDownload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_GetRegisteredPIDs
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetRegisteredPIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetRegisteredPIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_GetRegisteredPIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_GetSessionKey
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetSessionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetSessionKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_GetSessionKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_RegisterSessionKey
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey(::StringW sessionKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_RegisterSessionKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionKey)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sessionKey);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_RegisterSessionKey_Native
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey_Native(::System::IntPtr sessionKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_RegisterSessionKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionKey)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sessionKey);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_Delete
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_Delete(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DeleteById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DeleteById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DeleteById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DeleteById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DeleteByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DeleteByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DeleteByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName_Native(::System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DeleteByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_Download
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_Download(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_Download");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_Download", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName_Native(::System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancel
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancel(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancelById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancelById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancelByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancelByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancelByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName_Native(::System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancelByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_GetList
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_GetList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_GetList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_Status
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_Status(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_Status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_StatusById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_StatusById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_StatusById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_StatusById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_StatusByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_StatusByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_StatusByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_StatusByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_StatusByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_StatusByName_Native(::System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_StatusByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_StatusByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Avatar_LaunchAvatarEditor
uint64_t Oculus::Platform::CAPI::ovr_Avatar_LaunchAvatarEditor(::System::IntPtr options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Avatar_LaunchAvatarEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Avatar_LaunchAvatarEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Avatar_UpdateMetaData
uint64_t Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData(::StringW avatarMetaData, ::StringW imageFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Avatar_UpdateMetaData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarMetaData), ::il2cpp_utils::ExtractType(imageFilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatarMetaData, imageFilePath);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Avatar_UpdateMetaData_Native
uint64_t Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData_Native(::System::IntPtr avatarMetaData, ::System::IntPtr imageFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Avatar_UpdateMetaData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarMetaData), ::il2cpp_utils::ExtractType(imageFilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatarMetaData, imageFilePath);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Create
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Create(::StringW leaderboardName, ::System::IntPtr challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, challengeOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Create_Native
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Create_Native(::System::IntPtr leaderboardName, ::System::IntPtr challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Create_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Create_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, challengeOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_DeclineInvite
uint64_t Oculus::Platform::CAPI::ovr_Challenges_DeclineInvite(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_DeclineInvite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_DeclineInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Delete
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Delete(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Get
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Get(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetEntries
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetEntries(uint64_t challengeID, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetEntriesAfterRank
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetEntriesAfterRank(uint64_t challengeID, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetEntriesByIds
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetEntriesByIds(uint64_t challengeID, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs, uint userIDLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetEntriesByIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetEntriesByIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(userIDLength)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, limit, startAt, userIDs, userIDLength);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetList
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetList(::System::IntPtr challengeOptions, int limit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeOptions), ::il2cpp_utils::ExtractType(limit)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeOptions, limit);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetNextChallenges
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetNextChallenges(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetNextChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetNextChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetNextEntries
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetNextEntries(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetNextEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetPreviousChallenges
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetPreviousChallenges(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetPreviousChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetPreviousChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetPreviousEntries
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetPreviousEntries(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetPreviousEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Join
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Join(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Leave
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Leave(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_UpdateInfo
uint64_t Oculus::Platform::CAPI::ovr_Challenges_UpdateInfo(uint64_t challengeID, ::System::IntPtr challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_UpdateInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_UpdateInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, challengeOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_GetCurrentMapUuid
uint64_t Oculus::Platform::CAPI::ovr_Colocation_GetCurrentMapUuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_GetCurrentMapUuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_GetCurrentMapUuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_RequestMap
uint64_t Oculus::Platform::CAPI::ovr_Colocation_RequestMap(::StringW uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_RequestMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_RequestMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_RequestMap_Native
uint64_t Oculus::Platform::CAPI::ovr_Colocation_RequestMap_Native(::System::IntPtr uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_RequestMap_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_RequestMap_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_ShareMap
uint64_t Oculus::Platform::CAPI::ovr_Colocation_ShareMap(::StringW uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_ShareMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_ShareMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_ShareMap_Native
uint64_t Oculus::Platform::CAPI::ovr_Colocation_ShareMap_Native(::System::IntPtr uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_ShareMap_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_ShareMap_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DeviceApplicationIntegrity_GetAttestationToken
uint64_t Oculus::Platform::CAPI::ovr_DeviceApplicationIntegrity_GetAttestationToken(::StringW challenge_nonce) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DeviceApplicationIntegrity_GetAttestationToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DeviceApplicationIntegrity_GetAttestationToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge_nonce)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challenge_nonce);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DeviceApplicationIntegrity_GetAttestationToken_Native
uint64_t Oculus::Platform::CAPI::ovr_DeviceApplicationIntegrity_GetAttestationToken_Native(::System::IntPtr challenge_nonce) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DeviceApplicationIntegrity_GetAttestationToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DeviceApplicationIntegrity_GetAttestationToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge_nonce)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challenge_nonce);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DeviceApplicationIntegrity_GetIntegrityToken
uint64_t Oculus::Platform::CAPI::ovr_DeviceApplicationIntegrity_GetIntegrityToken(::StringW challenge_nonce) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DeviceApplicationIntegrity_GetIntegrityToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DeviceApplicationIntegrity_GetIntegrityToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge_nonce)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challenge_nonce);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DeviceApplicationIntegrity_GetIntegrityToken_Native
uint64_t Oculus::Platform::CAPI::ovr_DeviceApplicationIntegrity_GetIntegrityToken_Native(::System::IntPtr challenge_nonce) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DeviceApplicationIntegrity_GetIntegrityToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DeviceApplicationIntegrity_GetIntegrityToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge_nonce)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challenge_nonce);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Entitlement_GetIsViewerEntitled
uint64_t Oculus::Platform::CAPI::ovr_Entitlement_GetIsViewerEntitled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Entitlement_GetIsViewerEntitled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Entitlement_GetIsViewerEntitled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Get
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Get(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GraphAPI_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Get_Native
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Get_Native(::System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GraphAPI_Get_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Get_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Post
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Post(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GraphAPI_Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Post_Native
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Post_Native(::System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GraphAPI_Post_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Post_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_Clear
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_GetInvitableUsers
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_GetInvitableUsers(::System::IntPtr options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_GetInvitableUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_GetInvitableUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_GetSentInvites
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_GetSentInvites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_GetSentInvites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_GetSentInvites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_LaunchInvitePanel
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_LaunchInvitePanel(::System::IntPtr options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_LaunchInvitePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_LaunchInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_LaunchMultiplayerErrorDialog
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_LaunchMultiplayerErrorDialog(::System::IntPtr options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_LaunchMultiplayerErrorDialog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_LaunchMultiplayerErrorDialog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_LaunchRejoinDialog
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRejoinDialog(::StringW lobby_session_id, ::StringW match_session_id, ::StringW destination_api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRejoinDialog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_LaunchRejoinDialog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobby_session_id), ::il2cpp_utils::ExtractType(match_session_id), ::il2cpp_utils::ExtractType(destination_api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lobby_session_id, match_session_id, destination_api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_LaunchRejoinDialog_Native
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRejoinDialog_Native(::System::IntPtr lobby_session_id, ::System::IntPtr match_session_id, ::System::IntPtr destination_api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRejoinDialog_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_LaunchRejoinDialog_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobby_session_id), ::il2cpp_utils::ExtractType(match_session_id), ::il2cpp_utils::ExtractType(destination_api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lobby_session_id, match_session_id, destination_api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_LaunchRosterPanel
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRosterPanel(::System::IntPtr options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRosterPanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_LaunchRosterPanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SendInvites
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SendInvites(::ArrayW<uint64_t> userIDs, uint userIDLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SendInvites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SendInvites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(userIDLength)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userIDs, userIDLength);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_Set
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_Set(::System::IntPtr groupPresenceOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupPresenceOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groupPresenceOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetDeeplinkMessageOverride
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetDeeplinkMessageOverride(::StringW deeplink_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetDeeplinkMessageOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetDeeplinkMessageOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deeplink_message)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deeplink_message);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetDeeplinkMessageOverride_Native
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetDeeplinkMessageOverride_Native(::System::IntPtr deeplink_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetDeeplinkMessageOverride_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetDeeplinkMessageOverride_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deeplink_message)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deeplink_message);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetDestination
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination(::StringW api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetDestination_Native
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination_Native(::System::IntPtr api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetDestination_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetIsJoinable
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetIsJoinable(bool is_joinable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(is_joinable)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, is_joinable);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetLobbySession
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetLobbySession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetLobbySession_Native
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession_Native(::System::IntPtr id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetLobbySession_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetMatchSession
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetMatchSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetMatchSession_Native
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession_Native(::System::IntPtr id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetMatchSession_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Get
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Get(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Get_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Get_Native(::System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Get_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Get_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_GetToFile
uint64_t Oculus::Platform::CAPI::ovr_HTTP_GetToFile(::StringW url, ::StringW diskFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_GetToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_GetToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(diskFile)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, diskFile);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_GetToFile_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_GetToFile_Native(::System::IntPtr url, ::System::IntPtr diskFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_GetToFile_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_GetToFile_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(diskFile)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, diskFile);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_MultiPartPost
uint64_t Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost(::StringW url, ::StringW filepath_param_name, ::StringW filepath, ::StringW access_token, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> post_params) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_MultiPartPost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(filepath_param_name), ::il2cpp_utils::ExtractType(filepath), ::il2cpp_utils::ExtractType(access_token), ::il2cpp_utils::ExtractType(post_params)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, filepath_param_name, filepath, access_token, post_params);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_MultiPartPost_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost_Native(::System::IntPtr url, ::System::IntPtr filepath_param_name, ::System::IntPtr filepath, ::System::IntPtr access_token, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> post_params, ::System::UIntPtr numItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_MultiPartPost_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(filepath_param_name), ::il2cpp_utils::ExtractType(filepath), ::il2cpp_utils::ExtractType(access_token), ::il2cpp_utils::ExtractType(post_params), ::il2cpp_utils::ExtractType(numItems)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, filepath_param_name, filepath, access_token, post_params, numItems);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Post
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Post(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Post_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Post_Native(::System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Post_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Post_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_ConsumePurchase
uint64_t Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase(::StringW sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_ConsumePurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_ConsumePurchase_Native
uint64_t Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase_Native(::System::IntPtr sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_ConsumePurchase_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_GetProductsBySKU
uint64_t Oculus::Platform::CAPI::ovr_IAP_GetProductsBySKU(::ArrayW<::StringW> skus, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_GetProductsBySKU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_GetProductsBySKU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skus), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skus, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_GetViewerPurchases
uint64_t Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_GetViewerPurchases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_GetViewerPurchasesDurableCache
uint64_t Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchasesDurableCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchasesDurableCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_GetViewerPurchasesDurableCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_LaunchCheckoutFlow
uint64_t Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow(::StringW sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_LaunchCheckoutFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_LaunchCheckoutFlow_Native
uint64_t Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow_Native(::System::IntPtr sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_LaunchCheckoutFlow_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePack_GetCurrent
uint64_t Oculus::Platform::CAPI::ovr_LanguagePack_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePack_GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePack_GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePack_SetCurrent
uint64_t Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePack_SetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePack_SetCurrent_Native
uint64_t Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent_Native(::System::IntPtr tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePack_SetCurrent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_Get
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_Get(::StringW leaderboardName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_Get_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_Get_Native(::System::IntPtr leaderboardName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_Get_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_Get_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntries
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries(::StringW leaderboardName, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntries_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries_Native(::System::IntPtr leaderboardName, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntries_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesAfterRank
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank(::StringW leaderboardName, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesAfterRank_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank_Native(::System::IntPtr leaderboardName, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesAfterRank_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesByIds
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds(::StringW leaderboardName, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs, uint userIDLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesByIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(userIDLength)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, startAt, userIDs, userIDLength);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesByIds_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds_Native(::System::IntPtr leaderboardName, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs, uint userIDLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesByIds_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(userIDLength)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, startAt, userIDs, userIDLength);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetNextEntries
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetNextEntries(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetNextEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetPreviousEntries
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetPreviousEntries(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetPreviousEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_WriteEntry
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry(::StringW leaderboardName, int64_t score, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_WriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(extraDataLength), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, score, extraData, extraDataLength, forceUpdate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_WriteEntry_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry_Native(::System::IntPtr leaderboardName, int64_t score, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_WriteEntry_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(extraDataLength), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, score, extraData, extraDataLength, forceUpdate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_WriteEntryWithSupplementaryMetric
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric(::StringW leaderboardName, int64_t score, int64_t supplementaryMetric, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_WriteEntryWithSupplementaryMetric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(supplementaryMetric), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(extraDataLength), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, score, supplementaryMetric, extraData, extraDataLength, forceUpdate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native(::System::IntPtr leaderboardName, int64_t score, int64_t supplementaryMetric, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(supplementaryMetric), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(extraDataLength), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, score, supplementaryMetric, extraData, extraDataLength, forceUpdate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_IsAllowedForApplication
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication(::StringW packageName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_IsAllowedForApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packageName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packageName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_IsAllowedForApplication_Native
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication_Native(::System::IntPtr packageName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_IsAllowedForApplication_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packageName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packageName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StartPartyStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StartPartyStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_StartPartyStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StartPartyStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StartStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StartStream(::Oculus::Platform::LivestreamingAudience audience, ::Oculus::Platform::LivestreamingMicrophoneStatus micStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_StartStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StartStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audience), ::il2cpp_utils::ExtractType(micStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audience, micStatus);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StopPartyStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StopPartyStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_StopPartyStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StopPartyStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StopStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StopStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_StopStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StopStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_UpdateMicStatus
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_UpdateMicStatus(::Oculus::Platform::LivestreamingMicrophoneStatus micStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_UpdateMicStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_UpdateMicStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(micStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, micStatus);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Media_ShareToFacebook
uint64_t Oculus::Platform::CAPI::ovr_Media_ShareToFacebook(::StringW postTextSuggestion, ::StringW filePath, ::Oculus::Platform::MediaContentType contentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Media_ShareToFacebook");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Media_ShareToFacebook", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(postTextSuggestion), ::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(contentType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, postTextSuggestion, filePath, contentType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Media_ShareToFacebook_Native
uint64_t Oculus::Platform::CAPI::ovr_Media_ShareToFacebook_Native(::System::IntPtr postTextSuggestion, ::System::IntPtr filePath, ::Oculus::Platform::MediaContentType contentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Media_ShareToFacebook_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Media_ShareToFacebook_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(postTextSuggestion), ::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(contentType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, postTextSuggestion, filePath, contentType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_Connect
uint64_t Oculus::Platform::CAPI::ovr_NetSync_Connect(::System::IntPtr connect_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connect_options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connect_options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_Disconnect
uint64_t Oculus::Platform::CAPI::ovr_NetSync_Disconnect(int64_t connection_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetSessions
uint64_t Oculus::Platform::CAPI::ovr_NetSync_GetSessions(int64_t connection_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetSessions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetSessions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetVoipAttenuation
uint64_t Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuation(int64_t connection_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetVoipAttenuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetVoipAttenuationDefault
uint64_t Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuationDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuationDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetVoipAttenuationDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipAttenuation
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuation(int64_t connection_id, ::ArrayW<float> distances, ::ArrayW<float> decibels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipAttenuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(distances), ::il2cpp_utils::ExtractType(decibels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, distances, decibels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipAttenuationModel
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel(int64_t connection_id, ::StringW name, ::ArrayW<float> distances, ::ArrayW<float> decibels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipAttenuationModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(distances), ::il2cpp_utils::ExtractType(decibels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, name, distances, decibels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipAttenuationModel_Native
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel_Native(int64_t connection_id, ::System::IntPtr name, ::ArrayW<float> distances, ::ArrayW<float> decibels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipAttenuationModel_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(distances), ::il2cpp_utils::ExtractType(decibels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, name, distances, decibels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipChannelCfg
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg(int64_t connection_id, ::StringW channel_name, ::StringW attnmodel, bool disable_spatialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipChannelCfg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(channel_name), ::il2cpp_utils::ExtractType(attnmodel), ::il2cpp_utils::ExtractType(disable_spatialization)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, channel_name, attnmodel, disable_spatialization);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipChannelCfg_Native
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg_Native(int64_t connection_id, ::System::IntPtr channel_name, ::System::IntPtr attnmodel, bool disable_spatialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipChannelCfg_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(channel_name), ::il2cpp_utils::ExtractType(attnmodel), ::il2cpp_utils::ExtractType(disable_spatialization)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, channel_name, attnmodel, disable_spatialization);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipGroup
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup(int64_t connection_id, ::StringW group_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(group_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, group_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipGroup_Native
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup_Native(int64_t connection_id, ::System::IntPtr group_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipGroup_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(group_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, group_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipListentoChannels
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipListentoChannels(int64_t connection_id, ::ArrayW<::StringW> listento_channels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipListentoChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipListentoChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(listento_channels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, listento_channels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipMicSource
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipMicSource(int64_t connection_id, ::Oculus::Platform::NetSyncVoipMicSource mic_source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipMicSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipMicSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(mic_source)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, mic_source);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipSessionMuted
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipSessionMuted(int64_t connection_id, uint64_t session_id, bool muted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipSessionMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipSessionMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(session_id), ::il2cpp_utils::ExtractType(muted)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, session_id, muted);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipSpeaktoChannels
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipSpeaktoChannels(int64_t connection_id, ::ArrayW<::StringW> speakto_channels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipSpeaktoChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipSpeaktoChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(speakto_channels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, speakto_channels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipStreamMode
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipStreamMode(int64_t connection_id, uint64_t sessionId, ::Oculus::Platform::NetSyncVoipStreamMode streamMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipStreamMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipStreamMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(streamMode)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, sessionId, streamMode);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Notification_MarkAsRead
uint64_t Oculus::Platform::CAPI::ovr_Notification_MarkAsRead(uint64_t notificationID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Notification_MarkAsRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Notification_MarkAsRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notificationID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, notificationID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Create
uint64_t Oculus::Platform::CAPI::ovr_Party_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GatherInApplication
uint64_t Oculus::Platform::CAPI::ovr_Party_GatherInApplication(uint64_t partyID, uint64_t appID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GatherInApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GatherInApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID), ::il2cpp_utils::ExtractType(appID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID, appID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Get
uint64_t Oculus::Platform::CAPI::ovr_Party_Get(uint64_t partyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetCurrent
uint64_t Oculus::Platform::CAPI::ovr_Party_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetCurrentForUser
uint64_t Oculus::Platform::CAPI::ovr_Party_GetCurrentForUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetCurrentForUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetCurrentForUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Invite
uint64_t Oculus::Platform::CAPI::ovr_Party_Invite(uint64_t partyID, uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Invite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Invite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID), ::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Join
uint64_t Oculus::Platform::CAPI::ovr_Party_Join(uint64_t partyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Leave
uint64_t Oculus::Platform::CAPI::ovr_Party_Leave(uint64_t partyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_Clear
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_GetDestinations
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_GetDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_GetDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_GetDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_Set
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_Set(::System::IntPtr richPresenceOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(richPresenceOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, richPresenceOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetDestination
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetDestination(::StringW api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetDestination_Native
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetDestination_Native(::System::IntPtr api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetDestination_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetDestination_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetIsJoinable
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetIsJoinable(bool is_joinable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(is_joinable)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, is_joinable);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetLobbySession
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetLobbySession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetLobbySession_Native
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession_Native(::System::IntPtr id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetLobbySession_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetMatchSession
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetMatchSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetMatchSession_Native
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession_Native(::System::IntPtr id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetMatchSession_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_CancelRecordingForReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow(::StringW recordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_CancelRecordingForReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingUUID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, recordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_CancelRecordingForReportFlow_Native
uint64_t Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow_Native(::System::IntPtr recordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_CancelRecordingForReportFlow_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingUUID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, recordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_Get
uint64_t Oculus::Platform::CAPI::ovr_User_Get(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetAccessToken
uint64_t Oculus::Platform::CAPI::ovr_User_GetAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetBlockedUsers
uint64_t Oculus::Platform::CAPI::ovr_User_GetBlockedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetBlockedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetBlockedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLinkedAccounts
uint64_t Oculus::Platform::CAPI::ovr_User_GetLinkedAccounts(::System::IntPtr userOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetLinkedAccounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLinkedAccounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLoggedInUser
uint64_t Oculus::Platform::CAPI::ovr_User_GetLoggedInUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetLoggedInUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLoggedInUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLoggedInUserFriends
uint64_t Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLoggedInUserFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetOrgScopedID
uint64_t Oculus::Platform::CAPI::ovr_User_GetOrgScopedID(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetOrgScopedID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetOrgScopedID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetSdkAccounts
uint64_t Oculus::Platform::CAPI::ovr_User_GetSdkAccounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetSdkAccounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetSdkAccounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetUserCapabilities
uint64_t Oculus::Platform::CAPI::ovr_User_GetUserCapabilities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetUserCapabilities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetUserCapabilities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetUserProof
uint64_t Oculus::Platform::CAPI::ovr_User_GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetUserProof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetUserProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchBlockFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchBlockFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchBlockFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchBlockFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchFriendRequestFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchFriendRequestFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchFriendRequestFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchFriendRequestFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchReportFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchReportFlow2
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchReportFlow2(uint64_t optionalUserID, ::System::IntPtr abuseReportOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchReportFlow2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchReportFlow2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(abuseReportOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, abuseReportOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchUnblockFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchUnblockFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchUnblockFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchUnblockFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_NewEntitledTestUser
uint64_t Oculus::Platform::CAPI::ovr_User_NewEntitledTestUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_NewEntitledTestUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_NewEntitledTestUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_NewTestUser
uint64_t Oculus::Platform::CAPI::ovr_User_NewTestUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_NewTestUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_NewTestUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_NewTestUserFriends
uint64_t Oculus::Platform::CAPI::ovr_User_NewTestUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_NewTestUserFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_NewTestUserFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StartRecordingForReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_StartRecordingForReportFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StartRecordingForReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StartRecordingForReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow(uint64_t optionalUserID, ::StringW optionalRecordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow_Native
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow_Native(uint64_t optionalUserID, ::System::IntPtr optionalRecordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow2
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2(uint64_t optionalUserID, ::StringW optionalRecordingUUID, ::System::IntPtr abuseReportOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID), ::il2cpp_utils::ExtractType(abuseReportOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID, abuseReportOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow2_Native
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2_Native(uint64_t optionalUserID, ::System::IntPtr optionalRecordingUUID, ::System::IntPtr abuseReportOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID), ::il2cpp_utils::ExtractType(abuseReportOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID, abuseReportOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_TestUserCreateDeviceManifest
uint64_t Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest(::StringW deviceID, ::ArrayW<uint64_t> appIDs, int numAppIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_TestUserCreateDeviceManifest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceID), ::il2cpp_utils::ExtractType(appIDs), ::il2cpp_utils::ExtractType(numAppIDs)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceID, appIDs, numAppIDs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_TestUserCreateDeviceManifest_Native
uint64_t Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest_Native(::System::IntPtr deviceID, ::ArrayW<uint64_t> appIDs, int numAppIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_TestUserCreateDeviceManifest_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceID), ::il2cpp_utils::ExtractType(appIDs), ::il2cpp_utils::ExtractType(numAppIDs)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceID, appIDs, numAppIDs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAgeCategory_Get
uint64_t Oculus::Platform::CAPI::ovr_UserAgeCategory_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAgeCategory_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAgeCategory_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAgeCategory_Report
uint64_t Oculus::Platform::CAPI::ovr_UserAgeCategory_Report(::Oculus::Platform::AppAgeCategory age_category) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAgeCategory_Report");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAgeCategory_Report", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(age_category)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, age_category);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateDeleteEntryByKey
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey(uint64_t userID, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateDeleteEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateDeleteEntryByKey_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey_Native(uint64_t userID, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateDeleteEntryByKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateGetEntries
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntries(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateGetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateGetEntryByKey
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey(uint64_t userID, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateGetEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateGetEntryByKey_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey_Native(uint64_t userID, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateGetEntryByKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateWriteEntry
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry(uint64_t userID, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateWriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateWriteEntry_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry_Native(uint64_t userID, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateWriteEntry_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicDeleteEntryByKey
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey(uint64_t userID, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicDeleteEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicDeleteEntryByKey_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey_Native(uint64_t userID, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicDeleteEntryByKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicGetEntries
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntries(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicGetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicGetEntryByKey
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey(uint64_t userID, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicGetEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicGetEntryByKey_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey_Native(uint64_t userID, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicGetEntryByKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicWriteEntry
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry(uint64_t userID, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicWriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicWriteEntry_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry_Native(uint64_t userID, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicWriteEntry_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetMicrophoneAvailability
uint64_t Oculus::Platform::CAPI::ovr_Voip_GetMicrophoneAvailability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetMicrophoneAvailability");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetMicrophoneAvailability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_ReportAppVoipSessions
uint64_t Oculus::Platform::CAPI::ovr_Voip_ReportAppVoipSessions(::ArrayW<uint64_t> sessionIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_ReportAppVoipSessions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_ReportAppVoipSessions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionIDs)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sessionIDs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetSystemVoipSuppressed
uint64_t Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipSuppressed(bool suppressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipSuppressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetSystemVoipSuppressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(suppressed)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, suppressed);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportRecording_GetRecordingUuid
::StringW Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportRecording_GetRecordingUuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportRecording_GetRecordingUuid_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportRecording_GetRecordingUuid_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetBitfieldLength
uint Oculus::Platform::CAPI::ovr_AchievementDefinition_GetBitfieldLength(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetBitfieldLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetBitfieldLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetName
::StringW Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetTarget
uint64_t Oculus::Platform::CAPI::ovr_AchievementDefinition_GetTarget(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetType
::Oculus::Platform::AchievementType Oculus::Platform::CAPI::ovr_AchievementDefinition_GetType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::AchievementType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetBitfield
::StringW Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetBitfield", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetBitfield_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetBitfield_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetCount
uint64_t Oculus::Platform::CAPI::ovr_AchievementProgress_GetCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetIsUnlocked
bool Oculus::Platform::CAPI::ovr_AchievementProgress_GetIsUnlocked(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetIsUnlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetIsUnlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetName
::StringW Oculus::Platform::CAPI::ovr_AchievementProgress_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgress_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetUnlockTime
::System::DateTime Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetUnlockTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetUnlockTime_Native
uint64_t Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetUnlockTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_AchievementProgressArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementUpdate_GetJustUnlocked
bool Oculus::Platform::CAPI::ovr_AchievementUpdate_GetJustUnlocked(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementUpdate_GetJustUnlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementUpdate_GetJustUnlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementUpdate_GetName
::StringW Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementUpdate_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementUpdate_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementUpdate_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AppDownloadProgressResult_GetDownloadBytes
int64_t Oculus::Platform::CAPI::ovr_AppDownloadProgressResult_GetDownloadBytes(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AppDownloadProgressResult_GetDownloadBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AppDownloadProgressResult_GetDownloadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AppDownloadProgressResult_GetDownloadedBytes
int64_t Oculus::Platform::CAPI::ovr_AppDownloadProgressResult_GetDownloadedBytes(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AppDownloadProgressResult_GetDownloadedBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AppDownloadProgressResult_GetDownloadedBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AppDownloadProgressResult_GetStatusCode
::Oculus::Platform::AppStatus Oculus::Platform::CAPI::ovr_AppDownloadProgressResult_GetStatusCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AppDownloadProgressResult_GetStatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AppDownloadProgressResult_GetStatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::AppStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AppDownloadResult_GetTimestamp
int64_t Oculus::Platform::CAPI::ovr_AppDownloadResult_GetTimestamp(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AppDownloadResult_GetTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AppDownloadResult_GetTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_GetID
uint64_t Oculus::Platform::CAPI::ovr_Application_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetDestination
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationInvite_GetDestination(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetID
uint64_t Oculus::Platform::CAPI::ovr_ApplicationInvite_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetIsActive
bool Oculus::Platform::CAPI::ovr_ApplicationInvite_GetIsActive(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetIsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetIsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetLobbySessionId
::StringW Oculus::Platform::CAPI::ovr_ApplicationInvite_GetLobbySessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetLobbySessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationInvite_GetLobbySessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetMatchSessionId
::StringW Oculus::Platform::CAPI::ovr_ApplicationInvite_GetMatchSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetMatchSessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationInvite_GetMatchSessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetRecipient
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationInvite_GetRecipient(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetRecipient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetRecipient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInviteArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInviteArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInviteArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInviteArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInviteArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInviteArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInviteArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInviteArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInviteArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_ApplicationInviteArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInviteArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInviteArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetCurrentCode
int Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetCurrentCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetCurrentName
::StringW Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetCurrentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetCurrentName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetCurrentName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetLatestCode
int Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetLatestCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetLatestName
::StringW Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetLatestName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetLatestName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetLatestName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetReleaseDate
int64_t Oculus::Platform::CAPI::ovr_ApplicationVersion_GetReleaseDate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetReleaseDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetReleaseDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetSize
::StringW Oculus::Platform::CAPI::ovr_ApplicationVersion_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetSize_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationVersion_GetSize_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetSize_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetSize_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetAssetType
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetAssetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetAssetType_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetAssetType_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetDownloadStatus
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetDownloadStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetDownloadStatus_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetDownloadStatus_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetFilepath
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetFilepath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetIapStatus
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetIapStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetIapStatus_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetIapStatus_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetLanguage
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetLanguage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetMetadata
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetMetadata_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetMetadata_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetailsArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetailsArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetailsArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetailsArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetAssetFileId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetFileId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetFileId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetAssetFileId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetFilepath
::StringW Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetFilepath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetSuccess
bool Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetSuccess(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetAssetFileId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetFileId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetFileId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetAssetFileId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetFilepath
::StringW Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetFilepath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetSuccess
bool Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetSuccess(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadResult_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadResult_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadResult_GetFilepath
::StringW Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadResult_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadResult_GetFilepath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadResult_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetAssetFileId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetFileId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetFileId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetAssetFileId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetBytesTotal
uint Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotal(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetBytesTotal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetBytesTotalLong
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotalLong(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotalLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetBytesTotalLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetBytesTransferred
int Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferred(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferred");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetBytesTransferred", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetBytesTransferredLong
int64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferredLong(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferredLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetBytesTransferredLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetCompleted
bool Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetCompleted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AvatarEditorResult_GetRequestSent
bool Oculus::Platform::CAPI::ovr_AvatarEditorResult_GetRequestSent(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AvatarEditorResult_GetRequestSent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AvatarEditorResult_GetRequestSent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_BlockedUser_GetId
uint64_t Oculus::Platform::CAPI::ovr_BlockedUser_GetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_BlockedUser_GetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_BlockedUser_GetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_BlockedUserArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_BlockedUserArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_BlockedUserArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_BlockedUserArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_BlockedUserArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_BlockedUserArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_BlockedUserArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_BlockedUserArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_BlockedUserArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_BlockedUserArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_BlockedUserArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_BlockedUserArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_BlockedUserArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_BlockedUserArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_BlockedUserArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_BlockedUserArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_BlockedUserArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_BlockedUserArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_BlockedUserArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_BlockedUserArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetCreationType
::Oculus::Platform::ChallengeCreationType Oculus::Platform::CAPI::ovr_Challenge_GetCreationType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetCreationType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetCreationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::ChallengeCreationType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetDescription
::StringW Oculus::Platform::CAPI::ovr_Challenge_GetDescription(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetDescription_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetDescription_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetEndDate
::System::DateTime Oculus::Platform::CAPI::ovr_Challenge_GetEndDate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetEndDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetEndDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetEndDate_Native
uint64_t Oculus::Platform::CAPI::ovr_Challenge_GetEndDate_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetEndDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetEndDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetID
uint64_t Oculus::Platform::CAPI::ovr_Challenge_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetInvitedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetInvitedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetInvitedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetInvitedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetLeaderboard
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetLeaderboard(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetParticipants
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetParticipants(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetParticipants");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetParticipants", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetStartDate
::System::DateTime Oculus::Platform::CAPI::ovr_Challenge_GetStartDate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetStartDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetStartDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetStartDate_Native
uint64_t Oculus::Platform::CAPI::ovr_Challenge_GetStartDate_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetStartDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetStartDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetTitle
::StringW Oculus::Platform::CAPI::ovr_Challenge_GetTitle(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetTitle_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetTitle_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetTitle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetTitle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetVisibility
::Oculus::Platform::ChallengeVisibility Oculus::Platform::CAPI::ovr_Challenge_GetVisibility(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::ChallengeVisibility, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetPreviousUrl
::StringW Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetPreviousUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetPreviousUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetTotalCount
uint64_t Oculus::Platform::CAPI::ovr_ChallengeArray_GetTotalCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetTotalCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetTotalCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_ChallengeArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_HasPreviousPage
bool Oculus::Platform::CAPI::ovr_ChallengeArray_HasPreviousPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_HasPreviousPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_HasPreviousPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetDisplayScore
::StringW Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetDisplayScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetDisplayScore_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetDisplayScore_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetExtraData
::ArrayW<uint8_t> Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetExtraData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetExtraData_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetExtraData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetExtraDataLength
uint Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraDataLength(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraDataLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetExtraDataLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetID
uint64_t Oculus::Platform::CAPI::ovr_ChallengeEntry_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetRank
int Oculus::Platform::CAPI::ovr_ChallengeEntry_GetRank(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetScore
int64_t Oculus::Platform::CAPI::ovr_ChallengeEntry_GetScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetTimestamp
::System::DateTime Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetTimestamp_Native
uint64_t Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetTimestamp_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetUser
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntry_GetUser(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetPreviousUrl
::StringW Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetPreviousUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetPreviousUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetTotalCount
uint64_t Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetTotalCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetTotalCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetTotalCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_HasPreviousPage
bool Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasPreviousPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasPreviousPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_HasPreviousPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_Contains
uint Oculus::Platform::CAPI::ovr_DataStore_Contains(::System::IntPtr obj, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_Contains_Native
uint Oculus::Platform::CAPI::ovr_DataStore_Contains_Native(::System::IntPtr obj, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_Contains_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_Contains_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetKey
::StringW Oculus::Platform::CAPI::ovr_DataStore_GetKey(::System::IntPtr obj, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetKey_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_DataStore_GetKey_Native(::System::IntPtr obj, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetNumKeys
::System::UIntPtr Oculus::Platform::CAPI::ovr_DataStore_GetNumKeys(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetNumKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetNumKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetValue
::StringW Oculus::Platform::CAPI::ovr_DataStore_GetValue(::System::IntPtr obj, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetValue_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_DataStore_GetValue_Native(::System::IntPtr obj, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetValue_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetValue_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetApiName
::StringW Oculus::Platform::CAPI::ovr_Destination_GetApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Destination_GetApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDeeplinkMessage
::StringW Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDeeplinkMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDisplayName
::StringW Oculus::Platform::CAPI::ovr_Destination_GetDisplayName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDisplayName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Destination_GetDisplayName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetDisplayName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDisplayName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_DestinationArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_DestinationArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_DestinationArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetCode
int Oculus::Platform::CAPI::ovr_Error_GetCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetDisplayableMessage
::StringW Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetDisplayableMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetDisplayableMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetDisplayableMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetHttpCode
int Oculus::Platform::CAPI::ovr_Error_GetHttpCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetHttpCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetHttpCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetMessage
::StringW Oculus::Platform::CAPI::ovr_Error_GetMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Error_GetMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetDeeplinkMessage
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetDestinationApiName
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetLobbySessionId
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetMatchSessionId
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetDestinationApiName
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetLobbySessionId
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetMatchSessionId
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_GetBytes
::System::IntPtr Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetBytes(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_GetID
uint64_t Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_IsCompleted
bool Oculus::Platform::CAPI::ovr_HttpTransferUpdate_IsCompleted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HttpTransferUpdate_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetApplicationId
::StringW Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetApplicationId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetApplicationId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetApplicationId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetPackageName
::StringW Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetPackageName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetPackageName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetPackageName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetStatus
::StringW Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetStatus_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetStatus_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetVersionCode
int Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetVersionCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetVersionName
::StringW Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetVersionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetVersionName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetVersionName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplicationArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplicationArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplicationArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplicationArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InvitePanelResultInfo_GetInvitesSent
bool Oculus::Platform::CAPI::ovr_InvitePanelResultInfo_GetInvitesSent(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InvitePanelResultInfo_GetInvitesSent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InvitePanelResultInfo_GetInvitesSent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetEnglishName
::StringW Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetEnglishName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetEnglishName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetEnglishName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetNativeName
::StringW Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetNativeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetNativeName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetNativeName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetTag
::StringW Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetTag_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetTag_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchBlockFlowResult_GetDidBlock
bool Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidBlock(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchBlockFlowResult_GetDidBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchBlockFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchBlockFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDeeplinkMessage
::StringW Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDeeplinkMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDestinationApiName
::StringW Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDestinationApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetLaunchSource
::StringW Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetLaunchSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetLaunchSource_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetLaunchSource_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetLaunchType
::Oculus::Platform::LaunchType Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetLaunchType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::LaunchType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetTrackingID
::StringW Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetTrackingID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetTrackingID_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetTrackingID_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchFriendRequestFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchFriendRequestFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchFriendRequestFlowResult_GetDidSendRequest
bool Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidSendRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchFriendRequestFlowResult_GetDidSendRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchInvitePanelFlowResult_GetInvitedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchInvitePanelFlowResult_GetInvitedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchInvitePanelFlowResult_GetInvitedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchInvitePanelFlowResult_GetInvitedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchReportFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchReportFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchReportFlowResult_GetUserReportId
uint64_t Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetUserReportId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetUserReportId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchReportFlowResult_GetUserReportId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchUnblockFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchUnblockFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchUnblockFlowResult_GetDidUnblock
bool Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidUnblock(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidUnblock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchUnblockFlowResult_GetDidUnblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetApiName
::StringW Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetDestination
::System::IntPtr Oculus::Platform::CAPI::ovr_Leaderboard_GetDestination(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetID
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_LeaderboardArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_LeaderboardArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetDisplayScore
::StringW Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetDisplayScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetDisplayScore_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetDisplayScore_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetExtraData
::ArrayW<uint8_t> Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetExtraData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetExtraData_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetExtraData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetExtraDataLength
uint Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraDataLength(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraDataLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetExtraDataLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetID
uint64_t Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetRank
int Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetRank(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetScore
int64_t Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetSupplementaryMetric
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetSupplementaryMetric(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetSupplementaryMetric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetSupplementaryMetric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetTimestamp
::System::DateTime Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetTimestamp_Native
uint64_t Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetTimestamp_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetUser
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetUser(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetPreviousUrl
::StringW Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetPreviousUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetPreviousUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetTotalCount
uint64_t Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetTotalCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetTotalCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetTotalCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_HasPreviousPage
bool Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasPreviousPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasPreviousPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_HasPreviousPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardUpdateStatus_GetDidUpdate
bool Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetDidUpdate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetDidUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardUpdateStatus_GetDidUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId
uint64_t Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId(::System::IntPtr obj, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize
uint Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetAccessToken
::StringW Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetAccessToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetServiceProvider
::Oculus::Platform::ServiceProvider Oculus::Platform::CAPI::ovr_LinkedAccount_GetServiceProvider(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetServiceProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetServiceProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::ServiceProvider, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetUserId
::StringW Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetUserId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetUserId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccountArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccountArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccountArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccountArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingApplicationStatus_GetStreamingEnabled
bool Oculus::Platform::CAPI::ovr_LivestreamingApplicationStatus_GetStreamingEnabled(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingApplicationStatus_GetStreamingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingApplicationStatus_GetStreamingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStartResult_GetStreamingResult
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::CAPI::ovr_LivestreamingStartResult_GetStreamingResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStartResult_GetStreamingResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStartResult_GetStreamingResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::LivestreamingStartStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetCommentsVisible
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetCommentsVisible(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetCommentsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetCommentsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetIsPaused
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetIsPaused(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetIsPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetIsPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetLivestreamingEnabled
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingEnabled(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetLivestreamingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetLivestreamingType
int Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetLivestreamingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetMicEnabled
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetMicEnabled(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetMicEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetMicEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetCommentCount
int Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetCommentCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetCommentCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetCommentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetReactionCount
int Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetReactionCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetReactionCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetReactionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetTotalViews
::StringW Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetTotalViews", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetTotalViews_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetTotalViews_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAbuseReportRecording
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAbuseReportRecording(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAbuseReportRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAbuseReportRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAchievementDefinitionArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAchievementDefinitionArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAchievementDefinitionArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAchievementDefinitionArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAchievementProgressArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAchievementProgressArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAchievementProgressArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAchievementProgressArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAchievementUpdate
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAchievementUpdate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAchievementUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAchievementUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAppDownloadProgressResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAppDownloadProgressResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAppDownloadProgressResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAppDownloadProgressResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAppDownloadResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAppDownloadResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAppDownloadResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAppDownloadResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetApplicationInviteArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetApplicationInviteArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetApplicationInviteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetApplicationInviteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetApplicationVersion
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetApplicationVersion(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetApplicationVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetApplicationVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetDetails
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetDetails(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetDetailsArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetDetailsArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetDetailsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetDetailsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDeleteResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDeleteResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetFileDeleteResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDeleteResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDownloadCancelResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadCancelResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadCancelResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDownloadCancelResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDownloadResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDownloadResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDownloadUpdate
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadUpdate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDownloadUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAvatarEditorResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAvatarEditorResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAvatarEditorResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAvatarEditorResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetBlockedUserArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetBlockedUserArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetBlockedUserArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetBlockedUserArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetChallenge
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetChallenge(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetChallenge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetChallenge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetChallengeArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetChallengeArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetChallengeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetChallengeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetChallengeEntryArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetChallengeEntryArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetChallengeEntryArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetChallengeEntryArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetDataStore
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetDataStore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetDestinationArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetDestinationArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetDestinationArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetDestinationArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetError
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetError(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetGroupPresenceJoinIntent
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceJoinIntent(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceJoinIntent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetGroupPresenceJoinIntent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetGroupPresenceLeaveIntent
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceLeaveIntent(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceLeaveIntent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetGroupPresenceLeaveIntent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetHttpTransferUpdate
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetHttpTransferUpdate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetHttpTransferUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetHttpTransferUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetInstalledApplicationArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetInstalledApplicationArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetInstalledApplicationArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetInstalledApplicationArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetInvitePanelResultInfo
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetInvitePanelResultInfo(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetInvitePanelResultInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetInvitePanelResultInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchBlockFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchBlockFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchBlockFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchBlockFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchFriendRequestFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchFriendRequestFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchFriendRequestFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchFriendRequestFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchInvitePanelFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchInvitePanelFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchInvitePanelFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchInvitePanelFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchReportFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchReportFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchReportFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchReportFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchUnblockFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchUnblockFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchUnblockFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchUnblockFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLeaderboardArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLeaderboardArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLeaderboardArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLeaderboardArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLeaderboardEntryArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLeaderboardEntryArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLeaderboardEntryArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLeaderboardEntryArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLeaderboardUpdateStatus
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLeaderboardUpdateStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLeaderboardUpdateStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLeaderboardUpdateStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLinkedAccountArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLinkedAccountArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLinkedAccountArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLinkedAccountArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingApplicationStatus
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingApplicationStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLivestreamingApplicationStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingApplicationStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingStartResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStartResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStartResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingStartResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingStatus
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingVideoStats
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingVideoStats(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLivestreamingVideoStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingVideoStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMicrophoneAvailabilityState
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMicrophoneAvailabilityState(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMicrophoneAvailabilityState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMicrophoneAvailabilityState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNativeMessage
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNativeMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNativeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNativeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncConnection
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncConnection(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncSessionArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncSessionArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncSessionsChangedNotification
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionsChangedNotification(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionsChangedNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncSessionsChangedNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncSetSessionPropertyResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncSetSessionPropertyResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncSetSessionPropertyResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncSetSessionPropertyResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncVoipAttenuationValueArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncVoipAttenuationValueArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncVoipAttenuationValueArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncVoipAttenuationValueArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetOrgScopedID
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetOrgScopedID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetOrgScopedID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetOrgScopedID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetParty
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetParty(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPartyID
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPartyID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPartyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPartyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPartyUpdateNotification
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPartyUpdateNotification(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPartyUpdateNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPartyUpdateNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPidArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPidArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPidArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPidArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPlatformInitialize
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPlatformInitialize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPlatformInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPlatformInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetProductArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetProductArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetProductArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetProductArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPurchase
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPurchase(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPurchaseArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPurchaseArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPurchaseArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPurchaseArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRejoinDialogResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRejoinDialogResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRejoinDialogResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRejoinDialogResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRequestID
uint64_t Oculus::Platform::CAPI::ovr_Message_GetRequestID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRequestID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRequestID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetSdkAccountArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetSdkAccountArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetSdkAccountArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetSdkAccountArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetSendInvitesResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetSendInvitesResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetSendInvitesResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetSendInvitesResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetShareMediaResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetShareMediaResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetShareMediaResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetShareMediaResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetString
::StringW Oculus::Platform::CAPI::ovr_Message_GetString(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetString_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetString_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetSystemVoipState
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetSystemVoipState(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetSystemVoipState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetSystemVoipState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetType
::Oculus::Platform::Message::MessageType Oculus::Platform::CAPI::ovr_Message_GetType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message::MessageType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUser
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUser(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserAccountAgeCategory
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserAccountAgeCategory(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserAccountAgeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserAccountAgeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserCapabilityArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserCapabilityArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserCapabilityArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserCapabilityArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserDataStoreUpdateResponse
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserDataStoreUpdateResponse(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserDataStoreUpdateResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserDataStoreUpdateResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserProof
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserProof(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserProof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserReportID
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserReportID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserReportID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserReportID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_IsError
bool Oculus::Platform::CAPI::ovr_Message_IsError(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_IsError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_IsError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetNumSamplesAvailable
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetNumSamplesAvailable(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_GetNumSamplesAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetNumSamplesAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetOutputBufferMaxSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetOutputBufferMaxSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_GetOutputBufferMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetOutputBufferMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetPCM(::System::IntPtr obj, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_GetPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetPCMFloat
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetPCMFloat(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_GetPCMFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetPCMFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_ReadData
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_ReadData(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_SetAcceptableRecordingDelayHint
void Oculus::Platform::CAPI::ovr_Microphone_SetAcceptableRecordingDelayHint(::System::IntPtr obj, ::System::UIntPtr delayMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_SetAcceptableRecordingDelayHint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_SetAcceptableRecordingDelayHint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(delayMs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, delayMs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Start
void Oculus::Platform::CAPI::ovr_Microphone_Start(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Stop
void Oculus::Platform::CAPI::ovr_Microphone_Stop(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable
bool Oculus::Platform::CAPI::ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetConnectionId
int64_t Oculus::Platform::CAPI::ovr_NetSyncConnection_GetConnectionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetDisconnectReason
::Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::CAPI::ovr_NetSyncConnection_GetDisconnectReason(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetDisconnectReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetDisconnectReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::NetSyncDisconnectReason, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetSessionId
uint64_t Oculus::Platform::CAPI::ovr_NetSyncConnection_GetSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetStatus
::Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::CAPI::ovr_NetSyncConnection_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::NetSyncConnectionStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetZoneId
::StringW Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetZoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetZoneId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetZoneId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetConnectionId
int64_t Oculus::Platform::CAPI::ovr_NetSyncSession_GetConnectionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetMuted
bool Oculus::Platform::CAPI::ovr_NetSyncSession_GetMuted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetSessionId
uint64_t Oculus::Platform::CAPI::ovr_NetSyncSession_GetSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_NetSyncSession_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetVoipGroup
::StringW Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetVoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetVoipGroup_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetVoipGroup_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionsChangedNotification_GetConnectionId
int64_t Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetConnectionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionsChangedNotification_GetConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionsChangedNotification_GetSessions
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetSessions(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetSessions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionsChangedNotification_GetSessions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSetSessionPropertyResult_GetSession
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSetSessionPropertyResult_GetSession(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSetSessionPropertyResult_GetSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSetSessionPropertyResult_GetSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValue_GetDecibels
float Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDecibels(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDecibels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValue_GetDecibels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValue_GetDistance
float Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDistance(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValue_GetDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValueArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValueArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValueArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValueArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_OrgScopedID_GetID
uint64_t Oculus::Platform::CAPI::ovr_OrgScopedID_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_OrgScopedID_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_OrgScopedID_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_Free
void Oculus::Platform::CAPI::ovr_Packet_Free(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetBytes
::System::IntPtr Oculus::Platform::CAPI::ovr_Packet_GetBytes(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetSenderID
uint64_t Oculus::Platform::CAPI::ovr_Packet_GetSenderID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_GetSenderID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetSenderID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_Packet_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetID
uint64_t Oculus::Platform::CAPI::ovr_Party_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetInvitedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetInvitedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetInvitedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetInvitedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetLeader
::System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetLeader(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetLeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetLeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyID_GetID
uint64_t Oculus::Platform::CAPI::ovr_PartyID_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyID_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyID_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetAction
::Oculus::Platform::PartyUpdateAction Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetAction(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::PartyUpdateAction, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetPartyId
uint64_t Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetPartyId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetPartyId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetPartyId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetSenderId
uint64_t Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetSenderId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetSenderId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetSenderId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUpdateTimestamp
::StringW Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUpdateTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUpdateTimestamp_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUpdateTimestamp_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserAlias
::StringW Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserAlias_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserAlias_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserName
::StringW Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Pid_GetId
::StringW Oculus::Platform::CAPI::ovr_Pid_GetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Pid_GetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Pid_GetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Pid_GetId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Pid_GetId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Pid_GetId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Pid_GetId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PidArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_PidArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PidArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PidArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PidArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_PidArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PidArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PidArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PlatformInitialize_GetResult
::Oculus::Platform::PlatformInitializeResult Oculus::Platform::CAPI::ovr_PlatformInitialize_GetResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PlatformInitialize_GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PlatformInitialize_GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::PlatformInitializeResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetAmountInHundredths
uint Oculus::Platform::CAPI::ovr_Price_GetAmountInHundredths(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetAmountInHundredths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetAmountInHundredths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetCurrency
::StringW Oculus::Platform::CAPI::ovr_Price_GetCurrency(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetCurrency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetCurrency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetCurrency_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Price_GetCurrency_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetCurrency_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetCurrency_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetFormatted
::StringW Oculus::Platform::CAPI::ovr_Price_GetFormatted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetFormatted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetFormatted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetFormatted_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Price_GetFormatted_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetFormatted_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetFormatted_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetDescription
::StringW Oculus::Platform::CAPI::ovr_Product_GetDescription(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetDescription_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetDescription_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetFormattedPrice
::StringW Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetFormattedPrice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetFormattedPrice_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetFormattedPrice_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetName
::StringW Oculus::Platform::CAPI::ovr_Product_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetSKU
::StringW Oculus::Platform::CAPI::ovr_Product_GetSKU(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetSKU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetSKU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetSKU_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetSKU_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetSKU_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetSKU_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_ProductArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_ProductArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_ProductArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetDeveloperPayload
::StringW Oculus::Platform::CAPI::ovr_Purchase_GetDeveloperPayload(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetDeveloperPayload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetDeveloperPayload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetDeveloperPayload_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Purchase_GetDeveloperPayload_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetDeveloperPayload_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetDeveloperPayload_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetExpirationTime
::System::DateTime Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetExpirationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetExpirationTime_Native
uint64_t Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetExpirationTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetGrantTime
::System::DateTime Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetGrantTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetGrantTime_Native
uint64_t Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetGrantTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetPurchaseID
uint64_t Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetPurchaseID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetPurchaseStrID
::StringW Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetPurchaseStrID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetPurchaseStrID_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetPurchaseStrID_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetReportingId
::StringW Oculus::Platform::CAPI::ovr_Purchase_GetReportingId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetReportingId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetReportingId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetReportingId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Purchase_GetReportingId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetReportingId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetReportingId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetSKU
::StringW Oculus::Platform::CAPI::ovr_Purchase_GetSKU(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetSKU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetSKU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetSKU_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Purchase_GetSKU_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetSKU_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetSKU_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_PurchaseArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_PurchaseArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_PurchaseArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RejoinDialogResult_GetRejoinSelected
bool Oculus::Platform::CAPI::ovr_RejoinDialogResult_GetRejoinSelected(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RejoinDialogResult_GetRejoinSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RejoinDialogResult_GetRejoinSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccount_GetAccountType
::Oculus::Platform::SdkAccountType Oculus::Platform::CAPI::ovr_SdkAccount_GetAccountType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SdkAccount_GetAccountType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccount_GetAccountType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SdkAccountType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccount_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_SdkAccount_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SdkAccount_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccount_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccountArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_SdkAccountArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SdkAccountArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccountArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccountArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_SdkAccountArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SdkAccountArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccountArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SendInvitesResult_GetInvites
::System::IntPtr Oculus::Platform::CAPI::ovr_SendInvitesResult_GetInvites(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SendInvitesResult_GetInvites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SendInvitesResult_GetInvites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ShareMediaResult_GetStatus
::Oculus::Platform::ShareMediaStatus Oculus::Platform::CAPI::ovr_ShareMediaResult_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ShareMediaResult_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ShareMediaResult_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::ShareMediaStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SupplementaryMetric_GetID
uint64_t Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SupplementaryMetric_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SupplementaryMetric_GetMetric
int64_t Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetMetric(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetMetric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SupplementaryMetric_GetMetric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SystemVoipState_GetMicrophoneMuted
::Oculus::Platform::VoipMuteState Oculus::Platform::CAPI::ovr_SystemVoipState_GetMicrophoneMuted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SystemVoipState_GetMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SystemVoipState_GetMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SystemVoipState_GetStatus
::Oculus::Platform::SystemVoipStatus Oculus::Platform::CAPI::ovr_SystemVoipState_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SystemVoipState_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SystemVoipState_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetAccessToken
::StringW Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetAccessToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetAppAccessArray
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetAppAccessArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetAppAccessArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetAppAccessArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFbAppAccessArray
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetFbAppAccessArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetFbAppAccessArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFbAppAccessArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFriendAccessToken
::StringW Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFriendAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFriendAccessToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFriendAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFriendAppAccessArray
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetFriendAppAccessArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetFriendAppAccessArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFriendAppAccessArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserAlias
::StringW Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserAlias_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserAlias_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserFbid
uint64_t Oculus::Platform::CAPI::ovr_TestUser_GetUserFbid(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetUserFbid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserFbid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_TestUser_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetAccessToken
::StringW Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetAccessToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetAppId
uint64_t Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAppId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetAppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccessArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccessArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccessArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccessArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetDisplayName
::StringW Oculus::Platform::CAPI::ovr_User_GetDisplayName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetDisplayName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetDisplayName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetDisplayName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetDisplayName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetID
uint64_t Oculus::Platform::CAPI::ovr_User_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetImageUrl
::StringW Oculus::Platform::CAPI::ovr_User_GetImageUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetImageUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetImageUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetImageUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetImageUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetImageUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetImageUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetOculusID
::StringW Oculus::Platform::CAPI::ovr_User_GetOculusID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetOculusID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetOculusID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetOculusID_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetOculusID_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetOculusID_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetOculusID_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresence
::StringW Oculus::Platform::CAPI::ovr_User_GetPresence(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresence_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresence_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresence_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresence_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDeeplinkMessage
::StringW Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDeeplinkMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDestinationApiName
::StringW Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDestinationApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceLobbySessionId
::StringW Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceLobbySessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceMatchSessionId
::StringW Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceMatchSessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceStatus
::Oculus::Platform::UserPresenceStatus Oculus::Platform::CAPI::ovr_User_GetPresenceStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::UserPresenceStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetSmallImageUrl
::StringW Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetSmallImageUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetSmallImageUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetSmallImageUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAccountAgeCategory_GetAgeCategory
::Oculus::Platform::AccountAgeCategory Oculus::Platform::CAPI::ovr_UserAccountAgeCategory_GetAgeCategory(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAccountAgeCategory_GetAgeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAccountAgeCategory_GetAgeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::AccountAgeCategory, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_UserArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_UserArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_UserArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserCapability_GetDescription
::StringW Oculus::Platform::CAPI::ovr_UserCapability_GetDescription(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserCapability_GetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserCapability_GetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserCapability_GetDescription_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_UserCapability_GetDescription_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserCapability_GetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserCapability_GetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserCapability_GetIsEnabled
bool Oculus::Platform::CAPI::ovr_UserCapability_GetIsEnabled(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserCapability_GetIsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserCapability_GetIsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserCapability_GetName
::StringW Oculus::Platform::CAPI::ovr_UserCapability_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserCapability_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserCapability_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserCapability_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_UserCapability_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserCapability_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserCapability_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserCapability_GetReasonCode
::StringW Oculus::Platform::CAPI::ovr_UserCapability_GetReasonCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserCapability_GetReasonCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserCapability_GetReasonCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserCapability_GetReasonCode_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_UserCapability_GetReasonCode_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserCapability_GetReasonCode_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserCapability_GetReasonCode_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserCapabilityArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_UserCapabilityArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserCapabilityArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserCapabilityArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserCapabilityArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_UserCapabilityArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserCapabilityArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserCapabilityArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserCapabilityArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_UserCapabilityArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserCapabilityArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserCapabilityArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserCapabilityArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_UserCapabilityArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserCapabilityArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserCapabilityArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserCapabilityArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_UserCapabilityArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserCapabilityArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserCapabilityArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStoreUpdateResponse_GetSuccess
bool Oculus::Platform::CAPI::ovr_UserDataStoreUpdateResponse_GetSuccess(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStoreUpdateResponse_GetSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStoreUpdateResponse_GetSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserProof_GetNonce
::StringW Oculus::Platform::CAPI::ovr_UserProof_GetNonce(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserProof_GetNonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserProof_GetNonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserProof_GetNonce_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_UserProof_GetNonce_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserProof_GetNonce_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserProof_GetNonce_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserReportID_GetDidCancel
bool Oculus::Platform::CAPI::ovr_UserReportID_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserReportID_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserReportID_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserReportID_GetID
uint64_t Oculus::Platform::CAPI::ovr_UserReportID_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserReportID_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserReportID_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipDecoder_Decode
void Oculus::Platform::CAPI::ovr_VoipDecoder_Decode(::System::IntPtr obj, ::ArrayW<uint8_t> compressedData, ::System::UIntPtr compressedSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipDecoder_Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipDecoder_Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(compressedData), ::il2cpp_utils::ExtractType(compressedSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, compressedData, compressedSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipDecoder_GetDecodedPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_VoipDecoder_GetDecodedPCM(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipDecoder_GetDecodedPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipDecoder_GetDecodedPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipEncoder_AddPCM
void Oculus::Platform::CAPI::ovr_VoipEncoder_AddPCM(::System::IntPtr obj, ::ArrayW<float> inputData, uint inputSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipEncoder_AddPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipEncoder_AddPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(inputData), ::il2cpp_utils::ExtractType(inputSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, inputData, inputSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipEncoder_GetCompressedData
::System::UIntPtr Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedData(::System::IntPtr obj, ::ArrayW<uint8_t> outputBuffer, ::System::UIntPtr intputSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipEncoder_GetCompressedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(intputSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, intputSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipEncoder_GetCompressedDataSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedDataSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedDataSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipEncoder_GetCompressedDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_AbuseReportOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_Destroy
void Oculus::Platform::CAPI::ovr_AbuseReportOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_SetPreventPeopleChooser
void Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetPreventPeopleChooser(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetPreventPeopleChooser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_SetPreventPeopleChooser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_SetReportType
void Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetReportType(::System::IntPtr handle, ::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_Destroy
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString(::System::IntPtr handle, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString_Native
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString_Native(::System::IntPtr handle, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_SetDeveloperDefinedContextString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_ClearDeveloperDefinedContext
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_ClearDeveloperDefinedContext(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_ClearDeveloperDefinedContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_ClearDeveloperDefinedContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_SetObjectType
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_SetObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_SetObjectType_Native
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_SetObjectType_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_SetReportType
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetReportType(::System::IntPtr handle, ::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_AddSuggestedUser
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_AddSuggestedUser(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_AddSuggestedUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_AddSuggestedUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_ClearSuggestedUsers
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_ClearSuggestedUsers(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_ClearSuggestedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_ClearSuggestedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_SetVideoMode
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetVideoMode(::System::IntPtr handle, ::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetVideoMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_SetVideoMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_Destroy
void Oculus::Platform::CAPI::ovr_ApplicationOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_SetDeeplinkMessage
void Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_SetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_SetDeeplinkMessage_Native
void Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_SetDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_SetDestinationApiName
void Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDestinationApiName(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_SetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_SetDestinationApiName_Native
void Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDestinationApiName_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_SetDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_SetLobbySessionId
void Oculus::Platform::CAPI::ovr_ApplicationOptions_SetLobbySessionId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_SetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_SetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_SetLobbySessionId_Native
void Oculus::Platform::CAPI::ovr_ApplicationOptions_SetLobbySessionId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_SetLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_SetLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_SetMatchSessionId
void Oculus::Platform::CAPI::ovr_ApplicationOptions_SetMatchSessionId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_SetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_SetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_SetMatchSessionId_Native
void Oculus::Platform::CAPI::ovr_ApplicationOptions_SetMatchSessionId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_SetMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_SetMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_SetRoomId
void Oculus::Platform::CAPI::ovr_ApplicationOptions_SetRoomId(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_SetRoomId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_SetRoomId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AvatarEditorOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_AvatarEditorOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AvatarEditorOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AvatarEditorOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AvatarEditorOptions_Destroy
void Oculus::Platform::CAPI::ovr_AvatarEditorOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AvatarEditorOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AvatarEditorOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AvatarEditorOptions_SetSourceOverride
void Oculus::Platform::CAPI::ovr_AvatarEditorOptions_SetSourceOverride(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AvatarEditorOptions_SetSourceOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AvatarEditorOptions_SetSourceOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AvatarEditorOptions_SetSourceOverride_Native
void Oculus::Platform::CAPI::ovr_AvatarEditorOptions_SetSourceOverride_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AvatarEditorOptions_SetSourceOverride_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AvatarEditorOptions_SetSourceOverride_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_Destroy
void Oculus::Platform::CAPI::ovr_ChallengeOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetDescription
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetDescription_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetEndDate
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate(::System::IntPtr handle, ::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetEndDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetEndDate_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate_Native(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetEndDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetIncludeActiveChallenges
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeActiveChallenges(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeActiveChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetIncludeActiveChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetIncludeFutureChallenges
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeFutureChallenges(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeFutureChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetIncludeFutureChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetIncludePastChallenges
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludePastChallenges(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludePastChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetIncludePastChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetLeaderboardName
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetLeaderboardName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetLeaderboardName_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetLeaderboardName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetStartDate
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate(::System::IntPtr handle, ::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetStartDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetStartDate_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate_Native(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetStartDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetTitle
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetTitle_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetTitle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetViewerFilter
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetViewerFilter(::System::IntPtr handle, ::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetViewerFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetViewerFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetVisibility
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetVisibility(::System::IntPtr handle, ::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_Destroy
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetDeeplinkMessageOverride
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDeeplinkMessageOverride(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDeeplinkMessageOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetDeeplinkMessageOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetDeeplinkMessageOverride_Native
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDeeplinkMessageOverride_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDeeplinkMessageOverride_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetDeeplinkMessageOverride_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetDestinationApiName
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetDestinationApiName_Native
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetIsJoinable
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetIsJoinable(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetLobbySessionId
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetLobbySessionId_Native
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetMatchSessionId
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetMatchSessionId_Native
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InviteOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_InviteOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InviteOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InviteOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InviteOptions_Destroy
void Oculus::Platform::CAPI::ovr_InviteOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InviteOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InviteOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InviteOptions_AddSuggestedUser
void Oculus::Platform::CAPI::ovr_InviteOptions_AddSuggestedUser(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InviteOptions_AddSuggestedUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InviteOptions_AddSuggestedUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InviteOptions_ClearSuggestedUsers
void Oculus::Platform::CAPI::ovr_InviteOptions_ClearSuggestedUsers(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InviteOptions_ClearSuggestedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InviteOptions_ClearSuggestedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MultiplayerErrorOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MultiplayerErrorOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MultiplayerErrorOptions_Destroy
void Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MultiplayerErrorOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MultiplayerErrorOptions_SetErrorKey
void Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_SetErrorKey(::System::IntPtr handle, ::Oculus::Platform::MultiplayerErrorErrorKey value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_SetErrorKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MultiplayerErrorOptions_SetErrorKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_Destroy
void Oculus::Platform::CAPI::ovr_NetSyncOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetVoipGroup
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetVoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetVoipGroup_Native
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetVoipGroup_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetVoipStreamDefault
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipStreamDefault(::System::IntPtr handle, ::Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipStreamDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetVoipStreamDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetZoneId
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetZoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetZoneId_Native
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetZoneId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_RichPresenceOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_Destroy
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetApiName
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetApiName_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetDeeplinkMessageOverride
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetDeeplinkMessageOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetIsJoinable
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsJoinable(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RosterOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_RosterOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RosterOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RosterOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RosterOptions_Destroy
void Oculus::Platform::CAPI::ovr_RosterOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RosterOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RosterOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RosterOptions_AddSuggestedUser
void Oculus::Platform::CAPI::ovr_RosterOptions_AddSuggestedUser(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RosterOptions_AddSuggestedUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RosterOptions_AddSuggestedUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RosterOptions_ClearSuggestedUsers
void Oculus::Platform::CAPI::ovr_RosterOptions_ClearSuggestedUsers(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RosterOptions_ClearSuggestedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RosterOptions_ClearSuggestedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_UserOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_Destroy
void Oculus::Platform::CAPI::ovr_UserOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_SetMaxUsers
void Oculus::Platform::CAPI::ovr_UserOptions_SetMaxUsers(::System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_SetMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_SetMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_AddServiceProvider
void Oculus::Platform::CAPI::ovr_UserOptions_AddServiceProvider(::System::IntPtr handle, ::Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_AddServiceProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_AddServiceProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_ClearServiceProviders
void Oculus::Platform::CAPI::ovr_UserOptions_ClearServiceProviders(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_ClearServiceProviders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_ClearServiceProviders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_SetTimeWindow
void Oculus::Platform::CAPI::ovr_UserOptions_SetTimeWindow(::System::IntPtr handle, ::Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_SetTimeWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_SetTimeWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_VoipOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_Destroy
void Oculus::Platform::CAPI::ovr_VoipOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_SetBitrateForNewConnections
void Oculus::Platform::CAPI::ovr_VoipOptions_SetBitrateForNewConnections(::System::IntPtr handle, ::Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipOptions_SetBitrateForNewConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_SetBitrateForNewConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_SetCreateNewConnectionUseDtx
void Oculus::Platform::CAPI::ovr_VoipOptions_SetCreateNewConnectionUseDtx(::System::IntPtr handle, ::Oculus::Platform::VoipDtxState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipOptions_SetCreateNewConnectionUseDtx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_SetCreateNewConnectionUseDtx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI..cctor
void Oculus::Platform::CAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CAPI/ovrKeyValuePair
#include "Oculus/Platform/CAPI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String key_
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::CAPI::ovrKeyValuePair::dyn_key_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::dyn_key_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key_"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.KeyValuePairType valueType_
[[deprecated("Use field access instead!")]] ::Oculus::Platform::KeyValuePairType& Oculus::Platform::CAPI::ovrKeyValuePair::dyn_valueType_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::dyn_valueType_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueType_"))->offset;
  return *reinterpret_cast<::Oculus::Platform::KeyValuePairType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String stringValue_
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::CAPI::ovrKeyValuePair::dyn_stringValue_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::dyn_stringValue_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringValue_"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 intValue_
[[deprecated("Use field access instead!")]] int& Oculus::Platform::CAPI::ovrKeyValuePair::dyn_intValue_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::dyn_intValue_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intValue_"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double doubleValue_
[[deprecated("Use field access instead!")]] double& Oculus::Platform::CAPI::ovrKeyValuePair::dyn_doubleValue_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::dyn_doubleValue_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doubleValue_"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.CAPI/ovrKeyValuePair..ctor
Oculus::Platform::CAPI::ovrKeyValuePair::ovrKeyValuePair(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI/ovrKeyValuePair..ctor
Oculus::Platform::CAPI::ovrKeyValuePair::ovrKeyValuePair(::StringW key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI/ovrKeyValuePair..ctor
Oculus::Platform::CAPI::ovrKeyValuePair::ovrKeyValuePair(::StringW key, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.CAPI/FilterCallback
#include "Oculus/Platform/CAPI_FilterCallback.hpp"
// Including type: System.UIntPtr
#include "System/UIntPtr.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.CAPI/FilterCallback.Invoke
void Oculus::Platform::CAPI::FilterCallback::Invoke(ByRef<::ArrayW<int16_t>> pcmData, ::System::UIntPtr pcmDataLength, int frequency, int numChannels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::FilterCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::CAPI::FilterCallback*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pcmData), pcmDataLength, frequency, numChannels);
}
// Autogenerated method: Oculus.Platform.CAPI/FilterCallback.BeginInvoke
::System::IAsyncResult* Oculus::Platform::CAPI::FilterCallback::BeginInvoke(ByRef<::ArrayW<int16_t>> pcmData, ::System::UIntPtr pcmDataLength, int frequency, int numChannels, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::FilterCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::CAPI::FilterCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pcmData), pcmDataLength, frequency, numChannels, callback, object);
}
// Autogenerated method: Oculus.Platform.CAPI/FilterCallback.EndInvoke
void Oculus::Platform::CAPI::FilterCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::FilterCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::CAPI::FilterCallback*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ChallengeCreationType
#include "Oculus/Platform/ChallengeCreationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeCreationType Unknown
::Oculus::Platform::ChallengeCreationType Oculus::Platform::ChallengeCreationType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeCreationType>("Oculus.Platform", "ChallengeCreationType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeCreationType Unknown
void Oculus::Platform::ChallengeCreationType::_set_Unknown(::Oculus::Platform::ChallengeCreationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeCreationType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeCreationType UserCreated
::Oculus::Platform::ChallengeCreationType Oculus::Platform::ChallengeCreationType::_get_UserCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::_get_UserCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeCreationType>("Oculus.Platform", "ChallengeCreationType", "UserCreated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeCreationType UserCreated
void Oculus::Platform::ChallengeCreationType::_set_UserCreated(::Oculus::Platform::ChallengeCreationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::_set_UserCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeCreationType", "UserCreated", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeCreationType DeveloperCreated
::Oculus::Platform::ChallengeCreationType Oculus::Platform::ChallengeCreationType::_get_DeveloperCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::_get_DeveloperCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeCreationType>("Oculus.Platform", "ChallengeCreationType", "DeveloperCreated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeCreationType DeveloperCreated
void Oculus::Platform::ChallengeCreationType::_set_DeveloperCreated(::Oculus::Platform::ChallengeCreationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::_set_DeveloperCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeCreationType", "DeveloperCreated", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::ChallengeCreationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.ChallengeOptions
#include "Oculus/Platform/ChallengeOptions.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: Oculus.Platform.ChallengeViewerFilter
#include "Oculus/Platform/ChallengeViewerFilter.hpp"
// Including type: Oculus.Platform.ChallengeVisibility
#include "Oculus/Platform/ChallengeVisibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::ChallengeOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetDescription
void Oculus::Platform::ChallengeOptions::SetDescription(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetEndDate
void Oculus::Platform::ChallengeOptions::SetEndDate(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetEndDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEndDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetIncludeActiveChallenges
void Oculus::Platform::ChallengeOptions::SetIncludeActiveChallenges(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetIncludeActiveChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIncludeActiveChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetIncludeFutureChallenges
void Oculus::Platform::ChallengeOptions::SetIncludeFutureChallenges(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetIncludeFutureChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIncludeFutureChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetIncludePastChallenges
void Oculus::Platform::ChallengeOptions::SetIncludePastChallenges(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetIncludePastChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIncludePastChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetLeaderboardName
void Oculus::Platform::ChallengeOptions::SetLeaderboardName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetLeaderboardName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLeaderboardName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetStartDate
void Oculus::Platform::ChallengeOptions::SetStartDate(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetStartDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetTitle
void Oculus::Platform::ChallengeOptions::SetTitle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetViewerFilter
void Oculus::Platform::ChallengeOptions::SetViewerFilter(::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetViewerFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetViewerFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetVisibility
void Oculus::Platform::ChallengeOptions::SetVisibility(::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::ChallengeOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.ChallengeOptions.Finalize
void Oculus::Platform::ChallengeOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ChallengeViewerFilter
#include "Oculus/Platform/ChallengeViewerFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter Unknown
::Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter Unknown
void Oculus::Platform::ChallengeViewerFilter::_set_Unknown(::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter AllVisible
::Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_AllVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_get_AllVisible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "AllVisible"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter AllVisible
void Oculus::Platform::ChallengeViewerFilter::_set_AllVisible(::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_set_AllVisible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "AllVisible", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter Participating
::Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_Participating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_get_Participating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "Participating"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter Participating
void Oculus::Platform::ChallengeViewerFilter::_set_Participating(::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_set_Participating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "Participating", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter Invited
::Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_Invited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_get_Invited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "Invited"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter Invited
void Oculus::Platform::ChallengeViewerFilter::_set_Invited(::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_set_Invited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "Invited", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter ParticipatingOrInvited
::Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_ParticipatingOrInvited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_get_ParticipatingOrInvited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "ParticipatingOrInvited"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter ParticipatingOrInvited
void Oculus::Platform::ChallengeViewerFilter::_set_ParticipatingOrInvited(::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_set_ParticipatingOrInvited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "ParticipatingOrInvited", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::ChallengeViewerFilter::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ChallengeVisibility
#include "Oculus/Platform/ChallengeVisibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeVisibility Unknown
::Oculus::Platform::ChallengeVisibility Oculus::Platform::ChallengeVisibility::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeVisibility>("Oculus.Platform", "ChallengeVisibility", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeVisibility Unknown
void Oculus::Platform::ChallengeVisibility::_set_Unknown(::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeVisibility", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeVisibility InviteOnly
::Oculus::Platform::ChallengeVisibility Oculus::Platform::ChallengeVisibility::_get_InviteOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_get_InviteOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeVisibility>("Oculus.Platform", "ChallengeVisibility", "InviteOnly"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeVisibility InviteOnly
void Oculus::Platform::ChallengeVisibility::_set_InviteOnly(::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_set_InviteOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeVisibility", "InviteOnly", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeVisibility Public
::Oculus::Platform::ChallengeVisibility Oculus::Platform::ChallengeVisibility::_get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_get_Public");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeVisibility>("Oculus.Platform", "ChallengeVisibility", "Public"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeVisibility Public
void Oculus::Platform::ChallengeVisibility::_set_Public(::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_set_Public");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeVisibility", "Public", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeVisibility Private
::Oculus::Platform::ChallengeVisibility Oculus::Platform::ChallengeVisibility::_get_Private() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_get_Private");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeVisibility>("Oculus.Platform", "ChallengeVisibility", "Private"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeVisibility Private
void Oculus::Platform::ChallengeVisibility::_set_Private(::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_set_Private");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeVisibility", "Private", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::ChallengeVisibility::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.GroupPresenceOptions
#include "Oculus/Platform/GroupPresenceOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::GroupPresenceOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresenceOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.GroupPresenceOptions.SetDeeplinkMessageOverride
void Oculus::Platform::GroupPresenceOptions::SetDeeplinkMessageOverride(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresenceOptions::SetDeeplinkMessageOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDeeplinkMessageOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.GroupPresenceOptions.SetDestinationApiName
void Oculus::Platform::GroupPresenceOptions::SetDestinationApiName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresenceOptions::SetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.GroupPresenceOptions.SetIsJoinable
void Oculus::Platform::GroupPresenceOptions::SetIsJoinable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresenceOptions::SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.GroupPresenceOptions.SetLobbySessionId
void Oculus::Platform::GroupPresenceOptions::SetLobbySessionId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresenceOptions::SetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.GroupPresenceOptions.SetMatchSessionId
void Oculus::Platform::GroupPresenceOptions::SetMatchSessionId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresenceOptions::SetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.GroupPresenceOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::GroupPresenceOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.GroupPresenceOptions.Finalize
void Oculus::Platform::GroupPresenceOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresenceOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.IMicrophone
#include "Oculus/Platform/IMicrophone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.IMicrophone.Start
void Oculus::Platform::IMicrophone::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IMicrophone::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::IMicrophone*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.IMicrophone.Stop
void Oculus::Platform::IMicrophone::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IMicrophone::Stop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::IMicrophone*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.IMicrophone.Update
::ArrayW<float> Oculus::Platform::IMicrophone::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IMicrophone::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::IMicrophone*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.InitConfigOptions
#include "Oculus/Platform/InitConfigOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.InitConfigOptions DisableP2pNetworking
::Oculus::Platform::InitConfigOptions Oculus::Platform::InitConfigOptions::_get_DisableP2pNetworking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::InitConfigOptions::_get_DisableP2pNetworking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::InitConfigOptions>("Oculus.Platform", "InitConfigOptions", "DisableP2pNetworking"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.InitConfigOptions DisableP2pNetworking
void Oculus::Platform::InitConfigOptions::_set_DisableP2pNetworking(::Oculus::Platform::InitConfigOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::InitConfigOptions::_set_DisableP2pNetworking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "InitConfigOptions", "DisableP2pNetworking", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::InitConfigOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::InitConfigOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.InviteOptions
#include "Oculus/Platform/InviteOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::InviteOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::InviteOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.InviteOptions.AddSuggestedUser
void Oculus::Platform::InviteOptions::AddSuggestedUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::InviteOptions::AddSuggestedUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSuggestedUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.InviteOptions.ClearSuggestedUsers
void Oculus::Platform::InviteOptions::ClearSuggestedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::InviteOptions::ClearSuggestedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSuggestedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.InviteOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::InviteOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.InviteOptions.Finalize
void Oculus::Platform::InviteOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::InviteOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.IVoipPCMSource
#include "Oculus/Platform/IVoipPCMSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.IVoipPCMSource.GetPCM
int Oculus::Platform::IVoipPCMSource::GetPCM(::ArrayW<float> dest, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IVoipPCMSource::GetPCM");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::IVoipPCMSource*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dest, length);
}
// Autogenerated method: Oculus.Platform.IVoipPCMSource.SetSenderID
void Oculus::Platform::IVoipPCMSource::SetSenderID(uint64_t senderID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IVoipPCMSource::SetSenderID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::IVoipPCMSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, senderID);
}
// Autogenerated method: Oculus.Platform.IVoipPCMSource.Update
void Oculus::Platform::IVoipPCMSource::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IVoipPCMSource::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::IVoipPCMSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.IVoipPCMSource.PeekSizeElements
int Oculus::Platform::IVoipPCMSource::PeekSizeElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IVoipPCMSource::PeekSizeElements");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::IVoipPCMSource*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.KeyValuePairType
#include "Oculus/Platform/KeyValuePairType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.KeyValuePairType String
::Oculus::Platform::KeyValuePairType Oculus::Platform::KeyValuePairType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::KeyValuePairType>("Oculus.Platform", "KeyValuePairType", "String"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.KeyValuePairType String
void Oculus::Platform::KeyValuePairType::_set_String(::Oculus::Platform::KeyValuePairType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "KeyValuePairType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.KeyValuePairType Int
::Oculus::Platform::KeyValuePairType Oculus::Platform::KeyValuePairType::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::KeyValuePairType>("Oculus.Platform", "KeyValuePairType", "Int"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.KeyValuePairType Int
void Oculus::Platform::KeyValuePairType::_set_Int(::Oculus::Platform::KeyValuePairType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "KeyValuePairType", "Int", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.KeyValuePairType Double
::Oculus::Platform::KeyValuePairType Oculus::Platform::KeyValuePairType::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::KeyValuePairType>("Oculus.Platform", "KeyValuePairType", "Double"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.KeyValuePairType Double
void Oculus::Platform::KeyValuePairType::_set_Double(::Oculus::Platform::KeyValuePairType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "KeyValuePairType", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.KeyValuePairType Unknown
::Oculus::Platform::KeyValuePairType Oculus::Platform::KeyValuePairType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::KeyValuePairType>("Oculus.Platform", "KeyValuePairType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.KeyValuePairType Unknown
void Oculus::Platform::KeyValuePairType::_set_Unknown(::Oculus::Platform::KeyValuePairType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "KeyValuePairType", "Unknown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::KeyValuePairType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LaunchResult
#include "Oculus/Platform/LaunchResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult Unknown
::Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult Unknown
void Oculus::Platform::LaunchResult::_set_Unknown(::Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult Success
::Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "Success"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult Success
void Oculus::Platform::LaunchResult::_set_Success(::Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult FailedRoomFull
::Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_FailedRoomFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_get_FailedRoomFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "FailedRoomFull"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult FailedRoomFull
void Oculus::Platform::LaunchResult::_set_FailedRoomFull(::Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_set_FailedRoomFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "FailedRoomFull", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult FailedGameAlreadyStarted
::Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_FailedGameAlreadyStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_get_FailedGameAlreadyStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "FailedGameAlreadyStarted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult FailedGameAlreadyStarted
void Oculus::Platform::LaunchResult::_set_FailedGameAlreadyStarted(::Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_set_FailedGameAlreadyStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "FailedGameAlreadyStarted", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult FailedRoomNotFound
::Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_FailedRoomNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_get_FailedRoomNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "FailedRoomNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult FailedRoomNotFound
void Oculus::Platform::LaunchResult::_set_FailedRoomNotFound(::Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_set_FailedRoomNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "FailedRoomNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult FailedUserDeclined
::Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_FailedUserDeclined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_get_FailedUserDeclined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "FailedUserDeclined"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult FailedUserDeclined
void Oculus::Platform::LaunchResult::_set_FailedUserDeclined(::Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_set_FailedUserDeclined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "FailedUserDeclined", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult FailedOtherReason
::Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_FailedOtherReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_get_FailedOtherReason");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "FailedOtherReason"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult FailedOtherReason
void Oculus::Platform::LaunchResult::_set_FailedOtherReason(::Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_set_FailedOtherReason");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "FailedOtherReason", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::LaunchResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LaunchType
#include "Oculus/Platform/LaunchType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Unknown
::Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Unknown
void Oculus::Platform::LaunchType::_set_Unknown(::Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Normal
::Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Normal
void Oculus::Platform::LaunchType::_set_Normal(::Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Invite
::Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_get_Invite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Invite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Invite
void Oculus::Platform::LaunchType::_set_Invite(::Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_set_Invite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Invite", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Coordinated
::Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Coordinated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_get_Coordinated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Coordinated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Coordinated
void Oculus::Platform::LaunchType::_set_Coordinated(::Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_set_Coordinated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Coordinated", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Deeplink
::Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Deeplink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_get_Deeplink");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Deeplink"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Deeplink
void Oculus::Platform::LaunchType::_set_Deeplink(::Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_set_Deeplink");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Deeplink", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::LaunchType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LeaderboardFilterType
#include "Oculus/Platform/LeaderboardFilterType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardFilterType None
::Oculus::Platform::LeaderboardFilterType Oculus::Platform::LeaderboardFilterType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardFilterType>("Oculus.Platform", "LeaderboardFilterType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardFilterType None
void Oculus::Platform::LeaderboardFilterType::_set_None(::Oculus::Platform::LeaderboardFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardFilterType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardFilterType Friends
::Oculus::Platform::LeaderboardFilterType Oculus::Platform::LeaderboardFilterType::_get_Friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_get_Friends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardFilterType>("Oculus.Platform", "LeaderboardFilterType", "Friends"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardFilterType Friends
void Oculus::Platform::LeaderboardFilterType::_set_Friends(::Oculus::Platform::LeaderboardFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_set_Friends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardFilterType", "Friends", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardFilterType Unknown
::Oculus::Platform::LeaderboardFilterType Oculus::Platform::LeaderboardFilterType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardFilterType>("Oculus.Platform", "LeaderboardFilterType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardFilterType Unknown
void Oculus::Platform::LeaderboardFilterType::_set_Unknown(::Oculus::Platform::LeaderboardFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardFilterType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardFilterType UserIds
::Oculus::Platform::LeaderboardFilterType Oculus::Platform::LeaderboardFilterType::_get_UserIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_get_UserIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardFilterType>("Oculus.Platform", "LeaderboardFilterType", "UserIds"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardFilterType UserIds
void Oculus::Platform::LeaderboardFilterType::_set_UserIds(::Oculus::Platform::LeaderboardFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_set_UserIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardFilterType", "UserIds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::LeaderboardFilterType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LeaderboardStartAt
#include "Oculus/Platform/LeaderboardStartAt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardStartAt Top
::Oculus::Platform::LeaderboardStartAt Oculus::Platform::LeaderboardStartAt::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardStartAt>("Oculus.Platform", "LeaderboardStartAt", "Top"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardStartAt Top
void Oculus::Platform::LeaderboardStartAt::_set_Top(::Oculus::Platform::LeaderboardStartAt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardStartAt", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardStartAt CenteredOnViewer
::Oculus::Platform::LeaderboardStartAt Oculus::Platform::LeaderboardStartAt::_get_CenteredOnViewer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_get_CenteredOnViewer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardStartAt>("Oculus.Platform", "LeaderboardStartAt", "CenteredOnViewer"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardStartAt CenteredOnViewer
void Oculus::Platform::LeaderboardStartAt::_set_CenteredOnViewer(::Oculus::Platform::LeaderboardStartAt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_set_CenteredOnViewer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardStartAt", "CenteredOnViewer", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardStartAt CenteredOnViewerOrTop
::Oculus::Platform::LeaderboardStartAt Oculus::Platform::LeaderboardStartAt::_get_CenteredOnViewerOrTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_get_CenteredOnViewerOrTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardStartAt>("Oculus.Platform", "LeaderboardStartAt", "CenteredOnViewerOrTop"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardStartAt CenteredOnViewerOrTop
void Oculus::Platform::LeaderboardStartAt::_set_CenteredOnViewerOrTop(::Oculus::Platform::LeaderboardStartAt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_set_CenteredOnViewerOrTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardStartAt", "CenteredOnViewerOrTop", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardStartAt Unknown
::Oculus::Platform::LeaderboardStartAt Oculus::Platform::LeaderboardStartAt::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardStartAt>("Oculus.Platform", "LeaderboardStartAt", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardStartAt Unknown
void Oculus::Platform::LeaderboardStartAt::_set_Unknown(::Oculus::Platform::LeaderboardStartAt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardStartAt", "Unknown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::LeaderboardStartAt::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LivestreamingAudience
#include "Oculus/Platform/LivestreamingAudience.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingAudience Unknown
::Oculus::Platform::LivestreamingAudience Oculus::Platform::LivestreamingAudience::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingAudience>("Oculus.Platform", "LivestreamingAudience", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingAudience Unknown
void Oculus::Platform::LivestreamingAudience::_set_Unknown(::Oculus::Platform::LivestreamingAudience value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingAudience", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingAudience Public
::Oculus::Platform::LivestreamingAudience Oculus::Platform::LivestreamingAudience::_get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_get_Public");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingAudience>("Oculus.Platform", "LivestreamingAudience", "Public"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingAudience Public
void Oculus::Platform::LivestreamingAudience::_set_Public(::Oculus::Platform::LivestreamingAudience value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_set_Public");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingAudience", "Public", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingAudience Friends
::Oculus::Platform::LivestreamingAudience Oculus::Platform::LivestreamingAudience::_get_Friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_get_Friends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingAudience>("Oculus.Platform", "LivestreamingAudience", "Friends"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingAudience Friends
void Oculus::Platform::LivestreamingAudience::_set_Friends(::Oculus::Platform::LivestreamingAudience value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_set_Friends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingAudience", "Friends", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingAudience OnlyMe
::Oculus::Platform::LivestreamingAudience Oculus::Platform::LivestreamingAudience::_get_OnlyMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_get_OnlyMe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingAudience>("Oculus.Platform", "LivestreamingAudience", "OnlyMe"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingAudience OnlyMe
void Oculus::Platform::LivestreamingAudience::_set_OnlyMe(::Oculus::Platform::LivestreamingAudience value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_set_OnlyMe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingAudience", "OnlyMe", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::LivestreamingAudience::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LivestreamingMicrophoneStatus
#include "Oculus/Platform/LivestreamingMicrophoneStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingMicrophoneStatus Unknown
::Oculus::Platform::LivestreamingMicrophoneStatus Oculus::Platform::LivestreamingMicrophoneStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingMicrophoneStatus>("Oculus.Platform", "LivestreamingMicrophoneStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingMicrophoneStatus Unknown
void Oculus::Platform::LivestreamingMicrophoneStatus::_set_Unknown(::Oculus::Platform::LivestreamingMicrophoneStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingMicrophoneStatus", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingMicrophoneStatus MicrophoneOn
::Oculus::Platform::LivestreamingMicrophoneStatus Oculus::Platform::LivestreamingMicrophoneStatus::_get_MicrophoneOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::_get_MicrophoneOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingMicrophoneStatus>("Oculus.Platform", "LivestreamingMicrophoneStatus", "MicrophoneOn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingMicrophoneStatus MicrophoneOn
void Oculus::Platform::LivestreamingMicrophoneStatus::_set_MicrophoneOn(::Oculus::Platform::LivestreamingMicrophoneStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::_set_MicrophoneOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingMicrophoneStatus", "MicrophoneOn", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingMicrophoneStatus MicrophoneOff
::Oculus::Platform::LivestreamingMicrophoneStatus Oculus::Platform::LivestreamingMicrophoneStatus::_get_MicrophoneOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::_get_MicrophoneOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingMicrophoneStatus>("Oculus.Platform", "LivestreamingMicrophoneStatus", "MicrophoneOff"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingMicrophoneStatus MicrophoneOff
void Oculus::Platform::LivestreamingMicrophoneStatus::_set_MicrophoneOff(::Oculus::Platform::LivestreamingMicrophoneStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::_set_MicrophoneOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingMicrophoneStatus", "MicrophoneOff", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::LivestreamingMicrophoneStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LivestreamingStartStatus
#include "Oculus/Platform/LivestreamingStartStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus Success
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "Success"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus Success
void Oculus::Platform::LivestreamingStartStatus::_set_Success(::Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus Unknown
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus Unknown
void Oculus::Platform::LivestreamingStartStatus::_set_Unknown(::Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus NoPackageSet
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_NoPackageSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_get_NoPackageSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "NoPackageSet"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus NoPackageSet
void Oculus::Platform::LivestreamingStartStatus::_set_NoPackageSet(::Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_set_NoPackageSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "NoPackageSet", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus NoFbConnect
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_NoFbConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_get_NoFbConnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "NoFbConnect"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus NoFbConnect
void Oculus::Platform::LivestreamingStartStatus::_set_NoFbConnect(::Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_set_NoFbConnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "NoFbConnect", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus NoSessionId
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_NoSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_get_NoSessionId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "NoSessionId"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus NoSessionId
void Oculus::Platform::LivestreamingStartStatus::_set_NoSessionId(::Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_set_NoSessionId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "NoSessionId", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus MissingParameters
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_MissingParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_get_MissingParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "MissingParameters"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus MissingParameters
void Oculus::Platform::LivestreamingStartStatus::_set_MissingParameters(::Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_set_MissingParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "MissingParameters", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::LivestreamingStartStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LogEventName
#include "Oculus/Platform/LogEventName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName Unknown
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName Unknown
void Oculus::Platform::LogEventName::_set_Unknown(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName AdClick
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_AdClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_AdClick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "AdClick"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName AdClick
void Oculus::Platform::LogEventName::_set_AdClick(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_AdClick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "AdClick", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName AdImpression
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_AdImpression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_AdImpression");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "AdImpression"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName AdImpression
void Oculus::Platform::LogEventName::_set_AdImpression(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_AdImpression");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "AdImpression", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrCompleteRegistration
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrCompleteRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrCompleteRegistration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrCompleteRegistration"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrCompleteRegistration
void Oculus::Platform::LogEventName::_set_VrCompleteRegistration(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrCompleteRegistration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrCompleteRegistration", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrTutorialCompletion
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrTutorialCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrTutorialCompletion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrTutorialCompletion"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrTutorialCompletion
void Oculus::Platform::LogEventName::_set_VrTutorialCompletion(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrTutorialCompletion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrTutorialCompletion", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName Contact
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_Contact() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_Contact");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "Contact"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName Contact
void Oculus::Platform::LogEventName::_set_Contact(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_Contact");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "Contact", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName CustomizeProduct
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_CustomizeProduct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_CustomizeProduct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "CustomizeProduct"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName CustomizeProduct
void Oculus::Platform::LogEventName::_set_CustomizeProduct(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_CustomizeProduct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "CustomizeProduct", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName Donate
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_Donate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_Donate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "Donate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName Donate
void Oculus::Platform::LogEventName::_set_Donate(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_Donate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "Donate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName FindLocation
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_FindLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_FindLocation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "FindLocation"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName FindLocation
void Oculus::Platform::LogEventName::_set_FindLocation(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_FindLocation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "FindLocation", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrRate
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrRate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrRate
void Oculus::Platform::LogEventName::_set_VrRate(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrRate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName Schedule
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_Schedule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_Schedule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "Schedule"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName Schedule
void Oculus::Platform::LogEventName::_set_Schedule(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_Schedule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "Schedule", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrSearch
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrSearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrSearch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrSearch
void Oculus::Platform::LogEventName::_set_VrSearch(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrSearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrSearch", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName SmartTrial
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_SmartTrial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_SmartTrial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "SmartTrial"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName SmartTrial
void Oculus::Platform::LogEventName::_set_SmartTrial(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_SmartTrial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "SmartTrial", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName SubmitApplication
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_SubmitApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_SubmitApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "SubmitApplication"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName SubmitApplication
void Oculus::Platform::LogEventName::_set_SubmitApplication(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_SubmitApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "SubmitApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName Subscribe
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_Subscribe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_Subscribe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "Subscribe"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName Subscribe
void Oculus::Platform::LogEventName::_set_Subscribe(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_Subscribe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "Subscribe", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrContentView
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrContentView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrContentView");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrContentView"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrContentView
void Oculus::Platform::LogEventName::_set_VrContentView(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrContentView");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrContentView", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrSdkInitialize
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrSdkInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrSdkInitialize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrSdkInitialize"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrSdkInitialize
void Oculus::Platform::LogEventName::_set_VrSdkInitialize(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrSdkInitialize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrSdkInitialize", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrSdkBackgroundStatusAvailable
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrSdkBackgroundStatusAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrSdkBackgroundStatusAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrSdkBackgroundStatusAvailable"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrSdkBackgroundStatusAvailable
void Oculus::Platform::LogEventName::_set_VrSdkBackgroundStatusAvailable(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrSdkBackgroundStatusAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrSdkBackgroundStatusAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrSdkBackgroundStatusDenied
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrSdkBackgroundStatusDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrSdkBackgroundStatusDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrSdkBackgroundStatusDenied"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrSdkBackgroundStatusDenied
void Oculus::Platform::LogEventName::_set_VrSdkBackgroundStatusDenied(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrSdkBackgroundStatusDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrSdkBackgroundStatusDenied", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrSdkBackgroundStatusRestricted
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrSdkBackgroundStatusRestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrSdkBackgroundStatusRestricted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrSdkBackgroundStatusRestricted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrSdkBackgroundStatusRestricted
void Oculus::Platform::LogEventName::_set_VrSdkBackgroundStatusRestricted(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrSdkBackgroundStatusRestricted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrSdkBackgroundStatusRestricted", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrAddPaymentInfo
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrAddPaymentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrAddPaymentInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrAddPaymentInfo"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrAddPaymentInfo
void Oculus::Platform::LogEventName::_set_VrAddPaymentInfo(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrAddPaymentInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrAddPaymentInfo", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrAddToCart
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrAddToCart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrAddToCart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrAddToCart"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrAddToCart
void Oculus::Platform::LogEventName::_set_VrAddToCart(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrAddToCart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrAddToCart", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrAddToWishlist
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrAddToWishlist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrAddToWishlist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrAddToWishlist"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrAddToWishlist
void Oculus::Platform::LogEventName::_set_VrAddToWishlist(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrAddToWishlist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrAddToWishlist", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrInitiatedCheckout
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrInitiatedCheckout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrInitiatedCheckout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrInitiatedCheckout"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrInitiatedCheckout
void Oculus::Platform::LogEventName::_set_VrInitiatedCheckout(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrInitiatedCheckout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrInitiatedCheckout", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrPurchase
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrPurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrPurchase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrPurchase"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrPurchase
void Oculus::Platform::LogEventName::_set_VrPurchase(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrPurchase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrPurchase", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrCatalogUpdate
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrCatalogUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrCatalogUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrCatalogUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrCatalogUpdate
void Oculus::Platform::LogEventName::_set_VrCatalogUpdate(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrCatalogUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrCatalogUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrPurchaseFailed
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrPurchaseFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrPurchaseFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrPurchaseFailed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrPurchaseFailed
void Oculus::Platform::LogEventName::_set_VrPurchaseFailed(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrPurchaseFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrPurchaseFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrPurchaseRestored
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrPurchaseRestored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrPurchaseRestored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrPurchaseRestored"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrPurchaseRestored
void Oculus::Platform::LogEventName::_set_VrPurchaseRestored(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrPurchaseRestored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrPurchaseRestored", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName SubscriptionInitiatedCheckout
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_SubscriptionInitiatedCheckout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_SubscriptionInitiatedCheckout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "SubscriptionInitiatedCheckout"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName SubscriptionInitiatedCheckout
void Oculus::Platform::LogEventName::_set_SubscriptionInitiatedCheckout(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_SubscriptionInitiatedCheckout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "SubscriptionInitiatedCheckout", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName SubscriptionFailed
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_SubscriptionFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_SubscriptionFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "SubscriptionFailed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName SubscriptionFailed
void Oculus::Platform::LogEventName::_set_SubscriptionFailed(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_SubscriptionFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "SubscriptionFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName SubscriptionRestore
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_SubscriptionRestore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_SubscriptionRestore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "SubscriptionRestore"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName SubscriptionRestore
void Oculus::Platform::LogEventName::_set_SubscriptionRestore(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_SubscriptionRestore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "SubscriptionRestore", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrLevelAchieved
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrLevelAchieved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrLevelAchieved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrLevelAchieved"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrLevelAchieved
void Oculus::Platform::LogEventName::_set_VrLevelAchieved(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrLevelAchieved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrLevelAchieved", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrAchievementUnlocked
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrAchievementUnlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrAchievementUnlocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrAchievementUnlocked"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrAchievementUnlocked
void Oculus::Platform::LogEventName::_set_VrAchievementUnlocked(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrAchievementUnlocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrAchievementUnlocked", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrSpentCredits
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrSpentCredits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrSpentCredits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrSpentCredits"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrSpentCredits
void Oculus::Platform::LogEventName::_set_VrSpentCredits(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrSpentCredits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrSpentCredits", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrObtainPushToken
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrObtainPushToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrObtainPushToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrObtainPushToken"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrObtainPushToken
void Oculus::Platform::LogEventName::_set_VrObtainPushToken(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrObtainPushToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrObtainPushToken", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrPushOpened
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrPushOpened() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrPushOpened");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrPushOpened"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrPushOpened
void Oculus::Platform::LogEventName::_set_VrPushOpened(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrPushOpened");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrPushOpened", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrActivateApp
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrActivateApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrActivateApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrActivateApp"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrActivateApp
void Oculus::Platform::LogEventName::_set_VrActivateApp(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrActivateApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrActivateApp", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventName VrDeactivateApp
::Oculus::Platform::LogEventName Oculus::Platform::LogEventName::_get_VrDeactivateApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_get_VrDeactivateApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventName>("Oculus.Platform", "LogEventName", "VrDeactivateApp"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventName VrDeactivateApp
void Oculus::Platform::LogEventName::_set_VrDeactivateApp(::Oculus::Platform::LogEventName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::_set_VrDeactivateApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventName", "VrDeactivateApp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::LogEventName::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventName::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LogEventParameter
#include "Oculus/Platform/LogEventParameter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter Unknown
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter Unknown
void Oculus::Platform::LogEventParameter::_set_Unknown(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrCurrency
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrCurrency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrCurrency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrCurrency"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrCurrency
void Oculus::Platform::LogEventParameter::_set_VrCurrency(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrCurrency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrCurrency", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrRegistrationMethod
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrRegistrationMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrRegistrationMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrRegistrationMethod"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrRegistrationMethod
void Oculus::Platform::LogEventParameter::_set_VrRegistrationMethod(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrRegistrationMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrRegistrationMethod", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrContentType
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrContentType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrContentType"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrContentType
void Oculus::Platform::LogEventParameter::_set_VrContentType(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrContentType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrContentType", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrContent
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrContent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrContent
void Oculus::Platform::LogEventParameter::_set_VrContent(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrContent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrContentId
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrContentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrContentId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrContentId"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrContentId
void Oculus::Platform::LogEventParameter::_set_VrContentId(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrContentId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrContentId", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrSearchString
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrSearchString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrSearchString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrSearchString"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrSearchString
void Oculus::Platform::LogEventParameter::_set_VrSearchString(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrSearchString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrSearchString", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrSuccess
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrSuccess"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrSuccess
void Oculus::Platform::LogEventParameter::_set_VrSuccess(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrMaxRatingValue
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrMaxRatingValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrMaxRatingValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrMaxRatingValue"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrMaxRatingValue
void Oculus::Platform::LogEventParameter::_set_VrMaxRatingValue(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrMaxRatingValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrMaxRatingValue", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrPaymentInfoAvailable
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrPaymentInfoAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrPaymentInfoAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrPaymentInfoAvailable"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrPaymentInfoAvailable
void Oculus::Platform::LogEventParameter::_set_VrPaymentInfoAvailable(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrPaymentInfoAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrPaymentInfoAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrNumItems
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrNumItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrNumItems");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrNumItems"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrNumItems
void Oculus::Platform::LogEventParameter::_set_VrNumItems(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrNumItems");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrNumItems", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrLevel
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrLevel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrLevel
void Oculus::Platform::LogEventParameter::_set_VrLevel(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrLevel", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrDescription
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrDescription");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrDescription"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrDescription
void Oculus::Platform::LogEventParameter::_set_VrDescription(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrDescription");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrDescription", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter AdType
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_AdType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_AdType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "AdType"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter AdType
void Oculus::Platform::LogEventParameter::_set_AdType(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_AdType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "AdType", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrOrderId
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrOrderId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrOrderId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrOrderId"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrOrderId
void Oculus::Platform::LogEventParameter::_set_VrOrderId(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrOrderId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrOrderId", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter EventName
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_EventName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_EventName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "EventName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter EventName
void Oculus::Platform::LogEventParameter::_set_EventName(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_EventName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "EventName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter LogTime
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_LogTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_LogTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "LogTime"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter LogTime
void Oculus::Platform::LogEventParameter::_set_LogTime(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_LogTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "LogTime", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter ImplicitlyLogged
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_ImplicitlyLogged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_ImplicitlyLogged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "ImplicitlyLogged"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter ImplicitlyLogged
void Oculus::Platform::LogEventParameter::_set_ImplicitlyLogged(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_ImplicitlyLogged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "ImplicitlyLogged", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter InBackground
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_InBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_InBackground");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "InBackground"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter InBackground
void Oculus::Platform::LogEventParameter::_set_InBackground(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_InBackground");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "InBackground", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrPushCampaign
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrPushCampaign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrPushCampaign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrPushCampaign"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrPushCampaign
void Oculus::Platform::LogEventParameter::_set_VrPushCampaign(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrPushCampaign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrPushCampaign", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrPushAction
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrPushAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrPushAction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrPushAction"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrPushAction
void Oculus::Platform::LogEventParameter::_set_VrPushAction(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrPushAction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrPushAction", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrIapProductType
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrIapProductType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrIapProductType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrIapProductType"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrIapProductType
void Oculus::Platform::LogEventParameter::_set_VrIapProductType(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrIapProductType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrIapProductType", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrContentTitle
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrContentTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrContentTitle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrContentTitle"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrContentTitle
void Oculus::Platform::LogEventParameter::_set_VrContentTitle(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrContentTitle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrContentTitle", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrTransactionId
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrTransactionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrTransactionId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrTransactionId"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrTransactionId
void Oculus::Platform::LogEventParameter::_set_VrTransactionId(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrTransactionId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrTransactionId", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrTransactionDate
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrTransactionDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrTransactionDate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrTransactionDate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrTransactionDate
void Oculus::Platform::LogEventParameter::_set_VrTransactionDate(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrTransactionDate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrTransactionDate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrIapSubsPeriod
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrIapSubsPeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrIapSubsPeriod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrIapSubsPeriod"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrIapSubsPeriod
void Oculus::Platform::LogEventParameter::_set_VrIapSubsPeriod(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrIapSubsPeriod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrIapSubsPeriod", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrIapIsStartTrial
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrIapIsStartTrial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrIapIsStartTrial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrIapIsStartTrial"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrIapIsStartTrial
void Oculus::Platform::LogEventParameter::_set_VrIapIsStartTrial(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrIapIsStartTrial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrIapIsStartTrial", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrIapHasFreeTrial
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrIapHasFreeTrial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrIapHasFreeTrial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrIapHasFreeTrial"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrIapHasFreeTrial
void Oculus::Platform::LogEventParameter::_set_VrIapHasFreeTrial(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrIapHasFreeTrial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrIapHasFreeTrial", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrIapTrialPeriod
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrIapTrialPeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrIapTrialPeriod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrIapTrialPeriod"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrIapTrialPeriod
void Oculus::Platform::LogEventParameter::_set_VrIapTrialPeriod(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrIapTrialPeriod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrIapTrialPeriod", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter VrIapTrialPrice
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_VrIapTrialPrice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_VrIapTrialPrice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "VrIapTrialPrice"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter VrIapTrialPrice
void Oculus::Platform::LogEventParameter::_set_VrIapTrialPrice(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_VrIapTrialPrice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "VrIapTrialPrice", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LogEventParameter SessionId
::Oculus::Platform::LogEventParameter Oculus::Platform::LogEventParameter::_get_SessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_get_SessionId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LogEventParameter>("Oculus.Platform", "LogEventParameter", "SessionId"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LogEventParameter SessionId
void Oculus::Platform::LogEventParameter::_set_SessionId(::Oculus::Platform::LogEventParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::_set_SessionId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LogEventParameter", "SessionId", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::LogEventParameter::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LogEventParameter::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MediaContentType
#include "Oculus/Platform/MediaContentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MediaContentType Unknown
::Oculus::Platform::MediaContentType Oculus::Platform::MediaContentType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MediaContentType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MediaContentType>("Oculus.Platform", "MediaContentType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MediaContentType Unknown
void Oculus::Platform::MediaContentType::_set_Unknown(::Oculus::Platform::MediaContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MediaContentType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MediaContentType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MediaContentType Photo
::Oculus::Platform::MediaContentType Oculus::Platform::MediaContentType::_get_Photo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MediaContentType::_get_Photo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MediaContentType>("Oculus.Platform", "MediaContentType", "Photo"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MediaContentType Photo
void Oculus::Platform::MediaContentType::_set_Photo(::Oculus::Platform::MediaContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MediaContentType::_set_Photo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MediaContentType", "Photo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::MediaContentType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MediaContentType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Message/Callback
#include "Oculus/Platform/Message_Callback.hpp"
// Including type: Oculus.Platform.Models.Error
#include "Oculus/Platform/Models/Error.hpp"
// Including type: Oculus.Platform.Message/ExtraMessageTypesHandler
#include "Oculus/Platform/Message_ExtraMessageTypesHandler.hpp"
// Including type: Oculus.Platform.Models.HttpTransferUpdate
#include "Oculus/Platform/Models/HttpTransferUpdate.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
// Including type: Oculus.Platform.Models.AbuseReportRecording
#include "Oculus/Platform/Models/AbuseReportRecording.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
// Including type: Oculus.Platform.Models.AppDownloadProgressResult
#include "Oculus/Platform/Models/AppDownloadProgressResult.hpp"
// Including type: Oculus.Platform.Models.AppDownloadResult
#include "Oculus/Platform/Models/AppDownloadResult.hpp"
// Including type: Oculus.Platform.Models.ApplicationInviteList
#include "Oculus/Platform/Models/ApplicationInviteList.hpp"
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
// Including type: Oculus.Platform.Models.AssetFileDeleteResult
#include "Oculus/Platform/Models/AssetFileDeleteResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadCancelResult
#include "Oculus/Platform/Models/AssetFileDownloadCancelResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadUpdate
#include "Oculus/Platform/Models/AssetFileDownloadUpdate.hpp"
// Including type: Oculus.Platform.Models.AvatarEditorResult
#include "Oculus/Platform/Models/AvatarEditorResult.hpp"
// Including type: Oculus.Platform.Models.BlockedUserList
#include "Oculus/Platform/Models/BlockedUserList.hpp"
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
// Including type: Oculus.Platform.Models.ChallengeEntryList
#include "Oculus/Platform/Models/ChallengeEntryList.hpp"
// Including type: Oculus.Platform.Models.ChallengeList
#include "Oculus/Platform/Models/ChallengeList.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceJoinIntent
#include "Oculus/Platform/Models/GroupPresenceJoinIntent.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceLeaveIntent
#include "Oculus/Platform/Models/GroupPresenceLeaveIntent.hpp"
// Including type: Oculus.Platform.Models.InstalledApplicationList
#include "Oculus/Platform/Models/InstalledApplicationList.hpp"
// Including type: Oculus.Platform.Models.InvitePanelResultInfo
#include "Oculus/Platform/Models/InvitePanelResultInfo.hpp"
// Including type: Oculus.Platform.Models.LaunchBlockFlowResult
#include "Oculus/Platform/Models/LaunchBlockFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchFriendRequestFlowResult
#include "Oculus/Platform/Models/LaunchFriendRequestFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchInvitePanelFlowResult
#include "Oculus/Platform/Models/LaunchInvitePanelFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchReportFlowResult
#include "Oculus/Platform/Models/LaunchReportFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchUnblockFlowResult
#include "Oculus/Platform/Models/LaunchUnblockFlowResult.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.LeaderboardList
#include "Oculus/Platform/Models/LeaderboardList.hpp"
// Including type: Oculus.Platform.Models.LinkedAccountList
#include "Oculus/Platform/Models/LinkedAccountList.hpp"
// Including type: Oculus.Platform.Models.LivestreamingApplicationStatus
#include "Oculus/Platform/Models/LivestreamingApplicationStatus.hpp"
// Including type: Oculus.Platform.Models.LivestreamingStartResult
#include "Oculus/Platform/Models/LivestreamingStartResult.hpp"
// Including type: Oculus.Platform.Models.LivestreamingStatus
#include "Oculus/Platform/Models/LivestreamingStatus.hpp"
// Including type: Oculus.Platform.Models.LivestreamingVideoStats
#include "Oculus/Platform/Models/LivestreamingVideoStats.hpp"
// Including type: Oculus.Platform.Models.MicrophoneAvailabilityState
#include "Oculus/Platform/Models/MicrophoneAvailabilityState.hpp"
// Including type: Oculus.Platform.Models.NetSyncConnection
#include "Oculus/Platform/Models/NetSyncConnection.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionsChangedNotification
#include "Oculus/Platform/Models/NetSyncSessionsChangedNotification.hpp"
// Including type: Oculus.Platform.Models.NetSyncSetSessionPropertyResult
#include "Oculus/Platform/Models/NetSyncSetSessionPropertyResult.hpp"
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValueList
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValueList.hpp"
// Including type: Oculus.Platform.Models.OrgScopedID
#include "Oculus/Platform/Models/OrgScopedID.hpp"
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
// Including type: Oculus.Platform.Models.PartyID
#include "Oculus/Platform/Models/PartyID.hpp"
// Including type: Oculus.Platform.Models.PartyUpdateNotification
#include "Oculus/Platform/Models/PartyUpdateNotification.hpp"
// Including type: Oculus.Platform.Models.PidList
#include "Oculus/Platform/Models/PidList.hpp"
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.RejoinDialogResult
#include "Oculus/Platform/Models/RejoinDialogResult.hpp"
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
// Including type: Oculus.Platform.Models.SendInvitesResult
#include "Oculus/Platform/Models/SendInvitesResult.hpp"
// Including type: Oculus.Platform.Models.ShareMediaResult
#include "Oculus/Platform/Models/ShareMediaResult.hpp"
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.UserAccountAgeCategory
#include "Oculus/Platform/Models/UserAccountAgeCategory.hpp"
// Including type: Oculus.Platform.Models.UserCapabilityList
#include "Oculus/Platform/Models/UserCapabilityList.hpp"
// Including type: Oculus.Platform.Models.UserDataStoreUpdateResponse
#include "Oculus/Platform/Models/UserDataStoreUpdateResponse.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
// Including type: Oculus.Platform.Models.UserReportID
#include "Oculus/Platform/Models/UserReportID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Oculus.Platform.Message/ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField
::Oculus::Platform::Message::ExtraMessageTypesHandler* Oculus::Platform::Message::_get_$HandleExtraMessageTypes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::_get_$HandleExtraMessageTypes$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::ExtraMessageTypesHandler*>("Oculus.Platform", "Message", "<HandleExtraMessageTypes>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Platform.Message/ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField
void Oculus::Platform::Message::_set_$HandleExtraMessageTypes$k__BackingField(::Oculus::Platform::Message::ExtraMessageTypesHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::_set_$HandleExtraMessageTypes$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message", "<HandleExtraMessageTypes>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Message/MessageType type
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Message::MessageType& Oculus::Platform::Message::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Message::MessageType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 requestID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Message::dyn_requestID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::dyn_requestID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Models.Error error
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Error*& Oculus::Platform::Message::dyn_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::dyn_error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "error"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Error**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Message.get_Type
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message::MessageType, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.get_IsError
bool Oculus::Platform::Message::get_IsError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::get_IsError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.get_RequestID
uint64_t Oculus::Platform::Message::get_RequestID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::get_RequestID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetError
::Oculus::Platform::Models::Error* Oculus::Platform::Message::GetError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Error*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetHttpTransferUpdate
::Oculus::Platform::Models::HttpTransferUpdate* Oculus::Platform::Message::GetHttpTransferUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetHttpTransferUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::HttpTransferUpdate*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPlatformInitialize
::Oculus::Platform::Models::PlatformInitialize* Oculus::Platform::Message::GetPlatformInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPlatformInitialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PlatformInitialize*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAbuseReportRecording
::Oculus::Platform::Models::AbuseReportRecording* Oculus::Platform::Message::GetAbuseReportRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAbuseReportRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AbuseReportRecording*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAchievementDefinitions
::Oculus::Platform::Models::AchievementDefinitionList* Oculus::Platform::Message::GetAchievementDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAchievementDefinitions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementDefinitionList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAchievementProgressList
::Oculus::Platform::Models::AchievementProgressList* Oculus::Platform::Message::GetAchievementProgressList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAchievementProgressList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementProgressList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAchievementUpdate
::Oculus::Platform::Models::AchievementUpdate* Oculus::Platform::Message::GetAchievementUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAchievementUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementUpdate*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAppDownloadProgressResult
::Oculus::Platform::Models::AppDownloadProgressResult* Oculus::Platform::Message::GetAppDownloadProgressResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAppDownloadProgressResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AppDownloadProgressResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAppDownloadResult
::Oculus::Platform::Models::AppDownloadResult* Oculus::Platform::Message::GetAppDownloadResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAppDownloadResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AppDownloadResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetApplicationInviteList
::Oculus::Platform::Models::ApplicationInviteList* Oculus::Platform::Message::GetApplicationInviteList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetApplicationInviteList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ApplicationInviteList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetApplicationVersion
::Oculus::Platform::Models::ApplicationVersion* Oculus::Platform::Message::GetApplicationVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetApplicationVersion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ApplicationVersion*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetDetails
::Oculus::Platform::Models::AssetDetails* Oculus::Platform::Message::GetAssetDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAssetDetails");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetDetails*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetDetailsList
::Oculus::Platform::Models::AssetDetailsList* Oculus::Platform::Message::GetAssetDetailsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAssetDetailsList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetDetailsList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetFileDeleteResult
::Oculus::Platform::Models::AssetFileDeleteResult* Oculus::Platform::Message::GetAssetFileDeleteResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAssetFileDeleteResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDeleteResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetFileDownloadCancelResult
::Oculus::Platform::Models::AssetFileDownloadCancelResult* Oculus::Platform::Message::GetAssetFileDownloadCancelResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAssetFileDownloadCancelResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadCancelResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetFileDownloadResult
::Oculus::Platform::Models::AssetFileDownloadResult* Oculus::Platform::Message::GetAssetFileDownloadResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAssetFileDownloadResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetFileDownloadUpdate
::Oculus::Platform::Models::AssetFileDownloadUpdate* Oculus::Platform::Message::GetAssetFileDownloadUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAssetFileDownloadUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadUpdate*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAvatarEditorResult
::Oculus::Platform::Models::AvatarEditorResult* Oculus::Platform::Message::GetAvatarEditorResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAvatarEditorResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AvatarEditorResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetBlockedUserList
::Oculus::Platform::Models::BlockedUserList* Oculus::Platform::Message::GetBlockedUserList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetBlockedUserList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::BlockedUserList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetChallenge
::Oculus::Platform::Models::Challenge* Oculus::Platform::Message::GetChallenge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetChallenge");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Challenge*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetChallengeEntryList
::Oculus::Platform::Models::ChallengeEntryList* Oculus::Platform::Message::GetChallengeEntryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetChallengeEntryList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ChallengeEntryList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetChallengeList
::Oculus::Platform::Models::ChallengeList* Oculus::Platform::Message::GetChallengeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetChallengeList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ChallengeList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetDataStore
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Oculus::Platform::Message::GetDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetDataStore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetDestinationList
::Oculus::Platform::Models::DestinationList* Oculus::Platform::Message::GetDestinationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetDestinationList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::DestinationList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetGroupPresenceJoinIntent
::Oculus::Platform::Models::GroupPresenceJoinIntent* Oculus::Platform::Message::GetGroupPresenceJoinIntent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetGroupPresenceJoinIntent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::GroupPresenceJoinIntent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetGroupPresenceLeaveIntent
::Oculus::Platform::Models::GroupPresenceLeaveIntent* Oculus::Platform::Message::GetGroupPresenceLeaveIntent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetGroupPresenceLeaveIntent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::GroupPresenceLeaveIntent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetInstalledApplicationList
::Oculus::Platform::Models::InstalledApplicationList* Oculus::Platform::Message::GetInstalledApplicationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetInstalledApplicationList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::InstalledApplicationList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetInvitePanelResultInfo
::Oculus::Platform::Models::InvitePanelResultInfo* Oculus::Platform::Message::GetInvitePanelResultInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetInvitePanelResultInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::InvitePanelResultInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchBlockFlowResult
::Oculus::Platform::Models::LaunchBlockFlowResult* Oculus::Platform::Message::GetLaunchBlockFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLaunchBlockFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchBlockFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchFriendRequestFlowResult
::Oculus::Platform::Models::LaunchFriendRequestFlowResult* Oculus::Platform::Message::GetLaunchFriendRequestFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLaunchFriendRequestFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchFriendRequestFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchInvitePanelFlowResult
::Oculus::Platform::Models::LaunchInvitePanelFlowResult* Oculus::Platform::Message::GetLaunchInvitePanelFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLaunchInvitePanelFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchInvitePanelFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchReportFlowResult
::Oculus::Platform::Models::LaunchReportFlowResult* Oculus::Platform::Message::GetLaunchReportFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLaunchReportFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchReportFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchUnblockFlowResult
::Oculus::Platform::Models::LaunchUnblockFlowResult* Oculus::Platform::Message::GetLaunchUnblockFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLaunchUnblockFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchUnblockFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLeaderboardDidUpdate
bool Oculus::Platform::Message::GetLeaderboardDidUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLeaderboardDidUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 37));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLeaderboardEntryList
::Oculus::Platform::Models::LeaderboardEntryList* Oculus::Platform::Message::GetLeaderboardEntryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLeaderboardEntryList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LeaderboardEntryList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLeaderboardList
::Oculus::Platform::Models::LeaderboardList* Oculus::Platform::Message::GetLeaderboardList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLeaderboardList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LeaderboardList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLinkedAccountList
::Oculus::Platform::Models::LinkedAccountList* Oculus::Platform::Message::GetLinkedAccountList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLinkedAccountList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LinkedAccountList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLivestreamingApplicationStatus
::Oculus::Platform::Models::LivestreamingApplicationStatus* Oculus::Platform::Message::GetLivestreamingApplicationStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLivestreamingApplicationStatus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 41));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingApplicationStatus*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLivestreamingStartResult
::Oculus::Platform::Models::LivestreamingStartResult* Oculus::Platform::Message::GetLivestreamingStartResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLivestreamingStartResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 42));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingStartResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLivestreamingStatus
::Oculus::Platform::Models::LivestreamingStatus* Oculus::Platform::Message::GetLivestreamingStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLivestreamingStatus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 43));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingStatus*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLivestreamingVideoStats
::Oculus::Platform::Models::LivestreamingVideoStats* Oculus::Platform::Message::GetLivestreamingVideoStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLivestreamingVideoStats");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 44));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingVideoStats*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetMicrophoneAvailabilityState
::Oculus::Platform::Models::MicrophoneAvailabilityState* Oculus::Platform::Message::GetMicrophoneAvailabilityState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetMicrophoneAvailabilityState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MicrophoneAvailabilityState*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncConnection
::Oculus::Platform::Models::NetSyncConnection* Oculus::Platform::Message::GetNetSyncConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetNetSyncConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncConnection*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncSessionList
::Oculus::Platform::Models::NetSyncSessionList* Oculus::Platform::Message::GetNetSyncSessionList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetNetSyncSessionList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncSessionList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncSessionsChangedNotification
::Oculus::Platform::Models::NetSyncSessionsChangedNotification* Oculus::Platform::Message::GetNetSyncSessionsChangedNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetNetSyncSessionsChangedNotification");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 48));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncSessionsChangedNotification*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncSetSessionPropertyResult
::Oculus::Platform::Models::NetSyncSetSessionPropertyResult* Oculus::Platform::Message::GetNetSyncSetSessionPropertyResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetNetSyncSetSessionPropertyResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 49));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncSetSessionPropertyResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncVoipAttenuationValueList
::Oculus::Platform::Models::NetSyncVoipAttenuationValueList* Oculus::Platform::Message::GetNetSyncVoipAttenuationValueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetNetSyncVoipAttenuationValueList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 50));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncVoipAttenuationValueList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetOrgScopedID
::Oculus::Platform::Models::OrgScopedID* Oculus::Platform::Message::GetOrgScopedID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetOrgScopedID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 51));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::OrgScopedID*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetParty
::Oculus::Platform::Models::Party* Oculus::Platform::Message::GetParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetParty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Party*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPartyID
::Oculus::Platform::Models::PartyID* Oculus::Platform::Message::GetPartyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPartyID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 53));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PartyID*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPartyUpdateNotification
::Oculus::Platform::Models::PartyUpdateNotification* Oculus::Platform::Message::GetPartyUpdateNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPartyUpdateNotification");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 54));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PartyUpdateNotification*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPidList
::Oculus::Platform::Models::PidList* Oculus::Platform::Message::GetPidList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPidList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 55));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PidList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetProductList
::Oculus::Platform::Models::ProductList* Oculus::Platform::Message::GetProductList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetProductList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 56));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ProductList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPurchase
::Oculus::Platform::Models::Purchase* Oculus::Platform::Message::GetPurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPurchase");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 57));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Purchase*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPurchaseList
::Oculus::Platform::Models::PurchaseList* Oculus::Platform::Message::GetPurchaseList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPurchaseList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 58));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PurchaseList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetRejoinDialogResult
::Oculus::Platform::Models::RejoinDialogResult* Oculus::Platform::Message::GetRejoinDialogResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetRejoinDialogResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::RejoinDialogResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetSdkAccountList
::Oculus::Platform::Models::SdkAccountList* Oculus::Platform::Message::GetSdkAccountList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetSdkAccountList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 60));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::SdkAccountList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetSendInvitesResult
::Oculus::Platform::Models::SendInvitesResult* Oculus::Platform::Message::GetSendInvitesResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetSendInvitesResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::SendInvitesResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetShareMediaResult
::Oculus::Platform::Models::ShareMediaResult* Oculus::Platform::Message::GetShareMediaResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetShareMediaResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 62));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ShareMediaResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetString
::StringW Oculus::Platform::Message::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 63));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetSystemVoipState
::Oculus::Platform::Models::SystemVoipState* Oculus::Platform::Message::GetSystemVoipState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetSystemVoipState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 64));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::SystemVoipState*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUser
::Oculus::Platform::Models::User* Oculus::Platform::Message::GetUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetUser");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 65));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::User*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserAccountAgeCategory
::Oculus::Platform::Models::UserAccountAgeCategory* Oculus::Platform::Message::GetUserAccountAgeCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetUserAccountAgeCategory");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 66));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserAccountAgeCategory*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserCapabilityList
::Oculus::Platform::Models::UserCapabilityList* Oculus::Platform::Message::GetUserCapabilityList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetUserCapabilityList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 67));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserCapabilityList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserDataStoreUpdateResponse
::Oculus::Platform::Models::UserDataStoreUpdateResponse* Oculus::Platform::Message::GetUserDataStoreUpdateResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetUserDataStoreUpdateResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 68));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserDataStoreUpdateResponse*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserList
::Oculus::Platform::Models::UserList* Oculus::Platform::Message::GetUserList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetUserList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 69));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserProof
::Oculus::Platform::Models::UserProof* Oculus::Platform::Message::GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetUserProof");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 70));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserProof*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserReportID
::Oculus::Platform::Models::UserReportID* Oculus::Platform::Message::GetUserReportID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetUserReportID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 71));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserReportID*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.ParseMessageHandle
::Oculus::Platform::Message* Oculus::Platform::Message::ParseMessageHandle(::System::IntPtr messageHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::ParseMessageHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Message", "ParseMessageHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, messageHandle);
}
// Autogenerated method: Oculus.Platform.Message.PopMessage
::Oculus::Platform::Message* Oculus::Platform::Message::PopMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::PopMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Message", "PopMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.set_HandleExtraMessageTypes
void Oculus::Platform::Message::set_HandleExtraMessageTypes(::Oculus::Platform::Message::ExtraMessageTypesHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::set_HandleExtraMessageTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Message", "set_HandleExtraMessageTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Message.get_HandleExtraMessageTypes
::Oculus::Platform::Message::ExtraMessageTypesHandler* Oculus::Platform::Message::get_HandleExtraMessageTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::get_HandleExtraMessageTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Message", "get_HandleExtraMessageTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message::ExtraMessageTypesHandler*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.Finalize
void Oculus::Platform::Message::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Message/Callback
#include "Oculus/Platform/Message_Callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Message/Callback.Invoke
void Oculus::Platform::Message::Callback::Invoke(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::Callback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message::Callback*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.Message/Callback.BeginInvoke
::System::IAsyncResult* Oculus::Platform::Message::Callback::BeginInvoke(::Oculus::Platform::Message* message, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::Callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message::Callback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, message, callback, object);
}
// Autogenerated method: Oculus.Platform.Message/Callback.EndInvoke
void Oculus::Platform::Message::Callback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::Callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message::Callback*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Message/MessageType
#include "Oculus/Platform/Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Unknown
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Unknown
void Oculus::Platform::Message::MessageType::_set_Unknown(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AbuseReport_ReportRequestHandled
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AbuseReport_ReportRequestHandled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AbuseReport_ReportRequestHandled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AbuseReport_ReportRequestHandled"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AbuseReport_ReportRequestHandled
void Oculus::Platform::Message::MessageType::_set_AbuseReport_ReportRequestHandled(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AbuseReport_ReportRequestHandled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AbuseReport_ReportRequestHandled", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_AddCount
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_AddCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_AddCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_AddCount"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_AddCount
void Oculus::Platform::Message::MessageType::_set_Achievements_AddCount(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_AddCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_AddCount", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_AddFields
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_AddFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_AddFields");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_AddFields"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_AddFields
void Oculus::Platform::Message::MessageType::_set_Achievements_AddFields(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_AddFields");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_AddFields", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_GetAllDefinitions
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetAllDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_GetAllDefinitions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetAllDefinitions"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_GetAllDefinitions
void Oculus::Platform::Message::MessageType::_set_Achievements_GetAllDefinitions(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_GetAllDefinitions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetAllDefinitions", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_GetAllProgress
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetAllProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_GetAllProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetAllProgress"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_GetAllProgress
void Oculus::Platform::Message::MessageType::_set_Achievements_GetAllProgress(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_GetAllProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetAllProgress", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_GetDefinitionsByName
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetDefinitionsByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_GetDefinitionsByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetDefinitionsByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_GetDefinitionsByName
void Oculus::Platform::Message::MessageType::_set_Achievements_GetDefinitionsByName(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_GetDefinitionsByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetDefinitionsByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_GetNextAchievementDefinitionArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementDefinitionArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementDefinitionArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementDefinitionArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_GetNextAchievementDefinitionArrayPage
void Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementDefinitionArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementDefinitionArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementDefinitionArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_GetNextAchievementProgressArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementProgressArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementProgressArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementProgressArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_GetNextAchievementProgressArrayPage
void Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementProgressArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementProgressArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementProgressArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_GetProgressByName
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetProgressByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_GetProgressByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetProgressByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_GetProgressByName
void Oculus::Platform::Message::MessageType::_set_Achievements_GetProgressByName(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_GetProgressByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetProgressByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_Unlock
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_Unlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_Unlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_Unlock"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_Unlock
void Oculus::Platform::Message::MessageType::_set_Achievements_Unlock(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_Unlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_Unlock", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType ApplicationLifecycle_GetRegisteredPIDs
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetRegisteredPIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetRegisteredPIDs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetRegisteredPIDs"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType ApplicationLifecycle_GetRegisteredPIDs
void Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetRegisteredPIDs(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetRegisteredPIDs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetRegisteredPIDs", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType ApplicationLifecycle_GetSessionKey
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetSessionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetSessionKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetSessionKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType ApplicationLifecycle_GetSessionKey
void Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetSessionKey(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetSessionKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetSessionKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType ApplicationLifecycle_RegisterSessionKey
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_RegisterSessionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_RegisterSessionKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_RegisterSessionKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType ApplicationLifecycle_RegisterSessionKey
void Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_RegisterSessionKey(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_RegisterSessionKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_RegisterSessionKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Application_CancelAppDownload
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Application_CancelAppDownload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Application_CancelAppDownload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Application_CancelAppDownload"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Application_CancelAppDownload
void Oculus::Platform::Message::MessageType::_set_Application_CancelAppDownload(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Application_CancelAppDownload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Application_CancelAppDownload", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Application_CheckAppDownloadProgress
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Application_CheckAppDownloadProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Application_CheckAppDownloadProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Application_CheckAppDownloadProgress"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Application_CheckAppDownloadProgress
void Oculus::Platform::Message::MessageType::_set_Application_CheckAppDownloadProgress(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Application_CheckAppDownloadProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Application_CheckAppDownloadProgress", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Application_GetVersion
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Application_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Application_GetVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Application_GetVersion"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Application_GetVersion
void Oculus::Platform::Message::MessageType::_set_Application_GetVersion(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Application_GetVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Application_GetVersion", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Application_InstallAppUpdateAndRelaunch
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Application_InstallAppUpdateAndRelaunch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Application_InstallAppUpdateAndRelaunch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Application_InstallAppUpdateAndRelaunch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Application_InstallAppUpdateAndRelaunch
void Oculus::Platform::Message::MessageType::_set_Application_InstallAppUpdateAndRelaunch(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Application_InstallAppUpdateAndRelaunch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Application_InstallAppUpdateAndRelaunch", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Application_LaunchOtherApp
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Application_LaunchOtherApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Application_LaunchOtherApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Application_LaunchOtherApp"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Application_LaunchOtherApp
void Oculus::Platform::Message::MessageType::_set_Application_LaunchOtherApp(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Application_LaunchOtherApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Application_LaunchOtherApp", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Application_StartAppDownload
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Application_StartAppDownload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Application_StartAppDownload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Application_StartAppDownload"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Application_StartAppDownload
void Oculus::Platform::Message::MessageType::_set_Application_StartAppDownload(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Application_StartAppDownload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Application_StartAppDownload", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_Delete
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_Delete"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_Delete
void Oculus::Platform::Message::MessageType::_set_AssetFile_Delete(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_Delete", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DeleteById
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteById() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DeleteById
void Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteById(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DeleteByName
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DeleteByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteByName(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_Download
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_Download() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_Download");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_Download"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_Download
void Oculus::Platform::Message::MessageType::_set_AssetFile_Download(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_Download");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_Download", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadById
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadById() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadById
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadById(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadByName
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadByName(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadCancel
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadCancel
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancel(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancel", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadCancelById
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelById() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadCancelById
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelById(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadCancelByName
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadCancelByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelByName(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_GetList
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_GetList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_GetList"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_GetList
void Oculus::Platform::Message::MessageType::_set_AssetFile_GetList(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_GetList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_GetList", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_Status
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_Status");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_Status"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_Status
void Oculus::Platform::Message::MessageType::_set_AssetFile_Status(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_Status");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_Status", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_StatusById
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_StatusById() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_StatusById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_StatusById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_StatusById
void Oculus::Platform::Message::MessageType::_set_AssetFile_StatusById(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_StatusById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_StatusById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_StatusByName
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_StatusByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_StatusByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_StatusByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_StatusByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_StatusByName(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_StatusByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_StatusByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Avatar_LaunchAvatarEditor
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Avatar_LaunchAvatarEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Avatar_LaunchAvatarEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Avatar_LaunchAvatarEditor"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Avatar_LaunchAvatarEditor
void Oculus::Platform::Message::MessageType::_set_Avatar_LaunchAvatarEditor(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Avatar_LaunchAvatarEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Avatar_LaunchAvatarEditor", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_Create
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Create"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_Create
void Oculus::Platform::Message::MessageType::_set_Challenges_Create(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Create", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_DeclineInvite
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_DeclineInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_DeclineInvite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_DeclineInvite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_DeclineInvite
void Oculus::Platform::Message::MessageType::_set_Challenges_DeclineInvite(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_DeclineInvite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_DeclineInvite", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_Delete
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Delete"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_Delete
void Oculus::Platform::Message::MessageType::_set_Challenges_Delete(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Delete", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_Get
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_Get
void Oculus::Platform::Message::MessageType::_set_Challenges_Get(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetEntries
void Oculus::Platform::Message::MessageType::_set_Challenges_GetEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetEntriesAfterRank
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesAfterRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesAfterRank");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesAfterRank"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetEntriesAfterRank
void Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesAfterRank(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesAfterRank");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesAfterRank", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetEntriesByIds
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesByIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesByIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesByIds"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetEntriesByIds
void Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesByIds(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesByIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesByIds", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetList
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetList"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetList
void Oculus::Platform::Message::MessageType::_set_Challenges_GetList(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetList", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetNextChallenges
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetNextChallenges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetNextChallenges");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetNextChallenges"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetNextChallenges
void Oculus::Platform::Message::MessageType::_set_Challenges_GetNextChallenges(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetNextChallenges");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetNextChallenges", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetNextEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetNextEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetNextEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetNextEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetNextEntries
void Oculus::Platform::Message::MessageType::_set_Challenges_GetNextEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetNextEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetNextEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetPreviousChallenges
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousChallenges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousChallenges");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousChallenges"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetPreviousChallenges
void Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousChallenges(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousChallenges");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousChallenges", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetPreviousEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetPreviousEntries
void Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_Join
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Join"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_Join
void Oculus::Platform::Message::MessageType::_set_Challenges_Join(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Join", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_Leave
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Leave"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_Leave
void Oculus::Platform::Message::MessageType::_set_Challenges_Leave(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Leave", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_UpdateInfo
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_UpdateInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_UpdateInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_UpdateInfo"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_UpdateInfo
void Oculus::Platform::Message::MessageType::_set_Challenges_UpdateInfo(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_UpdateInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_UpdateInfo", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType DeviceApplicationIntegrity_GetIntegrityToken
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_DeviceApplicationIntegrity_GetIntegrityToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_DeviceApplicationIntegrity_GetIntegrityToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "DeviceApplicationIntegrity_GetIntegrityToken"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType DeviceApplicationIntegrity_GetIntegrityToken
void Oculus::Platform::Message::MessageType::_set_DeviceApplicationIntegrity_GetIntegrityToken(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_DeviceApplicationIntegrity_GetIntegrityToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "DeviceApplicationIntegrity_GetIntegrityToken", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Entitlement_GetIsViewerEntitled
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Entitlement_GetIsViewerEntitled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Entitlement_GetIsViewerEntitled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Entitlement_GetIsViewerEntitled"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Entitlement_GetIsViewerEntitled
void Oculus::Platform::Message::MessageType::_set_Entitlement_GetIsViewerEntitled(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Entitlement_GetIsViewerEntitled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Entitlement_GetIsViewerEntitled", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType GroupPresence_Clear
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_Clear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_Clear"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType GroupPresence_Clear
void Oculus::Platform::Message::MessageType::_set_GroupPresence_Clear(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_Clear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_Clear", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType GroupPresence_GetInvitableUsers
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_GetInvitableUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_GetInvitableUsers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_GetInvitableUsers"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType GroupPresence_GetInvitableUsers
void Oculus::Platform::Message::MessageType::_set_GroupPresence_GetInvitableUsers(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_GetInvitableUsers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_GetInvitableUsers", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType GroupPresence_GetNextApplicationInviteArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_GetNextApplicationInviteArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_GetNextApplicationInviteArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_GetNextApplicationInviteArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType GroupPresence_GetNextApplicationInviteArrayPage
void Oculus::Platform::Message::MessageType::_set_GroupPresence_GetNextApplicationInviteArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_GetNextApplicationInviteArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_GetNextApplicationInviteArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType GroupPresence_GetSentInvites
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_GetSentInvites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_GetSentInvites");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_GetSentInvites"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType GroupPresence_GetSentInvites
void Oculus::Platform::Message::MessageType::_set_GroupPresence_GetSentInvites(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_GetSentInvites");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_GetSentInvites", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType GroupPresence_LaunchInvitePanel
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_LaunchInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_LaunchInvitePanel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_LaunchInvitePanel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType GroupPresence_LaunchInvitePanel
void Oculus::Platform::Message::MessageType::_set_GroupPresence_LaunchInvitePanel(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_LaunchInvitePanel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_LaunchInvitePanel", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType GroupPresence_LaunchMultiplayerErrorDialog
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_LaunchMultiplayerErrorDialog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_LaunchMultiplayerErrorDialog");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_LaunchMultiplayerErrorDialog"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType GroupPresence_LaunchMultiplayerErrorDialog
void Oculus::Platform::Message::MessageType::_set_GroupPresence_LaunchMultiplayerErrorDialog(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_LaunchMultiplayerErrorDialog");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_LaunchMultiplayerErrorDialog", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType GroupPresence_LaunchRejoinDialog
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_LaunchRejoinDialog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_LaunchRejoinDialog");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_LaunchRejoinDialog"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType GroupPresence_LaunchRejoinDialog
void Oculus::Platform::Message::MessageType::_set_GroupPresence_LaunchRejoinDialog(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_LaunchRejoinDialog");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_LaunchRejoinDialog", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType GroupPresence_LaunchRosterPanel
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_LaunchRosterPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_LaunchRosterPanel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_LaunchRosterPanel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType GroupPresence_LaunchRosterPanel
void Oculus::Platform::Message::MessageType::_set_GroupPresence_LaunchRosterPanel(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_LaunchRosterPanel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_LaunchRosterPanel", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType GroupPresence_SendInvites
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_SendInvites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_SendInvites");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_SendInvites"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType GroupPresence_SendInvites
void Oculus::Platform::Message::MessageType::_set_GroupPresence_SendInvites(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_SendInvites");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_SendInvites", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType GroupPresence_Set
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_Set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_Set"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType GroupPresence_Set
void Oculus::Platform::Message::MessageType::_set_GroupPresence_Set(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_Set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_Set", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType GroupPresence_SetDeeplinkMessageOverride
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_SetDeeplinkMessageOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_SetDeeplinkMessageOverride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_SetDeeplinkMessageOverride"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType GroupPresence_SetDeeplinkMessageOverride
void Oculus::Platform::Message::MessageType::_set_GroupPresence_SetDeeplinkMessageOverride(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_SetDeeplinkMessageOverride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_SetDeeplinkMessageOverride", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType GroupPresence_SetDestination
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_SetDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_SetDestination");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_SetDestination"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType GroupPresence_SetDestination
void Oculus::Platform::Message::MessageType::_set_GroupPresence_SetDestination(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_SetDestination");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_SetDestination", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType GroupPresence_SetIsJoinable
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_SetIsJoinable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_SetIsJoinable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_SetIsJoinable"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType GroupPresence_SetIsJoinable
void Oculus::Platform::Message::MessageType::_set_GroupPresence_SetIsJoinable(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_SetIsJoinable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_SetIsJoinable", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType GroupPresence_SetLobbySession
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_SetLobbySession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_SetLobbySession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_SetLobbySession"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType GroupPresence_SetLobbySession
void Oculus::Platform::Message::MessageType::_set_GroupPresence_SetLobbySession(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_SetLobbySession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_SetLobbySession", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType GroupPresence_SetMatchSession
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_SetMatchSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_SetMatchSession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_SetMatchSession"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType GroupPresence_SetMatchSession
void Oculus::Platform::Message::MessageType::_set_GroupPresence_SetMatchSession(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_SetMatchSession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_SetMatchSession", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_ConsumePurchase
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_ConsumePurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_ConsumePurchase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_ConsumePurchase"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_ConsumePurchase
void Oculus::Platform::Message::MessageType::_set_IAP_ConsumePurchase(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_ConsumePurchase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_ConsumePurchase", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_GetNextProductArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetNextProductArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_GetNextProductArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetNextProductArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_GetNextProductArrayPage
void Oculus::Platform::Message::MessageType::_set_IAP_GetNextProductArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_GetNextProductArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetNextProductArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_GetNextPurchaseArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetNextPurchaseArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_GetNextPurchaseArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetNextPurchaseArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_GetNextPurchaseArrayPage
void Oculus::Platform::Message::MessageType::_set_IAP_GetNextPurchaseArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_GetNextPurchaseArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetNextPurchaseArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_GetProductsBySKU
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetProductsBySKU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_GetProductsBySKU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetProductsBySKU"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_GetProductsBySKU
void Oculus::Platform::Message::MessageType::_set_IAP_GetProductsBySKU(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_GetProductsBySKU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetProductsBySKU", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_GetViewerPurchases
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchases");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchases"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_GetViewerPurchases
void Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchases(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchases");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchases", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_GetViewerPurchasesDurableCache
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchasesDurableCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchasesDurableCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchasesDurableCache"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_GetViewerPurchasesDurableCache
void Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchasesDurableCache(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchasesDurableCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchasesDurableCache", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_LaunchCheckoutFlow
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_LaunchCheckoutFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_LaunchCheckoutFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_LaunchCheckoutFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_LaunchCheckoutFlow
void Oculus::Platform::Message::MessageType::_set_IAP_LaunchCheckoutFlow(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_LaunchCheckoutFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_LaunchCheckoutFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType LanguagePack_GetCurrent
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_LanguagePack_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_LanguagePack_GetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "LanguagePack_GetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType LanguagePack_GetCurrent
void Oculus::Platform::Message::MessageType::_set_LanguagePack_GetCurrent(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_LanguagePack_GetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "LanguagePack_GetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType LanguagePack_SetCurrent
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_LanguagePack_SetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_LanguagePack_SetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "LanguagePack_SetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType LanguagePack_SetCurrent
void Oculus::Platform::Message::MessageType::_set_LanguagePack_SetCurrent(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_LanguagePack_SetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "LanguagePack_SetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_Get
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_Get
void Oculus::Platform::Message::MessageType::_set_Leaderboard_Get(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetEntries
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetEntriesAfterRank
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesAfterRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesAfterRank");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesAfterRank"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetEntriesAfterRank
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesAfterRank(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesAfterRank");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesAfterRank", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetEntriesByIds
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesByIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesByIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesByIds"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetEntriesByIds
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesByIds(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesByIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesByIds", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetNextEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetNextEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_GetNextEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetNextEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetNextEntries
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetNextEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_GetNextEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetNextEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetNextLeaderboardArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetNextLeaderboardArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_GetNextLeaderboardArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetNextLeaderboardArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetNextLeaderboardArrayPage
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetNextLeaderboardArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_GetNextLeaderboardArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetNextLeaderboardArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetPreviousEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetPreviousEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_GetPreviousEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetPreviousEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetPreviousEntries
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetPreviousEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_GetPreviousEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetPreviousEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_WriteEntry
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_WriteEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_WriteEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_WriteEntry"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_WriteEntry
void Oculus::Platform::Message::MessageType::_set_Leaderboard_WriteEntry(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_WriteEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_WriteEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_WriteEntryWithSupplementaryMetric
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_WriteEntryWithSupplementaryMetric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_WriteEntryWithSupplementaryMetric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_WriteEntryWithSupplementaryMetric"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_WriteEntryWithSupplementaryMetric
void Oculus::Platform::Message::MessageType::_set_Leaderboard_WriteEntryWithSupplementaryMetric(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_WriteEntryWithSupplementaryMetric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_WriteEntryWithSupplementaryMetric", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Media_ShareToFacebook
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Media_ShareToFacebook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Media_ShareToFacebook");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Media_ShareToFacebook"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Media_ShareToFacebook
void Oculus::Platform::Message::MessageType::_set_Media_ShareToFacebook(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Media_ShareToFacebook");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Media_ShareToFacebook", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_MarkAsRead
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_MarkAsRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_MarkAsRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_MarkAsRead"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_MarkAsRead
void Oculus::Platform::Message::MessageType::_set_Notification_MarkAsRead(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_MarkAsRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_MarkAsRead", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Party_GetCurrent
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Party_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Party_GetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Party_GetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Party_GetCurrent
void Oculus::Platform::Message::MessageType::_set_Party_GetCurrent(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Party_GetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Party_GetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType RichPresence_Clear
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_RichPresence_Clear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_Clear"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType RichPresence_Clear
void Oculus::Platform::Message::MessageType::_set_RichPresence_Clear(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_RichPresence_Clear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_Clear", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType RichPresence_GetDestinations
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_GetDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_RichPresence_GetDestinations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_GetDestinations"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType RichPresence_GetDestinations
void Oculus::Platform::Message::MessageType::_set_RichPresence_GetDestinations(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_RichPresence_GetDestinations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_GetDestinations", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType RichPresence_GetNextDestinationArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_GetNextDestinationArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_RichPresence_GetNextDestinationArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_GetNextDestinationArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType RichPresence_GetNextDestinationArrayPage
void Oculus::Platform::Message::MessageType::_set_RichPresence_GetNextDestinationArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_RichPresence_GetNextDestinationArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_GetNextDestinationArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType RichPresence_Set
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_RichPresence_Set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_Set"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType RichPresence_Set
void Oculus::Platform::Message::MessageType::_set_RichPresence_Set(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_RichPresence_Set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_Set", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType UserAgeCategory_Get
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserAgeCategory_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_UserAgeCategory_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserAgeCategory_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType UserAgeCategory_Get
void Oculus::Platform::Message::MessageType::_set_UserAgeCategory_Get(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_UserAgeCategory_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserAgeCategory_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType UserAgeCategory_Report
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserAgeCategory_Report() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_UserAgeCategory_Report");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserAgeCategory_Report"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType UserAgeCategory_Report
void Oculus::Platform::Message::MessageType::_set_UserAgeCategory_Report(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_UserAgeCategory_Report");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserAgeCategory_Report", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType UserDataStore_PrivateDeleteEntryByKey
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateDeleteEntryByKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateDeleteEntryByKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateDeleteEntryByKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType UserDataStore_PrivateDeleteEntryByKey
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateDeleteEntryByKey(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateDeleteEntryByKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateDeleteEntryByKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType UserDataStore_PrivateGetEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateGetEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateGetEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateGetEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType UserDataStore_PrivateGetEntries
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateGetEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateGetEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateGetEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType UserDataStore_PrivateGetEntryByKey
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateGetEntryByKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateGetEntryByKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateGetEntryByKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType UserDataStore_PrivateGetEntryByKey
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateGetEntryByKey(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateGetEntryByKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateGetEntryByKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType UserDataStore_PrivateWriteEntry
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateWriteEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateWriteEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateWriteEntry"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType UserDataStore_PrivateWriteEntry
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateWriteEntry(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateWriteEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateWriteEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType UserDataStore_PublicDeleteEntryByKey
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicDeleteEntryByKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicDeleteEntryByKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicDeleteEntryByKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType UserDataStore_PublicDeleteEntryByKey
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicDeleteEntryByKey(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicDeleteEntryByKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicDeleteEntryByKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType UserDataStore_PublicGetEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicGetEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicGetEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicGetEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType UserDataStore_PublicGetEntries
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicGetEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicGetEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicGetEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType UserDataStore_PublicGetEntryByKey
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicGetEntryByKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicGetEntryByKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicGetEntryByKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType UserDataStore_PublicGetEntryByKey
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicGetEntryByKey(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicGetEntryByKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicGetEntryByKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType UserDataStore_PublicWriteEntry
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicWriteEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicWriteEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicWriteEntry"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType UserDataStore_PublicWriteEntry
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicWriteEntry(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicWriteEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicWriteEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_Get
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_Get
void Oculus::Platform::Message::MessageType::_set_User_Get(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetAccessToken
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetAccessToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetAccessToken"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetAccessToken
void Oculus::Platform::Message::MessageType::_set_User_GetAccessToken(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetAccessToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetAccessToken", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetBlockedUsers
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetBlockedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetBlockedUsers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetBlockedUsers"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetBlockedUsers
void Oculus::Platform::Message::MessageType::_set_User_GetBlockedUsers(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetBlockedUsers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetBlockedUsers", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUser
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUser
void Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUser(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUserFriends
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserFriends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserFriends"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUserFriends
void Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserFriends(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserFriends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserFriends", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetNextBlockedUserArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetNextBlockedUserArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetNextBlockedUserArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetNextBlockedUserArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetNextBlockedUserArrayPage
void Oculus::Platform::Message::MessageType::_set_User_GetNextBlockedUserArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetNextBlockedUserArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetNextBlockedUserArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetNextUserArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetNextUserArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetNextUserArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetNextUserArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetNextUserArrayPage
void Oculus::Platform::Message::MessageType::_set_User_GetNextUserArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetNextUserArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetNextUserArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetNextUserCapabilityArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetNextUserCapabilityArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetNextUserCapabilityArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetNextUserCapabilityArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetNextUserCapabilityArrayPage
void Oculus::Platform::Message::MessageType::_set_User_GetNextUserCapabilityArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetNextUserCapabilityArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetNextUserCapabilityArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetOrgScopedID
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetOrgScopedID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetOrgScopedID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetOrgScopedID"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetOrgScopedID
void Oculus::Platform::Message::MessageType::_set_User_GetOrgScopedID(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetOrgScopedID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetOrgScopedID", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetSdkAccounts
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetSdkAccounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetSdkAccounts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetSdkAccounts"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetSdkAccounts
void Oculus::Platform::Message::MessageType::_set_User_GetSdkAccounts(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetSdkAccounts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetSdkAccounts", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetUserProof
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetUserProof");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetUserProof"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetUserProof
void Oculus::Platform::Message::MessageType::_set_User_GetUserProof(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetUserProof");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetUserProof", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_LaunchBlockFlow
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_LaunchBlockFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_LaunchBlockFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_LaunchBlockFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_LaunchBlockFlow
void Oculus::Platform::Message::MessageType::_set_User_LaunchBlockFlow(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_LaunchBlockFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_LaunchBlockFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_LaunchFriendRequestFlow
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_LaunchFriendRequestFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_LaunchFriendRequestFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_LaunchFriendRequestFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_LaunchFriendRequestFlow
void Oculus::Platform::Message::MessageType::_set_User_LaunchFriendRequestFlow(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_LaunchFriendRequestFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_LaunchFriendRequestFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_LaunchUnblockFlow
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_LaunchUnblockFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_LaunchUnblockFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_LaunchUnblockFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_LaunchUnblockFlow
void Oculus::Platform::Message::MessageType::_set_User_LaunchUnblockFlow(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_LaunchUnblockFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_LaunchUnblockFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Voip_GetMicrophoneAvailability
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Voip_GetMicrophoneAvailability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Voip_GetMicrophoneAvailability");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Voip_GetMicrophoneAvailability"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Voip_GetMicrophoneAvailability
void Oculus::Platform::Message::MessageType::_set_Voip_GetMicrophoneAvailability(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Voip_GetMicrophoneAvailability");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Voip_GetMicrophoneAvailability", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Voip_SetSystemVoipSuppressed
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Voip_SetSystemVoipSuppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Voip_SetSystemVoipSuppressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Voip_SetSystemVoipSuppressed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Voip_SetSystemVoipSuppressed
void Oculus::Platform::Message::MessageType::_set_Voip_SetSystemVoipSuppressed(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Voip_SetSystemVoipSuppressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Voip_SetSystemVoipSuppressed", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_AbuseReport_ReportButtonPressed
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_AbuseReport_ReportButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_AbuseReport_ReportButtonPressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_AbuseReport_ReportButtonPressed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_AbuseReport_ReportButtonPressed
void Oculus::Platform::Message::MessageType::_set_Notification_AbuseReport_ReportButtonPressed(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_AbuseReport_ReportButtonPressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_AbuseReport_ReportButtonPressed", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_ApplicationLifecycle_LaunchIntentChanged
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_ApplicationLifecycle_LaunchIntentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_ApplicationLifecycle_LaunchIntentChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_ApplicationLifecycle_LaunchIntentChanged"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_ApplicationLifecycle_LaunchIntentChanged
void Oculus::Platform::Message::MessageType::_set_Notification_ApplicationLifecycle_LaunchIntentChanged(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_ApplicationLifecycle_LaunchIntentChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_ApplicationLifecycle_LaunchIntentChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_AssetFile_DownloadUpdate
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_AssetFile_DownloadUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_AssetFile_DownloadUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_AssetFile_DownloadUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_AssetFile_DownloadUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_AssetFile_DownloadUpdate(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_AssetFile_DownloadUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_AssetFile_DownloadUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_GroupPresence_InvitationsSent
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_GroupPresence_InvitationsSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_GroupPresence_InvitationsSent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_GroupPresence_InvitationsSent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_GroupPresence_InvitationsSent
void Oculus::Platform::Message::MessageType::_set_Notification_GroupPresence_InvitationsSent(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_GroupPresence_InvitationsSent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_GroupPresence_InvitationsSent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_GroupPresence_JoinIntentReceived
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_GroupPresence_JoinIntentReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_GroupPresence_JoinIntentReceived");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_GroupPresence_JoinIntentReceived"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_GroupPresence_JoinIntentReceived
void Oculus::Platform::Message::MessageType::_set_Notification_GroupPresence_JoinIntentReceived(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_GroupPresence_JoinIntentReceived");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_GroupPresence_JoinIntentReceived", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_GroupPresence_LeaveIntentReceived
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_GroupPresence_LeaveIntentReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_GroupPresence_LeaveIntentReceived");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_GroupPresence_LeaveIntentReceived"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_GroupPresence_LeaveIntentReceived
void Oculus::Platform::Message::MessageType::_set_Notification_GroupPresence_LeaveIntentReceived(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_GroupPresence_LeaveIntentReceived");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_GroupPresence_LeaveIntentReceived", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_HTTP_Transfer
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_HTTP_Transfer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_HTTP_Transfer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_HTTP_Transfer"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_HTTP_Transfer
void Oculus::Platform::Message::MessageType::_set_Notification_HTTP_Transfer(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_HTTP_Transfer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_HTTP_Transfer", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Livestreaming_StatusChange
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Livestreaming_StatusChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Livestreaming_StatusChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Livestreaming_StatusChange"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Livestreaming_StatusChange
void Oculus::Platform::Message::MessageType::_set_Notification_Livestreaming_StatusChange(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Livestreaming_StatusChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Livestreaming_StatusChange", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_NetSync_ConnectionStatusChanged
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_NetSync_ConnectionStatusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_NetSync_ConnectionStatusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_NetSync_ConnectionStatusChanged"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_NetSync_ConnectionStatusChanged
void Oculus::Platform::Message::MessageType::_set_Notification_NetSync_ConnectionStatusChanged(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_NetSync_ConnectionStatusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_NetSync_ConnectionStatusChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_NetSync_SessionsChanged
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_NetSync_SessionsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_NetSync_SessionsChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_NetSync_SessionsChanged"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_NetSync_SessionsChanged
void Oculus::Platform::Message::MessageType::_set_Notification_NetSync_SessionsChanged(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_NetSync_SessionsChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_NetSync_SessionsChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Party_PartyUpdate
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Party_PartyUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Party_PartyUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Party_PartyUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Party_PartyUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_Party_PartyUpdate(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Party_PartyUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Party_PartyUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Voip_MicrophoneAvailabilityStateUpdate
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Voip_MicrophoneAvailabilityStateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Voip_MicrophoneAvailabilityStateUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Voip_MicrophoneAvailabilityStateUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Voip_MicrophoneAvailabilityStateUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_Voip_MicrophoneAvailabilityStateUpdate(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Voip_MicrophoneAvailabilityStateUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Voip_MicrophoneAvailabilityStateUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Voip_SystemVoipState
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Voip_SystemVoipState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Voip_SystemVoipState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Voip_SystemVoipState"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Voip_SystemVoipState
void Oculus::Platform::Message::MessageType::_set_Notification_Voip_SystemVoipState(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Voip_SystemVoipState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Voip_SystemVoipState", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Vrcamera_GetDataChannelMessageUpdate
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Vrcamera_GetDataChannelMessageUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Vrcamera_GetDataChannelMessageUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Vrcamera_GetDataChannelMessageUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Vrcamera_GetDataChannelMessageUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_Vrcamera_GetDataChannelMessageUpdate(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Vrcamera_GetDataChannelMessageUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Vrcamera_GetDataChannelMessageUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Vrcamera_GetSurfaceUpdate
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Vrcamera_GetSurfaceUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Vrcamera_GetSurfaceUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Vrcamera_GetSurfaceUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Vrcamera_GetSurfaceUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_Vrcamera_GetSurfaceUpdate(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Vrcamera_GetSurfaceUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Vrcamera_GetSurfaceUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Platform_InitializeWithAccessToken
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeWithAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Platform_InitializeWithAccessToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeWithAccessToken"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Platform_InitializeWithAccessToken
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeWithAccessToken(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Platform_InitializeWithAccessToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeWithAccessToken", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Platform_InitializeStandaloneOculus
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeStandaloneOculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Platform_InitializeStandaloneOculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeStandaloneOculus"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Platform_InitializeStandaloneOculus
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeStandaloneOculus(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Platform_InitializeStandaloneOculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeStandaloneOculus", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Platform_InitializeAndroidAsynchronous
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeAndroidAsynchronous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Platform_InitializeAndroidAsynchronous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeAndroidAsynchronous"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Platform_InitializeAndroidAsynchronous
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeAndroidAsynchronous(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Platform_InitializeAndroidAsynchronous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeAndroidAsynchronous", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Platform_InitializeWindowsAsynchronous
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeWindowsAsynchronous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Platform_InitializeWindowsAsynchronous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeWindowsAsynchronous"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Platform_InitializeWindowsAsynchronous
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeWindowsAsynchronous(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Platform_InitializeWindowsAsynchronous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeWindowsAsynchronous", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Message::MessageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Message/ExtraMessageTypesHandler
#include "Oculus/Platform/Message_ExtraMessageTypesHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Oculus.Platform.Message/MessageType
#include "Oculus/Platform/Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Message/ExtraMessageTypesHandler.Invoke
::Oculus::Platform::Message* Oculus::Platform::Message::ExtraMessageTypesHandler::Invoke(::System::IntPtr messageHandle, ::Oculus::Platform::Message::MessageType message_type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::ExtraMessageTypesHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message::ExtraMessageTypesHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message*, false>(this, ___internal__method, messageHandle, message_type);
}
// Autogenerated method: Oculus.Platform.Message/ExtraMessageTypesHandler.BeginInvoke
::System::IAsyncResult* Oculus::Platform::Message::ExtraMessageTypesHandler::BeginInvoke(::System::IntPtr messageHandle, ::Oculus::Platform::Message::MessageType message_type, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::ExtraMessageTypesHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message::ExtraMessageTypesHandler*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, messageHandle, message_type, callback, object);
}
// Autogenerated method: Oculus.Platform.Message/ExtraMessageTypesHandler.EndInvoke
::Oculus::Platform::Message* Oculus::Platform::Message::ExtraMessageTypesHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::ExtraMessageTypesHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message::ExtraMessageTypesHandler*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAbuseReportRecording
#include "Oculus/Platform/MessageWithAbuseReportRecording.hpp"
// Including type: Oculus.Platform.Models.AbuseReportRecording
#include "Oculus/Platform/Models/AbuseReportRecording.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAbuseReportRecording.GetDataFromMessage
::Oculus::Platform::Models::AbuseReportRecording* Oculus::Platform::MessageWithAbuseReportRecording::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAbuseReportRecording::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAbuseReportRecording*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AbuseReportRecording*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAbuseReportRecording.GetAbuseReportRecording
::Oculus::Platform::Models::AbuseReportRecording* Oculus::Platform::MessageWithAbuseReportRecording::GetAbuseReportRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAbuseReportRecording::GetAbuseReportRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AbuseReportRecording*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAchievementDefinitions
#include "Oculus/Platform/MessageWithAchievementDefinitions.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAchievementDefinitions.GetDataFromMessage
::Oculus::Platform::Models::AchievementDefinitionList* Oculus::Platform::MessageWithAchievementDefinitions::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAchievementDefinitions::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAchievementDefinitions*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementDefinitionList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAchievementDefinitions.GetAchievementDefinitions
::Oculus::Platform::Models::AchievementDefinitionList* Oculus::Platform::MessageWithAchievementDefinitions::GetAchievementDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAchievementDefinitions::GetAchievementDefinitions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementDefinitionList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAchievementProgressList
#include "Oculus/Platform/MessageWithAchievementProgressList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAchievementProgressList.GetDataFromMessage
::Oculus::Platform::Models::AchievementProgressList* Oculus::Platform::MessageWithAchievementProgressList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAchievementProgressList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAchievementProgressList*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementProgressList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAchievementProgressList.GetAchievementProgressList
::Oculus::Platform::Models::AchievementProgressList* Oculus::Platform::MessageWithAchievementProgressList::GetAchievementProgressList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAchievementProgressList::GetAchievementProgressList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementProgressList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAchievementUpdate
#include "Oculus/Platform/MessageWithAchievementUpdate.hpp"
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAchievementUpdate.GetDataFromMessage
::Oculus::Platform::Models::AchievementUpdate* Oculus::Platform::MessageWithAchievementUpdate::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAchievementUpdate::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAchievementUpdate*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementUpdate*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAchievementUpdate.GetAchievementUpdate
::Oculus::Platform::Models::AchievementUpdate* Oculus::Platform::MessageWithAchievementUpdate::GetAchievementUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAchievementUpdate::GetAchievementUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementUpdate*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAppDownloadProgressResult
#include "Oculus/Platform/MessageWithAppDownloadProgressResult.hpp"
// Including type: Oculus.Platform.Models.AppDownloadProgressResult
#include "Oculus/Platform/Models/AppDownloadProgressResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAppDownloadProgressResult.GetDataFromMessage
::Oculus::Platform::Models::AppDownloadProgressResult* Oculus::Platform::MessageWithAppDownloadProgressResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAppDownloadProgressResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAppDownloadProgressResult*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AppDownloadProgressResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAppDownloadProgressResult.GetAppDownloadProgressResult
::Oculus::Platform::Models::AppDownloadProgressResult* Oculus::Platform::MessageWithAppDownloadProgressResult::GetAppDownloadProgressResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAppDownloadProgressResult::GetAppDownloadProgressResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AppDownloadProgressResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAppDownloadResult
#include "Oculus/Platform/MessageWithAppDownloadResult.hpp"
// Including type: Oculus.Platform.Models.AppDownloadResult
#include "Oculus/Platform/Models/AppDownloadResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAppDownloadResult.GetDataFromMessage
::Oculus::Platform::Models::AppDownloadResult* Oculus::Platform::MessageWithAppDownloadResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAppDownloadResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAppDownloadResult*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AppDownloadResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAppDownloadResult.GetAppDownloadResult
::Oculus::Platform::Models::AppDownloadResult* Oculus::Platform::MessageWithAppDownloadResult::GetAppDownloadResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAppDownloadResult::GetAppDownloadResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AppDownloadResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithApplicationInviteList
#include "Oculus/Platform/MessageWithApplicationInviteList.hpp"
// Including type: Oculus.Platform.Models.ApplicationInviteList
#include "Oculus/Platform/Models/ApplicationInviteList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithApplicationInviteList.GetDataFromMessage
::Oculus::Platform::Models::ApplicationInviteList* Oculus::Platform::MessageWithApplicationInviteList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithApplicationInviteList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithApplicationInviteList*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ApplicationInviteList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithApplicationInviteList.GetApplicationInviteList
::Oculus::Platform::Models::ApplicationInviteList* Oculus::Platform::MessageWithApplicationInviteList::GetApplicationInviteList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithApplicationInviteList::GetApplicationInviteList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ApplicationInviteList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithApplicationVersion
#include "Oculus/Platform/MessageWithApplicationVersion.hpp"
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithApplicationVersion.GetDataFromMessage
::Oculus::Platform::Models::ApplicationVersion* Oculus::Platform::MessageWithApplicationVersion::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithApplicationVersion::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithApplicationVersion*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ApplicationVersion*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithApplicationVersion.GetApplicationVersion
::Oculus::Platform::Models::ApplicationVersion* Oculus::Platform::MessageWithApplicationVersion::GetApplicationVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithApplicationVersion::GetApplicationVersion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ApplicationVersion*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetDetails
#include "Oculus/Platform/MessageWithAssetDetails.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetDetails.GetDataFromMessage
::Oculus::Platform::Models::AssetDetails* Oculus::Platform::MessageWithAssetDetails::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetDetails::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAssetDetails*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetDetails*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetDetails.GetAssetDetails
::Oculus::Platform::Models::AssetDetails* Oculus::Platform::MessageWithAssetDetails::GetAssetDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetDetails::GetAssetDetails");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetDetails*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetDetailsList
#include "Oculus/Platform/MessageWithAssetDetailsList.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetDetailsList.GetDataFromMessage
::Oculus::Platform::Models::AssetDetailsList* Oculus::Platform::MessageWithAssetDetailsList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetDetailsList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAssetDetailsList*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetDetailsList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetDetailsList.GetAssetDetailsList
::Oculus::Platform::Models::AssetDetailsList* Oculus::Platform::MessageWithAssetDetailsList::GetAssetDetailsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetDetailsList::GetAssetDetailsList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetDetailsList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDeleteResult
#include "Oculus/Platform/MessageWithAssetFileDeleteResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDeleteResult
#include "Oculus/Platform/Models/AssetFileDeleteResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDeleteResult.GetDataFromMessage
::Oculus::Platform::Models::AssetFileDeleteResult* Oculus::Platform::MessageWithAssetFileDeleteResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDeleteResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAssetFileDeleteResult*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDeleteResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDeleteResult.GetAssetFileDeleteResult
::Oculus::Platform::Models::AssetFileDeleteResult* Oculus::Platform::MessageWithAssetFileDeleteResult::GetAssetFileDeleteResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDeleteResult::GetAssetFileDeleteResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDeleteResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDownloadCancelResult
#include "Oculus/Platform/MessageWithAssetFileDownloadCancelResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadCancelResult
#include "Oculus/Platform/Models/AssetFileDownloadCancelResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadCancelResult.GetDataFromMessage
::Oculus::Platform::Models::AssetFileDownloadCancelResult* Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAssetFileDownloadCancelResult*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadCancelResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadCancelResult.GetAssetFileDownloadCancelResult
::Oculus::Platform::Models::AssetFileDownloadCancelResult* Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetAssetFileDownloadCancelResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetAssetFileDownloadCancelResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadCancelResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDownloadResult
#include "Oculus/Platform/MessageWithAssetFileDownloadResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadResult.GetDataFromMessage
::Oculus::Platform::Models::AssetFileDownloadResult* Oculus::Platform::MessageWithAssetFileDownloadResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDownloadResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAssetFileDownloadResult*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadResult.GetAssetFileDownloadResult
::Oculus::Platform::Models::AssetFileDownloadResult* Oculus::Platform::MessageWithAssetFileDownloadResult::GetAssetFileDownloadResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDownloadResult::GetAssetFileDownloadResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDownloadUpdate
#include "Oculus/Platform/MessageWithAssetFileDownloadUpdate.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadUpdate
#include "Oculus/Platform/Models/AssetFileDownloadUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadUpdate.GetDataFromMessage
::Oculus::Platform::Models::AssetFileDownloadUpdate* Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAssetFileDownloadUpdate*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadUpdate*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadUpdate.GetAssetFileDownloadUpdate
::Oculus::Platform::Models::AssetFileDownloadUpdate* Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetAssetFileDownloadUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetAssetFileDownloadUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadUpdate*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAvatarEditorResult
#include "Oculus/Platform/MessageWithAvatarEditorResult.hpp"
// Including type: Oculus.Platform.Models.AvatarEditorResult
#include "Oculus/Platform/Models/AvatarEditorResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAvatarEditorResult.GetDataFromMessage
::Oculus::Platform::Models::AvatarEditorResult* Oculus::Platform::MessageWithAvatarEditorResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAvatarEditorResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAvatarEditorResult*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AvatarEditorResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAvatarEditorResult.GetAvatarEditorResult
::Oculus::Platform::Models::AvatarEditorResult* Oculus::Platform::MessageWithAvatarEditorResult::GetAvatarEditorResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAvatarEditorResult::GetAvatarEditorResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AvatarEditorResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithBlockedUserList
#include "Oculus/Platform/MessageWithBlockedUserList.hpp"
// Including type: Oculus.Platform.Models.BlockedUserList
#include "Oculus/Platform/Models/BlockedUserList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithBlockedUserList.GetDataFromMessage
::Oculus::Platform::Models::BlockedUserList* Oculus::Platform::MessageWithBlockedUserList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithBlockedUserList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithBlockedUserList*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::BlockedUserList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithBlockedUserList.GetBlockedUserList
::Oculus::Platform::Models::BlockedUserList* Oculus::Platform::MessageWithBlockedUserList::GetBlockedUserList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithBlockedUserList::GetBlockedUserList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::BlockedUserList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithChallenge
#include "Oculus/Platform/MessageWithChallenge.hpp"
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithChallenge.GetDataFromMessage
::Oculus::Platform::Models::Challenge* Oculus::Platform::MessageWithChallenge::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithChallenge::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithChallenge*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Challenge*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithChallenge.GetChallenge
::Oculus::Platform::Models::Challenge* Oculus::Platform::MessageWithChallenge::GetChallenge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithChallenge::GetChallenge");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Challenge*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithChallengeList
#include "Oculus/Platform/MessageWithChallengeList.hpp"
// Including type: Oculus.Platform.Models.ChallengeList
#include "Oculus/Platform/Models/ChallengeList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithChallengeList.GetDataFromMessage
::Oculus::Platform::Models::ChallengeList* Oculus::Platform::MessageWithChallengeList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithChallengeList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithChallengeList*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ChallengeList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithChallengeList.GetChallengeList
::Oculus::Platform::Models::ChallengeList* Oculus::Platform::MessageWithChallengeList::GetChallengeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithChallengeList::GetChallengeList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ChallengeList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithChallengeEntryList
#include "Oculus/Platform/MessageWithChallengeEntryList.hpp"
// Including type: Oculus.Platform.Models.ChallengeEntryList
#include "Oculus/Platform/Models/ChallengeEntryList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithChallengeEntryList.GetDataFromMessage
::Oculus::Platform::Models::ChallengeEntryList* Oculus::Platform::MessageWithChallengeEntryList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithChallengeEntryList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithChallengeEntryList*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ChallengeEntryList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithChallengeEntryList.GetChallengeEntryList
::Oculus::Platform::Models::ChallengeEntryList* Oculus::Platform::MessageWithChallengeEntryList::GetChallengeEntryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithChallengeEntryList::GetChallengeEntryList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ChallengeEntryList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithDataStoreUnderPrivateUserDataStore
#include "Oculus/Platform/MessageWithDataStoreUnderPrivateUserDataStore.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithDataStoreUnderPrivateUserDataStore.GetDataFromMessage
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Oculus::Platform::MessageWithDataStoreUnderPrivateUserDataStore::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithDataStoreUnderPrivateUserDataStore::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithDataStoreUnderPrivateUserDataStore*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithDataStoreUnderPrivateUserDataStore.GetDataStore
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Oculus::Platform::MessageWithDataStoreUnderPrivateUserDataStore::GetDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithDataStoreUnderPrivateUserDataStore::GetDataStore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithDataStoreUnderPublicUserDataStore
#include "Oculus/Platform/MessageWithDataStoreUnderPublicUserDataStore.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithDataStoreUnderPublicUserDataStore.GetDataFromMessage
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Oculus::Platform::MessageWithDataStoreUnderPublicUserDataStore::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithDataStoreUnderPublicUserDataStore::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithDataStoreUnderPublicUserDataStore*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithDataStoreUnderPublicUserDataStore.GetDataStore
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Oculus::Platform::MessageWithDataStoreUnderPublicUserDataStore::GetDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithDataStoreUnderPublicUserDataStore::GetDataStore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithDestinationList
#include "Oculus/Platform/MessageWithDestinationList.hpp"
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithDestinationList.GetDataFromMessage
::Oculus::Platform::Models::DestinationList* Oculus::Platform::MessageWithDestinationList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithDestinationList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithDestinationList*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::DestinationList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithDestinationList.GetDestinationList
::Oculus::Platform::Models::DestinationList* Oculus::Platform::MessageWithDestinationList::GetDestinationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithDestinationList::GetDestinationList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::DestinationList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithGroupPresenceJoinIntent
#include "Oculus/Platform/MessageWithGroupPresenceJoinIntent.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceJoinIntent
#include "Oculus/Platform/Models/GroupPresenceJoinIntent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithGroupPresenceJoinIntent.GetDataFromMessage
::Oculus::Platform::Models::GroupPresenceJoinIntent* Oculus::Platform::MessageWithGroupPresenceJoinIntent::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithGroupPresenceJoinIntent::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithGroupPresenceJoinIntent*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::GroupPresenceJoinIntent*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithGroupPresenceJoinIntent.GetGroupPresenceJoinIntent
::Oculus::Platform::Models::GroupPresenceJoinIntent* Oculus::Platform::MessageWithGroupPresenceJoinIntent::GetGroupPresenceJoinIntent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithGroupPresenceJoinIntent::GetGroupPresenceJoinIntent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::GroupPresenceJoinIntent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithGroupPresenceLeaveIntent
#include "Oculus/Platform/MessageWithGroupPresenceLeaveIntent.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceLeaveIntent
#include "Oculus/Platform/Models/GroupPresenceLeaveIntent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithGroupPresenceLeaveIntent.GetDataFromMessage
::Oculus::Platform::Models::GroupPresenceLeaveIntent* Oculus::Platform::MessageWithGroupPresenceLeaveIntent::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithGroupPresenceLeaveIntent::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithGroupPresenceLeaveIntent*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::GroupPresenceLeaveIntent*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithGroupPresenceLeaveIntent.GetGroupPresenceLeaveIntent
::Oculus::Platform::Models::GroupPresenceLeaveIntent* Oculus::Platform::MessageWithGroupPresenceLeaveIntent::GetGroupPresenceLeaveIntent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithGroupPresenceLeaveIntent::GetGroupPresenceLeaveIntent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::GroupPresenceLeaveIntent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithInstalledApplicationList
#include "Oculus/Platform/MessageWithInstalledApplicationList.hpp"
// Including type: Oculus.Platform.Models.InstalledApplicationList
#include "Oculus/Platform/Models/InstalledApplicationList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithInstalledApplicationList.GetDataFromMessage
::Oculus::Platform::Models::InstalledApplicationList* Oculus::Platform::MessageWithInstalledApplicationList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithInstalledApplicationList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithInstalledApplicationList*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::InstalledApplicationList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithInstalledApplicationList.GetInstalledApplicationList
::Oculus::Platform::Models::InstalledApplicationList* Oculus::Platform::MessageWithInstalledApplicationList::GetInstalledApplicationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithInstalledApplicationList::GetInstalledApplicationList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::InstalledApplicationList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithInvitePanelResultInfo
#include "Oculus/Platform/MessageWithInvitePanelResultInfo.hpp"
// Including type: Oculus.Platform.Models.InvitePanelResultInfo
#include "Oculus/Platform/Models/InvitePanelResultInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithInvitePanelResultInfo.GetDataFromMessage
::Oculus::Platform::Models::InvitePanelResultInfo* Oculus::Platform::MessageWithInvitePanelResultInfo::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithInvitePanelResultInfo::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithInvitePanelResultInfo*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::InvitePanelResultInfo*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithInvitePanelResultInfo.GetInvitePanelResultInfo
::Oculus::Platform::Models::InvitePanelResultInfo* Oculus::Platform::MessageWithInvitePanelResultInfo::GetInvitePanelResultInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithInvitePanelResultInfo::GetInvitePanelResultInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::InvitePanelResultInfo*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchBlockFlowResult
#include "Oculus/Platform/MessageWithLaunchBlockFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchBlockFlowResult
#include "Oculus/Platform/Models/LaunchBlockFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchBlockFlowResult.GetDataFromMessage
::Oculus::Platform::Models::LaunchBlockFlowResult* Oculus::Platform::MessageWithLaunchBlockFlowResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchBlockFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLaunchBlockFlowResult*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchBlockFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchBlockFlowResult.GetLaunchBlockFlowResult
::Oculus::Platform::Models::LaunchBlockFlowResult* Oculus::Platform::MessageWithLaunchBlockFlowResult::GetLaunchBlockFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchBlockFlowResult::GetLaunchBlockFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchBlockFlowResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchFriendRequestFlowResult
#include "Oculus/Platform/MessageWithLaunchFriendRequestFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchFriendRequestFlowResult
#include "Oculus/Platform/Models/LaunchFriendRequestFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchFriendRequestFlowResult.GetDataFromMessage
::Oculus::Platform::Models::LaunchFriendRequestFlowResult* Oculus::Platform::MessageWithLaunchFriendRequestFlowResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchFriendRequestFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLaunchFriendRequestFlowResult*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchFriendRequestFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchFriendRequestFlowResult.GetLaunchFriendRequestFlowResult
::Oculus::Platform::Models::LaunchFriendRequestFlowResult* Oculus::Platform::MessageWithLaunchFriendRequestFlowResult::GetLaunchFriendRequestFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchFriendRequestFlowResult::GetLaunchFriendRequestFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchFriendRequestFlowResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchInvitePanelFlowResult
#include "Oculus/Platform/MessageWithLaunchInvitePanelFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchInvitePanelFlowResult
#include "Oculus/Platform/Models/LaunchInvitePanelFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchInvitePanelFlowResult.GetDataFromMessage
::Oculus::Platform::Models::LaunchInvitePanelFlowResult* Oculus::Platform::MessageWithLaunchInvitePanelFlowResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchInvitePanelFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLaunchInvitePanelFlowResult*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchInvitePanelFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchInvitePanelFlowResult.GetLaunchInvitePanelFlowResult
::Oculus::Platform::Models::LaunchInvitePanelFlowResult* Oculus::Platform::MessageWithLaunchInvitePanelFlowResult::GetLaunchInvitePanelFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchInvitePanelFlowResult::GetLaunchInvitePanelFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchInvitePanelFlowResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchReportFlowResult
#include "Oculus/Platform/MessageWithLaunchReportFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchReportFlowResult
#include "Oculus/Platform/Models/LaunchReportFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchReportFlowResult.GetDataFromMessage
::Oculus::Platform::Models::LaunchReportFlowResult* Oculus::Platform::MessageWithLaunchReportFlowResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchReportFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLaunchReportFlowResult*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchReportFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchReportFlowResult.GetLaunchReportFlowResult
::Oculus::Platform::Models::LaunchReportFlowResult* Oculus::Platform::MessageWithLaunchReportFlowResult::GetLaunchReportFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchReportFlowResult::GetLaunchReportFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchReportFlowResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchUnblockFlowResult
#include "Oculus/Platform/MessageWithLaunchUnblockFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchUnblockFlowResult
#include "Oculus/Platform/Models/LaunchUnblockFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchUnblockFlowResult.GetDataFromMessage
::Oculus::Platform::Models::LaunchUnblockFlowResult* Oculus::Platform::MessageWithLaunchUnblockFlowResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchUnblockFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLaunchUnblockFlowResult*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchUnblockFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchUnblockFlowResult.GetLaunchUnblockFlowResult
::Oculus::Platform::Models::LaunchUnblockFlowResult* Oculus::Platform::MessageWithLaunchUnblockFlowResult::GetLaunchUnblockFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLaunchUnblockFlowResult::GetLaunchUnblockFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchUnblockFlowResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLeaderboardList
#include "Oculus/Platform/MessageWithLeaderboardList.hpp"
// Including type: Oculus.Platform.Models.LeaderboardList
#include "Oculus/Platform/Models/LeaderboardList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardList.GetDataFromMessage
::Oculus::Platform::Models::LeaderboardList* Oculus::Platform::MessageWithLeaderboardList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLeaderboardList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLeaderboardList*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LeaderboardList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardList.GetLeaderboardList
::Oculus::Platform::Models::LeaderboardList* Oculus::Platform::MessageWithLeaderboardList::GetLeaderboardList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLeaderboardList::GetLeaderboardList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LeaderboardList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLeaderboardEntryList
#include "Oculus/Platform/MessageWithLeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardEntryList.GetDataFromMessage
::Oculus::Platform::Models::LeaderboardEntryList* Oculus::Platform::MessageWithLeaderboardEntryList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLeaderboardEntryList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithLeaderboardEntryList*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LeaderboardEntryList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardEntryList.GetLeaderboardEntryList
::Oculus::Platform::Models::LeaderboardEntryList* Oculus::Platform::MessageWithLeaderboardEntryList::GetLeaderboardEntryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithLeaderboardEntryList::GetLeaderboardEntryList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LeaderboardEntryList*, false>(this, ___internal__method);
}
