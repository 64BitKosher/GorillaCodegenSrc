// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PoseDetection.Debug.ActiveStateNodeUIHorizontal
#include "Oculus/Interaction/PoseDetection/Debug/ActiveStateNodeUIHorizontal.hpp"
// Including type: Oculus.Interaction.IActiveState
#include "Oculus/Interaction/IActiveState.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: Oculus.Interaction.DebugTree.ITreeNode`1
#include "Oculus/Interaction/DebugTree/ITreeNode_1.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String OBJNAME_FORMAT
::StringW Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::_get_OBJNAME_FORMAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::_get_OBJNAME_FORMAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.PoseDetection.Debug", "ActiveStateNodeUIHorizontal", "OBJNAME_FORMAT"));
}
// Autogenerated static field setter
// Set static field: static private System.String OBJNAME_FORMAT
void Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::_set_OBJNAME_FORMAT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::_set_OBJNAME_FORMAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.PoseDetection.Debug", "ActiveStateNodeUIHorizontal", "OBJNAME_FORMAT", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _childArea
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::dyn__childArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::dyn__childArea");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childArea"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _connectingLine
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::dyn__connectingLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::dyn__connectingLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectingLine"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _label
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::dyn__label() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::dyn__label");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_label"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _activeImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::dyn__activeImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::dyn__activeImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _activeColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::dyn__activeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::dyn__activeColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _inactiveColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::dyn__inactiveColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::dyn__inactiveColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inactiveColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.DebugTree.ITreeNode`1<Oculus.Interaction.IActiveState> _boundNode
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::DebugTree::ITreeNode_1<::Oculus::Interaction::IActiveState*>*& Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::dyn__boundNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::dyn__boundNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boundNode"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::DebugTree::ITreeNode_1<::Oculus::Interaction::IActiveState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isRoot
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::dyn__isRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::dyn__isRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isRoot"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDuplicate
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::dyn__isDuplicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::dyn__isDuplicate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDuplicate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.ActiveStateNodeUIHorizontal.get_ChildArea
::UnityEngine::RectTransform* Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::get_ChildArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::get_ChildArea");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.ActiveStateNodeUIHorizontal.Bind
void Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::Bind(::Oculus::Interaction::DebugTree::ITreeNode_1<::Oculus::Interaction::IActiveState*>* node, bool isRoot, bool isDuplicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::Bind");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, isRoot, isDuplicate);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.ActiveStateNodeUIHorizontal.Start
void Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.ActiveStateNodeUIHorizontal.Update
void Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.ActiveStateNodeUIHorizontal.GetLabelText
::StringW Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::GetLabelText(::Oculus::Interaction::DebugTree::ITreeNode_1<::Oculus::Interaction::IActiveState*>* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIHorizontal::GetLabelText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLabelText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PoseDetection.Debug.ActiveStateNodeUIVertical
#include "Oculus/Interaction/PoseDetection/Debug/ActiveStateNodeUIVertical.hpp"
// Including type: Oculus.Interaction.IActiveState
#include "Oculus/Interaction/IActiveState.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: Oculus.Interaction.DebugTree.ITreeNode`1
#include "Oculus/Interaction/DebugTree/ITreeNode_1.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String OBJNAME_FORMAT
::StringW Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::_get_OBJNAME_FORMAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::_get_OBJNAME_FORMAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.PoseDetection.Debug", "ActiveStateNodeUIVertical", "OBJNAME_FORMAT"));
}
// Autogenerated static field setter
// Set static field: static private System.String OBJNAME_FORMAT
void Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::_set_OBJNAME_FORMAT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::_set_OBJNAME_FORMAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.PoseDetection.Debug", "ActiveStateNodeUIVertical", "OBJNAME_FORMAT", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _childArea
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::dyn__childArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::dyn__childArea");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childArea"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _connectingLine
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::dyn__connectingLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::dyn__connectingLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectingLine"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _label
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::dyn__label() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::dyn__label");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_label"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _activeImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::dyn__activeImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::dyn__activeImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _activeColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::dyn__activeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::dyn__activeColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _inactiveColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::dyn__inactiveColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::dyn__inactiveColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inactiveColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.DebugTree.ITreeNode`1<Oculus.Interaction.IActiveState> _boundNode
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::DebugTree::ITreeNode_1<::Oculus::Interaction::IActiveState*>*& Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::dyn__boundNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::dyn__boundNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boundNode"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::DebugTree::ITreeNode_1<::Oculus::Interaction::IActiveState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isRoot
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::dyn__isRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::dyn__isRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isRoot"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDuplicate
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::dyn__isDuplicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::dyn__isDuplicate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDuplicate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.ActiveStateNodeUIVertical.get_ChildArea
::UnityEngine::RectTransform* Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::get_ChildArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::get_ChildArea");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.ActiveStateNodeUIVertical.Bind
void Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::Bind(::Oculus::Interaction::DebugTree::ITreeNode_1<::Oculus::Interaction::IActiveState*>* node, bool isRoot, bool isDuplicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::Bind");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, isRoot, isDuplicate);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.ActiveStateNodeUIVertical.Start
void Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.ActiveStateNodeUIVertical.Update
void Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.ActiveStateNodeUIVertical.GetLabelText
::StringW Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::GetLabelText(::Oculus::Interaction::DebugTree::ITreeNode_1<::Oculus::Interaction::IActiveState*>* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::ActiveStateNodeUIVertical::GetLabelText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLabelText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PoseDetection.Debug.FingerFeatureDebugVisual
#include "Oculus/Interaction/PoseDetection/Debug/FingerFeatureDebugVisual.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: Oculus.Interaction.PoseDetection.IFingerFeatureStateProvider
#include "Oculus/Interaction/PoseDetection/IFingerFeatureStateProvider.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig
#include "Oculus/Interaction/PoseDetection/ShapeRecognizer_FingerFeatureConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _target
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_target"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__normalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _activeColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__activeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__activeColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _targetText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshPro*& Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__targetText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__targetText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.IFingerFeatureStateProvider _fingerFeatureState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider*& Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__fingerFeatureState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__fingerFeatureState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerFeatureState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lastActiveValue
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__lastActiveValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__lastActiveValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastActiveValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.HandFinger _handFinger
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandFinger& Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__handFinger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__handFinger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handFinger"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandFinger*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig _featureConfig
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*& Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__featureConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__featureConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_featureConfig"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.FingerFeatureDebugVisual.Awake
void Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.FingerFeatureDebugVisual.OnDestroy
void Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.FingerFeatureDebugVisual.Initialize
void Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::Initialize(::Oculus::Interaction::Input::HandFinger handFinger, ::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig* config, ::Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider* fingerFeatureState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handFinger), ::il2cpp_utils::ExtractType(config), ::il2cpp_utils::ExtractType(fingerFeatureState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handFinger, config, fingerFeatureState);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.FingerFeatureDebugVisual.Update
void Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::FingerFeatureDebugVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PoseDetection.Debug.FingerFeatureSkeletalDebugVisual
#include "Oculus/Interaction/PoseDetection/Debug/FingerFeatureSkeletalDebugVisual.hpp"
// Including type: Oculus.Interaction.PoseDetection.FingerFeatureStateProvider
#include "Oculus/Interaction/PoseDetection/FingerFeatureStateProvider.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig
#include "Oculus/Interaction/PoseDetection/ShapeRecognizer_FingerFeatureConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.FingerFeatureStateProvider _fingerFeatureStateProvider
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::FingerFeatureStateProvider*& Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__fingerFeatureStateProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__fingerFeatureStateProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerFeatureStateProvider"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::FingerFeatureStateProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer _lineRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__lineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__lineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__normalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _activeColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__activeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__activeColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lineWidth
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__lineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__lineWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand _hand
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lastFeatureActiveValue
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__lastFeatureActiveValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__lastFeatureActiveValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFeatureActiveValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.Input.HandJointId> _jointsCovered
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::Input::HandJointId>*& Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__jointsCovered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__jointsCovered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointsCovered"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::Input::HandJointId>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.HandFinger _finger
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandFinger& Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__finger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__finger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finger"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandFinger*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig _fingerFeatureConfig
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*& Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__fingerFeatureConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__fingerFeatureConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerFeatureConfig"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initializedPositions
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__initializedPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__initializedPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initializedPositions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.FingerFeatureSkeletalDebugVisual.Awake
void Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.FingerFeatureSkeletalDebugVisual.UpdateFeatureActiveValueAndVisual
void Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::UpdateFeatureActiveValueAndVisual(bool newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::UpdateFeatureActiveValueAndVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFeatureActiveValueAndVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newValue);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.FingerFeatureSkeletalDebugVisual.Initialize
void Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::Initialize(::Oculus::Interaction::Input::IHand* hand, ::Oculus::Interaction::Input::HandFinger finger, ::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig* fingerFeatureConfig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(finger), ::il2cpp_utils::ExtractType(fingerFeatureConfig)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, finger, fingerFeatureConfig);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.FingerFeatureSkeletalDebugVisual.Update
void Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.FingerFeatureSkeletalDebugVisual.ToggleLineRendererEnableState
void Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::ToggleLineRendererEnableState(bool enableState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::ToggleLineRendererEnableState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleLineRendererEnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enableState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enableState);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.FingerFeatureSkeletalDebugVisual.UpdateDebugSkeletonLineRendererJoints
void Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::UpdateDebugSkeletonLineRendererJoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::UpdateDebugSkeletonLineRendererJoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDebugSkeletonLineRendererJoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.FingerFeatureSkeletalDebugVisual.UpdateFeatureActiveValue
void Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::UpdateFeatureActiveValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::FingerFeatureSkeletalDebugVisual::UpdateFeatureActiveValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFeatureActiveValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual
#include "Oculus/Interaction/PoseDetection/Debug/HandShapeDebugVisual.hpp"
// Including type: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<>c
#include "Oculus/Interaction/PoseDetection/Debug/HandShapeDebugVisual_--c.hpp"
// Including type: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<AllFeatureStates>d__16
#include "Oculus/Interaction/PoseDetection/Debug/HandShapeDebugVisual_-AllFeatureStates-d__16.hpp"
// Including type: Oculus.Interaction.PoseDetection.IFingerFeatureStateProvider
#include "Oculus/Interaction/PoseDetection/IFingerFeatureStateProvider.hpp"
// Including type: Oculus.Interaction.PoseDetection.ShapeRecognizerActiveState
#include "Oculus/Interaction/PoseDetection/ShapeRecognizerActiveState.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig
#include "Oculus/Interaction/PoseDetection/ShapeRecognizer_FingerFeatureConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _fingerFeatureStateProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__fingerFeatureStateProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__fingerFeatureStateProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerFeatureStateProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.IFingerFeatureStateProvider FingerFeatureStateProvider
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider*& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn_FingerFeatureStateProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn_FingerFeatureStateProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FingerFeatureStateProvider"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.ShapeRecognizerActiveState _shapeRecognizerActiveState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::ShapeRecognizerActiveState*& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__shapeRecognizerActiveState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__shapeRecognizerActiveState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shapeRecognizerActiveState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::ShapeRecognizerActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _target
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_target"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__normalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _activeColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__activeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__activeColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _fingerFeatureDebugVisualPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__fingerFeatureDebugVisualPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__fingerFeatureDebugVisualPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerFeatureDebugVisualPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _fingerFeatureParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__fingerFeatureParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__fingerFeatureParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerFeatureParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _fingerSpacingVec
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__fingerSpacingVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__fingerSpacingVec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerSpacingVec"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _fingerFeatureSpacingVec
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__fingerFeatureSpacingVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__fingerFeatureSpacingVec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerFeatureSpacingVec"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _fingerFeatureDebugLocalScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__fingerFeatureDebugLocalScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__fingerFeatureDebugLocalScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerFeatureDebugLocalScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _targetText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshPro*& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__targetText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__targetText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lastActiveValue
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__lastActiveValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::dyn__lastActiveValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastActiveValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual.Awake
void Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual.Start
void Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual.AllFeatureStates
::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>* Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::AllFeatureStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::AllFeatureStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllFeatureStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual.OnDestroy
void Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual.Update
void Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<>c
#include "Oculus/Interaction/PoseDetection/Debug/HandShapeDebugVisual_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Linq.IGrouping`2
#include "System/Linq/IGrouping_2.hpp"
// Including type: <>f__AnonymousType0`2
#include "GlobalNamespace/--f__AnonymousType0_2.hpp"
// Including type: Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig
#include "Oculus/Interaction/PoseDetection/ShapeRecognizer_FingerFeatureConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<>c <>9
::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c* Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c*>("Oculus.Interaction.PoseDetection.Debug", "HandShapeDebugVisual/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<>c <>9
void Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::_set_$$9(::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.PoseDetection.Debug", "HandShapeDebugVisual/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.ValueTuple`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>>,Oculus.Interaction.Input.HandFinger> <>9__15_0
::System::Func_2<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>, ::Oculus::Interaction::Input::HandFinger>* Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::_get_$$9__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::_get_$$9__15_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>, ::Oculus::Interaction::Input::HandFinger>*>("Oculus.Interaction.PoseDetection.Debug", "HandShapeDebugVisual/<>c", "<>9__15_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.ValueTuple`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>>,Oculus.Interaction.Input.HandFinger> <>9__15_0
void Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::_set_$$9__15_0(::System::Func_2<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>, ::Oculus::Interaction::Input::HandFinger>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::_set_$$9__15_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.PoseDetection.Debug", "HandShapeDebugVisual/<>c", "<>9__15_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.ValueTuple`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>>,System.Collections.Generic.IEnumerable`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>> <>9__15_2
::System::Func_2<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>* Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::_get_$$9__15_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::_get_$$9__15_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>*>("Oculus.Interaction.PoseDetection.Debug", "HandShapeDebugVisual/<>c", "<>9__15_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.ValueTuple`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>>,System.Collections.Generic.IEnumerable`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>> <>9__15_2
void Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::_set_$$9__15_2(::System::Func_2<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::_set_$$9__15_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.PoseDetection.Debug", "HandShapeDebugVisual/<>c", "<>9__15_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Linq.IGrouping`2<Oculus.Interaction.Input.HandFinger,System.ValueTuple`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>>>,<>f__AnonymousType0`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IEnumerable`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>>> <>9__15_1
::System::Func_2<::System::Linq::IGrouping_2<::Oculus::Interaction::Input::HandFinger, ::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>*, ::GlobalNamespace::$$f__AnonymousType0_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>*>* Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::_get_$$9__15_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::_get_$$9__15_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Linq::IGrouping_2<::Oculus::Interaction::Input::HandFinger, ::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>*, ::GlobalNamespace::$$f__AnonymousType0_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>*>*>("Oculus.Interaction.PoseDetection.Debug", "HandShapeDebugVisual/<>c", "<>9__15_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Linq.IGrouping`2<Oculus.Interaction.Input.HandFinger,System.ValueTuple`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>>>,<>f__AnonymousType0`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IEnumerable`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>>> <>9__15_1
void Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::_set_$$9__15_1(::System::Func_2<::System::Linq::IGrouping_2<::Oculus::Interaction::Input::HandFinger, ::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>*, ::GlobalNamespace::$$f__AnonymousType0_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::_set_$$9__15_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.PoseDetection.Debug", "HandShapeDebugVisual/<>c", "<>9__15_1", value)));
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<>c..cctor
void Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.PoseDetection.Debug", "HandShapeDebugVisual/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<>c.<Start>b__15_0
::Oculus::Interaction::Input::HandFinger Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::$Start$b__15_0(::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*> s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::<Start>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandFinger, false>(this, ___internal__method, s);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<>c.<Start>b__15_1
::GlobalNamespace::$$f__AnonymousType0_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>* Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::$Start$b__15_1(::System::Linq::IGrouping_2<::Oculus::Interaction::Input::HandFinger, ::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::<Start>b__15_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__15_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::$$f__AnonymousType0_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>*, false>(this, ___internal__method, group);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<>c.<Start>b__15_2
::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>* Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::$Start$b__15_2(::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*> item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$$c::<Start>b__15_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__15_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<AllFeatureStates>d__16
#include "Oculus/Interaction/PoseDetection/Debug/HandShapeDebugVisual_-AllFeatureStates-d__16.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig
#include "Oculus/Interaction/PoseDetection/ShapeRecognizer_FingerFeatureConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ValueTuple`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>> <>2__current
[[deprecated("Use field access instead!")]] ::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual <>4__this
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual*& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<Oculus.Interaction.PoseDetection.ShapeRecognizer> <>7__wrap1
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer*>*& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<System.ValueTuple`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>>> <>7__wrap2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>*& Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<AllFeatureStates>d__16.System.IDisposable.Dispose
void Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<AllFeatureStates>d__16.MoveNext
bool Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<AllFeatureStates>d__16.<>m__Finally1
void Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<AllFeatureStates>d__16.<>m__Finally2
void Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<AllFeatureStates>d__16.System.Collections.Generic.IEnumerator<(Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList<Oculus.Interaction.PoseDetection.ShapeRecognizer.FingerFeatureConfig>)>.get_Current
::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*> Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::System_Collections_Generic_IEnumerator$_Oculus_Interaction_Input_HandFinger_System_Collections_Generic_IReadOnlyList$Oculus_Interaction_PoseDetection_ShapeRecognizer_FingerFeatureConfig$_$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::System.Collections.Generic.IEnumerator<_Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList<Oculus.Interaction.PoseDetection.ShapeRecognizer.FingerFeatureConfig>_>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<AllFeatureStates>d__16.System.Collections.IEnumerator.Reset
void Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<AllFeatureStates>d__16.System.Collections.IEnumerator.get_Current
::Il2CppObject* Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<AllFeatureStates>d__16.System.Collections.Generic.IEnumerable<(Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList<Oculus.Interaction.PoseDetection.ShapeRecognizer.FingerFeatureConfig>)>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>* Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::System_Collections_Generic_IEnumerable$_Oculus_Interaction_Input_HandFinger_System_Collections_Generic_IReadOnlyList$Oculus_Interaction_PoseDetection_ShapeRecognizer_FingerFeatureConfig$_$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::System.Collections.Generic.IEnumerable<_Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList<Oculus.Interaction.PoseDetection.ShapeRecognizer.FingerFeatureConfig>_>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeDebugVisual/<AllFeatureStates>d__16.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeDebugVisual::$AllFeatureStates$d__16*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual
#include "Oculus/Interaction/PoseDetection/Debug/HandShapeSkeletalDebugVisual.hpp"
// Including type: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<>c
#include "Oculus/Interaction/PoseDetection/Debug/HandShapeSkeletalDebugVisual_--c.hpp"
// Including type: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<AllFeatureStates>d__4
#include "Oculus/Interaction/PoseDetection/Debug/HandShapeSkeletalDebugVisual_-AllFeatureStates-d__4.hpp"
// Including type: Oculus.Interaction.PoseDetection.ShapeRecognizerActiveState
#include "Oculus/Interaction/PoseDetection/ShapeRecognizerActiveState.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig
#include "Oculus/Interaction/PoseDetection/ShapeRecognizer_FingerFeatureConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.ShapeRecognizerActiveState _shapeRecognizerActiveState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::ShapeRecognizerActiveState*& Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::dyn__shapeRecognizerActiveState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::dyn__shapeRecognizerActiveState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shapeRecognizerActiveState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::ShapeRecognizerActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _fingerFeatureDebugVisualPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::dyn__fingerFeatureDebugVisualPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::dyn__fingerFeatureDebugVisualPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerFeatureDebugVisualPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual.Awake
void Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual.Start
void Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual.AllFeatureStates
::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>* Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::AllFeatureStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::AllFeatureStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllFeatureStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<>c
#include "Oculus/Interaction/PoseDetection/Debug/HandShapeSkeletalDebugVisual_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Linq.IGrouping`2
#include "System/Linq/IGrouping_2.hpp"
// Including type: <>f__AnonymousType0`2
#include "GlobalNamespace/--f__AnonymousType0_2.hpp"
// Including type: Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig
#include "Oculus/Interaction/PoseDetection/ShapeRecognizer_FingerFeatureConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<>c <>9
::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c* Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c*>("Oculus.Interaction.PoseDetection.Debug", "HandShapeSkeletalDebugVisual/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<>c <>9
void Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::_set_$$9(::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.PoseDetection.Debug", "HandShapeSkeletalDebugVisual/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.ValueTuple`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>>,Oculus.Interaction.Input.HandFinger> <>9__3_0
::System::Func_2<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>, ::Oculus::Interaction::Input::HandFinger>* Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>, ::Oculus::Interaction::Input::HandFinger>*>("Oculus.Interaction.PoseDetection.Debug", "HandShapeSkeletalDebugVisual/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.ValueTuple`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>>,Oculus.Interaction.Input.HandFinger> <>9__3_0
void Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::_set_$$9__3_0(::System::Func_2<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>, ::Oculus::Interaction::Input::HandFinger>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.PoseDetection.Debug", "HandShapeSkeletalDebugVisual/<>c", "<>9__3_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.ValueTuple`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>>,System.Collections.Generic.IEnumerable`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>> <>9__3_2
::System::Func_2<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>* Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::_get_$$9__3_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::_get_$$9__3_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>*>("Oculus.Interaction.PoseDetection.Debug", "HandShapeSkeletalDebugVisual/<>c", "<>9__3_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.ValueTuple`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>>,System.Collections.Generic.IEnumerable`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>> <>9__3_2
void Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::_set_$$9__3_2(::System::Func_2<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::_set_$$9__3_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.PoseDetection.Debug", "HandShapeSkeletalDebugVisual/<>c", "<>9__3_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Linq.IGrouping`2<Oculus.Interaction.Input.HandFinger,System.ValueTuple`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>>>,<>f__AnonymousType0`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IEnumerable`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>>> <>9__3_1
::System::Func_2<::System::Linq::IGrouping_2<::Oculus::Interaction::Input::HandFinger, ::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>*, ::GlobalNamespace::$$f__AnonymousType0_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>*>* Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::_get_$$9__3_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::_get_$$9__3_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Linq::IGrouping_2<::Oculus::Interaction::Input::HandFinger, ::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>*, ::GlobalNamespace::$$f__AnonymousType0_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>*>*>("Oculus.Interaction.PoseDetection.Debug", "HandShapeSkeletalDebugVisual/<>c", "<>9__3_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Linq.IGrouping`2<Oculus.Interaction.Input.HandFinger,System.ValueTuple`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>>>,<>f__AnonymousType0`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IEnumerable`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>>> <>9__3_1
void Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::_set_$$9__3_1(::System::Func_2<::System::Linq::IGrouping_2<::Oculus::Interaction::Input::HandFinger, ::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>*, ::GlobalNamespace::$$f__AnonymousType0_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::_set_$$9__3_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.PoseDetection.Debug", "HandShapeSkeletalDebugVisual/<>c", "<>9__3_1", value)));
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<>c..cctor
void Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.PoseDetection.Debug", "HandShapeSkeletalDebugVisual/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<>c.<Start>b__3_0
::Oculus::Interaction::Input::HandFinger Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::$Start$b__3_0(::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*> s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::<Start>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandFinger, false>(this, ___internal__method, s);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<>c.<Start>b__3_1
::GlobalNamespace::$$f__AnonymousType0_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>* Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::$Start$b__3_1(::System::Linq::IGrouping_2<::Oculus::Interaction::Input::HandFinger, ::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::<Start>b__3_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__3_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::$$f__AnonymousType0_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>*, false>(this, ___internal__method, group);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<>c.<Start>b__3_2
::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>* Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::$Start$b__3_2(::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*> item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$$c::<Start>b__3_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__3_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<AllFeatureStates>d__4
#include "Oculus/Interaction/PoseDetection/Debug/HandShapeSkeletalDebugVisual_-AllFeatureStates-d__4.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig
#include "Oculus/Interaction/PoseDetection/ShapeRecognizer_FingerFeatureConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ValueTuple`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>> <>2__current
[[deprecated("Use field access instead!")]] ::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>& Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual <>4__this
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual*& Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<Oculus.Interaction.PoseDetection.ShapeRecognizer> <>7__wrap1
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer*>*& Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<System.ValueTuple`2<Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList`1<Oculus.Interaction.PoseDetection.ShapeRecognizer/FingerFeatureConfig>>> <>7__wrap2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>*& Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<AllFeatureStates>d__4.System.IDisposable.Dispose
void Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<AllFeatureStates>d__4.MoveNext
bool Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<AllFeatureStates>d__4.<>m__Finally1
void Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<AllFeatureStates>d__4.<>m__Finally2
void Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<AllFeatureStates>d__4.System.Collections.Generic.IEnumerator<(Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList<Oculus.Interaction.PoseDetection.ShapeRecognizer.FingerFeatureConfig>)>.get_Current
::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*> Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::System_Collections_Generic_IEnumerator$_Oculus_Interaction_Input_HandFinger_System_Collections_Generic_IReadOnlyList$Oculus_Interaction_PoseDetection_ShapeRecognizer_FingerFeatureConfig$_$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::System.Collections.Generic.IEnumerator<_Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList<Oculus.Interaction.PoseDetection.ShapeRecognizer.FingerFeatureConfig>_>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<AllFeatureStates>d__4.System.Collections.IEnumerator.Reset
void Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<AllFeatureStates>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<AllFeatureStates>d__4.System.Collections.Generic.IEnumerable<(Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList<Oculus.Interaction.PoseDetection.ShapeRecognizer.FingerFeatureConfig>)>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>* Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::System_Collections_Generic_IEnumerable$_Oculus_Interaction_Input_HandFinger_System_Collections_Generic_IReadOnlyList$Oculus_Interaction_PoseDetection_ShapeRecognizer_FingerFeatureConfig$_$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::System.Collections.Generic.IEnumerable<_Oculus.Interaction.Input.HandFinger,System.Collections.Generic.IReadOnlyList<Oculus.Interaction.PoseDetection.ShapeRecognizer.FingerFeatureConfig>_>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<::Oculus::Interaction::Input::HandFinger, ::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::PoseDetection::ShapeRecognizer::FingerFeatureConfig*>*>>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.HandShapeSkeletalDebugVisual/<AllFeatureStates>d__4.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::HandShapeSkeletalDebugVisual::$AllFeatureStates$d__4*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PoseDetection.Debug.JointRotationDebugVisual
#include "Oculus/Interaction/PoseDetection/Debug/JointRotationDebugVisual.hpp"
// Including type: Oculus.Interaction.PoseDetection.JointRotationActiveState
#include "Oculus/Interaction/PoseDetection/JointRotationActiveState.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.JointRotationActiveState _jointRotation
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::JointRotationActiveState*& Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::dyn__jointRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::dyn__jointRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointRotation"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::JointRotationActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _lineRendererMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::dyn__lineRendererMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::dyn__lineRendererMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineRendererMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rendererLineWidth
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::dyn__rendererLineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::dyn__rendererLineWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rendererLineWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rendererLineLength
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::dyn__rendererLineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::dyn__rendererLineLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rendererLineLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.LineRenderer> _lineRenderers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::LineRenderer*>*& Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::dyn__lineRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::dyn__lineRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineRenderers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::LineRenderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _enabledRendererCount
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::dyn__enabledRendererCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::dyn__enabledRendererCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enabledRendererCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.JointRotationDebugVisual.Awake
void Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.JointRotationDebugVisual.Start
void Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.JointRotationDebugVisual.OnDisable
void Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.JointRotationDebugVisual.Update
void Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.JointRotationDebugVisual.DrawDebugLine
void Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::DrawDebugLine(::UnityEngine::Vector3 jointPos, ::UnityEngine::Vector3 direction, float amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::DrawDebugLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawDebugLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointPos), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jointPos, direction, amount);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.JointRotationDebugVisual.ResetLines
void Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::ResetLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::ResetLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.JointRotationDebugVisual.AddLine
void Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::AddLine(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointRotationDebugVisual::AddLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, color);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PoseDetection.Debug.JointVelocityDebugVisual
#include "Oculus/Interaction/PoseDetection/Debug/JointVelocityDebugVisual.hpp"
// Including type: Oculus.Interaction.PoseDetection.JointVelocityActiveState
#include "Oculus/Interaction/PoseDetection/JointVelocityActiveState.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.JointVelocityActiveState _jointVelocity
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::JointVelocityActiveState*& Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::dyn__jointVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::dyn__jointVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointVelocity"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::JointVelocityActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _lineRendererMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::dyn__lineRendererMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::dyn__lineRendererMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineRendererMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rendererLineWidth
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::dyn__rendererLineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::dyn__rendererLineWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rendererLineWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rendererLineLength
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::dyn__rendererLineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::dyn__rendererLineLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rendererLineLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.LineRenderer> _lineRenderers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::LineRenderer*>*& Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::dyn__lineRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::dyn__lineRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineRenderers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::LineRenderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _enabledRendererCount
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::dyn__enabledRendererCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::dyn__enabledRendererCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enabledRendererCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.JointVelocityDebugVisual.Awake
void Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.JointVelocityDebugVisual.Start
void Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.JointVelocityDebugVisual.OnDisable
void Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.JointVelocityDebugVisual.Update
void Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.JointVelocityDebugVisual.DrawDebugLine
void Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::DrawDebugLine(::UnityEngine::Vector3 jointPos, ::UnityEngine::Vector3 direction, float amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::DrawDebugLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawDebugLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointPos), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jointPos, direction, amount);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.JointVelocityDebugVisual.ResetLines
void Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::ResetLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::ResetLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.JointVelocityDebugVisual.AddLine
void Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::AddLine(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::JointVelocityDebugVisual::AddLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, color);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PoseDetection.Debug.TransformFeatureDebugVisual
#include "Oculus/Interaction/PoseDetection/Debug/TransformFeatureDebugVisual.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: Oculus.Interaction.PoseDetection.TransformFeatureStateProvider
#include "Oculus/Interaction/PoseDetection/TransformFeatureStateProvider.hpp"
// Including type: Oculus.Interaction.PoseDetection.TransformRecognizerActiveState
#include "Oculus/Interaction/PoseDetection/TransformRecognizerActiveState.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: Oculus.Interaction.PoseDetection.TransformFeatureConfig
#include "Oculus/Interaction/PoseDetection/TransformFeatureConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _target
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_target"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__normalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _activeColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__activeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__activeColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _targetText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshPro*& Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__targetText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__targetText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.TransformFeatureStateProvider _transformFeatureStateProvider
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::TransformFeatureStateProvider*& Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__transformFeatureStateProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__transformFeatureStateProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformFeatureStateProvider"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::TransformFeatureStateProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.TransformRecognizerActiveState _transformRecognizerActiveState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::TransformRecognizerActiveState*& Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__transformRecognizerActiveState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__transformRecognizerActiveState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformRecognizerActiveState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::TransformRecognizerActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lastActiveValue
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__lastActiveValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__lastActiveValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastActiveValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.TransformFeatureConfig _targetConfig
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::TransformFeatureConfig*& Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__targetConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__targetConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetConfig"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::TransformFeatureConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.Handedness _handedness
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::Handedness& Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::dyn__handedness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handedness"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::Handedness*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.TransformFeatureDebugVisual.Awake
void Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.TransformFeatureDebugVisual.OnDestroy
void Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.TransformFeatureDebugVisual.Initialize
void Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::Initialize(::Oculus::Interaction::Input::Handedness handedness, ::Oculus::Interaction::PoseDetection::TransformFeatureConfig* targetConfig, ::Oculus::Interaction::PoseDetection::TransformFeatureStateProvider* transformFeatureStateProvider, ::Oculus::Interaction::PoseDetection::TransformRecognizerActiveState* transformActiveState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handedness), ::il2cpp_utils::ExtractType(targetConfig), ::il2cpp_utils::ExtractType(transformFeatureStateProvider), ::il2cpp_utils::ExtractType(transformActiveState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handedness, targetConfig, transformFeatureStateProvider, transformActiveState);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.TransformFeatureDebugVisual.Update
void Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::TransformFeatureDebugVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PoseDetection.Debug.TransformFeatureVectorDebugParentVisual
#include "Oculus/Interaction/PoseDetection/Debug/TransformFeatureVectorDebugParentVisual.hpp"
// Including type: Oculus.Interaction.PoseDetection.TransformRecognizerActiveState
#include "Oculus/Interaction/PoseDetection/TransformRecognizerActiveState.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Oculus.Interaction.PoseDetection.TransformFeature
#include "Oculus/Interaction/PoseDetection/TransformFeature.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.TransformRecognizerActiveState _transformRecognizerActiveState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::TransformRecognizerActiveState*& Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugParentVisual::dyn__transformRecognizerActiveState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugParentVisual::dyn__transformRecognizerActiveState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformRecognizerActiveState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::TransformRecognizerActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _vectorVisualPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugParentVisual::dyn__vectorVisualPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugParentVisual::dyn__vectorVisualPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vectorVisualPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.TransformFeatureVectorDebugParentVisual.GetTransformFeatureVectorAndWristPos
void Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugParentVisual::GetTransformFeatureVectorAndWristPos(::Oculus::Interaction::PoseDetection::TransformFeature feature, bool isHandVector, ByRef<::System::Nullable_1<::UnityEngine::Vector3>> featureVec, ByRef<::System::Nullable_1<::UnityEngine::Vector3>> wristPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugParentVisual::GetTransformFeatureVectorAndWristPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransformFeatureVectorAndWristPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(feature), ::il2cpp_utils::ExtractType(isHandVector), ::il2cpp_utils::ExtractType(featureVec), ::il2cpp_utils::ExtractType(wristPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, feature, isHandVector, byref(featureVec), byref(wristPos));
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.TransformFeatureVectorDebugParentVisual.Awake
void Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugParentVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugParentVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugParentVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.TransformFeatureVectorDebugParentVisual.Start
void Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugParentVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugParentVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugParentVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.TransformFeatureVectorDebugParentVisual.CreateVectorDebugView
void Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugParentVisual::CreateVectorDebugView(::Oculus::Interaction::PoseDetection::TransformFeature feature, bool trackingHandVector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugParentVisual::CreateVectorDebugView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateVectorDebugView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(feature), ::il2cpp_utils::ExtractType(trackingHandVector)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, feature, trackingHandVector);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PoseDetection.Debug.TransformFeatureVectorDebugVisual
#include "Oculus/Interaction/PoseDetection/Debug/TransformFeatureVectorDebugVisual.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: Oculus.Interaction.PoseDetection.Debug.TransformFeatureVectorDebugParentVisual
#include "Oculus/Interaction/PoseDetection/Debug/TransformFeatureVectorDebugParentVisual.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer _lineRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::dyn__lineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::dyn__lineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lineWidth
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::dyn__lineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::dyn__lineWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lineScale
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::dyn__lineScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::dyn__lineScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.TransformFeature _feature
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::TransformFeature& Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::dyn__feature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::dyn__feature");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_feature"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::TransformFeature*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.Debug.TransformFeatureVectorDebugParentVisual _parent
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugParentVisual*& Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugParentVisual**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _trackingHandVector
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::dyn__trackingHandVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::dyn__trackingHandVector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackingHandVector"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.TransformFeatureVectorDebugVisual.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.TransformFeatureVectorDebugVisual.set_Hand
void Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.TransformFeatureVectorDebugVisual.Awake
void Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.TransformFeatureVectorDebugVisual.Initialize
void Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::Initialize(::Oculus::Interaction::PoseDetection::TransformFeature feature, bool trackingHandVector, ::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugParentVisual* parent, ::UnityEngine::Color lineColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(feature), ::il2cpp_utils::ExtractType(trackingHandVector), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(lineColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, feature, trackingHandVector, parent, lineColor);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.TransformFeatureVectorDebugVisual.Update
void Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::TransformFeatureVectorDebugVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PoseDetection.Debug.TransformRecognizerDebugVisual
#include "Oculus/Interaction/PoseDetection/Debug/TransformRecognizerDebugVisual.hpp"
// Including type: Oculus.Interaction.Input.Hand
#include "Oculus/Interaction/Input/Hand.hpp"
// Including type: Oculus.Interaction.PoseDetection.TransformFeatureStateProvider
#include "Oculus/Interaction/PoseDetection/TransformFeatureStateProvider.hpp"
// Including type: Oculus.Interaction.PoseDetection.TransformRecognizerActiveState
#include "Oculus/Interaction/PoseDetection/TransformRecognizerActiveState.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.Hand _hand
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::Hand*& Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::Hand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.TransformFeatureStateProvider _transformFeatureStateProvider
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::TransformFeatureStateProvider*& Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__transformFeatureStateProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__transformFeatureStateProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformFeatureStateProvider"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::TransformFeatureStateProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.TransformRecognizerActiveState _transformRecognizerActiveState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::TransformRecognizerActiveState*& Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__transformRecognizerActiveState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__transformRecognizerActiveState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformRecognizerActiveState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::TransformRecognizerActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _target
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_target"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__normalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _activeColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__activeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__activeColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _transformFeatureDebugVisualPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__transformFeatureDebugVisualPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__transformFeatureDebugVisualPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformFeatureDebugVisualPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _debugVisualParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__debugVisualParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__debugVisualParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_debugVisualParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _featureSpacingVec
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__featureSpacingVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__featureSpacingVec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_featureSpacingVec"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _featureDebugLocalScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__featureDebugLocalScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__featureDebugLocalScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_featureDebugLocalScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _targetText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshPro*& Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__targetText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__targetText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lastActiveValue
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__lastActiveValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::dyn__lastActiveValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastActiveValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.TransformRecognizerDebugVisual.Awake
void Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.TransformRecognizerDebugVisual.Start
void Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.TransformRecognizerDebugVisual.OnDestroy
void Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.TransformRecognizerDebugVisual.AllActive
bool Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::AllActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::AllActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PoseDetection.Debug.TransformRecognizerDebugVisual.Update
void Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PoseDetection::Debug::TransformRecognizerDebugVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.DebugTree.InteractorGroupDebugTreeUI
#include "Oculus/Interaction/DebugTree/InteractorGroupDebugTreeUI.hpp"
// Including type: Oculus.Interaction.DebugTree.InteractorGroupDebugTreeUI/InteractorGroupDebugTree
#include "Oculus/Interaction/DebugTree/InteractorGroupDebugTreeUI_InteractorGroupDebugTree.hpp"
// Including type: Oculus.Interaction.IInteractor
#include "Oculus/Interaction/IInteractor.hpp"
// Including type: Oculus.Interaction.DebugTree.INodeUI`1
#include "Oculus/Interaction/DebugTree/INodeUI_1.hpp"
// Including type: Oculus.Interaction.DebugTree.DebugTree`1
#include "Oculus/Interaction/DebugTree/DebugTree_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _root
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::dyn__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Component _nodePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Component*& Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::dyn__nodePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::dyn__nodePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Component**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.DebugTree.InteractorGroupDebugTreeUI.get_Value
::Oculus::Interaction::IInteractor* Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DebugTree.InteractorGroupDebugTreeUI.get_NodePrefab
::Oculus::Interaction::DebugTree::INodeUI_1<::Oculus::Interaction::IInteractor*>* Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::get_NodePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::get_NodePrefab");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::DebugTree::INodeUI_1<::Oculus::Interaction::IInteractor*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DebugTree.InteractorGroupDebugTreeUI.InstantiateTree
::Oculus::Interaction::DebugTree::DebugTree_1<::Oculus::Interaction::IInteractor*>* Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::InstantiateTree(::Oculus::Interaction::IInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::InstantiateTree");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::DebugTree::DebugTree_1<::Oculus::Interaction::IInteractor*>*, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.DebugTree.InteractorGroupDebugTreeUI.TitleForValue
::StringW Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::TitleForValue(::Oculus::Interaction::IInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::TitleForValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.DebugTree.InteractorGroupDebugTreeUI/InteractorGroupDebugTree
#include "Oculus/Interaction/DebugTree/InteractorGroupDebugTreeUI_InteractorGroupDebugTree.hpp"
// Including type: Oculus.Interaction.IInteractor
#include "Oculus/Interaction/IInteractor.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.DebugTree.InteractorGroupDebugTreeUI/InteractorGroupDebugTree.TryGetChildren
bool Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::InteractorGroupDebugTree::TryGetChildren(::Oculus::Interaction::IInteractor* node, ByRef<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::IInteractor*>*> children) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::InteractorGroupDebugTree::TryGetChildren");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DebugTree::InteractorGroupDebugTreeUI::InteractorGroupDebugTree*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node, byref(children));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.DebugTree.InteractorGroupNodeUI
#include "Oculus/Interaction/DebugTree/InteractorGroupNodeUI.hpp"
// Including type: Oculus.Interaction.IInteractor
#include "Oculus/Interaction/IInteractor.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: Oculus.Interaction.DebugTree.ITreeNode`1
#include "Oculus/Interaction/DebugTree/ITreeNode_1.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String OBJNAME_FORMAT
::StringW Oculus::Interaction::DebugTree::InteractorGroupNodeUI::_get_OBJNAME_FORMAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupNodeUI::_get_OBJNAME_FORMAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.DebugTree", "InteractorGroupNodeUI", "OBJNAME_FORMAT"));
}
// Autogenerated static field setter
// Set static field: static private System.String OBJNAME_FORMAT
void Oculus::Interaction::DebugTree::InteractorGroupNodeUI::_set_OBJNAME_FORMAT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupNodeUI::_set_OBJNAME_FORMAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.DebugTree", "InteractorGroupNodeUI", "OBJNAME_FORMAT", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _childArea
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__childArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__childArea");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childArea"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _connectingLine
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__connectingLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__connectingLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectingLine"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _label
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__label() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__label");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_label"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _activeImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__activeImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__activeImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__selectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__selectColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _hoverColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__hoverColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__hoverColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__normalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _disabledColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__disabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__disabledColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.DebugTree.ITreeNode`1<Oculus.Interaction.IInteractor> _boundNode
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::DebugTree::ITreeNode_1<::Oculus::Interaction::IInteractor*>*& Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__boundNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__boundNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boundNode"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::DebugTree::ITreeNode_1<::Oculus::Interaction::IInteractor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isRoot
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__isRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__isRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isRoot"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDuplicate
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__isDuplicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupNodeUI::dyn__isDuplicate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDuplicate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.DebugTree.InteractorGroupNodeUI.get_ChildArea
::UnityEngine::RectTransform* Oculus::Interaction::DebugTree::InteractorGroupNodeUI::get_ChildArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupNodeUI::get_ChildArea");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DebugTree::InteractorGroupNodeUI*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DebugTree.InteractorGroupNodeUI.Bind
void Oculus::Interaction::DebugTree::InteractorGroupNodeUI::Bind(::Oculus::Interaction::DebugTree::ITreeNode_1<::Oculus::Interaction::IInteractor*>* node, bool isRoot, bool isDuplicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupNodeUI::Bind");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DebugTree::InteractorGroupNodeUI*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, isRoot, isDuplicate);
}
// Autogenerated method: Oculus.Interaction.DebugTree.InteractorGroupNodeUI.Start
void Oculus::Interaction::DebugTree::InteractorGroupNodeUI::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupNodeUI::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DebugTree::InteractorGroupNodeUI*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DebugTree.InteractorGroupNodeUI.Update
void Oculus::Interaction::DebugTree::InteractorGroupNodeUI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupNodeUI::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DebugTree::InteractorGroupNodeUI*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DebugTree.InteractorGroupNodeUI.GetLabelText
::StringW Oculus::Interaction::DebugTree::InteractorGroupNodeUI::GetLabelText(::Oculus::Interaction::DebugTree::ITreeNode_1<::Oculus::Interaction::IInteractor*>* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugTree::InteractorGroupNodeUI::GetLabelText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLabelText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.AxisAlignedBox
#include "Oculus/Interaction/Surfaces/AxisAlignedBox.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: Oculus.Interaction.Surfaces.SurfaceHit
#include "Oculus/Interaction/Surfaces/SurfaceHit.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _size
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Surfaces::AxisAlignedBox::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<Oculus.Interaction.Surfaces.AxisAlignedBox/BoxSurface,System.Single> _distances
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface, float>*& Oculus::Interaction::Surfaces::AxisAlignedBox::dyn__distances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::dyn__distances");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distances"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Surfaces.AxisAlignedBox.get_Size
::UnityEngine::Vector3 Oculus::Interaction::Surfaces::AxisAlignedBox::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::get_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.AxisAlignedBox.set_Size
void Oculus::Interaction::Surfaces::AxisAlignedBox::set_Size(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::set_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.AxisAlignedBox.get_Transform
::UnityEngine::Transform* Oculus::Interaction::Surfaces::AxisAlignedBox::get_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::get_Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::AxisAlignedBox*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.AxisAlignedBox.get_Bounds
::UnityEngine::Bounds Oculus::Interaction::Surfaces::AxisAlignedBox::get_Bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::get_Bounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Bounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.AxisAlignedBox.ClosestSurfacePoint
bool Oculus::Interaction::Surfaces::AxisAlignedBox::ClosestSurfacePoint(ByRef<::UnityEngine::Vector3> point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::ClosestSurfacePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestSurfacePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(point), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.AxisAlignedBox.Raycast
bool Oculus::Interaction::Surfaces::AxisAlignedBox::Raycast(ByRef<::UnityEngine::Ray> ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ray), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.AxisAlignedBox.Start
void Oculus::Interaction::Surfaces::AxisAlignedBox::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.AxisAlignedBox.IsWithinVolume
bool Oculus::Interaction::Surfaces::AxisAlignedBox::IsWithinVolume(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::IsWithinVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsWithinVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point);
}
// Autogenerated method: Oculus.Interaction.Surfaces.AxisAlignedBox.FindClosestBoxSide
::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface Oculus::Interaction::Surfaces::AxisAlignedBox::FindClosestBoxSide(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::FindClosestBoxSide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindClosestBoxSide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface, false>(this, ___internal__method, point);
}
// Autogenerated method: Oculus.Interaction.Surfaces.AxisAlignedBox.ClosestSurfaceNormal
::UnityEngine::Vector3 Oculus::Interaction::Surfaces::AxisAlignedBox::ClosestSurfaceNormal(::UnityEngine::Vector3 point, ::System::Nullable_1<::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface> side) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::ClosestSurfaceNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestSurfaceNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(side)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, point, side);
}
// Autogenerated method: Oculus.Interaction.Surfaces.AxisAlignedBox.Oculus.Interaction.Surfaces.ISurface.Raycast
bool Oculus::Interaction::Surfaces::AxisAlignedBox::Oculus_Interaction_Surfaces_ISurface_Raycast(ByRef<::UnityEngine::Ray> ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::Oculus.Interaction.Surfaces.ISurface.Raycast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::AxisAlignedBox*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ray), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.AxisAlignedBox.Oculus.Interaction.Surfaces.ISurface.ClosestSurfacePoint
bool Oculus::Interaction::Surfaces::AxisAlignedBox::Oculus_Interaction_Surfaces_ISurface_ClosestSurfacePoint(ByRef<::UnityEngine::Vector3> point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::Oculus.Interaction.Surfaces.ISurface.ClosestSurfacePoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::AxisAlignedBox*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(point), byref(hit), maxDistance);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.AxisAlignedBox/BoxSurface
#include "Oculus/Interaction/Surfaces/AxisAlignedBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Surfaces.AxisAlignedBox/BoxSurface XMin
::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_get_XMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_get_XMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface>("Oculus.Interaction.Surfaces", "AxisAlignedBox/BoxSurface", "XMin"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Surfaces.AxisAlignedBox/BoxSurface XMin
void Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_set_XMin(::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_set_XMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "AxisAlignedBox/BoxSurface", "XMin", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Surfaces.AxisAlignedBox/BoxSurface YMin
::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_get_YMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_get_YMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface>("Oculus.Interaction.Surfaces", "AxisAlignedBox/BoxSurface", "YMin"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Surfaces.AxisAlignedBox/BoxSurface YMin
void Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_set_YMin(::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_set_YMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "AxisAlignedBox/BoxSurface", "YMin", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Surfaces.AxisAlignedBox/BoxSurface ZMin
::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_get_ZMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_get_ZMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface>("Oculus.Interaction.Surfaces", "AxisAlignedBox/BoxSurface", "ZMin"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Surfaces.AxisAlignedBox/BoxSurface ZMin
void Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_set_ZMin(::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_set_ZMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "AxisAlignedBox/BoxSurface", "ZMin", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Surfaces.AxisAlignedBox/BoxSurface XMax
::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_get_XMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_get_XMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface>("Oculus.Interaction.Surfaces", "AxisAlignedBox/BoxSurface", "XMax"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Surfaces.AxisAlignedBox/BoxSurface XMax
void Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_set_XMax(::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_set_XMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "AxisAlignedBox/BoxSurface", "XMax", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Surfaces.AxisAlignedBox/BoxSurface YMax
::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_get_YMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_get_YMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface>("Oculus.Interaction.Surfaces", "AxisAlignedBox/BoxSurface", "YMax"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Surfaces.AxisAlignedBox/BoxSurface YMax
void Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_set_YMax(::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_set_YMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "AxisAlignedBox/BoxSurface", "YMax", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Surfaces.AxisAlignedBox/BoxSurface ZMax
::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_get_ZMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_get_ZMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface>("Oculus.Interaction.Surfaces", "AxisAlignedBox/BoxSurface", "ZMax"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Surfaces.AxisAlignedBox/BoxSurface ZMax
void Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_set_ZMax(::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::_set_ZMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "AxisAlignedBox/BoxSurface", "ZMax", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::AxisAlignedBox::BoxSurface::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.BoundsClipper
#include "Oculus/Interaction/Surfaces/BoundsClipper.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Surfaces::BoundsClipper::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::BoundsClipper::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _size
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Surfaces::BoundsClipper::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::BoundsClipper::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Surfaces.BoundsClipper.get_Position
::UnityEngine::Vector3 Oculus::Interaction::Surfaces::BoundsClipper::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::BoundsClipper::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.BoundsClipper.set_Position
void Oculus::Interaction::Surfaces::BoundsClipper::set_Position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::BoundsClipper::set_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.BoundsClipper.get_Size
::UnityEngine::Vector3 Oculus::Interaction::Surfaces::BoundsClipper::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::BoundsClipper::get_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.BoundsClipper.set_Size
void Oculus::Interaction::Surfaces::BoundsClipper::set_Size(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::BoundsClipper::set_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.BoundsClipper.GetLocalBounds
bool Oculus::Interaction::Surfaces::BoundsClipper::GetLocalBounds(::UnityEngine::Transform* localTo, ByRef<::UnityEngine::Bounds> bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::BoundsClipper::GetLocalBounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::BoundsClipper*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, localTo, byref(bounds));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.CircleSurface
#include "Oculus/Interaction/Surfaces/CircleSurface.hpp"
// Including type: Oculus.Interaction.Surfaces.PlaneSurface
#include "Oculus/Interaction/Surfaces/PlaneSurface.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: Oculus.Interaction.Surfaces.SurfaceHit
#include "Oculus/Interaction/Surfaces/SurfaceHit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Surfaces.PlaneSurface _planeSurface
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Surfaces::PlaneSurface*& Oculus::Interaction::Surfaces::CircleSurface::dyn__planeSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CircleSurface::dyn__planeSurface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_planeSurface"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Surfaces::PlaneSurface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radius
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Surfaces::CircleSurface::dyn__radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CircleSurface::dyn__radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CircleSurface.get_Transform
::UnityEngine::Transform* Oculus::Interaction::Surfaces::CircleSurface::get_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CircleSurface::get_Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::CircleSurface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CircleSurface.get_BackingSurface
::Oculus::Interaction::Surfaces::ISurface* Oculus::Interaction::Surfaces::CircleSurface::get_BackingSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CircleSurface::get_BackingSurface");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::CircleSurface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Surfaces::ISurface*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CircleSurface.Start
void Oculus::Interaction::Surfaces::CircleSurface::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CircleSurface::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::CircleSurface*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CircleSurface.Raycast
bool Oculus::Interaction::Surfaces::CircleSurface::Raycast(ByRef<::UnityEngine::Ray> ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CircleSurface::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ray), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CircleSurface.ClosestSurfacePoint
bool Oculus::Interaction::Surfaces::CircleSurface::ClosestSurfacePoint(ByRef<::UnityEngine::Vector3> point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CircleSurface::ClosestSurfacePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestSurfacePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(point), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CircleSurface.InjectAllCircleProximityField
void Oculus::Interaction::Surfaces::CircleSurface::InjectAllCircleProximityField(::Oculus::Interaction::Surfaces::PlaneSurface* planeSurface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CircleSurface::InjectAllCircleProximityField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllCircleProximityField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(planeSurface)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, planeSurface);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CircleSurface.InjectPlaneSurface
void Oculus::Interaction::Surfaces::CircleSurface::InjectPlaneSurface(::Oculus::Interaction::Surfaces::PlaneSurface* planeSurface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CircleSurface::InjectPlaneSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPlaneSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(planeSurface)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, planeSurface);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CircleSurface.InjectOptionalRadius
void Oculus::Interaction::Surfaces::CircleSurface::InjectOptionalRadius(float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CircleSurface::InjectOptionalRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, radius);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CircleSurface.Oculus.Interaction.Surfaces.ISurface.Raycast
bool Oculus::Interaction::Surfaces::CircleSurface::Oculus_Interaction_Surfaces_ISurface_Raycast(ByRef<::UnityEngine::Ray> ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CircleSurface::Oculus.Interaction.Surfaces.ISurface.Raycast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::CircleSurface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ray), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CircleSurface.Oculus.Interaction.Surfaces.ISurface.ClosestSurfacePoint
bool Oculus::Interaction::Surfaces::CircleSurface::Oculus_Interaction_Surfaces_ISurface_ClosestSurfacePoint(ByRef<::UnityEngine::Vector3> point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CircleSurface::Oculus.Interaction.Surfaces.ISurface.ClosestSurfacePoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::CircleSurface*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(point), byref(hit), maxDistance);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.ClippedCylinderSurface
#include "Oculus/Interaction/Surfaces/ClippedCylinderSurface.hpp"
// Including type: Oculus.Interaction.Surfaces.ClippedCylinderSurface/<>c
#include "Oculus/Interaction/Surfaces/ClippedCylinderSurface_--c.hpp"
// Including type: Oculus.Interaction.Surfaces.ICylinderClipper
#include "Oculus/Interaction/Surfaces/ICylinderClipper.hpp"
// Including type: Oculus.Interaction.Surfaces.CylinderSurface
#include "Oculus/Interaction/Surfaces/CylinderSurface.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.Cylinder
#include "Oculus/Interaction/Cylinder.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: Oculus.Interaction.Surfaces.SurfaceHit
#include "Oculus/Interaction/Surfaces/SurfaceHit.hpp"
// Including type: Oculus.Interaction.Surfaces.CylinderSegment
#include "Oculus/Interaction/Surfaces/CylinderSegment.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single EPSILON
float Oculus::Interaction::Surfaces::ClippedCylinderSurface::_get_EPSILON() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::_get_EPSILON");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Interaction.Surfaces", "ClippedCylinderSurface", "EPSILON"));
}
// Autogenerated static field setter
// Set static field: static private System.Single EPSILON
void Oculus::Interaction::Surfaces::ClippedCylinderSurface::_set_EPSILON(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::_set_EPSILON");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "ClippedCylinderSurface", "EPSILON", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Surfaces.CylinderSurface _cylinderSurface
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Surfaces::CylinderSurface*& Oculus::Interaction::Surfaces::ClippedCylinderSurface::dyn__cylinderSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::dyn__cylinderSurface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cylinderSurface"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Surfaces::CylinderSurface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Object> _clippers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& Oculus::Interaction::Surfaces::ClippedCylinderSurface::dyn__clippers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::dyn__clippers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clippers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.Surfaces.ICylinderClipper> <Clippers>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::Surfaces::ICylinderClipper*>*& Oculus::Interaction::Surfaces::ClippedCylinderSurface::dyn_$Clippers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::dyn_$Clippers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Clippers>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::Surfaces::ICylinderClipper*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface.get_Clippers
::System::Collections::Generic::List_1<::Oculus::Interaction::Surfaces::ICylinderClipper*>* Oculus::Interaction::Surfaces::ClippedCylinderSurface::get_Clippers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::get_Clippers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Clippers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Oculus::Interaction::Surfaces::ICylinderClipper*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface.set_Clippers
void Oculus::Interaction::Surfaces::ClippedCylinderSurface::set_Clippers(::System::Collections::Generic::List_1<::Oculus::Interaction::Surfaces::ICylinderClipper*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::set_Clippers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Clippers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface.get_Transform
::UnityEngine::Transform* Oculus::Interaction::Surfaces::ClippedCylinderSurface::get_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::get_Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ClippedCylinderSurface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface.get_BackingSurface
::Oculus::Interaction::Surfaces::ISurface* Oculus::Interaction::Surfaces::ClippedCylinderSurface::get_BackingSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::get_BackingSurface");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ClippedCylinderSurface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Surfaces::ISurface*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface.get_Cylinder
::Oculus::Interaction::Cylinder* Oculus::Interaction::Surfaces::ClippedCylinderSurface::get_Cylinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::get_Cylinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cylinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Cylinder*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface.GetClippers
::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::Surfaces::ICylinderClipper*>* Oculus::Interaction::Surfaces::ClippedCylinderSurface::GetClippers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::GetClippers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ClippedCylinderSurface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::Surfaces::ICylinderClipper*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface.Raycast
bool Oculus::Interaction::Surfaces::ClippedCylinderSurface::Raycast(ByRef<::UnityEngine::Ray> ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ray), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface.Awake
void Oculus::Interaction::Surfaces::ClippedCylinderSurface::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ClippedCylinderSurface*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface.Start
void Oculus::Interaction::Surfaces::ClippedCylinderSurface::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ClippedCylinderSurface*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface.GetClipped
bool Oculus::Interaction::Surfaces::ClippedCylinderSurface::GetClipped(ByRef<::Oculus::Interaction::Surfaces::CylinderSegment> clipped) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::GetClipped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::CylinderSegment&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(clipped));
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface.ClosestSurfacePoint
bool Oculus::Interaction::Surfaces::ClippedCylinderSurface::ClosestSurfacePoint(ByRef<::UnityEngine::Vector3> point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::ClosestSurfacePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestSurfacePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(point), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface.InjectAllClippedCylinderSurface
void Oculus::Interaction::Surfaces::ClippedCylinderSurface::InjectAllClippedCylinderSurface(::Oculus::Interaction::Surfaces::CylinderSurface* surface, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Surfaces::ICylinderClipper*>* clippers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::InjectAllClippedCylinderSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllClippedCylinderSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surface), ::il2cpp_utils::ExtractType(clippers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, surface, clippers);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface.InjectCylinderSurface
void Oculus::Interaction::Surfaces::ClippedCylinderSurface::InjectCylinderSurface(::Oculus::Interaction::Surfaces::CylinderSurface* surface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::InjectCylinderSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectCylinderSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surface)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, surface);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface.InjectClippers
void Oculus::Interaction::Surfaces::ClippedCylinderSurface::InjectClippers(::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Surfaces::ICylinderClipper*>* clippers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::InjectClippers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectClippers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clippers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clippers);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface.Oculus.Interaction.Surfaces.ISurface.Raycast
bool Oculus::Interaction::Surfaces::ClippedCylinderSurface::Oculus_Interaction_Surfaces_ISurface_Raycast(ByRef<::UnityEngine::Ray> ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::Oculus.Interaction.Surfaces.ISurface.Raycast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ClippedCylinderSurface*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ray), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface.Oculus.Interaction.Surfaces.ISurface.ClosestSurfacePoint
bool Oculus::Interaction::Surfaces::ClippedCylinderSurface::Oculus_Interaction_Surfaces_ISurface_ClosestSurfacePoint(ByRef<::UnityEngine::Vector3> point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::Oculus.Interaction.Surfaces.ISurface.ClosestSurfacePoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ClippedCylinderSurface*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(point), byref(hit), maxDistance);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.ClippedCylinderSurface/<>c
#include "Oculus/Interaction/Surfaces/ClippedCylinderSurface_--c.hpp"
// Including type: System.Converter`2
#include "System/Converter_2.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.Surfaces.ICylinderClipper
#include "Oculus/Interaction/Surfaces/ICylinderClipper.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Surfaces.ClippedCylinderSurface/<>c <>9
::Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c* Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c*>("Oculus.Interaction.Surfaces", "ClippedCylinderSurface/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Surfaces.ClippedCylinderSurface/<>c <>9
void Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::_set_$$9(::Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "ClippedCylinderSurface/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.Surfaces.ICylinderClipper> <>9__13_0
::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::Surfaces::ICylinderClipper*>* Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::_get_$$9__13_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::_get_$$9__13_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::Surfaces::ICylinderClipper*>*>("Oculus.Interaction.Surfaces", "ClippedCylinderSurface/<>c", "<>9__13_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.Surfaces.ICylinderClipper> <>9__13_0
void Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::_set_$$9__13_0(::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::Surfaces::ICylinderClipper*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::_set_$$9__13_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "ClippedCylinderSurface/<>c", "<>9__13_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.Surfaces.ICylinderClipper> <>9__15_0
::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::Surfaces::ICylinderClipper*>* Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::_get_$$9__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::_get_$$9__15_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::Surfaces::ICylinderClipper*>*>("Oculus.Interaction.Surfaces", "ClippedCylinderSurface/<>c", "<>9__15_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.Surfaces.ICylinderClipper> <>9__15_0
void Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::_set_$$9__15_0(::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::Surfaces::ICylinderClipper*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::_set_$$9__15_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "ClippedCylinderSurface/<>c", "<>9__15_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Oculus.Interaction.Surfaces.ICylinderClipper,UnityEngine.Object> <>9__21_0
::System::Func_2<::Oculus::Interaction::Surfaces::ICylinderClipper*, ::UnityEngine::Object*>* Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::_get_$$9__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::_get_$$9__21_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Oculus::Interaction::Surfaces::ICylinderClipper*, ::UnityEngine::Object*>*>("Oculus.Interaction.Surfaces", "ClippedCylinderSurface/<>c", "<>9__21_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Oculus.Interaction.Surfaces.ICylinderClipper,UnityEngine.Object> <>9__21_0
void Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::_set_$$9__21_0(::System::Func_2<::Oculus::Interaction::Surfaces::ICylinderClipper*, ::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::_set_$$9__21_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "ClippedCylinderSurface/<>c", "<>9__21_0", value)));
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface/<>c..cctor
void Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Surfaces", "ClippedCylinderSurface/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface/<>c.<GetClippers>b__13_0
::Oculus::Interaction::Surfaces::ICylinderClipper* Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::$GetClippers$b__13_0(::UnityEngine::Object* clipper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::<GetClippers>b__13_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetClippers>b__13_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipper)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Surfaces::ICylinderClipper*, false>(this, ___internal__method, clipper);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface/<>c.<Awake>b__15_0
::Oculus::Interaction::Surfaces::ICylinderClipper* Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::$Awake$b__15_0(::UnityEngine::Object* clipper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::<Awake>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipper)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Surfaces::ICylinderClipper*, false>(this, ___internal__method, clipper);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedCylinderSurface/<>c.<InjectClippers>b__21_0
::UnityEngine::Object* Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::$InjectClippers$b__21_0(::Oculus::Interaction::Surfaces::ICylinderClipper* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedCylinderSurface::$$c::<InjectClippers>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InjectClippers>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.ClippedPlaneSurface
#include "Oculus/Interaction/Surfaces/ClippedPlaneSurface.hpp"
// Including type: Oculus.Interaction.Surfaces.ClippedPlaneSurface/<>c
#include "Oculus/Interaction/Surfaces/ClippedPlaneSurface_--c.hpp"
// Including type: Oculus.Interaction.Surfaces.IBoundsClipper
#include "Oculus/Interaction/Surfaces/IBoundsClipper.hpp"
// Including type: Oculus.Interaction.Surfaces.PlaneSurface
#include "Oculus/Interaction/Surfaces/PlaneSurface.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: Oculus.Interaction.Surfaces.SurfaceHit
#include "Oculus/Interaction/Surfaces/SurfaceHit.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Bounds InfiniteBounds
::UnityEngine::Bounds Oculus::Interaction::Surfaces::ClippedPlaneSurface::_get_InfiniteBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::_get_InfiniteBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bounds>("Oculus.Interaction.Surfaces", "ClippedPlaneSurface", "InfiniteBounds"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Bounds InfiniteBounds
void Oculus::Interaction::Surfaces::ClippedPlaneSurface::_set_InfiniteBounds(::UnityEngine::Bounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::_set_InfiniteBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "ClippedPlaneSurface", "InfiniteBounds", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Bounds PlaneBounds
::UnityEngine::Bounds Oculus::Interaction::Surfaces::ClippedPlaneSurface::_get_PlaneBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::_get_PlaneBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bounds>("Oculus.Interaction.Surfaces", "ClippedPlaneSurface", "PlaneBounds"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Bounds PlaneBounds
void Oculus::Interaction::Surfaces::ClippedPlaneSurface::_set_PlaneBounds(::UnityEngine::Bounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::_set_PlaneBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "ClippedPlaneSurface", "PlaneBounds", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Surfaces.PlaneSurface _planeSurface
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Surfaces::PlaneSurface*& Oculus::Interaction::Surfaces::ClippedPlaneSurface::dyn__planeSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::dyn__planeSurface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_planeSurface"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Surfaces::PlaneSurface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Object> _clippers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& Oculus::Interaction::Surfaces::ClippedPlaneSurface::dyn__clippers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::dyn__clippers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clippers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.Surfaces.IBoundsClipper> <Clippers>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::Surfaces::IBoundsClipper*>*& Oculus::Interaction::Surfaces::ClippedPlaneSurface::dyn_$Clippers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::dyn_$Clippers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Clippers>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::Surfaces::IBoundsClipper*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface.get_Clippers
::System::Collections::Generic::List_1<::Oculus::Interaction::Surfaces::IBoundsClipper*>* Oculus::Interaction::Surfaces::ClippedPlaneSurface::get_Clippers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::get_Clippers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Clippers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Oculus::Interaction::Surfaces::IBoundsClipper*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface.set_Clippers
void Oculus::Interaction::Surfaces::ClippedPlaneSurface::set_Clippers(::System::Collections::Generic::List_1<::Oculus::Interaction::Surfaces::IBoundsClipper*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::set_Clippers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Clippers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface.get_BackingSurface
::Oculus::Interaction::Surfaces::ISurface* Oculus::Interaction::Surfaces::ClippedPlaneSurface::get_BackingSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::get_BackingSurface");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ClippedPlaneSurface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Surfaces::ISurface*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface.get_Transform
::UnityEngine::Transform* Oculus::Interaction::Surfaces::ClippedPlaneSurface::get_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::get_Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ClippedPlaneSurface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface.GetClippers
::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::Surfaces::IBoundsClipper*>* Oculus::Interaction::Surfaces::ClippedPlaneSurface::GetClippers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::GetClippers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ClippedPlaneSurface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::Surfaces::IBoundsClipper*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface.Awake
void Oculus::Interaction::Surfaces::ClippedPlaneSurface::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ClippedPlaneSurface*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface.Start
void Oculus::Interaction::Surfaces::ClippedPlaneSurface::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ClippedPlaneSurface*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface.ClipBounds
bool Oculus::Interaction::Surfaces::ClippedPlaneSurface::ClipBounds(ByRef<::UnityEngine::Bounds> bounds, ByRef<::UnityEngine::Bounds> clipped) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::ClipBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClipBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Bounds&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(bounds), byref(clipped));
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface.ClampPoint
::UnityEngine::Vector3 Oculus::Interaction::Surfaces::ClippedPlaneSurface::ClampPoint(ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Bounds> bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::ClampPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClampPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(bounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, byref(point), byref(bounds));
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface.ClosestSurfacePoint
bool Oculus::Interaction::Surfaces::ClippedPlaneSurface::ClosestSurfacePoint(ByRef<::UnityEngine::Vector3> point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::ClosestSurfacePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestSurfacePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(point), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface.Raycast
bool Oculus::Interaction::Surfaces::ClippedPlaneSurface::Raycast(ByRef<::UnityEngine::Ray> ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ray), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface.InjectAllClippedPlaneSurface
void Oculus::Interaction::Surfaces::ClippedPlaneSurface::InjectAllClippedPlaneSurface(::Oculus::Interaction::Surfaces::PlaneSurface* planeSurface, ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Surfaces::IBoundsClipper*>* clippers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::InjectAllClippedPlaneSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllClippedPlaneSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(planeSurface), ::il2cpp_utils::ExtractType(clippers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, planeSurface, clippers);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface.InjectPlaneSurface
void Oculus::Interaction::Surfaces::ClippedPlaneSurface::InjectPlaneSurface(::Oculus::Interaction::Surfaces::PlaneSurface* planeSurface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::InjectPlaneSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPlaneSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(planeSurface)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, planeSurface);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface.InjectClippers
void Oculus::Interaction::Surfaces::ClippedPlaneSurface::InjectClippers(::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Surfaces::IBoundsClipper*>* clippers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::InjectClippers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectClippers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clippers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clippers);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface..cctor
void Oculus::Interaction::Surfaces::ClippedPlaneSurface::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Surfaces", "ClippedPlaneSurface", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface.Oculus.Interaction.Surfaces.ISurface.Raycast
bool Oculus::Interaction::Surfaces::ClippedPlaneSurface::Oculus_Interaction_Surfaces_ISurface_Raycast(ByRef<::UnityEngine::Ray> ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::Oculus.Interaction.Surfaces.ISurface.Raycast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ClippedPlaneSurface*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ray), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface.Oculus.Interaction.Surfaces.ISurface.ClosestSurfacePoint
bool Oculus::Interaction::Surfaces::ClippedPlaneSurface::Oculus_Interaction_Surfaces_ISurface_ClosestSurfacePoint(ByRef<::UnityEngine::Vector3> point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::Oculus.Interaction.Surfaces.ISurface.ClosestSurfacePoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ClippedPlaneSurface*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(point), byref(hit), maxDistance);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.ClippedPlaneSurface/<>c
#include "Oculus/Interaction/Surfaces/ClippedPlaneSurface_--c.hpp"
// Including type: System.Converter`2
#include "System/Converter_2.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.Surfaces.IBoundsClipper
#include "Oculus/Interaction/Surfaces/IBoundsClipper.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Surfaces.ClippedPlaneSurface/<>c <>9
::Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c* Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c*>("Oculus.Interaction.Surfaces", "ClippedPlaneSurface/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Surfaces.ClippedPlaneSurface/<>c <>9
void Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::_set_$$9(::Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "ClippedPlaneSurface/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.Surfaces.IBoundsClipper> <>9__12_0
::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::Surfaces::IBoundsClipper*>* Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::Surfaces::IBoundsClipper*>*>("Oculus.Interaction.Surfaces", "ClippedPlaneSurface/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.Surfaces.IBoundsClipper> <>9__12_0
void Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::_set_$$9__12_0(::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::Surfaces::IBoundsClipper*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "ClippedPlaneSurface/<>c", "<>9__12_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.Surfaces.IBoundsClipper> <>9__13_0
::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::Surfaces::IBoundsClipper*>* Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::_get_$$9__13_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::_get_$$9__13_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::Surfaces::IBoundsClipper*>*>("Oculus.Interaction.Surfaces", "ClippedPlaneSurface/<>c", "<>9__13_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.Surfaces.IBoundsClipper> <>9__13_0
void Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::_set_$$9__13_0(::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::Surfaces::IBoundsClipper*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::_set_$$9__13_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "ClippedPlaneSurface/<>c", "<>9__13_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Oculus.Interaction.Surfaces.IBoundsClipper,UnityEngine.Object> <>9__21_0
::System::Func_2<::Oculus::Interaction::Surfaces::IBoundsClipper*, ::UnityEngine::Object*>* Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::_get_$$9__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::_get_$$9__21_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Oculus::Interaction::Surfaces::IBoundsClipper*, ::UnityEngine::Object*>*>("Oculus.Interaction.Surfaces", "ClippedPlaneSurface/<>c", "<>9__21_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Oculus.Interaction.Surfaces.IBoundsClipper,UnityEngine.Object> <>9__21_0
void Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::_set_$$9__21_0(::System::Func_2<::Oculus::Interaction::Surfaces::IBoundsClipper*, ::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::_set_$$9__21_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "ClippedPlaneSurface/<>c", "<>9__21_0", value)));
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface/<>c..cctor
void Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Surfaces", "ClippedPlaneSurface/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface/<>c.<GetClippers>b__12_0
::Oculus::Interaction::Surfaces::IBoundsClipper* Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::$GetClippers$b__12_0(::UnityEngine::Object* clipper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::<GetClippers>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetClippers>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipper)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Surfaces::IBoundsClipper*, false>(this, ___internal__method, clipper);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface/<>c.<Awake>b__13_0
::Oculus::Interaction::Surfaces::IBoundsClipper* Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::$Awake$b__13_0(::UnityEngine::Object* clipper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::<Awake>b__13_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__13_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipper)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Surfaces::IBoundsClipper*, false>(this, ___internal__method, clipper);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ClippedPlaneSurface/<>c.<InjectClippers>b__21_0
::UnityEngine::Object* Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::$InjectClippers$b__21_0(::Oculus::Interaction::Surfaces::IBoundsClipper* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ClippedPlaneSurface::$$c::<InjectClippers>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InjectClippers>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.ColliderSurface
#include "Oculus/Interaction/Surfaces/ColliderSurface.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: Oculus.Interaction.Surfaces.SurfaceHit
#include "Oculus/Interaction/Surfaces/SurfaceHit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider _collider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& Oculus::Interaction::Surfaces::ColliderSurface::dyn__collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ColliderSurface::dyn__collider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ColliderSurface.Start
void Oculus::Interaction::Surfaces::ColliderSurface::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ColliderSurface::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ColliderSurface*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ColliderSurface.get_Transform
::UnityEngine::Transform* Oculus::Interaction::Surfaces::ColliderSurface::get_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ColliderSurface::get_Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ColliderSurface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ColliderSurface.get_Bounds
::UnityEngine::Bounds Oculus::Interaction::Surfaces::ColliderSurface::get_Bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ColliderSurface::get_Bounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ColliderSurface*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ColliderSurface.Raycast
bool Oculus::Interaction::Surfaces::ColliderSurface::Raycast(ByRef<::UnityEngine::Ray> ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ColliderSurface::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ray), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ColliderSurface.ClosestSurfacePoint
bool Oculus::Interaction::Surfaces::ColliderSurface::ClosestSurfacePoint(ByRef<::UnityEngine::Vector3> point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ColliderSurface::ClosestSurfacePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestSurfacePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(point), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ColliderSurface.InjectAllColliderSurface
void Oculus::Interaction::Surfaces::ColliderSurface::InjectAllColliderSurface(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ColliderSurface::InjectAllColliderSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllColliderSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ColliderSurface.InjectCollider
void Oculus::Interaction::Surfaces::ColliderSurface::InjectCollider(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ColliderSurface::InjectCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ColliderSurface.Oculus.Interaction.Surfaces.ISurface.Raycast
bool Oculus::Interaction::Surfaces::ColliderSurface::Oculus_Interaction_Surfaces_ISurface_Raycast(ByRef<::UnityEngine::Ray> ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ColliderSurface::Oculus.Interaction.Surfaces.ISurface.Raycast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ColliderSurface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ray), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ColliderSurface.Oculus.Interaction.Surfaces.ISurface.ClosestSurfacePoint
bool Oculus::Interaction::Surfaces::ColliderSurface::Oculus_Interaction_Surfaces_ISurface_ClosestSurfacePoint(ByRef<::UnityEngine::Vector3> point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ColliderSurface::Oculus.Interaction.Surfaces.ISurface.ClosestSurfacePoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ColliderSurface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(point), byref(hit), maxDistance);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.CylinderClipper
#include "Oculus/Interaction/Surfaces/CylinderClipper.hpp"
// Including type: Oculus.Interaction.Surfaces.CylinderSegment
#include "Oculus/Interaction/Surfaces/CylinderSegment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _rotation
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Surfaces::CylinderClipper::dyn__rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderClipper::dyn__rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _arcDegrees
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Surfaces::CylinderClipper::dyn__arcDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderClipper::dyn__arcDegrees");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arcDegrees"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bottom
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Surfaces::CylinderClipper::dyn__bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderClipper::dyn__bottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bottom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _top
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Surfaces::CylinderClipper::dyn__top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderClipper::dyn__top");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_top"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderClipper.get_ArcDegrees
float Oculus::Interaction::Surfaces::CylinderClipper::get_ArcDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderClipper::get_ArcDegrees");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArcDegrees", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderClipper.set_ArcDegrees
void Oculus::Interaction::Surfaces::CylinderClipper::set_ArcDegrees(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderClipper::set_ArcDegrees");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ArcDegrees", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderClipper.get_Rotation
float Oculus::Interaction::Surfaces::CylinderClipper::get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderClipper::get_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderClipper.set_Rotation
void Oculus::Interaction::Surfaces::CylinderClipper::set_Rotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderClipper::set_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderClipper.get_Bottom
float Oculus::Interaction::Surfaces::CylinderClipper::get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderClipper::get_Bottom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Bottom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderClipper.set_Bottom
void Oculus::Interaction::Surfaces::CylinderClipper::set_Bottom(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderClipper::set_Bottom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Bottom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderClipper.get_Top
float Oculus::Interaction::Surfaces::CylinderClipper::get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderClipper::get_Top");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Top", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderClipper.set_Top
void Oculus::Interaction::Surfaces::CylinderClipper::set_Top(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderClipper::set_Top");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Top", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderClipper.GetCylinderSegment
bool Oculus::Interaction::Surfaces::CylinderClipper::GetCylinderSegment(ByRef<::Oculus::Interaction::Surfaces::CylinderSegment> segment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderClipper::GetCylinderSegment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::CylinderClipper*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(segment));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.CylinderSurface
#include "Oculus/Interaction/Surfaces/CylinderSurface.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.Cylinder
#include "Oculus/Interaction/Cylinder.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Oculus.Interaction.Surfaces.SurfaceHit
#include "Oculus/Interaction/Surfaces/SurfaceHit.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Cylinder _cylinder
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Cylinder*& Oculus::Interaction::Surfaces::CylinderSurface::dyn__cylinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::dyn__cylinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cylinder"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Cylinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Surfaces.CylinderSurface/NormalFacing _facing
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing& Oculus::Interaction::Surfaces::CylinderSurface::dyn__facing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::dyn__facing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_facing"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _height
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Surfaces::CylinderSurface::dyn__height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::dyn__height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Surfaces::CylinderSurface::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.get_IsValid
bool Oculus::Interaction::Surfaces::CylinderSurface::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.get_Radius
float Oculus::Interaction::Surfaces::CylinderSurface::get_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::get_Radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.get_Cylinder
::Oculus::Interaction::Cylinder* Oculus::Interaction::Surfaces::CylinderSurface::get_Cylinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::get_Cylinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cylinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Cylinder*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.get_Transform
::UnityEngine::Transform* Oculus::Interaction::Surfaces::CylinderSurface::get_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::get_Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::CylinderSurface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.get_Bounds
::UnityEngine::Bounds Oculus::Interaction::Surfaces::CylinderSurface::get_Bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::get_Bounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::CylinderSurface*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.get_Facing
::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing Oculus::Interaction::Surfaces::CylinderSurface::get_Facing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::get_Facing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Facing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.set_Facing
void Oculus::Interaction::Surfaces::CylinderSurface::set_Facing(::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::set_Facing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Facing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.get_Height
float Oculus::Interaction::Surfaces::CylinderSurface::get_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::get_Height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.set_Height
void Oculus::Interaction::Surfaces::CylinderSurface::set_Height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::set_Height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.Start
void Oculus::Interaction::Surfaces::CylinderSurface::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::CylinderSurface*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.ClosestSurfacePoint
bool Oculus::Interaction::Surfaces::CylinderSurface::ClosestSurfacePoint(ByRef<::UnityEngine::Vector3> point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::ClosestSurfacePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestSurfacePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(point), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.Raycast
bool Oculus::Interaction::Surfaces::CylinderSurface::Raycast(ByRef<::UnityEngine::Ray> ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ray), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.TransformScale
float Oculus::Interaction::Surfaces::CylinderSurface::TransformScale(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::TransformScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, val);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.CancelY
::UnityEngine::Vector3 Oculus::Interaction::Surfaces::CylinderSurface::CancelY(ByRef<::UnityEngine::Vector3> vector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::CancelY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Surfaces", "CylinderSurface", "CancelY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(vector));
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.InjectAllCylinderSurface
void Oculus::Interaction::Surfaces::CylinderSurface::InjectAllCylinderSurface(::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing facing, ::Oculus::Interaction::Cylinder* cylinder, float height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::InjectAllCylinderSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllCylinderSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facing), ::il2cpp_utils::ExtractType(cylinder), ::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facing, cylinder, height);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.InjectNormalFacing
void Oculus::Interaction::Surfaces::CylinderSurface::InjectNormalFacing(::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing facing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::InjectNormalFacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectNormalFacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facing);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.InjectCylinder
void Oculus::Interaction::Surfaces::CylinderSurface::InjectCylinder(::Oculus::Interaction::Cylinder* cylinder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::InjectCylinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectCylinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cylinder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cylinder);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.InjectHeight
void Oculus::Interaction::Surfaces::CylinderSurface::InjectHeight(float height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::InjectHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, height);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.Oculus.Interaction.Surfaces.ISurface.Raycast
bool Oculus::Interaction::Surfaces::CylinderSurface::Oculus_Interaction_Surfaces_ISurface_Raycast(ByRef<::UnityEngine::Ray> ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::Oculus.Interaction.Surfaces.ISurface.Raycast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::CylinderSurface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ray), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSurface.Oculus.Interaction.Surfaces.ISurface.ClosestSurfacePoint
bool Oculus::Interaction::Surfaces::CylinderSurface::Oculus_Interaction_Surfaces_ISurface_ClosestSurfacePoint(ByRef<::UnityEngine::Vector3> point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::Oculus.Interaction.Surfaces.ISurface.ClosestSurfacePoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::CylinderSurface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(point), byref(hit), maxDistance);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.CylinderSurface/NormalFacing
#include "Oculus/Interaction/Surfaces/CylinderSurface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Surfaces.CylinderSurface/NormalFacing Any
::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing>("Oculus.Interaction.Surfaces", "CylinderSurface/NormalFacing", "Any"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Surfaces.CylinderSurface/NormalFacing Any
void Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing::_set_Any(::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "CylinderSurface/NormalFacing", "Any", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Surfaces.CylinderSurface/NormalFacing In
::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing::_get_In() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing::_get_In");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing>("Oculus.Interaction.Surfaces", "CylinderSurface/NormalFacing", "In"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Surfaces.CylinderSurface/NormalFacing In
void Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing::_set_In(::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing::_set_In");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "CylinderSurface/NormalFacing", "In", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Surfaces.CylinderSurface/NormalFacing Out
::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing::_get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing::_get_Out");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing>("Oculus.Interaction.Surfaces", "CylinderSurface/NormalFacing", "Out"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Surfaces.CylinderSurface/NormalFacing Out
void Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing::_set_Out(::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing::_set_Out");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "CylinderSurface/NormalFacing", "Out", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSurface::NormalFacing::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.IBounds
#include "Oculus/Interaction/Surfaces/IBounds.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Surfaces.IBounds.get_Bounds
::UnityEngine::Bounds Oculus::Interaction::Surfaces::IBounds::get_Bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::IBounds::get_Bounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::IBounds*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.ISurface
#include "Oculus/Interaction/Surfaces/ISurface.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: Oculus.Interaction.Surfaces.SurfaceHit
#include "Oculus/Interaction/Surfaces/SurfaceHit.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Surfaces.ISurface.get_Transform
::UnityEngine::Transform* Oculus::Interaction::Surfaces::ISurface::get_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ISurface::get_Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ISurface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ISurface.Raycast
bool Oculus::Interaction::Surfaces::ISurface::Raycast(ByRef<::UnityEngine::Ray> ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ISurface::Raycast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ISurface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ray), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.ISurface.ClosestSurfacePoint
bool Oculus::Interaction::Surfaces::ISurface::ClosestSurfacePoint(ByRef<::UnityEngine::Vector3> point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ISurface::ClosestSurfacePoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ISurface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(point), byref(hit), maxDistance);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.SurfaceHit
#include "Oculus/Interaction/Surfaces/SurfaceHit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <Point>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Surfaces::SurfaceHit::dyn_$Point$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::SurfaceHit::dyn_$Point$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Point>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <Normal>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Surfaces::SurfaceHit::dyn_$Normal$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::SurfaceHit::dyn_$Normal$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Normal>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <Distance>k__BackingField
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Surfaces::SurfaceHit::dyn_$Distance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::SurfaceHit::dyn_$Distance$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Distance>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Surfaces.SurfaceHit.get_Point
::UnityEngine::Vector3 Oculus::Interaction::Surfaces::SurfaceHit::get_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::SurfaceHit::get_Point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.SurfaceHit.set_Point
void Oculus::Interaction::Surfaces::SurfaceHit::set_Point(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::SurfaceHit::set_Point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.SurfaceHit.get_Normal
::UnityEngine::Vector3 Oculus::Interaction::Surfaces::SurfaceHit::get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::SurfaceHit::get_Normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.SurfaceHit.set_Normal
void Oculus::Interaction::Surfaces::SurfaceHit::set_Normal(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::SurfaceHit::set_Normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.SurfaceHit.get_Distance
float Oculus::Interaction::Surfaces::SurfaceHit::get_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::SurfaceHit::get_Distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.SurfaceHit.set_Distance
void Oculus::Interaction::Surfaces::SurfaceHit::set_Distance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::SurfaceHit::set_Distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.ICylinderClipper
#include "Oculus/Interaction/Surfaces/ICylinderClipper.hpp"
// Including type: Oculus.Interaction.Surfaces.CylinderSegment
#include "Oculus/Interaction/Surfaces/CylinderSegment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Surfaces.ICylinderClipper.GetCylinderSegment
bool Oculus::Interaction::Surfaces::ICylinderClipper::GetCylinderSegment(ByRef<::Oculus::Interaction::Surfaces::CylinderSegment> segment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ICylinderClipper::GetCylinderSegment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ICylinderClipper*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(segment));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.IBoundsClipper
#include "Oculus/Interaction/Surfaces/IBoundsClipper.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Surfaces.IBoundsClipper.GetLocalBounds
bool Oculus::Interaction::Surfaces::IBoundsClipper::GetLocalBounds(::UnityEngine::Transform* localTo, ByRef<::UnityEngine::Bounds> bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::IBoundsClipper::GetLocalBounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::IBoundsClipper*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, localTo, byref(bounds));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.ISurfacePatch
#include "Oculus/Interaction/Surfaces/ISurfacePatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Surfaces.ISurfacePatch.get_BackingSurface
::Oculus::Interaction::Surfaces::ISurface* Oculus::Interaction::Surfaces::ISurfacePatch::get_BackingSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::ISurfacePatch::get_BackingSurface");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::ISurfacePatch*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Surfaces::ISurface*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.NavMeshSurface
#include "Oculus/Interaction/Surfaces/NavMeshSurface.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.Surfaces.SurfaceHit
#include "Oculus/Interaction/Surfaces/SurfaceHit.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _areaName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Interaction::Surfaces::NavMeshSurface::dyn__areaName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::dyn__areaName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_areaName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _snapDistance
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Surfaces::NavMeshSurface::dyn__snapDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::dyn__snapDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_snapDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _voxelSize
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Surfaces::NavMeshSurface::dyn__voxelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::dyn__voxelSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_voxelSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _calculateNormals
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Surfaces::NavMeshSurface::dyn__calculateNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::dyn__calculateNormals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_calculateNormals"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _areaMask
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Surfaces::NavMeshSurface::dyn__areaMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::dyn__areaMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_areaMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.get_AreaName
::StringW Oculus::Interaction::Surfaces::NavMeshSurface::get_AreaName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::get_AreaName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AreaName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.set_AreaName
void Oculus::Interaction::Surfaces::NavMeshSurface::set_AreaName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::set_AreaName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AreaName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.get_SnapDistance
float Oculus::Interaction::Surfaces::NavMeshSurface::get_SnapDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::get_SnapDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SnapDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.set_SnapDistance
void Oculus::Interaction::Surfaces::NavMeshSurface::set_SnapDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::set_SnapDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SnapDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.get_VoxelSize
float Oculus::Interaction::Surfaces::NavMeshSurface::get_VoxelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::get_VoxelSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VoxelSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.set_VoxelSize
void Oculus::Interaction::Surfaces::NavMeshSurface::set_VoxelSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::set_VoxelSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VoxelSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.get_CalculateHitNormals
bool Oculus::Interaction::Surfaces::NavMeshSurface::get_CalculateHitNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::get_CalculateHitNormals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CalculateHitNormals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.set_CalculateHitNormals
void Oculus::Interaction::Surfaces::NavMeshSurface::set_CalculateHitNormals(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::set_CalculateHitNormals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CalculateHitNormals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.get_Transform
::UnityEngine::Transform* Oculus::Interaction::Surfaces::NavMeshSurface::get_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::get_Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::NavMeshSurface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.Start
void Oculus::Interaction::Surfaces::NavMeshSurface::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::NavMeshSurface*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.ClosestSurfacePoint
bool Oculus::Interaction::Surfaces::NavMeshSurface::ClosestSurfacePoint(ByRef<::UnityEngine::Vector3> point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> surfaceHit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::ClosestSurfacePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestSurfacePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(point), byref(surfaceHit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.Raycast
bool Oculus::Interaction::Surfaces::NavMeshSurface::Raycast(ByRef<::UnityEngine::Ray> ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> surfaceHit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ray), byref(surfaceHit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.AlignHits
bool Oculus::Interaction::Surfaces::NavMeshSurface::AlignHits(::UnityEngine::Vector3 point, ::UnityEngine::Vector3 normal, ::UnityEngine::Ray ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> surfaceHit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::AlignHits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AlignHits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(surfaceHit), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point, normal, ray, byref(surfaceHit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.SnapSurfaceHit
bool Oculus::Interaction::Surfaces::NavMeshSurface::SnapSurfaceHit(ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> surfaceHit, ::UnityEngine::Vector3 navMeshPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::SnapSurfaceHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SnapSurfaceHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surfaceHit), ::il2cpp_utils::ExtractType(navMeshPoint)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(surfaceHit), navMeshPoint);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.GetNavMeshNormal
::UnityEngine::Vector3 Oculus::Interaction::Surfaces::NavMeshSurface::GetNavMeshNormal(::UnityEngine::Vector3 navMeshPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::GetNavMeshNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNavMeshNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(navMeshPoint)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, navMeshPoint);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.Oculus.Interaction.Surfaces.ISurface.Raycast
bool Oculus::Interaction::Surfaces::NavMeshSurface::Oculus_Interaction_Surfaces_ISurface_Raycast(ByRef<::UnityEngine::Ray> ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::Oculus.Interaction.Surfaces.ISurface.Raycast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::NavMeshSurface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ray), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.Oculus.Interaction.Surfaces.ISurface.ClosestSurfacePoint
bool Oculus::Interaction::Surfaces::NavMeshSurface::Oculus_Interaction_Surfaces_ISurface_ClosestSurfacePoint(ByRef<::UnityEngine::Vector3> point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::Oculus.Interaction.Surfaces.ISurface.ClosestSurfacePoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::NavMeshSurface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(point), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.<GetNavMeshNormal>g__CalculateTangent|24_0
::UnityEngine::Vector3 Oculus::Interaction::Surfaces::NavMeshSurface::$GetNavMeshNormal$g__CalculateTangent_24_0(::UnityEngine::Vector3 direction, ::UnityEngine::Vector3 centre) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::<GetNavMeshNormal>g__CalculateTangent|24_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetNavMeshNormal>g__CalculateTangent|24_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(centre)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, direction, centre);
}
// Autogenerated method: Oculus.Interaction.Surfaces.NavMeshSurface.<GetNavMeshNormal>g__CalculateStep|24_1
bool Oculus::Interaction::Surfaces::NavMeshSurface::$GetNavMeshNormal$g__CalculateStep_24_1(::UnityEngine::Vector3 centre, ::UnityEngine::Vector3 stepDir, ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::NavMeshSurface::<GetNavMeshNormal>g__CalculateStep|24_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetNavMeshNormal>g__CalculateStep|24_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(centre), ::il2cpp_utils::ExtractType(stepDir), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, centre, stepDir, byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.PlaneSurface
#include "Oculus/Interaction/Surfaces/PlaneSurface.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Oculus.Interaction.Surfaces.SurfaceHit
#include "Oculus/Interaction/Surfaces/SurfaceHit.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Plane
#include "UnityEngine/Plane.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Surfaces.PlaneSurface/NormalFacing _facing
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing& Oculus::Interaction::Surfaces::PlaneSurface::dyn__facing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::dyn__facing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_facing"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _doubleSided
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Surfaces::PlaneSurface::dyn__doubleSided() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::dyn__doubleSided");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doubleSided"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Surfaces.PlaneSurface.get_Facing
::Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing Oculus::Interaction::Surfaces::PlaneSurface::get_Facing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::get_Facing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Facing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.PlaneSurface.set_Facing
void Oculus::Interaction::Surfaces::PlaneSurface::set_Facing(::Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::set_Facing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Facing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.PlaneSurface.get_DoubleSided
bool Oculus::Interaction::Surfaces::PlaneSurface::get_DoubleSided() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::get_DoubleSided");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DoubleSided", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.PlaneSurface.set_DoubleSided
void Oculus::Interaction::Surfaces::PlaneSurface::set_DoubleSided(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::set_DoubleSided");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DoubleSided", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Surfaces.PlaneSurface.get_Normal
::UnityEngine::Vector3 Oculus::Interaction::Surfaces::PlaneSurface::get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::get_Normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.PlaneSurface.IsPointAboveSurface
bool Oculus::Interaction::Surfaces::PlaneSurface::IsPointAboveSurface(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::IsPointAboveSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointAboveSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point);
}
// Autogenerated method: Oculus.Interaction.Surfaces.PlaneSurface.ClosestSurfacePoint
bool Oculus::Interaction::Surfaces::PlaneSurface::ClosestSurfacePoint(ByRef<::UnityEngine::Vector3> point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::ClosestSurfacePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestSurfacePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(point), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.PlaneSurface.get_Transform
::UnityEngine::Transform* Oculus::Interaction::Surfaces::PlaneSurface::get_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::get_Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::PlaneSurface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.PlaneSurface.get_Bounds
::UnityEngine::Bounds Oculus::Interaction::Surfaces::PlaneSurface::get_Bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::get_Bounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::PlaneSurface*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.PlaneSurface.Raycast
bool Oculus::Interaction::Surfaces::PlaneSurface::Raycast(ByRef<::UnityEngine::Ray> ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Surfaces::SurfaceHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ray), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.PlaneSurface.GetPlane
::UnityEngine::Plane Oculus::Interaction::Surfaces::PlaneSurface::GetPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::GetPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Plane, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.PlaneSurface.InjectAllPlaneSurface
void Oculus::Interaction::Surfaces::PlaneSurface::InjectAllPlaneSurface(::Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing facing, bool doubleSided) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::InjectAllPlaneSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllPlaneSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facing), ::il2cpp_utils::ExtractType(doubleSided)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facing, doubleSided);
}
// Autogenerated method: Oculus.Interaction.Surfaces.PlaneSurface.InjectNormalFacing
void Oculus::Interaction::Surfaces::PlaneSurface::InjectNormalFacing(::Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing facing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::InjectNormalFacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectNormalFacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facing);
}
// Autogenerated method: Oculus.Interaction.Surfaces.PlaneSurface.InjectDoubleSided
void Oculus::Interaction::Surfaces::PlaneSurface::InjectDoubleSided(bool doubleSided) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::InjectDoubleSided");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectDoubleSided", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doubleSided)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, doubleSided);
}
// Autogenerated method: Oculus.Interaction.Surfaces.PlaneSurface.Oculus.Interaction.Surfaces.ISurface.Raycast
bool Oculus::Interaction::Surfaces::PlaneSurface::Oculus_Interaction_Surfaces_ISurface_Raycast(ByRef<::UnityEngine::Ray> ray, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::Oculus.Interaction.Surfaces.ISurface.Raycast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::PlaneSurface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ray), byref(hit), maxDistance);
}
// Autogenerated method: Oculus.Interaction.Surfaces.PlaneSurface.Oculus.Interaction.Surfaces.ISurface.ClosestSurfacePoint
bool Oculus::Interaction::Surfaces::PlaneSurface::Oculus_Interaction_Surfaces_ISurface_ClosestSurfacePoint(ByRef<::UnityEngine::Vector3> point, ByRef<::Oculus::Interaction::Surfaces::SurfaceHit> hit, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::Oculus.Interaction.Surfaces.ISurface.ClosestSurfacePoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Surfaces::PlaneSurface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(point), byref(hit), maxDistance);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.PlaneSurface/NormalFacing
#include "Oculus/Interaction/Surfaces/PlaneSurface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Surfaces.PlaneSurface/NormalFacing Backward
::Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing::_get_Backward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing::_get_Backward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing>("Oculus.Interaction.Surfaces", "PlaneSurface/NormalFacing", "Backward"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Surfaces.PlaneSurface/NormalFacing Backward
void Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing::_set_Backward(::Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing::_set_Backward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "PlaneSurface/NormalFacing", "Backward", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Surfaces.PlaneSurface/NormalFacing Forward
::Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing::_get_Forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing::_get_Forward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing>("Oculus.Interaction.Surfaces", "PlaneSurface/NormalFacing", "Forward"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Surfaces.PlaneSurface/NormalFacing Forward
void Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing::_set_Forward(::Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing::_set_Forward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Surfaces", "PlaneSurface/NormalFacing", "Forward", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::PlaneSurface::NormalFacing::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Surfaces.CylinderSegment
#include "Oculus/Interaction/Surfaces/CylinderSegment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _rotation
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Surfaces::CylinderSegment::dyn__rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSegment::dyn__rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _arcDegrees
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Surfaces::CylinderSegment::dyn__arcDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSegment::dyn__arcDegrees");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arcDegrees"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bottom
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Surfaces::CylinderSegment::dyn__bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSegment::dyn__bottom");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bottom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _top
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Surfaces::CylinderSegment::dyn__top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSegment::dyn__top");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_top"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSegment.get_ArcDegrees
float Oculus::Interaction::Surfaces::CylinderSegment::get_ArcDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSegment::get_ArcDegrees");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ArcDegrees", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSegment.get_Rotation
float Oculus::Interaction::Surfaces::CylinderSegment::get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSegment::get_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSegment.get_Bottom
float Oculus::Interaction::Surfaces::CylinderSegment::get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSegment::get_Bottom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Bottom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSegment.get_Top
float Oculus::Interaction::Surfaces::CylinderSegment::get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSegment::get_Top");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Top", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSegment.get_IsInfiniteHeight
bool Oculus::Interaction::Surfaces::CylinderSegment::get_IsInfiniteHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSegment::get_IsInfiniteHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsInfiniteHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSegment.get_IsInfiniteArc
bool Oculus::Interaction::Surfaces::CylinderSegment::get_IsInfiniteArc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSegment::get_IsInfiniteArc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsInfiniteArc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSegment..ctor
// ABORTED elsewhere.  Oculus::Interaction::Surfaces::CylinderSegment::CylinderSegment(float rotation, float arcDegrees, float bottom, float top)
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSegment.Default
::Oculus::Interaction::Surfaces::CylinderSegment Oculus::Interaction::Surfaces::CylinderSegment::Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSegment::Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Surfaces", "CylinderSegment", "Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Surfaces::CylinderSegment, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Surfaces.CylinderSegment.Infinite
::Oculus::Interaction::Surfaces::CylinderSegment Oculus::Interaction::Surfaces::CylinderSegment::Infinite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Surfaces::CylinderSegment::Infinite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Surfaces", "CylinderSegment", "Infinite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Surfaces::CylinderSegment, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Deprecated.RayInteractorDebugPolylineGizmos
#include "Oculus/Interaction/Deprecated/RayInteractorDebugPolylineGizmos.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Deprecated.PointableDebugPolylineGizmos
#include "Oculus/Interaction/Deprecated/PointableDebugPolylineGizmos.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Deprecated.PolylineGizmos
#include "Oculus/Interaction/Deprecated/PolylineGizmos.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.VirtualActiveState
#include "Oculus/Interaction/Locomotion/VirtualActiveState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Active>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::VirtualActiveState::dyn_$Active$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::VirtualActiveState::dyn_$Active$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Active>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.VirtualActiveState.get_Active
bool Oculus::Interaction::Locomotion::VirtualActiveState::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::VirtualActiveState::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::VirtualActiveState*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.VirtualActiveState.set_Active
void Oculus::Interaction::Locomotion::VirtualActiveState::set_Active(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::VirtualActiveState::set_Active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.ILocomotionEventBroadcaster
#include "Oculus/Interaction/Locomotion/ILocomotionEventBroadcaster.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Locomotion.ILocomotionEventBroadcaster.add_WhenLocomotionPerformed
void Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster::add_WhenLocomotionPerformed(::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster::add_WhenLocomotionPerformed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.ILocomotionEventBroadcaster.remove_WhenLocomotionPerformed
void Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster::remove_WhenLocomotionPerformed(::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster::remove_WhenLocomotionPerformed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.ILocomotionEventHandler
#include "Oculus/Interaction/Locomotion/ILocomotionEventHandler.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Locomotion.ILocomotionEventHandler.HandleLocomotionEvent
void Oculus::Interaction::Locomotion::ILocomotionEventHandler::HandleLocomotionEvent(::Oculus::Interaction::Locomotion::LocomotionEvent locomotionEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::ILocomotionEventHandler::HandleLocomotionEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::ILocomotionEventHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, locomotionEvent);
}
// Autogenerated method: Oculus.Interaction.Locomotion.ILocomotionEventHandler.add_WhenLocomotionEventHandled
void Oculus::Interaction::Locomotion::ILocomotionEventHandler::add_WhenLocomotionEventHandled(::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::ILocomotionEventHandler::add_WhenLocomotionEventHandled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::ILocomotionEventHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.ILocomotionEventHandler.remove_WhenLocomotionEventHandled
void Oculus::Interaction::Locomotion::ILocomotionEventHandler::remove_WhenLocomotionEventHandled(::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::ILocomotionEventHandler::remove_WhenLocomotionEventHandled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::ILocomotionEventHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotionEvent
#include "Oculus/Interaction/Locomotion/LocomotionEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <Identifier>k__BackingField
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Locomotion::LocomotionEvent::dyn_$Identifier$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::dyn_$Identifier$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Identifier>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Pose <Pose>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Locomotion::LocomotionEvent::dyn_$Pose$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::dyn_$Pose$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Pose>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.Locomotion.LocomotionEvent/TranslationType <Translation>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType& Oculus::Interaction::Locomotion::LocomotionEvent::dyn_$Translation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::dyn_$Translation$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Translation>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.Locomotion.LocomotionEvent/RotationType <Rotation>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType& Oculus::Interaction::Locomotion::LocomotionEvent::dyn_$Rotation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::dyn_$Rotation$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Rotation>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEvent.get_Identifier
int Oculus::Interaction::Locomotion::LocomotionEvent::get_Identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::get_Identifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Identifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEvent.get_Pose
::UnityEngine::Pose Oculus::Interaction::Locomotion::LocomotionEvent::get_Pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::get_Pose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Pose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEvent.get_Translation
::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType Oculus::Interaction::Locomotion::LocomotionEvent::get_Translation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::get_Translation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Translation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEvent.get_Rotation
::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType Oculus::Interaction::Locomotion::LocomotionEvent::get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::get_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEvent..ctor
// ABORTED elsewhere.  Oculus::Interaction::Locomotion::LocomotionEvent::LocomotionEvent(int identifier, ::UnityEngine::Pose pose, ::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType translationType, ::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType rotationType)
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEvent..ctor
Oculus::Interaction::Locomotion::LocomotionEvent::LocomotionEvent(int identifier, ::UnityEngine::Vector3 position, ::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType translationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(translationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, identifier, position, translationType);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEvent..ctor
Oculus::Interaction::Locomotion::LocomotionEvent::LocomotionEvent(int identifier, ::UnityEngine::Quaternion rotation, ::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType rotationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(rotationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, identifier, rotation, rotationType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotionEvent/TranslationType
#include "Oculus/Interaction/Locomotion/LocomotionEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Locomotion.LocomotionEvent/TranslationType None
::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType>("Oculus.Interaction.Locomotion", "LocomotionEvent/TranslationType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Locomotion.LocomotionEvent/TranslationType None
void Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_set_None(::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionEvent/TranslationType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Locomotion.LocomotionEvent/TranslationType Velocity
::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_get_Velocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType>("Oculus.Interaction.Locomotion", "LocomotionEvent/TranslationType", "Velocity"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Locomotion.LocomotionEvent/TranslationType Velocity
void Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_set_Velocity(::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_set_Velocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionEvent/TranslationType", "Velocity", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Locomotion.LocomotionEvent/TranslationType Absolute
::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_get_Absolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_get_Absolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType>("Oculus.Interaction.Locomotion", "LocomotionEvent/TranslationType", "Absolute"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Locomotion.LocomotionEvent/TranslationType Absolute
void Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_set_Absolute(::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_set_Absolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionEvent/TranslationType", "Absolute", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Locomotion.LocomotionEvent/TranslationType AbsoluteEyeLevel
::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_get_AbsoluteEyeLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_get_AbsoluteEyeLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType>("Oculus.Interaction.Locomotion", "LocomotionEvent/TranslationType", "AbsoluteEyeLevel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Locomotion.LocomotionEvent/TranslationType AbsoluteEyeLevel
void Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_set_AbsoluteEyeLevel(::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_set_AbsoluteEyeLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionEvent/TranslationType", "AbsoluteEyeLevel", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Locomotion.LocomotionEvent/TranslationType Relative
::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_get_Relative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_get_Relative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType>("Oculus.Interaction.Locomotion", "LocomotionEvent/TranslationType", "Relative"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Locomotion.LocomotionEvent/TranslationType Relative
void Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_set_Relative(::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::_set_Relative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionEvent/TranslationType", "Relative", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotionEvent/RotationType
#include "Oculus/Interaction/Locomotion/LocomotionEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Locomotion.LocomotionEvent/RotationType None
::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType Oculus::Interaction::Locomotion::LocomotionEvent::RotationType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType>("Oculus.Interaction.Locomotion", "LocomotionEvent/RotationType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Locomotion.LocomotionEvent/RotationType None
void Oculus::Interaction::Locomotion::LocomotionEvent::RotationType::_set_None(::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionEvent/RotationType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Locomotion.LocomotionEvent/RotationType Velocity
::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType Oculus::Interaction::Locomotion::LocomotionEvent::RotationType::_get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType::_get_Velocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType>("Oculus.Interaction.Locomotion", "LocomotionEvent/RotationType", "Velocity"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Locomotion.LocomotionEvent/RotationType Velocity
void Oculus::Interaction::Locomotion::LocomotionEvent::RotationType::_set_Velocity(::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType::_set_Velocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionEvent/RotationType", "Velocity", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Locomotion.LocomotionEvent/RotationType Absolute
::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType Oculus::Interaction::Locomotion::LocomotionEvent::RotationType::_get_Absolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType::_get_Absolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType>("Oculus.Interaction.Locomotion", "LocomotionEvent/RotationType", "Absolute"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Locomotion.LocomotionEvent/RotationType Absolute
void Oculus::Interaction::Locomotion::LocomotionEvent::RotationType::_set_Absolute(::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType::_set_Absolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionEvent/RotationType", "Absolute", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Locomotion.LocomotionEvent/RotationType Relative
::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType Oculus::Interaction::Locomotion::LocomotionEvent::RotationType::_get_Relative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType::_get_Relative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType>("Oculus.Interaction.Locomotion", "LocomotionEvent/RotationType", "Relative"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Locomotion.LocomotionEvent/RotationType Relative
void Oculus::Interaction::Locomotion::LocomotionEvent::RotationType::_set_Relative(::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType::_set_Relative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionEvent/RotationType", "Relative", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Locomotion::LocomotionEvent::RotationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotionEventsConnection
#include "Oculus/Interaction/Locomotion/LocomotionEventsConnection.hpp"
// Including type: Oculus.Interaction.Locomotion.LocomotionEventsConnection/<>c
#include "Oculus/Interaction/Locomotion/LocomotionEventsConnection_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Oculus.Interaction.Locomotion.ILocomotionEventBroadcaster
#include "Oculus/Interaction/Locomotion/ILocomotionEventBroadcaster.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Object> _broadcasters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Object*>*& Oculus::Interaction::Locomotion::LocomotionEventsConnection::dyn__broadcasters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::dyn__broadcasters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_broadcasters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerable`1<Oculus.Interaction.Locomotion.ILocomotionEventBroadcaster> <Broadcasters>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>*& Oculus::Interaction::Locomotion::LocomotionEventsConnection::dyn_$Broadcasters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::dyn_$Broadcasters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Broadcasters>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _handler
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Locomotion::LocomotionEventsConnection::dyn__handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::dyn__handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handler"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Locomotion.ILocomotionEventHandler <Handler>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::ILocomotionEventHandler*& Oculus::Interaction::Locomotion::LocomotionEventsConnection::dyn_$Handler$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::dyn_$Handler$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handler>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::ILocomotionEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::LocomotionEventsConnection::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEventsConnection.get_Broadcasters
::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>* Oculus::Interaction::Locomotion::LocomotionEventsConnection::get_Broadcasters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::get_Broadcasters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Broadcasters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEventsConnection.set_Broadcasters
void Oculus::Interaction::Locomotion::LocomotionEventsConnection::set_Broadcasters(::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::set_Broadcasters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Broadcasters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEventsConnection.get_Handler
::Oculus::Interaction::Locomotion::ILocomotionEventHandler* Oculus::Interaction::Locomotion::LocomotionEventsConnection::get_Handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::get_Handler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Locomotion::ILocomotionEventHandler*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEventsConnection.set_Handler
void Oculus::Interaction::Locomotion::LocomotionEventsConnection::set_Handler(::Oculus::Interaction::Locomotion::ILocomotionEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::set_Handler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Handler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEventsConnection.add_WhenLocomotionEventHandled
void Oculus::Interaction::Locomotion::LocomotionEventsConnection::add_WhenLocomotionEventHandled(::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::add_WhenLocomotionEventHandled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionEventsConnection*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEventsConnection.remove_WhenLocomotionEventHandled
void Oculus::Interaction::Locomotion::LocomotionEventsConnection::remove_WhenLocomotionEventHandled(::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::remove_WhenLocomotionEventHandled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionEventsConnection*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEventsConnection.Awake
void Oculus::Interaction::Locomotion::LocomotionEventsConnection::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionEventsConnection*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEventsConnection.Start
void Oculus::Interaction::Locomotion::LocomotionEventsConnection::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionEventsConnection*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEventsConnection.OnEnable
void Oculus::Interaction::Locomotion::LocomotionEventsConnection::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionEventsConnection*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEventsConnection.OnDisable
void Oculus::Interaction::Locomotion::LocomotionEventsConnection::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionEventsConnection*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEventsConnection.HandleLocomotionEvent
void Oculus::Interaction::Locomotion::LocomotionEventsConnection::HandleLocomotionEvent(::Oculus::Interaction::Locomotion::LocomotionEvent locomotionEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::HandleLocomotionEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionEventsConnection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, locomotionEvent);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEventsConnection.InjectAllLocomotionBroadcastersHandlerConnection
void Oculus::Interaction::Locomotion::LocomotionEventsConnection::InjectAllLocomotionBroadcastersHandlerConnection(::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>* broadcasters, ::Oculus::Interaction::Locomotion::ILocomotionEventHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::InjectAllLocomotionBroadcastersHandlerConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllLocomotionBroadcastersHandlerConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(broadcasters), ::il2cpp_utils::ExtractType(handler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, broadcasters, handler);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEventsConnection.InjectBroadcasters
void Oculus::Interaction::Locomotion::LocomotionEventsConnection::InjectBroadcasters(::System::Collections::Generic::IEnumerable_1<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>* broadcasters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::InjectBroadcasters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectBroadcasters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(broadcasters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, broadcasters);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEventsConnection.InjectHandler
void Oculus::Interaction::Locomotion::LocomotionEventsConnection::InjectHandler(::Oculus::Interaction::Locomotion::ILocomotionEventHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::InjectHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handler);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotionEventsConnection/<>c
#include "Oculus/Interaction/Locomotion/LocomotionEventsConnection_--c.hpp"
// Including type: System.Converter`2
#include "System/Converter_2.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.Locomotion.ILocomotionEventBroadcaster
#include "Oculus/Interaction/Locomotion/ILocomotionEventBroadcaster.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Locomotion.LocomotionEventsConnection/<>c <>9
::Oculus::Interaction::Locomotion::LocomotionEventsConnection::$$c* Oculus::Interaction::Locomotion::LocomotionEventsConnection::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::LocomotionEventsConnection::$$c*>("Oculus.Interaction.Locomotion", "LocomotionEventsConnection/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Locomotion.LocomotionEventsConnection/<>c <>9
void Oculus::Interaction::Locomotion::LocomotionEventsConnection::$$c::_set_$$9(::Oculus::Interaction::Locomotion::LocomotionEventsConnection::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionEventsConnection/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.Locomotion.ILocomotionEventBroadcaster> <>9__14_0
::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>* Oculus::Interaction::Locomotion::LocomotionEventsConnection::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>*>("Oculus.Interaction.Locomotion", "LocomotionEventsConnection/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Converter`2<UnityEngine.Object,Oculus.Interaction.Locomotion.ILocomotionEventBroadcaster> <>9__14_0
void Oculus::Interaction::Locomotion::LocomotionEventsConnection::$$c::_set_$$9__14_0(::System::Converter_2<::UnityEngine::Object*, ::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionEventsConnection/<>c", "<>9__14_0", value)));
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEventsConnection/<>c..cctor
void Oculus::Interaction::Locomotion::LocomotionEventsConnection::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Locomotion", "LocomotionEventsConnection/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionEventsConnection/<>c.<Awake>b__14_0
::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster* Oculus::Interaction::Locomotion::LocomotionEventsConnection::$$c::$Awake$b__14_0(::UnityEngine::Object* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionEventsConnection::$$c::<Awake>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Locomotion::ILocomotionEventBroadcaster*, false>(this, ___internal__method, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotionGate
#include "Oculus/Interaction/Locomotion/LocomotionGate.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Oculus.Interaction.Locomotion.LocomotionGate/GateSection
#include "Oculus/Interaction/Locomotion/LocomotionGate_GateSection.hpp"
// Including type: Oculus.Interaction.Locomotion.LocomotionGate/<>c
#include "Oculus/Interaction/Locomotion/LocomotionGate_--c.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.IActiveState
#include "Oculus/Interaction/IActiveState.hpp"
// Including type: Oculus.Interaction.Locomotion.VirtualActiveState
#include "Oculus/Interaction/Locomotion/VirtualActiveState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Oculus.Interaction.Locomotion.LocomotionGate/GateSection DefaultSection
::Oculus::Interaction::Locomotion::LocomotionGate::GateSection* Oculus::Interaction::Locomotion::LocomotionGate::_get_DefaultSection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::_get_DefaultSection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::LocomotionGate::GateSection*>("Oculus.Interaction.Locomotion", "LocomotionGate", "DefaultSection"));
}
// Autogenerated static field setter
// Set static field: static private readonly Oculus.Interaction.Locomotion.LocomotionGate/GateSection DefaultSection
void Oculus::Interaction::Locomotion::LocomotionGate::_set_DefaultSection(::Oculus::Interaction::Locomotion::LocomotionGate::GateSection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::_set_DefaultSection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionGate", "DefaultSection", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single _enterPoseThreshold
float Oculus::Interaction::Locomotion::LocomotionGate::_get__enterPoseThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::_get__enterPoseThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Interaction.Locomotion", "LocomotionGate", "_enterPoseThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Single _enterPoseThreshold
void Oculus::Interaction::Locomotion::LocomotionGate::_set__enterPoseThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::_set__enterPoseThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionGate", "_enterPoseThreshold", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single _wristLimit
float Oculus::Interaction::Locomotion::LocomotionGate::_get__wristLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::_get__wristLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Interaction.Locomotion", "LocomotionGate", "_wristLimit"));
}
// Autogenerated static field setter
// Set static field: static private System.Single _wristLimit
void Oculus::Interaction::Locomotion::LocomotionGate::_set__wristLimit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::_set__wristLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionGate", "_wristLimit", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Locomotion::LocomotionGate::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::Locomotion::LocomotionGate::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _shoulder
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Locomotion::LocomotionGate::dyn__shoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn__shoulder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shoulder"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Locomotion.LocomotionGate/GateSection[] _gateSections
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Interaction::Locomotion::LocomotionGate::GateSection*>& Oculus::Interaction::Locomotion::LocomotionGate::dyn__gateSections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn__gateSections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gateSections"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Interaction::Locomotion::LocomotionGate::GateSection*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _enableShape
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Locomotion::LocomotionGate::dyn__enableShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn__enableShape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enableShape"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IActiveState <EnableShape>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IActiveState*& Oculus::Interaction::Locomotion::LocomotionGate::dyn_$EnableShape$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn_$EnableShape$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EnableShape>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _disableShape
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Locomotion::LocomotionGate::dyn__disableShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn__disableShape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disableShape"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IActiveState <DisableShape>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IActiveState*& Oculus::Interaction::Locomotion::LocomotionGate::dyn_$DisableShape$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn_$DisableShape$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DisableShape>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Locomotion.VirtualActiveState _turningState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::VirtualActiveState*& Oculus::Interaction::Locomotion::LocomotionGate::dyn__turningState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn__turningState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_turningState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::VirtualActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Locomotion.VirtualActiveState _teleportState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::VirtualActiveState*& Oculus::Interaction::Locomotion::LocomotionGate::dyn__teleportState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn__teleportState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_teleportState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::VirtualActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::LocomotionGate::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _previousShapeEnabled
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::LocomotionGate::dyn__previousShapeEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn__previousShapeEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousShapeEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentGateIndex
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Locomotion::LocomotionGate::dyn__currentGateIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn__currentGateIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentGateIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Locomotion.LocomotionGate/LocomotionMode _activeMode
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode& Oculus::Interaction::Locomotion::LocomotionGate::dyn__activeMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn__activeMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeMode"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <CurrentAngle>k__BackingField
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::LocomotionGate::dyn_$CurrentAngle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn_$CurrentAngle$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentAngle>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <WristDirection>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Locomotion::LocomotionGate::dyn_$WristDirection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn_$WristDirection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WristDirection>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose <StabilizationPose>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Locomotion::LocomotionGate::dyn_$StabilizationPose$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn_$StabilizationPose$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StabilizationPose>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Oculus.Interaction.Locomotion.LocomotionGate/LocomotionModeEventArgs> _whenActiveModeChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionModeEventArgs>*& Oculus::Interaction::Locomotion::LocomotionGate::dyn__whenActiveModeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn__whenActiveModeChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenActiveModeChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionModeEventArgs>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _cancelled
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::LocomotionGate::dyn__cancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::dyn__cancelled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::Locomotion::LocomotionGate::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.set_Hand
void Oculus::Interaction::Locomotion::LocomotionGate::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.get_EnableShape
::Oculus::Interaction::IActiveState* Oculus::Interaction::Locomotion::LocomotionGate::get_EnableShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::get_EnableShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IActiveState*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.set_EnableShape
void Oculus::Interaction::Locomotion::LocomotionGate::set_EnableShape(::Oculus::Interaction::IActiveState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::set_EnableShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.get_DisableShape
::Oculus::Interaction::IActiveState* Oculus::Interaction::Locomotion::LocomotionGate::get_DisableShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::get_DisableShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisableShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IActiveState*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.set_DisableShape
void Oculus::Interaction::Locomotion::LocomotionGate::set_DisableShape(::Oculus::Interaction::IActiveState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::set_DisableShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DisableShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.get_ActiveMode
::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode Oculus::Interaction::Locomotion::LocomotionGate::get_ActiveMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::get_ActiveMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActiveMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.set_ActiveMode
void Oculus::Interaction::Locomotion::LocomotionGate::set_ActiveMode(::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::set_ActiveMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ActiveMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.get_CurrentAngle
float Oculus::Interaction::Locomotion::LocomotionGate::get_CurrentAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::get_CurrentAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.set_CurrentAngle
void Oculus::Interaction::Locomotion::LocomotionGate::set_CurrentAngle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::set_CurrentAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.get_WristDirection
::UnityEngine::Vector3 Oculus::Interaction::Locomotion::LocomotionGate::get_WristDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::get_WristDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WristDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.set_WristDirection
void Oculus::Interaction::Locomotion::LocomotionGate::set_WristDirection(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::set_WristDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WristDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.get_StabilizationPose
::UnityEngine::Pose Oculus::Interaction::Locomotion::LocomotionGate::get_StabilizationPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::get_StabilizationPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StabilizationPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.set_StabilizationPose
void Oculus::Interaction::Locomotion::LocomotionGate::set_StabilizationPose(::UnityEngine::Pose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::set_StabilizationPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StabilizationPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.add_WhenActiveModeChanged
void Oculus::Interaction::Locomotion::LocomotionGate::add_WhenActiveModeChanged(::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionModeEventArgs>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::add_WhenActiveModeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_WhenActiveModeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.remove_WhenActiveModeChanged
void Oculus::Interaction::Locomotion::LocomotionGate::remove_WhenActiveModeChanged(::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionModeEventArgs>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::remove_WhenActiveModeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_WhenActiveModeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.Awake
void Oculus::Interaction::Locomotion::LocomotionGate::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionGate*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.Start
void Oculus::Interaction::Locomotion::LocomotionGate::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionGate*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.OnEnable
void Oculus::Interaction::Locomotion::LocomotionGate::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionGate*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.OnDisable
void Oculus::Interaction::Locomotion::LocomotionGate::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionGate*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.Disable
void Oculus::Interaction::Locomotion::LocomotionGate::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::Disable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.Cancel
void Oculus::Interaction::Locomotion::LocomotionGate::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.HandleHandupdated
void Oculus::Interaction::Locomotion::LocomotionGate::HandleHandupdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::HandleHandupdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHandupdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.GetBestGateSection
::Oculus::Interaction::Locomotion::LocomotionGate::GateSection* Oculus::Interaction::Locomotion::LocomotionGate::GetBestGateSection(float angle, ByRef<int> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::GetBestGateSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBestGateSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Locomotion::LocomotionGate::GateSection*, false>(this, ___internal__method, angle, byref(index));
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.InjectAllLocomotionGate
void Oculus::Interaction::Locomotion::LocomotionGate::InjectAllLocomotionGate(::Oculus::Interaction::Input::IHand* hand, ::UnityEngine::Transform* shoulder, ::Oculus::Interaction::IActiveState* enableShape, ::Oculus::Interaction::IActiveState* disableShape, ::Oculus::Interaction::Locomotion::VirtualActiveState* turningState, ::Oculus::Interaction::Locomotion::VirtualActiveState* teleportState, ::ArrayW<::Oculus::Interaction::Locomotion::LocomotionGate::GateSection*> gateSections) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::InjectAllLocomotionGate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllLocomotionGate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(shoulder), ::il2cpp_utils::ExtractType(enableShape), ::il2cpp_utils::ExtractType(disableShape), ::il2cpp_utils::ExtractType(turningState), ::il2cpp_utils::ExtractType(teleportState), ::il2cpp_utils::ExtractType(gateSections)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, shoulder, enableShape, disableShape, turningState, teleportState, gateSections);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.InjectHand
void Oculus::Interaction::Locomotion::LocomotionGate::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.InjectShoulder
void Oculus::Interaction::Locomotion::LocomotionGate::InjectShoulder(::UnityEngine::Transform* shoulder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::InjectShoulder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectShoulder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shoulder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shoulder);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.InjectEnableShape
void Oculus::Interaction::Locomotion::LocomotionGate::InjectEnableShape(::Oculus::Interaction::IActiveState* enableShape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::InjectEnableShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectEnableShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enableShape)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enableShape);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.InjectDisableShape
void Oculus::Interaction::Locomotion::LocomotionGate::InjectDisableShape(::Oculus::Interaction::IActiveState* disableShape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::InjectDisableShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectDisableShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disableShape)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disableShape);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.InjectTurningState
void Oculus::Interaction::Locomotion::LocomotionGate::InjectTurningState(::Oculus::Interaction::Locomotion::VirtualActiveState* turningState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::InjectTurningState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectTurningState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(turningState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turningState);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.InjectTeleportState
void Oculus::Interaction::Locomotion::LocomotionGate::InjectTeleportState(::Oculus::Interaction::Locomotion::VirtualActiveState* teleportState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::InjectTeleportState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectTeleportState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(teleportState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, teleportState);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate.InjectGateSections
void Oculus::Interaction::Locomotion::LocomotionGate::InjectGateSections(::ArrayW<::Oculus::Interaction::Locomotion::LocomotionGate::GateSection*> gateSections) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::InjectGateSections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectGateSections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gateSections)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gateSections);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate..cctor
void Oculus::Interaction::Locomotion::LocomotionGate::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Locomotion", "LocomotionGate", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotionGate/LocomotionMode
#include "Oculus/Interaction/Locomotion/LocomotionGate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Locomotion.LocomotionGate/LocomotionMode None
::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode>("Oculus.Interaction.Locomotion", "LocomotionGate/LocomotionMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Locomotion.LocomotionGate/LocomotionMode None
void Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode::_set_None(::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionGate/LocomotionMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Locomotion.LocomotionGate/LocomotionMode Teleport
::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode::_get_Teleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode::_get_Teleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode>("Oculus.Interaction.Locomotion", "LocomotionGate/LocomotionMode", "Teleport"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Locomotion.LocomotionGate/LocomotionMode Teleport
void Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode::_set_Teleport(::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode::_set_Teleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionGate/LocomotionMode", "Teleport", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Locomotion.LocomotionGate/LocomotionMode Turn
::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode::_get_Turn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode::_get_Turn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode>("Oculus.Interaction.Locomotion", "LocomotionGate/LocomotionMode", "Turn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Locomotion.LocomotionGate/LocomotionMode Turn
void Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode::_set_Turn(::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode::_set_Turn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionGate/LocomotionMode", "Turn", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotionGate/GateSection
#include "Oculus/Interaction/Locomotion/LocomotionGate_GateSection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single minAngle
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::LocomotionGate::GateSection::dyn_minAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::GateSection::dyn_minAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxAngle
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::LocomotionGate::GateSection::dyn_maxAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::GateSection::dyn_maxAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean canEnterDirectly
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::LocomotionGate::GateSection::dyn_canEnterDirectly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::GateSection::dyn_canEnterDirectly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canEnterDirectly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Locomotion.LocomotionGate/LocomotionMode locomotionMode
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode& Oculus::Interaction::Locomotion::LocomotionGate::GateSection::dyn_locomotionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::GateSection::dyn_locomotionMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locomotionMode"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate/GateSection.ScoreToAngle
float Oculus::Interaction::Locomotion::LocomotionGate::GateSection::ScoreToAngle(float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::GateSection::ScoreToAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScoreToAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, angle);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotionGate/LocomotionModeEventArgs
#include "Oculus/Interaction/Locomotion/LocomotionGate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.Locomotion.LocomotionGate/LocomotionMode <PreviousMode>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode& Oculus::Interaction::Locomotion::LocomotionGate::LocomotionModeEventArgs::dyn_$PreviousMode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionModeEventArgs::dyn_$PreviousMode$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PreviousMode>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.Locomotion.LocomotionGate/LocomotionMode <NewMode>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode& Oculus::Interaction::Locomotion::LocomotionGate::LocomotionModeEventArgs::dyn_$NewMode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionModeEventArgs::dyn_$NewMode$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NewMode>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate/LocomotionModeEventArgs.get_PreviousMode
::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode Oculus::Interaction::Locomotion::LocomotionGate::LocomotionModeEventArgs::get_PreviousMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionModeEventArgs::get_PreviousMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_PreviousMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate/LocomotionModeEventArgs.get_NewMode
::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode Oculus::Interaction::Locomotion::LocomotionGate::LocomotionModeEventArgs::get_NewMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionModeEventArgs::get_NewMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NewMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate/LocomotionModeEventArgs..ctor
// ABORTED elsewhere.  Oculus::Interaction::Locomotion::LocomotionGate::LocomotionModeEventArgs::LocomotionModeEventArgs(::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode previousMode, ::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionMode newMode)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotionGate/<>c
#include "Oculus/Interaction/Locomotion/LocomotionGate_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Locomotion.LocomotionGate/<>c <>9
::Oculus::Interaction::Locomotion::LocomotionGate::$$c* Oculus::Interaction::Locomotion::LocomotionGate::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::LocomotionGate::$$c*>("Oculus.Interaction.Locomotion", "LocomotionGate/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Locomotion.LocomotionGate/<>c <>9
void Oculus::Interaction::Locomotion::LocomotionGate::$$c::_set_$$9(::Oculus::Interaction::Locomotion::LocomotionGate::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionGate/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Oculus.Interaction.Locomotion.LocomotionGate/LocomotionModeEventArgs> <>9__65_0
::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionModeEventArgs>* Oculus::Interaction::Locomotion::LocomotionGate::$$c::_get_$$9__65_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::$$c::_get_$$9__65_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionModeEventArgs>*>("Oculus.Interaction.Locomotion", "LocomotionGate/<>c", "<>9__65_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Oculus.Interaction.Locomotion.LocomotionGate/LocomotionModeEventArgs> <>9__65_0
void Oculus::Interaction::Locomotion::LocomotionGate::$$c::_set_$$9__65_0(::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionModeEventArgs>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::$$c::_set_$$9__65_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionGate/<>c", "<>9__65_0", value)));
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate/<>c..cctor
void Oculus::Interaction::Locomotion::LocomotionGate::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Locomotion", "LocomotionGate/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGate/<>c.<.ctor>b__65_0
void Oculus::Interaction::Locomotion::LocomotionGate::$$c::$_ctor$b__65_0(::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionModeEventArgs $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGate::$$c::<.ctor>b__65_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__65_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.PlayerLocomotor
#include "Oculus/Interaction/Locomotion/PlayerLocomotor.hpp"
// Including type: Oculus.Interaction.Locomotion.PlayerLocomotor/<>c
#include "Oculus/Interaction/Locomotion/PlayerLocomotor_--c.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _playerOrigin
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Locomotion::PlayerLocomotor::dyn__playerOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::dyn__playerOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerOrigin"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _playerHead
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Locomotion::PlayerLocomotor::dyn__playerHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::dyn__playerHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerHead"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<Oculus.Interaction.Locomotion.LocomotionEvent,UnityEngine.Pose> _whenLocomotionEventHandled
[[deprecated("Use field access instead!")]] ::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>*& Oculus::Interaction::Locomotion::PlayerLocomotor::dyn__whenLocomotionEventHandled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::dyn__whenLocomotionEventHandled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenLocomotionEventHandled"))->offset;
  return *reinterpret_cast<::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::PlayerLocomotor::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<Oculus.Interaction.Locomotion.LocomotionEvent> _deferredEvent
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Oculus::Interaction::Locomotion::LocomotionEvent>*& Oculus::Interaction::Locomotion::PlayerLocomotor::dyn__deferredEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::dyn__deferredEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deferredEvent"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Oculus::Interaction::Locomotion::LocomotionEvent>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.PlayerLocomotor.add_WhenLocomotionEventHandled
void Oculus::Interaction::Locomotion::PlayerLocomotor::add_WhenLocomotionEventHandled(::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::add_WhenLocomotionEventHandled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::PlayerLocomotor*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.PlayerLocomotor.remove_WhenLocomotionEventHandled
void Oculus::Interaction::Locomotion::PlayerLocomotor::remove_WhenLocomotionEventHandled(::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::remove_WhenLocomotionEventHandled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::PlayerLocomotor*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.PlayerLocomotor.Start
void Oculus::Interaction::Locomotion::PlayerLocomotor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::PlayerLocomotor*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.PlayerLocomotor.OnEnable
void Oculus::Interaction::Locomotion::PlayerLocomotor::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.PlayerLocomotor.OnDisable
void Oculus::Interaction::Locomotion::PlayerLocomotor::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.PlayerLocomotor.HandleLocomotionEvent
void Oculus::Interaction::Locomotion::PlayerLocomotor::HandleLocomotionEvent(::Oculus::Interaction::Locomotion::LocomotionEvent locomotionEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::HandleLocomotionEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::PlayerLocomotor*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, locomotionEvent);
}
// Autogenerated method: Oculus.Interaction.Locomotion.PlayerLocomotor.MovePlayer
void Oculus::Interaction::Locomotion::PlayerLocomotor::MovePlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::MovePlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.PlayerLocomotor.MovePlayer
void Oculus::Interaction::Locomotion::PlayerLocomotor::MovePlayer(::UnityEngine::Vector3 targetPosition, ::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType translationMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::MovePlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(translationMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPosition, translationMode);
}
// Autogenerated method: Oculus.Interaction.Locomotion.PlayerLocomotor.RotatePlayer
void Oculus::Interaction::Locomotion::PlayerLocomotor::RotatePlayer(::UnityEngine::Quaternion targetRotation, ::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType rotationMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::RotatePlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotatePlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetRotation), ::il2cpp_utils::ExtractType(rotationMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetRotation, rotationMode);
}
// Autogenerated method: Oculus.Interaction.Locomotion.PlayerLocomotor.InjectAllPlayerLocomotor
void Oculus::Interaction::Locomotion::PlayerLocomotor::InjectAllPlayerLocomotor(::UnityEngine::Transform* playerOrigin, ::UnityEngine::Transform* playerHead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::InjectAllPlayerLocomotor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllPlayerLocomotor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerOrigin), ::il2cpp_utils::ExtractType(playerHead)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerOrigin, playerHead);
}
// Autogenerated method: Oculus.Interaction.Locomotion.PlayerLocomotor.InjectPlayerOrigin
void Oculus::Interaction::Locomotion::PlayerLocomotor::InjectPlayerOrigin(::UnityEngine::Transform* playerOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::InjectPlayerOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPlayerOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerOrigin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerOrigin);
}
// Autogenerated method: Oculus.Interaction.Locomotion.PlayerLocomotor.InjectPlayerHead
void Oculus::Interaction::Locomotion::PlayerLocomotor::InjectPlayerHead(::UnityEngine::Transform* playerHead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::InjectPlayerHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPlayerHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerHead)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerHead);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.PlayerLocomotor/<>c
#include "Oculus/Interaction/Locomotion/PlayerLocomotor_--c.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Locomotion.PlayerLocomotor/<>c <>9
::Oculus::Interaction::Locomotion::PlayerLocomotor::$$c* Oculus::Interaction::Locomotion::PlayerLocomotor::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::PlayerLocomotor::$$c*>("Oculus.Interaction.Locomotion", "PlayerLocomotor/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Locomotion.PlayerLocomotor/<>c <>9
void Oculus::Interaction::Locomotion::PlayerLocomotor::$$c::_set_$$9(::Oculus::Interaction::Locomotion::PlayerLocomotor::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "PlayerLocomotor/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<Oculus.Interaction.Locomotion.LocomotionEvent,UnityEngine.Pose> <>9__18_0
::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>* Oculus::Interaction::Locomotion::PlayerLocomotor::$$c::_get_$$9__18_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::$$c::_get_$$9__18_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>*>("Oculus.Interaction.Locomotion", "PlayerLocomotor/<>c", "<>9__18_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<Oculus.Interaction.Locomotion.LocomotionEvent,UnityEngine.Pose> <>9__18_0
void Oculus::Interaction::Locomotion::PlayerLocomotor::$$c::_set_$$9__18_0(::System::Action_2<::Oculus::Interaction::Locomotion::LocomotionEvent, ::UnityEngine::Pose>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::$$c::_set_$$9__18_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "PlayerLocomotor/<>c", "<>9__18_0", value)));
}
// Autogenerated method: Oculus.Interaction.Locomotion.PlayerLocomotor/<>c..cctor
void Oculus::Interaction::Locomotion::PlayerLocomotor::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Locomotion", "PlayerLocomotor/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.PlayerLocomotor/<>c.<.ctor>b__18_0
void Oculus::Interaction::Locomotion::PlayerLocomotor::$$c::$_ctor$b__18_0(::Oculus::Interaction::Locomotion::LocomotionEvent $p0$, ::UnityEngine::Pose $p1$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::PlayerLocomotor::$$c::<.ctor>b__18_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__18_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$), ::il2cpp_utils::ExtractType($p1$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$, $p1$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.TeleportArcGravity
#include "Oculus/Interaction/Locomotion/TeleportArcGravity.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 GRAVITY
::UnityEngine::Vector3 Oculus::Interaction::Locomotion::TeleportArcGravity::_get_GRAVITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::_get_GRAVITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("Oculus.Interaction.Locomotion", "TeleportArcGravity", "GRAVITY"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 GRAVITY
void Oculus::Interaction::Locomotion::TeleportArcGravity::_set_GRAVITY(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::_set_GRAVITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "TeleportArcGravity", "GRAVITY", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single GROUND_MARGIN
float Oculus::Interaction::Locomotion::TeleportArcGravity::_get_GROUND_MARGIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::_get_GROUND_MARGIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Interaction.Locomotion", "TeleportArcGravity", "GROUND_MARGIN"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single GROUND_MARGIN
void Oculus::Interaction::Locomotion::TeleportArcGravity::_set_GROUND_MARGIN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::_set_GROUND_MARGIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "TeleportArcGravity", "GROUND_MARGIN", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _origin
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__origin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_origin"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _stabilizationPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__stabilizationPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__stabilizationPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stabilizationPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _rangeCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__rangeCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__rangeCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rangeCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _stabilizationMixCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__stabilizationMixCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__stabilizationMixCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stabilizationMixCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _pitchCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__pitchCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__pitchCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pitchCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _gravityModifier
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__gravityModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__gravityModifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gravityModifier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _arcPointsCount
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__arcPointsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__arcPointsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arcPointsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _pose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__pose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _speed
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.get_RangeCurve
::UnityEngine::AnimationCurve* Oculus::Interaction::Locomotion::TeleportArcGravity::get_RangeCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::get_RangeCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RangeCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.set_RangeCurve
void Oculus::Interaction::Locomotion::TeleportArcGravity::set_RangeCurve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::set_RangeCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RangeCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.get_StabilizationMixCurve
::UnityEngine::AnimationCurve* Oculus::Interaction::Locomotion::TeleportArcGravity::get_StabilizationMixCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::get_StabilizationMixCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StabilizationMixCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.set_StabilizationMixCurve
void Oculus::Interaction::Locomotion::TeleportArcGravity::set_StabilizationMixCurve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::set_StabilizationMixCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StabilizationMixCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.get_PitchCurve
::UnityEngine::AnimationCurve* Oculus::Interaction::Locomotion::TeleportArcGravity::get_PitchCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::get_PitchCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PitchCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.set_PitchCurve
void Oculus::Interaction::Locomotion::TeleportArcGravity::set_PitchCurve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::set_PitchCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PitchCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.get_GravityModifier
float Oculus::Interaction::Locomotion::TeleportArcGravity::get_GravityModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::get_GravityModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GravityModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.set_GravityModifier
void Oculus::Interaction::Locomotion::TeleportArcGravity::set_GravityModifier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::set_GravityModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GravityModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.get_PointsCount
int Oculus::Interaction::Locomotion::TeleportArcGravity::get_PointsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::get_PointsCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TeleportArcGravity*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.set_PointsCount
void Oculus::Interaction::Locomotion::TeleportArcGravity::set_PointsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::set_PointsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PointsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.Start
void Oculus::Interaction::Locomotion::TeleportArcGravity::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TeleportArcGravity*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.Update
void Oculus::Interaction::Locomotion::TeleportArcGravity::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TeleportArcGravity*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.PointAtIndex
::UnityEngine::Vector3 Oculus::Interaction::Locomotion::TeleportArcGravity::PointAtIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::PointAtIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TeleportArcGravity*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, index);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.EvaluateGravityArc
::UnityEngine::Vector3 Oculus::Interaction::Locomotion::TeleportArcGravity::EvaluateGravityArc(::UnityEngine::Pose origin, float speed, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::EvaluateGravityArc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateGravityArc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(speed), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, origin, speed, t);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.UpdateArcParameters
void Oculus::Interaction::Locomotion::TeleportArcGravity::UpdateArcParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::UpdateArcParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateArcParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.CalculatePose
::UnityEngine::Pose Oculus::Interaction::Locomotion::TeleportArcGravity::CalculatePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::CalculatePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculatePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.CalculateSpeed
float Oculus::Interaction::Locomotion::TeleportArcGravity::CalculateSpeed(::UnityEngine::Pose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::CalculateSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, pose);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.StabilizeDirection
void Oculus::Interaction::Locomotion::TeleportArcGravity::StabilizeDirection(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::StabilizeDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StabilizeDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.RemapPitch
void Oculus::Interaction::Locomotion::TeleportArcGravity::RemapPitch(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::RemapPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemapPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.InjectAllTeleportArcGravity
void Oculus::Interaction::Locomotion::TeleportArcGravity::InjectAllTeleportArcGravity(::UnityEngine::Transform* origin, ::UnityEngine::Transform* stabilizationPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::InjectAllTeleportArcGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllTeleportArcGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(stabilizationPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, origin, stabilizationPoint);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.InjectOrigin
void Oculus::Interaction::Locomotion::TeleportArcGravity::InjectOrigin(::UnityEngine::Transform* origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::InjectOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, origin);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity.InjectStabilizationPoint
void Oculus::Interaction::Locomotion::TeleportArcGravity::InjectStabilizationPoint(::UnityEngine::Transform* stabilizationPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::InjectStabilizationPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectStabilizationPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stabilizationPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stabilizationPoint);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcGravity..cctor
void Oculus::Interaction::Locomotion::TeleportArcGravity::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcGravity::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Locomotion", "TeleportArcGravity", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.TeleportHit
#include "Oculus/Interaction/Locomotion/TeleportHit.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Locomotion.TeleportHit DEFAULT
::Oculus::Interaction::Locomotion::TeleportHit Oculus::Interaction::Locomotion::TeleportHit::_get_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportHit::_get_DEFAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::TeleportHit>("Oculus.Interaction.Locomotion", "TeleportHit", "DEFAULT"));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Locomotion.TeleportHit DEFAULT
void Oculus::Interaction::Locomotion::TeleportHit::_set_DEFAULT(::Oculus::Interaction::Locomotion::TeleportHit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportHit::_set_DEFAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "TeleportHit", "DEFAULT", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform relativeTo
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Locomotion::TeleportHit::dyn_relativeTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportHit::dyn_relativeTo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "relativeTo"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <SnapRadius>k__BackingField
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::TeleportHit::dyn_$SnapRadius$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportHit::dyn_$SnapRadius$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SnapRadius>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _localPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Locomotion::TeleportHit::dyn__localPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportHit::dyn__localPose");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportHit.get_SnapRadius
float Oculus::Interaction::Locomotion::TeleportHit::get_SnapRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportHit::get_SnapRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_SnapRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportHit.set_SnapRadius
void Oculus::Interaction::Locomotion::TeleportHit::set_SnapRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportHit::set_SnapRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_SnapRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportHit.get_Point
::UnityEngine::Vector3 Oculus::Interaction::Locomotion::TeleportHit::get_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportHit::get_Point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportHit.get_Normal
::UnityEngine::Vector3 Oculus::Interaction::Locomotion::TeleportHit::get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportHit::get_Normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportHit..ctor
Oculus::Interaction::Locomotion::TeleportHit::TeleportHit(::UnityEngine::Transform* relativeTo, ::UnityEngine::Vector3 position, ::UnityEngine::Vector3 normal, float snapRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportHit::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativeTo), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(snapRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relativeTo, position, normal, snapRadius);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportHit..cctor
void Oculus::Interaction::Locomotion::TeleportHit::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportHit::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Locomotion", "TeleportHit", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.TeleportInteractable
#include "Oculus/Interaction/Locomotion/TeleportInteractable.hpp"
// Including type: Oculus.Interaction.Locomotion.TeleportInteractor
#include "Oculus/Interaction/Locomotion/TeleportInteractor.hpp"
// Including type: Oculus.Interaction.Surfaces.ISurface
#include "Oculus/Interaction/Surfaces/ISurface.hpp"
// Including type: Oculus.Interaction.Surfaces.IBounds
#include "Oculus/Interaction/Surfaces/IBounds.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.Locomotion.TeleportHit
#include "Oculus/Interaction/Locomotion/TeleportHit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _allowTeleport
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::TeleportInteractable::dyn__allowTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::dyn__allowTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowTeleport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _equalDistanceToBlockerOverride
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::TeleportInteractable::dyn__equalDistanceToBlockerOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::dyn__equalDistanceToBlockerOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_equalDistanceToBlockerOverride"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _tieBreakerScore
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Locomotion::TeleportInteractable::dyn__tieBreakerScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::dyn__tieBreakerScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tieBreakerScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _surface
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Locomotion::TeleportInteractable::dyn__surface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::dyn__surface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_surface"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Surfaces.ISurface <Surface>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Surfaces::ISurface*& Oculus::Interaction::Locomotion::TeleportInteractable::dyn_$Surface$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::dyn_$Surface$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Surface>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Surfaces::ISurface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Surfaces.IBounds <SurfaceBounds>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Surfaces::IBounds*& Oculus::Interaction::Locomotion::TeleportInteractable::dyn_$SurfaceBounds$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::dyn_$SurfaceBounds$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SurfaceBounds>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Surfaces::IBounds**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _targetPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Locomotion::TeleportInteractable::dyn__targetPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::dyn__targetPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _faceTargetDirection
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::TeleportInteractable::dyn__faceTargetDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::dyn__faceTargetDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_faceTargetDirection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _eyeLevel
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::TeleportInteractable::dyn__eyeLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::dyn__eyeLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eyeLevel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.get_AllowTeleport
bool Oculus::Interaction::Locomotion::TeleportInteractable::get_AllowTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::get_AllowTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.set_AllowTeleport
void Oculus::Interaction::Locomotion::TeleportInteractable::set_AllowTeleport(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::set_AllowTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.get_EqualDistanceToBlockerOverride
float Oculus::Interaction::Locomotion::TeleportInteractable::get_EqualDistanceToBlockerOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::get_EqualDistanceToBlockerOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EqualDistanceToBlockerOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.set_EqualDistanceToBlockerOverride
void Oculus::Interaction::Locomotion::TeleportInteractable::set_EqualDistanceToBlockerOverride(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::set_EqualDistanceToBlockerOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EqualDistanceToBlockerOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.get_TieBreakerScore
int Oculus::Interaction::Locomotion::TeleportInteractable::get_TieBreakerScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::get_TieBreakerScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TieBreakerScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.set_TieBreakerScore
void Oculus::Interaction::Locomotion::TeleportInteractable::set_TieBreakerScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::set_TieBreakerScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TieBreakerScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.get_Surface
::Oculus::Interaction::Surfaces::ISurface* Oculus::Interaction::Locomotion::TeleportInteractable::get_Surface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::get_Surface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Surface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Surfaces::ISurface*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.set_Surface
void Oculus::Interaction::Locomotion::TeleportInteractable::set_Surface(::Oculus::Interaction::Surfaces::ISurface* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::set_Surface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Surface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.get_SurfaceBounds
::Oculus::Interaction::Surfaces::IBounds* Oculus::Interaction::Locomotion::TeleportInteractable::get_SurfaceBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::get_SurfaceBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SurfaceBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Surfaces::IBounds*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.set_SurfaceBounds
void Oculus::Interaction::Locomotion::TeleportInteractable::set_SurfaceBounds(::Oculus::Interaction::Surfaces::IBounds* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::set_SurfaceBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SurfaceBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.get_FaceTargetDirection
bool Oculus::Interaction::Locomotion::TeleportInteractable::get_FaceTargetDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::get_FaceTargetDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FaceTargetDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.set_FaceTargetDirection
void Oculus::Interaction::Locomotion::TeleportInteractable::set_FaceTargetDirection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::set_FaceTargetDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FaceTargetDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.get_EyeLevel
bool Oculus::Interaction::Locomotion::TeleportInteractable::get_EyeLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::get_EyeLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EyeLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.set_EyeLevel
void Oculus::Interaction::Locomotion::TeleportInteractable::set_EyeLevel(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::set_EyeLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EyeLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.IsInRange
bool Oculus::Interaction::Locomotion::TeleportInteractable::IsInRange(::UnityEngine::Pose origin, float maxSqrDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::IsInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(maxSqrDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, maxSqrDistance);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.DetectHit
bool Oculus::Interaction::Locomotion::TeleportInteractable::DetectHit(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, ByRef<::Oculus::Interaction::Locomotion::TeleportHit> hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::DetectHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Locomotion::TeleportHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, from, to, byref(hit));
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.TargetPose
::UnityEngine::Pose Oculus::Interaction::Locomotion::TeleportInteractable::TargetPose(::UnityEngine::Pose hitPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::TargetPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TargetPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hitPose)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, hitPose);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.InjectAllTeleportInteractable
void Oculus::Interaction::Locomotion::TeleportInteractable::InjectAllTeleportInteractable(::Oculus::Interaction::Surfaces::ISurface* surface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::InjectAllTeleportInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllTeleportInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surface)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, surface);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.InjectSurface
void Oculus::Interaction::Locomotion::TeleportInteractable::InjectSurface(::Oculus::Interaction::Surfaces::ISurface* surface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::InjectSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surface)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, surface);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.InjectOptionalTargetPoint
void Oculus::Interaction::Locomotion::TeleportInteractable::InjectOptionalTargetPoint(::UnityEngine::Transform* targetPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::InjectOptionalTargetPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalTargetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPoint);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.<Start>b__31_0
void Oculus::Interaction::Locomotion::TeleportInteractable::$Start$b__31_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::<Start>b__31_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__31_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.Awake
void Oculus::Interaction::Locomotion::TeleportInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), 31)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractable.Start
void Oculus::Interaction::Locomotion::TeleportInteractable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractable::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), 32)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.TeleportInteractor
#include "Oculus/Interaction/Locomotion/TeleportInteractor.hpp"
// Including type: Oculus.Interaction.Locomotion.TeleportInteractor/<>c
#include "Oculus/Interaction/Locomotion/TeleportInteractor_--c.hpp"
// Including type: Oculus.Interaction.Locomotion.TeleportInteractor/<>c__DisplayClass30_0
#include "Oculus/Interaction/Locomotion/TeleportInteractor_--c__DisplayClass30_0.hpp"
// Including type: Oculus.Interaction.Locomotion.TeleportInteractable
#include "Oculus/Interaction/Locomotion/TeleportInteractable.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.Input.IHmd
#include "Oculus/Interaction/Input/IHmd.hpp"
// Including type: Oculus.Interaction.IPolyline
#include "Oculus/Interaction/IPolyline.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.ISelector
#include "Oculus/Interaction/ISelector.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _selector
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Locomotion::TeleportInteractor::dyn__selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::dyn__selector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selector"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hmd
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Locomotion::TeleportInteractor::dyn__hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::dyn__hmd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hmd"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHmd <Hmd>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHmd*& Oculus::Interaction::Locomotion::TeleportInteractor::dyn_$Hmd$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::dyn_$Hmd$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hmd>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHmd**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _teleportArc
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Locomotion::TeleportInteractor::dyn__teleportArc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::dyn__teleportArc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_teleportArc"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IPolyline <TeleportArc>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IPolyline*& Oculus::Interaction::Locomotion::TeleportInteractor::dyn_$TeleportArc$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::dyn_$TeleportArc$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TeleportArc>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IPolyline**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _equalDistanceThreshold
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::TeleportInteractor::dyn__equalDistanceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::dyn__equalDistanceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_equalDistanceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Locomotion.TeleportHit _arcEnd
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::TeleportHit& Oculus::Interaction::Locomotion::TeleportInteractor::dyn__arcEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::dyn__arcEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arcEnd"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::TeleportHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Oculus.Interaction.Locomotion.LocomotionEvent> _whenLocomotionPerformed
[[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionEvent>*& Oculus::Interaction::Locomotion::TeleportInteractor::dyn__whenLocomotionPerformed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::dyn__whenLocomotionPerformed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenLocomotionPerformed"))->offset;
  return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionEvent>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.get_Hmd
::Oculus::Interaction::Input::IHmd* Oculus::Interaction::Locomotion::TeleportInteractor::get_Hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::get_Hmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHmd*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.set_Hmd
void Oculus::Interaction::Locomotion::TeleportInteractor::set_Hmd(::Oculus::Interaction::Input::IHmd* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::set_Hmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.get_TeleportArc
::Oculus::Interaction::IPolyline* Oculus::Interaction::Locomotion::TeleportInteractor::get_TeleportArc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::get_TeleportArc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TeleportArc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IPolyline*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.set_TeleportArc
void Oculus::Interaction::Locomotion::TeleportInteractor::set_TeleportArc(::Oculus::Interaction::IPolyline* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::set_TeleportArc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TeleportArc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.get_EqualDistanceThreshold
float Oculus::Interaction::Locomotion::TeleportInteractor::get_EqualDistanceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::get_EqualDistanceThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EqualDistanceThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.set_EqualDistanceThreshold
void Oculus::Interaction::Locomotion::TeleportInteractor::set_EqualDistanceThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::set_EqualDistanceThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EqualDistanceThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.get_ArcOrigin
::UnityEngine::Pose Oculus::Interaction::Locomotion::TeleportInteractor::get_ArcOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::get_ArcOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArcOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.get_ArcEnd
::Oculus::Interaction::Locomotion::TeleportHit Oculus::Interaction::Locomotion::TeleportInteractor::get_ArcEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::get_ArcEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArcEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Locomotion::TeleportHit, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.get_TeleportTarget
::UnityEngine::Pose Oculus::Interaction::Locomotion::TeleportInteractor::get_TeleportTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::get_TeleportTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TeleportTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.add_WhenLocomotionPerformed
void Oculus::Interaction::Locomotion::TeleportInteractor::add_WhenLocomotionPerformed(::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::add_WhenLocomotionPerformed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TeleportInteractor*), 73));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.remove_WhenLocomotionPerformed
void Oculus::Interaction::Locomotion::TeleportInteractor::remove_WhenLocomotionPerformed(::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::remove_WhenLocomotionPerformed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TeleportInteractor*), 74));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.CanSelect
bool Oculus::Interaction::Locomotion::TeleportInteractor::CanSelect(::Oculus::Interaction::Locomotion::TeleportInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TeleportInteractor*), 66));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.InteractableSelected
void Oculus::Interaction::Locomotion::TeleportInteractor::InteractableSelected(::Oculus::Interaction::Locomotion::TeleportInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::InteractableSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TeleportInteractor*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.ComputeCandidate
::Oculus::Interaction::Locomotion::TeleportInteractable* Oculus::Interaction::Locomotion::TeleportInteractor::ComputeCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::ComputeCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TeleportInteractor*), 64));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Locomotion::TeleportInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.ComputeCandidateTiebreaker
int Oculus::Interaction::Locomotion::TeleportInteractor::ComputeCandidateTiebreaker(::Oculus::Interaction::Locomotion::TeleportInteractable* a, ::Oculus::Interaction::Locomotion::TeleportInteractable* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::ComputeCandidateTiebreaker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TeleportInteractor*), 65));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.InjectAllTeleportInteractor
void Oculus::Interaction::Locomotion::TeleportInteractor::InjectAllTeleportInteractor(::Oculus::Interaction::ISelector* selector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::InjectAllTeleportInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllTeleportInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selector);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.InjectSelector
void Oculus::Interaction::Locomotion::TeleportInteractor::InjectSelector(::Oculus::Interaction::ISelector* selector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::InjectSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selector);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.InjectOptionalHmd
void Oculus::Interaction::Locomotion::TeleportInteractor::InjectOptionalHmd(::Oculus::Interaction::Input::IHmd* hmd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::InjectOptionalHmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalHmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hmd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hmd);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.InjectOptionalTeleportArc
void Oculus::Interaction::Locomotion::TeleportInteractor::InjectOptionalTeleportArc(::Oculus::Interaction::IPolyline* teleportArc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::InjectOptionalTeleportArc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalTeleportArc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(teleportArc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, teleportArc);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.<ComputeCandidate>g__CheckViewToOriginBlockers|30_0
void Oculus::Interaction::Locomotion::TeleportInteractor::$ComputeCandidate$g__CheckViewToOriginBlockers_30_0(::UnityEngine::Vector3 viewPosition, ::Oculus::Interaction::Locomotion::TeleportInteractable* candidate, ByRef<::Oculus::Interaction::Locomotion::TeleportInteractor::$$c__DisplayClass30_0> param_2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::<ComputeCandidate>g__CheckViewToOriginBlockers|30_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ComputeCandidate>g__CheckViewToOriginBlockers|30_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewPosition), ::il2cpp_utils::ExtractType(candidate), ::il2cpp_utils::ExtractType(param_2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewPosition, candidate, byref(param_2));
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.<ComputeCandidate>g__CheckCandidate|30_1
void Oculus::Interaction::Locomotion::TeleportInteractor::$ComputeCandidate$g__CheckCandidate_30_1(::Oculus::Interaction::Locomotion::TeleportInteractable* candidate, ByRef<::Oculus::Interaction::Locomotion::TeleportInteractor::$$c__DisplayClass30_0> param_1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::<ComputeCandidate>g__CheckCandidate|30_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ComputeCandidate>g__CheckCandidate|30_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(candidate), ::il2cpp_utils::ExtractType(param_1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, candidate, byref(param_1));
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.Awake
void Oculus::Interaction::Locomotion::TeleportInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 50)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor.Start
void Oculus::Interaction::Locomotion::TeleportInteractor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 51)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.TeleportInteractor/<>c
#include "Oculus/Interaction/Locomotion/TeleportInteractor_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Locomotion.TeleportInteractor/<>c <>9
::Oculus::Interaction::Locomotion::TeleportInteractor::$$c* Oculus::Interaction::Locomotion::TeleportInteractor::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::TeleportInteractor::$$c*>("Oculus.Interaction.Locomotion", "TeleportInteractor/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Locomotion.TeleportInteractor/<>c <>9
void Oculus::Interaction::Locomotion::TeleportInteractor::$$c::_set_$$9(::Oculus::Interaction::Locomotion::TeleportInteractor::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "TeleportInteractor/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Oculus.Interaction.Locomotion.LocomotionEvent> <>9__36_0
::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionEvent>* Oculus::Interaction::Locomotion::TeleportInteractor::$$c::_get_$$9__36_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::$$c::_get_$$9__36_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionEvent>*>("Oculus.Interaction.Locomotion", "TeleportInteractor/<>c", "<>9__36_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Oculus.Interaction.Locomotion.LocomotionEvent> <>9__36_0
void Oculus::Interaction::Locomotion::TeleportInteractor::$$c::_set_$$9__36_0(::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::$$c::_set_$$9__36_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "TeleportInteractor/<>c", "<>9__36_0", value)));
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor/<>c..cctor
void Oculus::Interaction::Locomotion::TeleportInteractor::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Locomotion", "TeleportInteractor/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportInteractor/<>c.<.ctor>b__36_0
void Oculus::Interaction::Locomotion::TeleportInteractor::$$c::$_ctor$b__36_0(::Oculus::Interaction::Locomotion::LocomotionEvent $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportInteractor::$$c::<.ctor>b__36_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__36_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.TeleportArcVisual
#include "Oculus/Interaction/Locomotion/TeleportArcVisual.hpp"
// Including type: Oculus.Interaction.Locomotion.TeleportInteractor
#include "Oculus/Interaction/Locomotion/TeleportInteractor.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Locomotion.TeleportInteractor _interactor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::TeleportInteractor*& Oculus::Interaction::Locomotion::TeleportArcVisual::dyn__interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcVisual::dyn__interactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::TeleportInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer _arcRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& Oculus::Interaction::Locomotion::TeleportArcVisual::dyn__arcRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcVisual::dyn__arcRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arcRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _positions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& Oculus::Interaction::Locomotion::TeleportArcVisual::dyn__positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcVisual::dyn__positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::TeleportArcVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcVisual.Start
void Oculus::Interaction::Locomotion::TeleportArcVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TeleportArcVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcVisual.OnEnable
void Oculus::Interaction::Locomotion::TeleportArcVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TeleportArcVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcVisual.OnDisable
void Oculus::Interaction::Locomotion::TeleportArcVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TeleportArcVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcVisual.HandleInteractorPostProcessed
void Oculus::Interaction::Locomotion::TeleportArcVisual::HandleInteractorPostProcessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcVisual::HandleInteractorPostProcessed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TeleportArcVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcVisual.InjectAllTeleportArcVisual
void Oculus::Interaction::Locomotion::TeleportArcVisual::InjectAllTeleportArcVisual(::Oculus::Interaction::Locomotion::TeleportInteractor* interactor, ::UnityEngine::LineRenderer* arcRenderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcVisual::InjectAllTeleportArcVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllTeleportArcVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(arcRenderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, arcRenderer);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcVisual.InjectInteractor
void Oculus::Interaction::Locomotion::TeleportArcVisual::InjectInteractor(::Oculus::Interaction::Locomotion::TeleportInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcVisual::InjectInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportArcVisual.InjectArcRenderer
void Oculus::Interaction::Locomotion::TeleportArcVisual::InjectArcRenderer(::UnityEngine::LineRenderer* arcRenderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportArcVisual::InjectArcRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectArcRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arcRenderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arcRenderer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual
#include "Oculus/Interaction/Locomotion/TeleportProceduralArcVisual.hpp"
// Including type: Oculus.Interaction.Locomotion.TeleportInteractor
#include "Oculus/Interaction/Locomotion/TeleportInteractor.hpp"
// Including type: Oculus.Interaction.TubeRenderer
#include "Oculus/Interaction/TubeRenderer.hpp"
// Including type: Oculus.Interaction.PinchPointerVisual
#include "Oculus/Interaction/PinchPointerVisual.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.Input.IAxis1D
#include "Oculus/Interaction/Input/IAxis1D.hpp"
// Including type: Oculus.Interaction.DistanceReticles.IReticleData
#include "Oculus/Interaction/DistanceReticles/IReticleData.hpp"
// Including type: Oculus.Interaction.Locomotion.TeleportInteractable
#include "Oculus/Interaction/Locomotion/TeleportInteractable.hpp"
// Including type: Oculus.Interaction.InteractorStateChangeArgs
#include "Oculus/Interaction/InteractorStateChangeArgs.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single[,] MIDPOINT_FACTOR
::ArrayW<float> Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::_get_MIDPOINT_FACTOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::_get_MIDPOINT_FACTOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("Oculus.Interaction.Locomotion", "TeleportProceduralArcVisual", "MIDPOINT_FACTOR"));
}
// Autogenerated static field setter
// Set static field: static private System.Single[,] MIDPOINT_FACTOR
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::_set_MIDPOINT_FACTOR(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::_set_MIDPOINT_FACTOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "TeleportProceduralArcVisual", "MIDPOINT_FACTOR", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Locomotion.TeleportInteractor _interactor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::TeleportInteractor*& Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__interactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::TeleportInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.TubeRenderer _tubeRenderer
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::TubeRenderer*& Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__tubeRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__tubeRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tubeRenderer"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::TubeRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PinchPointerVisual _pointer
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PinchPointerVisual*& Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__pointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__pointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointer"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PinchPointerVisual**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _pointerAnchor
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__pointerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__pointerAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointerAnchor"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _progress
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progress"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IAxis1D Progress
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IAxis1D*& Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn_Progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn_Progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Progress"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IAxis1D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _arcPointsCount
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__arcPointsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__arcPointsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arcPointsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _noDestinationTint
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__noDestinationTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__noDestinationTint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noDestinationTint"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.TubePoint[] _arcPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Interaction::TubePoint>& Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__arcPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__arcPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arcPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Interaction::TubePoint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.DistanceReticles.IReticleData _reticleData
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::DistanceReticles::IReticleData*& Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__reticleData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__reticleData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reticleData"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::DistanceReticles::IReticleData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.get_ArcPointsCount
int Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::get_ArcPointsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::get_ArcPointsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArcPointsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.set_ArcPointsCount
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::set_ArcPointsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::set_ArcPointsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ArcPointsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.get_NoDestinationTint
::UnityEngine::Color Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::get_NoDestinationTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::get_NoDestinationTint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoDestinationTint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.set_NoDestinationTint
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::set_NoDestinationTint(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::set_NoDestinationTint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoDestinationTint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.Awake
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.Start
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.OnEnable
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.OnDisable
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.HandleInteractableSet
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::HandleInteractableSet(::Oculus::Interaction::Locomotion::TeleportInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::HandleInteractableSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInteractableSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.HandleInteractableUnset
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::HandleInteractableUnset(::Oculus::Interaction::Locomotion::TeleportInteractable* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::HandleInteractableUnset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInteractableUnset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.HandleInteractorStateChanged
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::HandleInteractorStateChanged(::Oculus::Interaction::InteractorStateChangeArgs stateChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::HandleInteractorStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInteractorStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateChange);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.HandleInteractorPostProcessed
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::HandleInteractorPostProcessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::HandleInteractorPostProcessed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInteractorPostProcessed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.UpdatePointer
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::UpdatePointer(::UnityEngine::Color tint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::UpdatePointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tint);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.UpdateVisualArcPoints
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::UpdateVisualArcPoints(::UnityEngine::Pose origin, ::UnityEngine::Vector3 target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::UpdateVisualArcPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisualArcPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, origin, target);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.EvaluateBezierArc
::UnityEngine::Vector3 Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::EvaluateBezierArc(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 middle, ::UnityEngine::Vector3 end, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::EvaluateBezierArc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Locomotion", "TeleportProceduralArcVisual", "EvaluateBezierArc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(middle), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, middle, end, t);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.CalculateMidpointFactor
float Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::CalculateMidpointFactor(float pitchDot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::CalculateMidpointFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Locomotion", "TeleportProceduralArcVisual", "CalculateMidpointFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pitchDot)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pitchDot);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.InjectAllTeleportProceduralArcVisual
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::InjectAllTeleportProceduralArcVisual(::Oculus::Interaction::Locomotion::TeleportInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::InjectAllTeleportProceduralArcVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllTeleportProceduralArcVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.InjectTeleportInteractor
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::InjectTeleportInteractor(::Oculus::Interaction::Locomotion::TeleportInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::InjectTeleportInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectTeleportInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.InjectOptionalProgress
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::InjectOptionalProgress(::Oculus::Interaction::Input::IAxis1D* progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::InjectOptionalProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, progress);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.InjectOptionalPointer
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::InjectOptionalPointer(::Oculus::Interaction::PinchPointerVisual* pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::InjectOptionalPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointer);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.InjectOptionalPointerAnchor
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::InjectOptionalPointerAnchor(::UnityEngine::Transform* pointerAnchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::InjectOptionalPointerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalPointerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerAnchor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerAnchor);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual..cctor
void Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Locomotion", "TeleportProceduralArcVisual", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TeleportProceduralArcVisual.<CalculateMidpointFactor>g__Interpolate|29_0
float Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::$CalculateMidpointFactor$g__Interpolate_29_0(float angle, int fromIndex, int toIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TeleportProceduralArcVisual::<CalculateMidpointFactor>g__Interpolate|29_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Locomotion", "TeleportProceduralArcVisual", "<CalculateMidpointFactor>g__Interpolate|29_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(fromIndex), ::il2cpp_utils::ExtractType(toIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, angle, fromIndex, toIndex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor
#include "Oculus/Interaction/Locomotion/LocomotionAxisTurnerInteractor.hpp"
// Including type: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractable
#include "Oculus/Interaction/Locomotion/LocomotionAxisTurnerInteractable.hpp"
// Including type: Oculus.Interaction.Input.IAxis2D
#include "Oculus/Interaction/Input/IAxis2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _axis2D
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::dyn__axis2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::dyn__axis2D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_axis2D"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IAxis2D Axis2D
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IAxis2D*& Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::dyn_Axis2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::dyn_Axis2D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Axis2D"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IAxis2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _deadZone
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::dyn__deadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::dyn__deadZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deadZone"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _horizontalAxisValue
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::dyn__horizontalAxisValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::dyn__horizontalAxisValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_horizontalAxisValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor.get_DeadZone
float Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::get_DeadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::get_DeadZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeadZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor.set_DeadZone
void Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::set_DeadZone(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::set_DeadZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DeadZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor.ComputeCandidate
::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractable* Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::ComputeCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::ComputeCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*), 64));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor.Value
float Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor*), 73));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor.InjectAllLocomotionAxisTurner
void Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::InjectAllLocomotionAxisTurner(::Oculus::Interaction::Input::IAxis2D* axis2D) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::InjectAllLocomotionAxisTurner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllLocomotionAxisTurner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis2D)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis2D);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor.InjectAxis2D
void Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::InjectAxis2D(::Oculus::Interaction::Input::IAxis2D* axis2D) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::InjectAxis2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAxis2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis2D)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis2D);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor.<Start>b__15_0
void Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::$Start$b__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::<Start>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor.get_ShouldHover
bool Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::get_ShouldHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::get_ShouldHover");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 41)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor.get_ShouldUnhover
bool Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::get_ShouldUnhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::get_ShouldUnhover");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 42)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor.ComputeShouldSelect
bool Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::ComputeShouldSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::ComputeShouldSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 43)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor.ComputeShouldUnselect
bool Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::ComputeShouldUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::ComputeShouldUnselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 44)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor.Awake
void Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 50)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor.OnDisable
void Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 53)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor.Start
void Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 51)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor.DoPreprocess
void Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::DoPreprocess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionAxisTurnerInteractor::DoPreprocess");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 36)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractable
#include "Oculus/Interaction/Locomotion/LocomotionAxisTurnerInteractable.hpp"
// Including type: Oculus.Interaction.Locomotion.LocomotionAxisTurnerInteractor
#include "Oculus/Interaction/Locomotion/LocomotionAxisTurnerInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor
#include "Oculus/Interaction/Locomotion/LocomotionTurnerInteractor.hpp"
// Including type: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor/<>c
#include "Oculus/Interaction/Locomotion/LocomotionTurnerInteractor_--c.hpp"
// Including type: Oculus.Interaction.Locomotion.LocomotionTurnerInteractable
#include "Oculus/Interaction/Locomotion/LocomotionTurnerInteractable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.Input.ITrackingToWorldTransformer
#include "Oculus/Interaction/Input/ITrackingToWorldTransformer.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Oculus.Interaction.ISelector
#include "Oculus/Interaction/ISelector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _origin
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::dyn__origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::dyn__origin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_origin"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _selector
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::dyn__selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::dyn__selector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selector"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _stabilizationPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::dyn__stabilizationPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::dyn__stabilizationPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stabilizationPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _transformer
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::dyn__transformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::dyn__transformer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformer"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Input.ITrackingToWorldTransformer Transformer
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ITrackingToWorldTransformer*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::dyn_Transformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::dyn_Transformer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Transformer"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ITrackingToWorldTransformer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _dragThresold
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::dyn__dragThresold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::dyn__dragThresold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dragThresold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _midPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::dyn__midPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::dyn__midPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_midPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _axisValue
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::dyn__axisValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::dyn__axisValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_axisValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> _whenTurnDirectionChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<float>*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::dyn__whenTurnDirectionChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::dyn__whenTurnDirectionChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenTurnDirectionChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.get_DragThresold
float Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_DragThresold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_DragThresold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DragThresold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.set_DragThresold
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::set_DragThresold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::set_DragThresold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DragThresold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.get_MidPoint
::UnityEngine::Pose Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_MidPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_MidPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MidPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.get_Origin
::UnityEngine::Pose Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_Origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_Origin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Origin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.add_WhenTurnDirectionChanged
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::add_WhenTurnDirectionChanged(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::add_WhenTurnDirectionChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_WhenTurnDirectionChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.remove_WhenTurnDirectionChanged
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::remove_WhenTurnDirectionChanged(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::remove_WhenTurnDirectionChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_WhenTurnDirectionChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.UpdatePointers
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::UpdatePointers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::UpdatePointers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePointers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.InitializeMidPoint
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InitializeMidPoint(::UnityEngine::Pose pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InitializeMidPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeMidPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointer);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.UpdateMidPoint
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::UpdateMidPoint(::UnityEngine::Pose pointer, ::UnityEngine::Pose midPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::UpdateMidPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMidPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer), ::il2cpp_utils::ExtractType(midPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointer, midPoint);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.DragMidPoint
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::DragMidPoint(::UnityEngine::Pose worldMidPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::DragMidPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DragMidPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldMidPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, worldMidPoint);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.UpdateAxisValue
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::UpdateAxisValue(::UnityEngine::Pose pointer, ::UnityEngine::Pose origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::UpdateAxisValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAxisValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointer, origin);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.Value
float Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), 73));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.ComputeCandidate
::Oculus::Interaction::Locomotion::LocomotionTurnerInteractable* Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::ComputeCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::ComputeCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*), 64));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Locomotion::LocomotionTurnerInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.InjectAllLocomotionTurnerInteractor
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectAllLocomotionTurnerInteractor(::UnityEngine::Transform* origin, ::Oculus::Interaction::ISelector* selector, ::UnityEngine::Transform* stabilizationPoint, ::Oculus::Interaction::Input::ITrackingToWorldTransformer* transformer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectAllLocomotionTurnerInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllLocomotionTurnerInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(selector), ::il2cpp_utils::ExtractType(stabilizationPoint), ::il2cpp_utils::ExtractType(transformer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, origin, selector, stabilizationPoint, transformer);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.InjectOrigin
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectOrigin(::UnityEngine::Transform* origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, origin);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.InjectSelector
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectSelector(::Oculus::Interaction::ISelector* selector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selector);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.InjectStabilizationPoint
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectStabilizationPoint(::UnityEngine::Transform* stabilizationPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectStabilizationPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectStabilizationPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stabilizationPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stabilizationPoint);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.InjectTransformer
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectTransformer(::Oculus::Interaction::Input::ITrackingToWorldTransformer* transformer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::InjectTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transformer);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.<Start>b__24_0
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$Start$b__24_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::<Start>b__24_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__24_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.get_ShouldHover
bool Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_ShouldHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_ShouldHover");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 41)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.get_ShouldUnhover
bool Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_ShouldUnhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::get_ShouldUnhover");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 42)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.Awake
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 50)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.Start
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 51)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.HandleEnabled
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::HandleEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::HandleEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 67)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.DoHoverUpdate
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::DoHoverUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::DoHoverUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 38)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor.DoSelectUpdate
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::DoSelectUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::DoSelectUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 39)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor/<>c
#include "Oculus/Interaction/Locomotion/LocomotionTurnerInteractor_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Locomotion.LocomotionTurnerInteractor/<>c <>9
::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$$c* Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$$c*>("Oculus.Interaction.Locomotion", "LocomotionTurnerInteractor/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Locomotion.LocomotionTurnerInteractor/<>c <>9
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$$c::_set_$$9(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionTurnerInteractor/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Single> <>9__40_0
::System::Action_1<float>* Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$$c::_get_$$9__40_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$$c::_get_$$9__40_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<float>*>("Oculus.Interaction.Locomotion", "LocomotionTurnerInteractor/<>c", "<>9__40_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Single> <>9__40_0
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$$c::_set_$$9__40_0(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$$c::_set_$$9__40_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionTurnerInteractor/<>c", "<>9__40_0", value)));
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor/<>c..cctor
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Locomotion", "LocomotionTurnerInteractor/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor/<>c.<.ctor>b__40_0
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$$c::$_ctor$b__40_0(float $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor::$$c::<.ctor>b__40_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__40_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotionTurnerInteractable
#include "Oculus/Interaction/Locomotion/LocomotionTurnerInteractable.hpp"
// Including type: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor
#include "Oculus/Interaction/Locomotion/LocomotionTurnerInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorEventsWrapper
#include "Oculus/Interaction/Locomotion/LocomotionTurnerInteractorEventsWrapper.hpp"
// Including type: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor
#include "Oculus/Interaction/Locomotion/LocomotionTurnerInteractor.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Locomotion.LocomotionTurnerInteractor _turner
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::dyn__turner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::dyn__turner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_turner"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenTurnDirectionLeft
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::dyn__whenTurnDirectionLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::dyn__whenTurnDirectionLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenTurnDirectionLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenTurnDirectionRight
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::dyn__whenTurnDirectionRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::dyn__whenTurnDirectionRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenTurnDirectionRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorEventsWrapper.get_WhenTurnDirectionLeft
::UnityEngine::Events::UnityEvent* Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::get_WhenTurnDirectionLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::get_WhenTurnDirectionLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenTurnDirectionLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorEventsWrapper.get_WhenTurnDirectionRight
::UnityEngine::Events::UnityEvent* Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::get_WhenTurnDirectionRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::get_WhenTurnDirectionRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenTurnDirectionRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorEventsWrapper.Start
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorEventsWrapper.OnEnable
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorEventsWrapper.OnDisable
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorEventsWrapper.HandleTurnDirectionChanged
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::HandleTurnDirectionChanged(float dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::HandleTurnDirectionChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTurnDirectionChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dir);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorEventsWrapper.InjectAllLocomotionTurnerInteractorEventsWrapper
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::InjectAllLocomotionTurnerInteractorEventsWrapper(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor* turner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::InjectAllLocomotionTurnerInteractorEventsWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllLocomotionTurnerInteractorEventsWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(turner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turner);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorEventsWrapper.InjectTurner
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::InjectTurner(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor* turner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorEventsWrapper::InjectTurner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectTurner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(turner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turner);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual
#include "Oculus/Interaction/Locomotion/LocomotionTurnerInteractorVisual.hpp"
// Including type: Oculus.Interaction.Locomotion.LocomotionTurnerInteractor
#include "Oculus/Interaction/Locomotion/LocomotionTurnerInteractor.hpp"
// Including type: Oculus.Interaction.Locomotion.TurnerEventBroadcaster
#include "Oculus/Interaction/Locomotion/TurnerEventBroadcaster.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.Input.IAxis1D
#include "Oculus/Interaction/Input/IAxis1D.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: Oculus.Interaction.TubeRenderer
#include "Oculus/Interaction/TubeRenderer.hpp"
// Including type: Oculus.Interaction.MaterialPropertyBlockEditor
#include "Oculus/Interaction/MaterialPropertyBlockEditor.hpp"
// Including type: Oculus.Interaction.InteractorStateChangeArgs
#include "Oculus/Interaction/InteractorStateChangeArgs.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single _degreesPerSegment
float Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::_get__degreesPerSegment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::_get__degreesPerSegment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Interaction.Locomotion", "LocomotionTurnerInteractorVisual", "_degreesPerSegment"));
}
// Autogenerated static field setter
// Set static field: static private System.Single _degreesPerSegment
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::_set__degreesPerSegment(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::_set__degreesPerSegment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionTurnerInteractorVisual", "_degreesPerSegment", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Quaternion _rotationCorrectionLeft
::UnityEngine::Quaternion Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::_get__rotationCorrectionLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::_get__rotationCorrectionLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Quaternion>("Oculus.Interaction.Locomotion", "LocomotionTurnerInteractorVisual", "_rotationCorrectionLeft"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Quaternion _rotationCorrectionLeft
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::_set__rotationCorrectionLeft(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::_set__rotationCorrectionLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionTurnerInteractorVisual", "_rotationCorrectionLeft", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorShaderPropertyID
int Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::_get__colorShaderPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::_get__colorShaderPropertyID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction.Locomotion", "LocomotionTurnerInteractorVisual", "_colorShaderPropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorShaderPropertyID
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::_set__colorShaderPropertyID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::_set__colorShaderPropertyID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "LocomotionTurnerInteractorVisual", "_colorShaderPropertyID", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Locomotion.LocomotionTurnerInteractor _turner
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__turner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__turner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_turner"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Locomotion.TurnerEventBroadcaster _broadcaster
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::TurnerEventBroadcaster*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__broadcaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__broadcaster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_broadcaster"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::TurnerEventBroadcaster**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _lookAt
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__lookAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__lookAt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lookAt"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _progress
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progress"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IAxis1D <Progress>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IAxis1D*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn_$Progress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn_$Progress$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Progress>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IAxis1D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _root
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _leftArrow
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__leftArrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__leftArrow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftArrow"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _rightArrow
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__rightArrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__rightArrow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightArrow"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.TubeRenderer _leftRail
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::TubeRenderer*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__leftRail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__leftRail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftRail"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::TubeRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.TubeRenderer _rightRail
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::TubeRenderer*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__rightRail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__rightRail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightRail"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::TubeRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.TubeRenderer _leftTrail
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::TubeRenderer*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__leftTrail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__leftTrail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftTrail"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::TubeRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.TubeRenderer _rightTrail
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::TubeRenderer*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__rightTrail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__rightTrail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightTrail"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::TubeRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.MaterialPropertyBlockEditor _leftMaterialBlock
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::MaterialPropertyBlockEditor*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__leftMaterialBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__leftMaterialBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftMaterialBlock"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::MaterialPropertyBlockEditor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.MaterialPropertyBlockEditor _rightMaterialBlock
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::MaterialPropertyBlockEditor*& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__rightMaterialBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__rightMaterialBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightMaterialBlock"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::MaterialPropertyBlockEditor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _verticalOffset
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__verticalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__verticalOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_verticalOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radius
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _margin
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__margin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__margin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_margin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _trailLength
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__trailLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__trailLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trailLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxAngle
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__maxAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__maxAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _railGap
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__railGap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__railGap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_railGap"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _squeezeLength
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__squeezeLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__squeezeLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_squeezeLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _disabledColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__disabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__disabledColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _enabledColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__enabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__enabledColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enabledColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _highligtedColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__highligtedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__highligtedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highligtedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.get_Progress
::Oculus::Interaction::Input::IAxis1D* Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::get_Progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::get_Progress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IAxis1D*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.set_Progress
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::set_Progress(::Oculus::Interaction::Input::IAxis1D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::set_Progress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.get_VerticalOffset
float Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::get_VerticalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::get_VerticalOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VerticalOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.set_VerticalOffset
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::set_VerticalOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::set_VerticalOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VerticalOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.get_DisabledColor
::UnityEngine::Color Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::get_DisabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::get_DisabledColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisabledColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.set_DisabledColor
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::set_DisabledColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::set_DisabledColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DisabledColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.get_EnabledColor
::UnityEngine::Color Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::get_EnabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::get_EnabledColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnabledColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.set_EnabledColor
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::set_EnabledColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::set_EnabledColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnabledColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.get_HighligtedColor
::UnityEngine::Color Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::get_HighligtedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::get_HighligtedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HighligtedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.set_HighligtedColor
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::set_HighligtedColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::set_HighligtedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HighligtedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.Awake
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.Start
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.OnEnable
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.OnDisable
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.HandleTurnerStateChanged
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::HandleTurnerStateChanged(::Oculus::Interaction::InteractorStateChangeArgs stateArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::HandleTurnerStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTurnerStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateArgs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateArgs);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InitializeVisuals
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InitializeVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InitializeVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.HandleTurnerPostprocessed
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::HandleTurnerPostprocessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::HandleTurnerPostprocessed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTurnerPostprocessed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.UpdatePose
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::UpdatePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::UpdatePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.UpdateArrows
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::UpdateArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::UpdateArrows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateArrows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.UpdateArrowPosition
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::UpdateArrowPosition(float angle, ::UnityEngine::Transform* arrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::UpdateArrowPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateArrowPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(arrow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, angle, arrow);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.RotateTrail
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::RotateTrail(float angle, ::Oculus::Interaction::TubeRenderer* trail) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::RotateTrail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateTrail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(trail)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, angle, trail);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.UpdateTrail
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::UpdateTrail(float angle, ::Oculus::Interaction::TubeRenderer* trail) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::UpdateTrail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTrail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(trail)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, angle, trail);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.UpdateRail
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::UpdateRail(float angle, float extra, ::Oculus::Interaction::TubeRenderer* rail) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::UpdateRail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(extra), ::il2cpp_utils::ExtractType(rail)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, angle, extra, rail);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.UpdateColors
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::UpdateColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::UpdateColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.ShouldFollowArrow
bool Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::ShouldFollowArrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::ShouldFollowArrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldFollowArrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InitializeSegment
::ArrayW<::Oculus::Interaction::TubePoint> Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InitializeSegment(::UnityEngine::Vector2 minMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InitializeSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minMax)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Oculus::Interaction::TubePoint>, false>(this, ___internal__method, minMax);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectAllLocomotionTurnerInteractorArrowsVisual
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectAllLocomotionTurnerInteractorArrowsVisual(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor* turner, ::UnityEngine::Transform* root, ::UnityEngine::Renderer* leftArrow, ::UnityEngine::Renderer* rightArrow, ::Oculus::Interaction::TubeRenderer* leftRail, ::Oculus::Interaction::TubeRenderer* rightRail, ::Oculus::Interaction::TubeRenderer* leftTrail, ::Oculus::Interaction::TubeRenderer* rightTrail, ::Oculus::Interaction::MaterialPropertyBlockEditor* leftMaterialBlock, ::Oculus::Interaction::MaterialPropertyBlockEditor* rightMaterialBlock, float radius, float margin, float trailLength, float maxAngle, float railGap, float squeezeLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectAllLocomotionTurnerInteractorArrowsVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllLocomotionTurnerInteractorArrowsVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(turner), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(leftArrow), ::il2cpp_utils::ExtractType(rightArrow), ::il2cpp_utils::ExtractType(leftRail), ::il2cpp_utils::ExtractType(rightRail), ::il2cpp_utils::ExtractType(leftTrail), ::il2cpp_utils::ExtractType(rightTrail), ::il2cpp_utils::ExtractType(leftMaterialBlock), ::il2cpp_utils::ExtractType(rightMaterialBlock), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(margin), ::il2cpp_utils::ExtractType(trailLength), ::il2cpp_utils::ExtractType(maxAngle), ::il2cpp_utils::ExtractType(railGap), ::il2cpp_utils::ExtractType(squeezeLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turner, root, leftArrow, rightArrow, leftRail, rightRail, leftTrail, rightTrail, leftMaterialBlock, rightMaterialBlock, radius, margin, trailLength, maxAngle, railGap, squeezeLength);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectTurner
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectTurner(::Oculus::Interaction::Locomotion::LocomotionTurnerInteractor* turner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectTurner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectTurner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(turner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turner);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectRoot
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectRoot(::UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, root);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectLeftArrow
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectLeftArrow(::UnityEngine::Renderer* leftArrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectLeftArrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectLeftArrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftArrow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leftArrow);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectRightArrow
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectRightArrow(::UnityEngine::Renderer* rightArrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectRightArrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRightArrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rightArrow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rightArrow);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectLeftRail
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectLeftRail(::Oculus::Interaction::TubeRenderer* leftRail) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectLeftRail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectLeftRail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftRail)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leftRail);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectRightRail
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectRightRail(::Oculus::Interaction::TubeRenderer* rightRail) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectRightRail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRightRail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rightRail)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rightRail);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectLeftTrail
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectLeftTrail(::Oculus::Interaction::TubeRenderer* leftTrail) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectLeftTrail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectLeftTrail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftTrail)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leftTrail);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectRightTrail
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectRightTrail(::Oculus::Interaction::TubeRenderer* rightTrail) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectRightTrail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRightTrail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rightTrail)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rightTrail);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectLeftMaterialBlock
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectLeftMaterialBlock(::Oculus::Interaction::MaterialPropertyBlockEditor* leftMaterialBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectLeftMaterialBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectLeftMaterialBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftMaterialBlock)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leftMaterialBlock);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectRightMaterialBlock
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectRightMaterialBlock(::Oculus::Interaction::MaterialPropertyBlockEditor* rightMaterialBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectRightMaterialBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRightMaterialBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rightMaterialBlock)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rightMaterialBlock);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectRadius
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectRadius(float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, radius);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectMargin
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectMargin(float margin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectMargin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectMargin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(margin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, margin);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectTrailLength
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectTrailLength(float trailLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectTrailLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectTrailLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trailLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, trailLength);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectMaxAngle
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectMaxAngle(float maxAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectMaxAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectMaxAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxAngle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, maxAngle);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectRailGap
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectRailGap(float railGap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectRailGap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRailGap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(railGap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, railGap);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectSqueezeLength
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectSqueezeLength(float squeezeLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectSqueezeLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSqueezeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(squeezeLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, squeezeLength);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectOptionalBroadcaster
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectOptionalBroadcaster(::Oculus::Interaction::Locomotion::TurnerEventBroadcaster* broadcaster) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectOptionalBroadcaster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalBroadcaster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(broadcaster)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, broadcaster);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectOptionalLookAt
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectOptionalLookAt(::UnityEngine::Transform* lookAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectOptionalLookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalLookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lookAt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lookAt);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual.InjectOptionalProgress
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectOptionalProgress(::Oculus::Interaction::Input::IAxis1D* progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::InjectOptionalProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, progress);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionTurnerInteractorVisual..cctor
void Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionTurnerInteractorVisual::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Locomotion", "LocomotionTurnerInteractorVisual", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.TurnerEventBroadcaster
#include "Oculus/Interaction/Locomotion/TurnerEventBroadcaster.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: Oculus.Interaction.Locomotion.TurnerEventBroadcaster/<>c
#include "Oculus/Interaction/Locomotion/TurnerEventBroadcaster_--c.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.IInteractor
#include "Oculus/Interaction/IInteractor.hpp"
// Including type: Oculus.Interaction.Input.IAxis1D
#include "Oculus/Interaction/Input/IAxis1D.hpp"
// Including type: Oculus.Interaction.UniqueIdentifier
#include "Oculus/Interaction/UniqueIdentifier.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Oculus.Interaction.InteractorStateChangeArgs
#include "Oculus/Interaction/InteractorStateChangeArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _interactor
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__interactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactor"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractor <Interactor>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractor*& Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn_$Interactor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn_$Interactor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Interactor>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _axis
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__axis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_axis"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IAxis1D <Axis>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IAxis1D*& Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn_$Axis$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn_$Axis$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Axis>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IAxis1D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Locomotion.TurnerEventBroadcaster/TurnMode _turnMethod
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode& Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__turnMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__turnMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_turnMethod"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _snapTurnDegrees
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__snapTurnDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__snapTurnDegrees");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_snapTurnDegrees"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _smoothTurnCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__smoothTurnCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__smoothTurnCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothTurnCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fireSnapOnUnselect
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__fireSnapOnUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__fireSnapOnUnselect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fireSnapOnUnselect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.UniqueIdentifier _identifier
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::UniqueIdentifier*& Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__identifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_identifier"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::UniqueIdentifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wasSelecting
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__wasSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__wasSelecting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wasSelecting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Oculus.Interaction.Locomotion.LocomotionEvent> _whenLocomotionEventRaised
[[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionEvent>*& Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__whenLocomotionEventRaised() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::dyn__whenLocomotionEventRaised");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenLocomotionEventRaised"))->offset;
  return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionEvent>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.get_Interactor
::Oculus::Interaction::IInteractor* Oculus::Interaction::Locomotion::TurnerEventBroadcaster::get_Interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::get_Interactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Interactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.set_Interactor
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::set_Interactor(::Oculus::Interaction::IInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::set_Interactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Interactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.get_Axis
::Oculus::Interaction::Input::IAxis1D* Oculus::Interaction::Locomotion::TurnerEventBroadcaster::get_Axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::get_Axis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Axis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IAxis1D*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.set_Axis
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::set_Axis(::Oculus::Interaction::Input::IAxis1D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::set_Axis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Axis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.get_TurnMethod
::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode Oculus::Interaction::Locomotion::TurnerEventBroadcaster::get_TurnMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::get_TurnMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TurnMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.set_TurnMethod
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::set_TurnMethod(::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::set_TurnMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TurnMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.get_SnapTurnDegrees
float Oculus::Interaction::Locomotion::TurnerEventBroadcaster::get_SnapTurnDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::get_SnapTurnDegrees");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SnapTurnDegrees", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.set_SnapTurnDegrees
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::set_SnapTurnDegrees(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::set_SnapTurnDegrees");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SnapTurnDegrees", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.get_SmoothTurnCurve
::UnityEngine::AnimationCurve* Oculus::Interaction::Locomotion::TurnerEventBroadcaster::get_SmoothTurnCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::get_SmoothTurnCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SmoothTurnCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.set_SmoothTurnCurve
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::set_SmoothTurnCurve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::set_SmoothTurnCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SmoothTurnCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.get_FireSnapOnUnselect
bool Oculus::Interaction::Locomotion::TurnerEventBroadcaster::get_FireSnapOnUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::get_FireSnapOnUnselect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FireSnapOnUnselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.set_FireSnapOnUnselect
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::set_FireSnapOnUnselect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::set_FireSnapOnUnselect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FireSnapOnUnselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.get_Identifier
int Oculus::Interaction::Locomotion::TurnerEventBroadcaster::get_Identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::get_Identifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Identifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.Awake
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TurnerEventBroadcaster*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.Start
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TurnerEventBroadcaster*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.OnEnable
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TurnerEventBroadcaster*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.OnDisable
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TurnerEventBroadcaster*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.add_WhenLocomotionPerformed
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::add_WhenLocomotionPerformed(::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::add_WhenLocomotionPerformed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TurnerEventBroadcaster*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.remove_WhenLocomotionPerformed
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::remove_WhenLocomotionPerformed(::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::remove_WhenLocomotionPerformed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::TurnerEventBroadcaster*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.HandleStateChanged
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::HandleStateChanged(::Oculus::Interaction::InteractorStateChangeArgs obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::HandleStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.HandlePostprocessed
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::HandlePostprocessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::HandlePostprocessed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePostprocessed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.ProcessSnapTurn
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::ProcessSnapTurn(float pointerOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::ProcessSnapTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSnapTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerOffset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.ProcessSmoothTurn
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::ProcessSmoothTurn(float pointerOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::ProcessSmoothTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSmoothTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerOffset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.InjectAllTurnerEventBroadcaster
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::InjectAllTurnerEventBroadcaster(::Oculus::Interaction::IInteractor* interactor, ::Oculus::Interaction::Input::IAxis1D* axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::InjectAllTurnerEventBroadcaster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllTurnerEventBroadcaster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor), ::il2cpp_utils::ExtractType(axis)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor, axis);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.InjectInteractor
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::InjectInteractor(::Oculus::Interaction::IInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::InjectInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster.InjectAxis
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::InjectAxis(::Oculus::Interaction::Input::IAxis1D* axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::InjectAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.TurnerEventBroadcaster/TurnMode
#include "Oculus/Interaction/Locomotion/TurnerEventBroadcaster.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Locomotion.TurnerEventBroadcaster/TurnMode Snap
::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode::_get_Snap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode::_get_Snap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode>("Oculus.Interaction.Locomotion", "TurnerEventBroadcaster/TurnMode", "Snap"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Locomotion.TurnerEventBroadcaster/TurnMode Snap
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode::_set_Snap(::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode::_set_Snap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "TurnerEventBroadcaster/TurnMode", "Snap", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Locomotion.TurnerEventBroadcaster/TurnMode Smooth
::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode::_get_Smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode::_get_Smooth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode>("Oculus.Interaction.Locomotion", "TurnerEventBroadcaster/TurnMode", "Smooth"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Locomotion.TurnerEventBroadcaster/TurnMode Smooth
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode::_set_Smooth(::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode::_set_Smooth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "TurnerEventBroadcaster/TurnMode", "Smooth", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::TurnMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.TurnerEventBroadcaster/<>c
#include "Oculus/Interaction/Locomotion/TurnerEventBroadcaster_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Locomotion.TurnerEventBroadcaster/<>c <>9
::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::$$c* Oculus::Interaction::Locomotion::TurnerEventBroadcaster::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::$$c*>("Oculus.Interaction.Locomotion", "TurnerEventBroadcaster/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Locomotion.TurnerEventBroadcaster/<>c <>9
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::$$c::_set_$$9(::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "TurnerEventBroadcaster/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Oculus.Interaction.Locomotion.LocomotionEvent> <>9__47_0
::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionEvent>* Oculus::Interaction::Locomotion::TurnerEventBroadcaster::$$c::_get_$$9__47_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::$$c::_get_$$9__47_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionEvent>*>("Oculus.Interaction.Locomotion", "TurnerEventBroadcaster/<>c", "<>9__47_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Oculus.Interaction.Locomotion.LocomotionEvent> <>9__47_0
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::$$c::_set_$$9__47_0(::System::Action_1<::Oculus::Interaction::Locomotion::LocomotionEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::$$c::_set_$$9__47_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Locomotion", "TurnerEventBroadcaster/<>c", "<>9__47_0", value)));
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster/<>c..cctor
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Locomotion", "TurnerEventBroadcaster/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.TurnerEventBroadcaster/<>c.<.ctor>b__47_0
void Oculus::Interaction::Locomotion::TurnerEventBroadcaster::$$c::$_ctor$b__47_0(::Oculus::Interaction::Locomotion::LocomotionEvent $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::TurnerEventBroadcaster::$$c::<.ctor>b__47_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__47_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotionGateUnityEventWrapper
#include "Oculus/Interaction/Locomotion/LocomotionGateUnityEventWrapper.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Locomotion.LocomotionGate _locomotionGate
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::LocomotionGate*& Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::dyn__locomotionGate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::dyn__locomotionGate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_locomotionGate"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::LocomotionGate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent WhenEnterLocomotion
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::dyn_WhenEnterLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::dyn_WhenEnterLocomotion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenEnterLocomotion"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent WhenExitLocomotion
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::dyn_WhenExitLocomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::dyn_WhenExitLocomotion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenExitLocomotion"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent WhenChangedToTurn
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::dyn_WhenChangedToTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::dyn_WhenChangedToTurn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenChangedToTurn"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent WhenChangedToTeleport
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::dyn_WhenChangedToTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::dyn_WhenChangedToTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenChangedToTeleport"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGateUnityEventWrapper.Start
void Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGateUnityEventWrapper.OnEnable
void Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGateUnityEventWrapper.OnDisable
void Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGateUnityEventWrapper.HandleActiveModeChanged
void Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::HandleActiveModeChanged(::Oculus::Interaction::Locomotion::LocomotionGate::LocomotionModeEventArgs locomotionModeArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::HandleActiveModeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleActiveModeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locomotionModeArgs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, locomotionModeArgs);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGateUnityEventWrapper.InjectAllLocomotionGateUnityEventWrapper
void Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::InjectAllLocomotionGateUnityEventWrapper(::Oculus::Interaction::Locomotion::LocomotionGate* locomotionGate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::InjectAllLocomotionGateUnityEventWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllLocomotionGateUnityEventWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locomotionGate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, locomotionGate);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotionGateUnityEventWrapper.InjectLocomotionGate
void Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::InjectLocomotionGate(::Oculus::Interaction::Locomotion::LocomotionGate* locomotionGate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotionGateUnityEventWrapper::InjectLocomotionGate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectLocomotionGate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locomotionGate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, locomotionGate);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Utils.FilteredTransform
#include "Oculus/Interaction/Utils/FilteredTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.Input.IOneEuroFilter`1
#include "Oculus/Interaction/Input/IOneEuroFilter_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _sourceTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Utils::FilteredTransform::dyn__sourceTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Utils::FilteredTransform::dyn__sourceTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sourceTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _filterPosition
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Utils::FilteredTransform::dyn__filterPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Utils::FilteredTransform::dyn__filterPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filterPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.OneEuroFilterPropertyBlock _positionFilterProperties
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::OneEuroFilterPropertyBlock& Oculus::Interaction::Utils::FilteredTransform::dyn__positionFilterProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Utils::FilteredTransform::dyn__positionFilterProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionFilterProperties"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::OneEuroFilterPropertyBlock*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _filterRotation
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Utils::FilteredTransform::dyn__filterRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Utils::FilteredTransform::dyn__filterRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filterRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.OneEuroFilterPropertyBlock _rotationFilterProperties
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::OneEuroFilterPropertyBlock& Oculus::Interaction::Utils::FilteredTransform::dyn__rotationFilterProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Utils::FilteredTransform::dyn__rotationFilterProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationFilterProperties"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::OneEuroFilterPropertyBlock*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IOneEuroFilter`1<UnityEngine.Vector3> _positionFilter
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IOneEuroFilter_1<::UnityEngine::Vector3>*& Oculus::Interaction::Utils::FilteredTransform::dyn__positionFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Utils::FilteredTransform::dyn__positionFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionFilter"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IOneEuroFilter_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IOneEuroFilter`1<UnityEngine.Quaternion> _rotationFilter
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IOneEuroFilter_1<::UnityEngine::Quaternion>*& Oculus::Interaction::Utils::FilteredTransform::dyn__rotationFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Utils::FilteredTransform::dyn__rotationFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationFilter"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IOneEuroFilter_1<::UnityEngine::Quaternion>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Utils.FilteredTransform.Start
void Oculus::Interaction::Utils::FilteredTransform::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Utils::FilteredTransform::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Utils::FilteredTransform*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Utils.FilteredTransform.Update
void Oculus::Interaction::Utils::FilteredTransform::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Utils::FilteredTransform::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Utils::FilteredTransform*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Utils.FilteredTransform.InjectAllFilteredTransform
void Oculus::Interaction::Utils::FilteredTransform::InjectAllFilteredTransform(::UnityEngine::Transform* sourceTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Utils::FilteredTransform::InjectAllFilteredTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllFilteredTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceTransform);
}
// Autogenerated method: Oculus.Interaction.Utils.FilteredTransform.InjectSourceTransform
void Oculus::Interaction::Utils::FilteredTransform::InjectSourceTransform(::UnityEngine::Transform* sourceTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Utils::FilteredTransform::InjectSourceTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSourceTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceTransform);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.Controller
#include "Oculus/Interaction/Input/Controller.hpp"
// Including type: Oculus.Interaction.Input.Controller/<>c
#include "Oculus/Interaction/Input/Controller_--c.hpp"
// Including type: Oculus.Interaction.Input.ControllerDataAsset
#include "Oculus/Interaction/Input/ControllerDataAsset.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
// Including type: Oculus.Interaction.Input.ITrackingToWorldTransformer
#include "Oculus/Interaction/Input/ITrackingToWorldTransformer.hpp"
// Including type: Oculus.Interaction.Input.ControllerButtonUsage
#include "Oculus/Interaction/Input/ControllerButtonUsage.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action WhenUpdated
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::Input::Controller::dyn_WhenUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::dyn_WhenUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenUpdated"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.Controller.get_Handedness
::Oculus::Interaction::Input::Handedness Oculus::Interaction::Input::Controller::get_Handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::get_Handedness");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Controller*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::Handedness, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Controller.get_IsConnected
bool Oculus::Interaction::Input::Controller::get_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::get_IsConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Controller*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Controller.get_IsPoseValid
bool Oculus::Interaction::Input::Controller::get_IsPoseValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::get_IsPoseValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Controller*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Controller.get_IsPointerPoseValid
bool Oculus::Interaction::Input::Controller::get_IsPointerPoseValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::get_IsPointerPoseValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPointerPoseValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Controller.add_WhenUpdated
void Oculus::Interaction::Input::Controller::add_WhenUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::add_WhenUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Controller*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.Controller.remove_WhenUpdated
void Oculus::Interaction::Input::Controller::remove_WhenUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::remove_WhenUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Controller*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.Controller.get_TrackingToWorldTransformer
::Oculus::Interaction::Input::ITrackingToWorldTransformer* Oculus::Interaction::Input::Controller::get_TrackingToWorldTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::get_TrackingToWorldTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrackingToWorldTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::ITrackingToWorldTransformer*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Controller.get_Scale
float Oculus::Interaction::Input::Controller::get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::get_Scale");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Controller*), 26));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Controller.IsButtonUsageAnyActive
bool Oculus::Interaction::Input::Controller::IsButtonUsageAnyActive(::Oculus::Interaction::Input::ControllerButtonUsage buttonUsage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::IsButtonUsageAnyActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Controller*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buttonUsage);
}
// Autogenerated method: Oculus.Interaction.Input.Controller.IsButtonUsageAllActive
bool Oculus::Interaction::Input::Controller::IsButtonUsageAllActive(::Oculus::Interaction::Input::ControllerButtonUsage buttonUsage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::IsButtonUsageAllActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Controller*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buttonUsage);
}
// Autogenerated method: Oculus.Interaction.Input.Controller.TryGetPose
bool Oculus::Interaction::Input::Controller::TryGetPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::TryGetPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Controller*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.Controller.TryGetPointerPose
bool Oculus::Interaction::Input::Controller::TryGetPointerPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::TryGetPointerPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Controller*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.Controller.Apply
void Oculus::Interaction::Input::Controller::Apply(::Oculus::Interaction::Input::ControllerDataAsset* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Controller*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Oculus.Interaction.Input.Controller.MarkInputDataRequiresUpdate
void Oculus::Interaction::Input::Controller::MarkInputDataRequiresUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::MarkInputDataRequiresUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.Controller/<>c
#include "Oculus/Interaction/Input/Controller_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Input.Controller/<>c <>9
::Oculus::Interaction::Input::Controller::$$c* Oculus::Interaction::Input::Controller::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::Controller::$$c*>("Oculus.Interaction.Input", "Controller/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Input.Controller/<>c <>9
void Oculus::Interaction::Input::Controller::$$c::_set_$$9(::Oculus::Interaction::Input::Controller::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "Controller/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__21_0
::System::Action* Oculus::Interaction::Input::Controller::$$c::_get_$$9__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::$$c::_get_$$9__21_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction.Input", "Controller/<>c", "<>9__21_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__21_0
void Oculus::Interaction::Input::Controller::$$c::_set_$$9__21_0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::$$c::_set_$$9__21_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "Controller/<>c", "<>9__21_0", value)));
}
// Autogenerated method: Oculus.Interaction.Input.Controller/<>c..cctor
void Oculus::Interaction::Input::Controller::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "Controller/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Controller/<>c.<.ctor>b__21_0
void Oculus::Interaction::Input::Controller::$$c::$_ctor$b__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Controller::$$c::<.ctor>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.ControllerButtonUsageActiveState
#include "Oculus/Interaction/Input/ControllerButtonUsageActiveState.hpp"
// Including type: Oculus.Interaction.Input.IController
#include "Oculus/Interaction/Input/IController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _controller
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Input::ControllerButtonUsageActiveState::dyn__controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsageActiveState::dyn__controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IController Controller
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IController*& Oculus::Interaction::Input::ControllerButtonUsageActiveState::dyn_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsageActiveState::dyn_Controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Controller"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.ControllerButtonUsage _controllerButtonUsage
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ControllerButtonUsage& Oculus::Interaction::Input::ControllerButtonUsageActiveState::dyn__controllerButtonUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsageActiveState::dyn__controllerButtonUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllerButtonUsage"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ControllerButtonUsage*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerButtonUsageActiveState.get_Active
bool Oculus::Interaction::Input::ControllerButtonUsageActiveState::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsageActiveState::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ControllerButtonUsageActiveState*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerButtonUsageActiveState.Awake
void Oculus::Interaction::Input::ControllerButtonUsageActiveState::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsageActiveState::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ControllerButtonUsageActiveState*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerButtonUsageActiveState.Start
void Oculus::Interaction::Input::ControllerButtonUsageActiveState::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsageActiveState::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ControllerButtonUsageActiveState*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerButtonUsageActiveState.InjectAllControllerButtonUsageActiveState
void Oculus::Interaction::Input::ControllerButtonUsageActiveState::InjectAllControllerButtonUsageActiveState(::Oculus::Interaction::Input::IController* controller, ::Oculus::Interaction::Input::ControllerButtonUsage controllerButtonUsage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsageActiveState::InjectAllControllerButtonUsageActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllControllerButtonUsageActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller), ::il2cpp_utils::ExtractType(controllerButtonUsage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller, controllerButtonUsage);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerButtonUsageActiveState.InjectController
void Oculus::Interaction::Input::ControllerButtonUsageActiveState::InjectController(::Oculus::Interaction::Input::IController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsageActiveState::InjectController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerButtonUsageActiveState.InjectControllerButtonUsage
void Oculus::Interaction::Input::ControllerButtonUsageActiveState::InjectControllerButtonUsage(::Oculus::Interaction::Input::ControllerButtonUsage controllerButtonUsage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsageActiveState::InjectControllerButtonUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectControllerButtonUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerButtonUsage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerButtonUsage);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.ControllerDataAsset
#include "Oculus/Interaction/Input/ControllerDataAsset.hpp"
// Including type: Oculus.Interaction.Input.ControllerDataSourceConfig
#include "Oculus/Interaction/Input/ControllerDataSourceConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsDataValid
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::ControllerDataAsset::dyn_IsDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerDataAsset::dyn_IsDataValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsDataValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsConnected
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::ControllerDataAsset::dyn_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerDataAsset::dyn_IsConnected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsConnected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsTracked
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::ControllerDataAsset::dyn_IsTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerDataAsset::dyn_IsTracked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsTracked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Input.ControllerButtonUsage ButtonUsageMask
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ControllerButtonUsage& Oculus::Interaction::Input::ControllerDataAsset::dyn_ButtonUsageMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerDataAsset::dyn_ButtonUsageMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ButtonUsageMask"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ControllerButtonUsage*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Pose RootPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Input::ControllerDataAsset::dyn_RootPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerDataAsset::dyn_RootPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RootPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Input.PoseOrigin RootPoseOrigin
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::PoseOrigin& Oculus::Interaction::Input::ControllerDataAsset::dyn_RootPoseOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerDataAsset::dyn_RootPoseOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RootPoseOrigin"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::PoseOrigin*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Pose PointerPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Input::ControllerDataAsset::dyn_PointerPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerDataAsset::dyn_PointerPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PointerPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Input.PoseOrigin PointerPoseOrigin
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::PoseOrigin& Oculus::Interaction::Input::ControllerDataAsset::dyn_PointerPoseOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerDataAsset::dyn_PointerPoseOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PointerPoseOrigin"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::PoseOrigin*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Input.ControllerDataSourceConfig Config
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ControllerDataSourceConfig*& Oculus::Interaction::Input::ControllerDataAsset::dyn_Config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerDataAsset::dyn_Config");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Config"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ControllerDataSourceConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerDataAsset.CopyFrom
void Oculus::Interaction::Input::ControllerDataAsset::CopyFrom(::Oculus::Interaction::Input::ControllerDataAsset* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerDataAsset::CopyFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ControllerDataAsset*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerDataAsset.CopyPosesAndStateFrom
void Oculus::Interaction::Input::ControllerDataAsset::CopyPosesAndStateFrom(::Oculus::Interaction::Input::ControllerDataAsset* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerDataAsset::CopyPosesAndStateFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyPosesAndStateFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.ControllerDataSourceConfig
#include "Oculus/Interaction/Input/ControllerDataSourceConfig.hpp"
// Including type: Oculus.Interaction.Input.ITrackingToWorldTransformer
#include "Oculus/Interaction/Input/ITrackingToWorldTransformer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.Handedness <Handedness>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::Handedness& Oculus::Interaction::Input::ControllerDataSourceConfig::dyn_$Handedness$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerDataSourceConfig::dyn_$Handedness$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handedness>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::Handedness*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.ITrackingToWorldTransformer <TrackingToWorldTransformer>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ITrackingToWorldTransformer*& Oculus::Interaction::Input::ControllerDataSourceConfig::dyn_$TrackingToWorldTransformer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerDataSourceConfig::dyn_$TrackingToWorldTransformer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TrackingToWorldTransformer>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ITrackingToWorldTransformer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerDataSourceConfig.get_Handedness
::Oculus::Interaction::Input::Handedness Oculus::Interaction::Input::ControllerDataSourceConfig::get_Handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerDataSourceConfig::get_Handedness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handedness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::Handedness, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerDataSourceConfig.set_Handedness
void Oculus::Interaction::Input::ControllerDataSourceConfig::set_Handedness(::Oculus::Interaction::Input::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerDataSourceConfig::set_Handedness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Handedness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerDataSourceConfig.get_TrackingToWorldTransformer
::Oculus::Interaction::Input::ITrackingToWorldTransformer* Oculus::Interaction::Input::ControllerDataSourceConfig::get_TrackingToWorldTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerDataSourceConfig::get_TrackingToWorldTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrackingToWorldTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::ITrackingToWorldTransformer*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerDataSourceConfig.set_TrackingToWorldTransformer
void Oculus::Interaction::Input::ControllerDataSourceConfig::set_TrackingToWorldTransformer(::Oculus::Interaction::Input::ITrackingToWorldTransformer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerDataSourceConfig::set_TrackingToWorldTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TrackingToWorldTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.ControllerButtonUsage
#include "Oculus/Interaction/Input/ControllerButtonUsage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.ControllerButtonUsage None
::Oculus::Interaction::Input::ControllerButtonUsage Oculus::Interaction::Input::ControllerButtonUsage::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::ControllerButtonUsage>("Oculus.Interaction.Input", "ControllerButtonUsage", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.ControllerButtonUsage None
void Oculus::Interaction::Input::ControllerButtonUsage::_set_None(::Oculus::Interaction::Input::ControllerButtonUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "ControllerButtonUsage", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.ControllerButtonUsage PrimaryButton
::Oculus::Interaction::Input::ControllerButtonUsage Oculus::Interaction::Input::ControllerButtonUsage::_get_PrimaryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_get_PrimaryButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::ControllerButtonUsage>("Oculus.Interaction.Input", "ControllerButtonUsage", "PrimaryButton"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.ControllerButtonUsage PrimaryButton
void Oculus::Interaction::Input::ControllerButtonUsage::_set_PrimaryButton(::Oculus::Interaction::Input::ControllerButtonUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_set_PrimaryButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "ControllerButtonUsage", "PrimaryButton", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.ControllerButtonUsage PrimaryTouch
::Oculus::Interaction::Input::ControllerButtonUsage Oculus::Interaction::Input::ControllerButtonUsage::_get_PrimaryTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_get_PrimaryTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::ControllerButtonUsage>("Oculus.Interaction.Input", "ControllerButtonUsage", "PrimaryTouch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.ControllerButtonUsage PrimaryTouch
void Oculus::Interaction::Input::ControllerButtonUsage::_set_PrimaryTouch(::Oculus::Interaction::Input::ControllerButtonUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_set_PrimaryTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "ControllerButtonUsage", "PrimaryTouch", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.ControllerButtonUsage SecondaryButton
::Oculus::Interaction::Input::ControllerButtonUsage Oculus::Interaction::Input::ControllerButtonUsage::_get_SecondaryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_get_SecondaryButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::ControllerButtonUsage>("Oculus.Interaction.Input", "ControllerButtonUsage", "SecondaryButton"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.ControllerButtonUsage SecondaryButton
void Oculus::Interaction::Input::ControllerButtonUsage::_set_SecondaryButton(::Oculus::Interaction::Input::ControllerButtonUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_set_SecondaryButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "ControllerButtonUsage", "SecondaryButton", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.ControllerButtonUsage SecondaryTouch
::Oculus::Interaction::Input::ControllerButtonUsage Oculus::Interaction::Input::ControllerButtonUsage::_get_SecondaryTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_get_SecondaryTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::ControllerButtonUsage>("Oculus.Interaction.Input", "ControllerButtonUsage", "SecondaryTouch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.ControllerButtonUsage SecondaryTouch
void Oculus::Interaction::Input::ControllerButtonUsage::_set_SecondaryTouch(::Oculus::Interaction::Input::ControllerButtonUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_set_SecondaryTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "ControllerButtonUsage", "SecondaryTouch", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.ControllerButtonUsage GripButton
::Oculus::Interaction::Input::ControllerButtonUsage Oculus::Interaction::Input::ControllerButtonUsage::_get_GripButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_get_GripButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::ControllerButtonUsage>("Oculus.Interaction.Input", "ControllerButtonUsage", "GripButton"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.ControllerButtonUsage GripButton
void Oculus::Interaction::Input::ControllerButtonUsage::_set_GripButton(::Oculus::Interaction::Input::ControllerButtonUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_set_GripButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "ControllerButtonUsage", "GripButton", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.ControllerButtonUsage TriggerButton
::Oculus::Interaction::Input::ControllerButtonUsage Oculus::Interaction::Input::ControllerButtonUsage::_get_TriggerButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_get_TriggerButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::ControllerButtonUsage>("Oculus.Interaction.Input", "ControllerButtonUsage", "TriggerButton"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.ControllerButtonUsage TriggerButton
void Oculus::Interaction::Input::ControllerButtonUsage::_set_TriggerButton(::Oculus::Interaction::Input::ControllerButtonUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_set_TriggerButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "ControllerButtonUsage", "TriggerButton", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.ControllerButtonUsage MenuButton
::Oculus::Interaction::Input::ControllerButtonUsage Oculus::Interaction::Input::ControllerButtonUsage::_get_MenuButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_get_MenuButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::ControllerButtonUsage>("Oculus.Interaction.Input", "ControllerButtonUsage", "MenuButton"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.ControllerButtonUsage MenuButton
void Oculus::Interaction::Input::ControllerButtonUsage::_set_MenuButton(::Oculus::Interaction::Input::ControllerButtonUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_set_MenuButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "ControllerButtonUsage", "MenuButton", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.ControllerButtonUsage Primary2DAxisClick
::Oculus::Interaction::Input::ControllerButtonUsage Oculus::Interaction::Input::ControllerButtonUsage::_get_Primary2DAxisClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_get_Primary2DAxisClick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::ControllerButtonUsage>("Oculus.Interaction.Input", "ControllerButtonUsage", "Primary2DAxisClick"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.ControllerButtonUsage Primary2DAxisClick
void Oculus::Interaction::Input::ControllerButtonUsage::_set_Primary2DAxisClick(::Oculus::Interaction::Input::ControllerButtonUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_set_Primary2DAxisClick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "ControllerButtonUsage", "Primary2DAxisClick", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.ControllerButtonUsage Primary2DAxisTouch
::Oculus::Interaction::Input::ControllerButtonUsage Oculus::Interaction::Input::ControllerButtonUsage::_get_Primary2DAxisTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_get_Primary2DAxisTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::ControllerButtonUsage>("Oculus.Interaction.Input", "ControllerButtonUsage", "Primary2DAxisTouch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.ControllerButtonUsage Primary2DAxisTouch
void Oculus::Interaction::Input::ControllerButtonUsage::_set_Primary2DAxisTouch(::Oculus::Interaction::Input::ControllerButtonUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_set_Primary2DAxisTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "ControllerButtonUsage", "Primary2DAxisTouch", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.ControllerButtonUsage Thumbrest
::Oculus::Interaction::Input::ControllerButtonUsage Oculus::Interaction::Input::ControllerButtonUsage::_get_Thumbrest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_get_Thumbrest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::ControllerButtonUsage>("Oculus.Interaction.Input", "ControllerButtonUsage", "Thumbrest"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.ControllerButtonUsage Thumbrest
void Oculus::Interaction::Input::ControllerButtonUsage::_set_Thumbrest(::Oculus::Interaction::Input::ControllerButtonUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::_set_Thumbrest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "ControllerButtonUsage", "Thumbrest", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::ControllerButtonUsage::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerButtonUsage::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.ControllerRef
#include "Oculus/Interaction/Input/ControllerRef.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.Input.ControllerButtonUsage
#include "Oculus/Interaction/Input/ControllerButtonUsage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _controller
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Input::ControllerRef::dyn__controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerRef::dyn__controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IController Controller
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IController*& Oculus::Interaction::Input::ControllerRef::dyn_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerRef::dyn_Controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Controller"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerRef.Awake
void Oculus::Interaction::Input::ControllerRef::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerRef::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ControllerRef*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerRef.Start
void Oculus::Interaction::Input::ControllerRef::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerRef::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ControllerRef*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerRef.get_Handedness
::Oculus::Interaction::Input::Handedness Oculus::Interaction::Input::ControllerRef::get_Handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerRef::get_Handedness");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ControllerRef*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::Handedness, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerRef.get_IsConnected
bool Oculus::Interaction::Input::ControllerRef::get_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerRef::get_IsConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ControllerRef*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerRef.get_IsPoseValid
bool Oculus::Interaction::Input::ControllerRef::get_IsPoseValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerRef::get_IsPoseValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ControllerRef*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerRef.add_WhenUpdated
void Oculus::Interaction::Input::ControllerRef::add_WhenUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerRef::add_WhenUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ControllerRef*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerRef.remove_WhenUpdated
void Oculus::Interaction::Input::ControllerRef::remove_WhenUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerRef::remove_WhenUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ControllerRef*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerRef.get_Active
bool Oculus::Interaction::Input::ControllerRef::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerRef::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ControllerRef*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerRef.TryGetPose
bool Oculus::Interaction::Input::ControllerRef::TryGetPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerRef::TryGetPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ControllerRef*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.ControllerRef.TryGetPointerPose
bool Oculus::Interaction::Input::ControllerRef::TryGetPointerPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerRef::TryGetPointerPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ControllerRef*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.ControllerRef.get_Scale
float Oculus::Interaction::Input::ControllerRef::get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerRef::get_Scale");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ControllerRef*), 9));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerRef.IsButtonUsageAnyActive
bool Oculus::Interaction::Input::ControllerRef::IsButtonUsageAnyActive(::Oculus::Interaction::Input::ControllerButtonUsage buttonUsage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerRef::IsButtonUsageAnyActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ControllerRef*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buttonUsage);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerRef.IsButtonUsageAllActive
bool Oculus::Interaction::Input::ControllerRef::IsButtonUsageAllActive(::Oculus::Interaction::Input::ControllerButtonUsage buttonUsage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerRef::IsButtonUsageAllActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ControllerRef*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buttonUsage);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerRef.InjectAllControllerRef
void Oculus::Interaction::Input::ControllerRef::InjectAllControllerRef(::Oculus::Interaction::Input::IController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerRef::InjectAllControllerRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllControllerRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated method: Oculus.Interaction.Input.ControllerRef.InjectController
void Oculus::Interaction::Input::ControllerRef::InjectController(::Oculus::Interaction::Input::IController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ControllerRef::InjectController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.IController
#include "Oculus/Interaction/Input/IController.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.Input.ControllerButtonUsage
#include "Oculus/Interaction/Input/ControllerButtonUsage.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Input.IController.get_Handedness
::Oculus::Interaction::Input::Handedness Oculus::Interaction::Input::IController::get_Handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IController::get_Handedness");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::Handedness, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IController.get_IsConnected
bool Oculus::Interaction::Input::IController::get_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IController::get_IsConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IController.get_IsPoseValid
bool Oculus::Interaction::Input::IController::get_IsPoseValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IController::get_IsPoseValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IController.TryGetPose
bool Oculus::Interaction::Input::IController::TryGetPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IController::TryGetPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.IController.TryGetPointerPose
bool Oculus::Interaction::Input::IController::TryGetPointerPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IController::TryGetPointerPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.IController.get_Scale
float Oculus::Interaction::Input::IController::get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IController::get_Scale");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IController.IsButtonUsageAnyActive
bool Oculus::Interaction::Input::IController::IsButtonUsageAnyActive(::Oculus::Interaction::Input::ControllerButtonUsage buttonUsage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IController::IsButtonUsageAnyActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buttonUsage);
}
// Autogenerated method: Oculus.Interaction.Input.IController.IsButtonUsageAllActive
bool Oculus::Interaction::Input::IController::IsButtonUsageAllActive(::Oculus::Interaction::Input::ControllerButtonUsage buttonUsage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IController::IsButtonUsageAllActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buttonUsage);
}
// Autogenerated method: Oculus.Interaction.Input.IController.add_WhenUpdated
void Oculus::Interaction::Input::IController::add_WhenUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IController::add_WhenUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IController*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.IController.remove_WhenUpdated
void Oculus::Interaction::Input::IController::remove_WhenUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IController::remove_WhenUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IController*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.IControllerDataModifier
#include "Oculus/Interaction/Input/IControllerDataModifier.hpp"
// Including type: Oculus.Interaction.Input.ControllerDataAsset
#include "Oculus/Interaction/Input/ControllerDataAsset.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Input.IControllerDataModifier.Apply
void Oculus::Interaction::Input::IControllerDataModifier::Apply(::Oculus::Interaction::Input::ControllerDataAsset* controllerDataAsset, ::Oculus::Interaction::Input::Handedness handedness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IControllerDataModifier::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IControllerDataModifier*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerDataAsset, handedness);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.IDataSource
#include "Oculus/Interaction/Input/IDataSource.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Input.IDataSource.get_CurrentDataVersion
int Oculus::Interaction::Input::IDataSource::get_CurrentDataVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IDataSource::get_CurrentDataVersion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IDataSource*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IDataSource.MarkInputDataRequiresUpdate
void Oculus::Interaction::Input::IDataSource::MarkInputDataRequiresUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IDataSource::MarkInputDataRequiresUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IDataSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IDataSource.add_InputDataAvailable
void Oculus::Interaction::Input::IDataSource::add_InputDataAvailable(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IDataSource::add_InputDataAvailable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IDataSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.IDataSource.remove_InputDataAvailable
void Oculus::Interaction::Input::IDataSource::remove_InputDataAvailable(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IDataSource::remove_InputDataAvailable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IDataSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.FixedScaleHand
#include "Oculus/Interaction/Input/FixedScaleHand.hpp"
// Including type: Oculus.Interaction.Input.HandDataAsset
#include "Oculus/Interaction/Input/HandDataAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _scale
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::FixedScaleHand::dyn__scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FixedScaleHand::dyn__scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.FixedScaleHand.InjectAllFixedScaleDataModifier
void Oculus::Interaction::Input::FixedScaleHand::InjectAllFixedScaleDataModifier(typename ::Oculus::Interaction::Input::DataSource_1<::Oculus::Interaction::Input::HandDataAsset*>::UpdateModeFlags updateMode, ::Oculus::Interaction::Input::IDataSource* updateAfter, ::Oculus::Interaction::Input::DataModifier_1<::Oculus::Interaction::Input::HandDataAsset*>* modifyDataFromSource, bool applyModifier, float scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FixedScaleHand::InjectAllFixedScaleDataModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllFixedScaleDataModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateMode), ::il2cpp_utils::ExtractType(updateAfter), ::il2cpp_utils::ExtractType(modifyDataFromSource), ::il2cpp_utils::ExtractType(applyModifier), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateMode, updateAfter, modifyDataFromSource, applyModifier, scale);
}
// Autogenerated method: Oculus.Interaction.Input.FixedScaleHand.InjectScale
void Oculus::Interaction::Input::FixedScaleHand::InjectScale(float scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FixedScaleHand::InjectScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scale);
}
// Autogenerated method: Oculus.Interaction.Input.FixedScaleHand.Apply
void Oculus::Interaction::Input::FixedScaleHand::Apply(::Oculus::Interaction::Input::HandDataAsset* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FixedScaleHand::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.JointRotationHistoryHand
#include "Oculus/Interaction/Input/JointRotationHistoryHand.hpp"
// Including type: Oculus.Interaction.Input.HandDataAsset
#include "Oculus/Interaction/Input/HandDataAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _historyLength
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::JointRotationHistoryHand::dyn__historyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointRotationHistoryHand::dyn__historyLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _historyOffset
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::JointRotationHistoryHand::dyn__historyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointRotationHistoryHand::dyn__historyOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion[][] _jointHistory
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<::UnityEngine::Quaternion>>& Oculus::Interaction::Input::JointRotationHistoryHand::dyn__jointHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointRotationHistoryHand::dyn__jointHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointHistory"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<::UnityEngine::Quaternion>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _historyIndex
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::JointRotationHistoryHand::dyn__historyIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointRotationHistoryHand::dyn__historyIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _capturedDataVersion
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::JointRotationHistoryHand::dyn__capturedDataVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointRotationHistoryHand::dyn__capturedDataVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capturedDataVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.JointRotationHistoryHand.SetHistoryOffset
void Oculus::Interaction::Input::JointRotationHistoryHand::SetHistoryOffset(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointRotationHistoryHand::SetHistoryOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHistoryOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset);
}
// Autogenerated method: Oculus.Interaction.Input.JointRotationHistoryHand.InjectAllJointHistoryHand
void Oculus::Interaction::Input::JointRotationHistoryHand::InjectAllJointHistoryHand(typename ::Oculus::Interaction::Input::DataSource_1<::Oculus::Interaction::Input::HandDataAsset*>::UpdateModeFlags updateMode, ::Oculus::Interaction::Input::IDataSource* updateAfter, ::Oculus::Interaction::Input::DataModifier_1<::Oculus::Interaction::Input::HandDataAsset*>* modifyDataFromSource, bool applyModifier, int historyLength, int historyOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointRotationHistoryHand::InjectAllJointHistoryHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllJointHistoryHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateMode), ::il2cpp_utils::ExtractType(updateAfter), ::il2cpp_utils::ExtractType(modifyDataFromSource), ::il2cpp_utils::ExtractType(applyModifier), ::il2cpp_utils::ExtractType(historyLength), ::il2cpp_utils::ExtractType(historyOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateMode, updateAfter, modifyDataFromSource, applyModifier, historyLength, historyOffset);
}
// Autogenerated method: Oculus.Interaction.Input.JointRotationHistoryHand.InjectHistoryLength
void Oculus::Interaction::Input::JointRotationHistoryHand::InjectHistoryLength(int historyLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointRotationHistoryHand::InjectHistoryLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHistoryLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(historyLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, historyLength);
}
// Autogenerated method: Oculus.Interaction.Input.JointRotationHistoryHand.Start
void Oculus::Interaction::Input::JointRotationHistoryHand::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointRotationHistoryHand::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataModifier_1<TData>*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.JointRotationHistoryHand.Apply
void Oculus::Interaction::Input::JointRotationHistoryHand::Apply(::Oculus::Interaction::Input::HandDataAsset* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointRotationHistoryHand::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.LastKnownGoodHand
#include "Oculus/Interaction/Input/LastKnownGoodHand.hpp"
// Including type: Oculus.Interaction.Input.HandDataAsset
#include "Oculus/Interaction/Input/HandDataAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.Input.HandDataAsset _lastState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandDataAsset*& Oculus::Interaction::Input::LastKnownGoodHand::dyn__lastState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::LastKnownGoodHand::dyn__lastState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandDataAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.LastKnownGoodHand.Apply
void Oculus::Interaction::Input::LastKnownGoodHand::Apply(::Oculus::Interaction::Input::HandDataAsset* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::LastKnownGoodHand::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.SyntheticHand
#include "Oculus/Interaction/Input/SyntheticHand.hpp"
// Including type: Oculus.Interaction.Input.SyntheticHand/WristLockMode
#include "Oculus/Interaction/Input/SyntheticHand_WristLockMode.hpp"
// Including type: Oculus.Interaction.Input.SyntheticHand/<>c
#include "Oculus/Interaction/Input/SyntheticHand_--c.hpp"
// Including type: Oculus.Interaction.ProgressCurve
#include "Oculus/Interaction/ProgressCurve.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Oculus.Interaction.Input.HandDataAsset
#include "Oculus/Interaction/Input/HandDataAsset.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Oculus.Interaction.Input.IDataSource
#include "Oculus/Interaction/Input/IDataSource.hpp"
// Including type: Oculus.Interaction.Input.DataSource`1/UpdateModeFlags
#include "Oculus/Interaction/Input/DataSource_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ProgressCurve _wristPositionLockCurve
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ProgressCurve*& Oculus::Interaction::Input::SyntheticHand::dyn__wristPositionLockCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__wristPositionLockCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wristPositionLockCurve"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ProgressCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ProgressCurve _wristPositionUnlockCurve
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ProgressCurve*& Oculus::Interaction::Input::SyntheticHand::dyn__wristPositionUnlockCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__wristPositionUnlockCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wristPositionUnlockCurve"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ProgressCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ProgressCurve _wristRotationLockCurve
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ProgressCurve*& Oculus::Interaction::Input::SyntheticHand::dyn__wristRotationLockCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__wristRotationLockCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wristRotationLockCurve"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ProgressCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ProgressCurve _wristRotationUnlockCurve
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ProgressCurve*& Oculus::Interaction::Input::SyntheticHand::dyn__wristRotationUnlockCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__wristRotationUnlockCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wristRotationUnlockCurve"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ProgressCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ProgressCurve _jointLockCurve
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ProgressCurve*& Oculus::Interaction::Input::SyntheticHand::dyn__jointLockCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__jointLockCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointLockCurve"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ProgressCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ProgressCurve _jointUnlockCurve
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ProgressCurve*& Oculus::Interaction::Input::SyntheticHand::dyn__jointUnlockCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__jointUnlockCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointUnlockCurve"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ProgressCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spreadAllowance
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::SyntheticHand::dyn__spreadAllowance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__spreadAllowance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spreadAllowance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action UpdateRequired
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::Input::SyntheticHand::dyn_UpdateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn_UpdateRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateRequired"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.Input.HandDataAsset _lastStates
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandDataAsset*& Oculus::Interaction::Input::SyntheticHand::dyn__lastStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__lastStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastStates"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandDataAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _wristPositionOverrideFactor
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::SyntheticHand::dyn__wristPositionOverrideFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__wristPositionOverrideFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wristPositionOverrideFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _wristRotationOverrideFactor
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::SyntheticHand::dyn__wristRotationOverrideFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__wristRotationOverrideFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wristRotationOverrideFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _jointsOverrideFactor
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Oculus::Interaction::Input::SyntheticHand::dyn__jointsOverrideFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__jointsOverrideFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointsOverrideFactor"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ProgressCurve[] _jointLockProgressCurves
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Interaction::ProgressCurve*>& Oculus::Interaction::Input::SyntheticHand::dyn__jointLockProgressCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__jointLockProgressCurves");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointLockProgressCurves"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Interaction::ProgressCurve*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ProgressCurve[] _jointUnlockProgressCurves
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Interaction::ProgressCurve*>& Oculus::Interaction::Input::SyntheticHand::dyn__jointUnlockProgressCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__jointUnlockProgressCurves");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointUnlockProgressCurves"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Interaction::ProgressCurve*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _desiredWristPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Input::SyntheticHand::dyn__desiredWristPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__desiredWristPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_desiredWristPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wristPositionLocked
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::SyntheticHand::dyn__wristPositionLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__wristPositionLocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wristPositionLocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wristRotationLocked
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::SyntheticHand::dyn__wristRotationLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__wristRotationLocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wristRotationLocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _constrainedWristPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Input::SyntheticHand::dyn__constrainedWristPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__constrainedWristPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_constrainedWristPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _lastWristPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Input::SyntheticHand::dyn__lastWristPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__lastWristPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastWristPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion[] _desiredJointsRotation
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& Oculus::Interaction::Input::SyntheticHand::dyn__desiredJointsRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__desiredJointsRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_desiredJointsRotation"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion[] _constrainedJointRotations
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& Oculus::Interaction::Input::SyntheticHand::dyn__constrainedJointRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__constrainedJointRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_constrainedJointRotations"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion[] _lastSyntheticRotation
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& Oculus::Interaction::Input::SyntheticHand::dyn__lastSyntheticRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__lastSyntheticRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastSyntheticRotation"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.JointFreedom[] _jointsFreedomLevels
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Interaction::Input::JointFreedom>& Oculus::Interaction::Input::SyntheticHand::dyn__jointsFreedomLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__jointsFreedomLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointsFreedomLevels"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Interaction::Input::JointFreedom>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasConnectedData
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::SyntheticHand::dyn__hasConnectedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::dyn__hasConnectedData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasConnectedData"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.UpdateRootPose
void Oculus::Interaction::Input::SyntheticHand::UpdateRootPose(ByRef<::UnityEngine::Pose> root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::UpdateRootPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRootPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(root));
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.UpdateJointsRotation
void Oculus::Interaction::Input::SyntheticHand::UpdateJointsRotation(::Oculus::Interaction::Input::HandDataAsset* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::UpdateJointsRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateJointsRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.OverrideAllJoints
void Oculus::Interaction::Input::SyntheticHand::OverrideAllJoints(ByRef<::ArrayW<::UnityEngine::Quaternion>> jointRotations, float overrideFactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::OverrideAllJoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OverrideAllJoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointRotations), ::il2cpp_utils::ExtractType(overrideFactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(jointRotations), overrideFactor);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.OverrideFingerRotations
void Oculus::Interaction::Input::SyntheticHand::OverrideFingerRotations(::Oculus::Interaction::Input::HandFinger finger, ::ArrayW<::UnityEngine::Quaternion> rotations, float overrideFactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::OverrideFingerRotations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OverrideFingerRotations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finger), ::il2cpp_utils::ExtractType(rotations), ::il2cpp_utils::ExtractType(overrideFactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finger, rotations, overrideFactor);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.OverrideJointRotation
void Oculus::Interaction::Input::SyntheticHand::OverrideJointRotation(::Oculus::Interaction::Input::HandJointId jointId, ::UnityEngine::Quaternion rotation, float overrideFactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::OverrideJointRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OverrideJointRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointId), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(overrideFactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jointId, rotation, overrideFactor);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.OverrideJointRotationAtIndex
void Oculus::Interaction::Input::SyntheticHand::OverrideJointRotationAtIndex(int jointIndex, ::UnityEngine::Quaternion rotation, float overrideFactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::OverrideJointRotationAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OverrideJointRotationAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointIndex), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(overrideFactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jointIndex, rotation, overrideFactor);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.LockFingerAtCurrent
void Oculus::Interaction::Input::SyntheticHand::LockFingerAtCurrent(ByRef<::Oculus::Interaction::Input::HandFinger> finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::LockFingerAtCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LockFingerAtCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(finger));
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.LockJoint
void Oculus::Interaction::Input::SyntheticHand::LockJoint(ByRef<::Oculus::Interaction::Input::HandJointId> jointId, ::UnityEngine::Quaternion rotation, float overrideFactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::LockJoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LockJoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointId), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(overrideFactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(jointId), rotation, overrideFactor);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.SetFingerFreedom
void Oculus::Interaction::Input::SyntheticHand::SetFingerFreedom(ByRef<::Oculus::Interaction::Input::HandFinger> finger, ByRef<::Oculus::Interaction::Input::JointFreedom> freedomLevel, bool skipAnimation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::SetFingerFreedom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFingerFreedom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finger), ::il2cpp_utils::ExtractType(freedomLevel), ::il2cpp_utils::ExtractType(skipAnimation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(finger), byref(freedomLevel), skipAnimation);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.SetJointFreedom
void Oculus::Interaction::Input::SyntheticHand::SetJointFreedom(ByRef<::Oculus::Interaction::Input::HandJointId> jointId, ByRef<::Oculus::Interaction::Input::JointFreedom> freedomLevel, bool skipAnimation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::SetJointFreedom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetJointFreedom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointId), ::il2cpp_utils::ExtractType(freedomLevel), ::il2cpp_utils::ExtractType(skipAnimation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(jointId), byref(freedomLevel), skipAnimation);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.GetJointFreedom
::Oculus::Interaction::Input::JointFreedom Oculus::Interaction::Input::SyntheticHand::GetJointFreedom(ByRef<::Oculus::Interaction::Input::HandJointId> jointId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::GetJointFreedom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetJointFreedom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointId)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::JointFreedom, false>(this, ___internal__method, byref(jointId));
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.FreeAllJoints
void Oculus::Interaction::Input::SyntheticHand::FreeAllJoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::FreeAllJoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeAllJoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.SetJointFreedomAtIndex
void Oculus::Interaction::Input::SyntheticHand::SetJointFreedomAtIndex(int jointId, ByRef<::Oculus::Interaction::Input::JointFreedom> freedomLevel, bool skipAnimation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::SetJointFreedomAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetJointFreedomAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointId), ::il2cpp_utils::ExtractType(freedomLevel), ::il2cpp_utils::ExtractType(skipAnimation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jointId, byref(freedomLevel), skipAnimation);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.LockWristPose
void Oculus::Interaction::Input::SyntheticHand::LockWristPose(::UnityEngine::Pose wristPose, float overrideFactor, ::Oculus::Interaction::Input::SyntheticHand::WristLockMode lockMode, bool worldPose, bool skipAnimation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::LockWristPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LockWristPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wristPose), ::il2cpp_utils::ExtractType(overrideFactor), ::il2cpp_utils::ExtractType(lockMode), ::il2cpp_utils::ExtractType(worldPose), ::il2cpp_utils::ExtractType(skipAnimation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wristPose, overrideFactor, lockMode, worldPose, skipAnimation);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.LockWristPosition
void Oculus::Interaction::Input::SyntheticHand::LockWristPosition(::UnityEngine::Vector3 position, float overrideFactor, bool skipAnimation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::LockWristPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LockWristPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(overrideFactor), ::il2cpp_utils::ExtractType(skipAnimation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, overrideFactor, skipAnimation);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.LockWristRotation
void Oculus::Interaction::Input::SyntheticHand::LockWristRotation(::UnityEngine::Quaternion rotation, float overrideFactor, bool skipAnimation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::LockWristRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LockWristRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(overrideFactor), ::il2cpp_utils::ExtractType(skipAnimation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotation, overrideFactor, skipAnimation);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.FreeWrist
void Oculus::Interaction::Input::SyntheticHand::FreeWrist(::Oculus::Interaction::Input::SyntheticHand::WristLockMode lockMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::FreeWrist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeWrist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lockMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lockMode);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.SyntheticWristLockChangedState
void Oculus::Interaction::Input::SyntheticHand::SyntheticWristLockChangedState(::Oculus::Interaction::Input::SyntheticHand::WristLockMode lockMode, bool skipAnimation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::SyntheticWristLockChangedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyntheticWristLockChangedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lockMode), ::il2cpp_utils::ExtractType(skipAnimation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lockMode, skipAnimation);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.OverFlex
float Oculus::Interaction::Input::SyntheticHand::OverFlex(ByRef<::UnityEngine::Quaternion> desiredLocalRot, ByRef<::UnityEngine::Quaternion> maxLocalRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::OverFlex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "SyntheticHand", "OverFlex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desiredLocalRot), ::il2cpp_utils::ExtractType(maxLocalRot)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(desiredLocalRot), byref(maxLocalRot));
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.UpdateProgressCurve
void Oculus::Interaction::Input::SyntheticHand::UpdateProgressCurve(ByRef<::Oculus::Interaction::ProgressCurve*> lockProgress, ByRef<::Oculus::Interaction::ProgressCurve*> unlockProgress, bool locked, bool skipAnimation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::UpdateProgressCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "SyntheticHand", "UpdateProgressCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lockProgress), ::il2cpp_utils::ExtractType(unlockProgress), ::il2cpp_utils::ExtractType(locked), ::il2cpp_utils::ExtractType(skipAnimation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(lockProgress), byref(unlockProgress), locked, skipAnimation);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.InjectAllSyntheticHandModifier
void Oculus::Interaction::Input::SyntheticHand::InjectAllSyntheticHandModifier(typename ::Oculus::Interaction::Input::DataSource_1<::Oculus::Interaction::Input::HandDataAsset*>::UpdateModeFlags updateMode, ::Oculus::Interaction::Input::IDataSource* updateAfter, ::Oculus::Interaction::Input::DataModifier_1<::Oculus::Interaction::Input::HandDataAsset*>* modifyDataFromSource, bool applyModifier, ::Oculus::Interaction::ProgressCurve* wristPositionLockCurve, ::Oculus::Interaction::ProgressCurve* wristPositionUnlockCurve, ::Oculus::Interaction::ProgressCurve* wristRotationLockCurve, ::Oculus::Interaction::ProgressCurve* wristRotationUnlockCurve, ::Oculus::Interaction::ProgressCurve* jointLockCurve, ::Oculus::Interaction::ProgressCurve* jointUnlockCurve, float spreadAllowance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::InjectAllSyntheticHandModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllSyntheticHandModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateMode), ::il2cpp_utils::ExtractType(updateAfter), ::il2cpp_utils::ExtractType(modifyDataFromSource), ::il2cpp_utils::ExtractType(applyModifier), ::il2cpp_utils::ExtractType(wristPositionLockCurve), ::il2cpp_utils::ExtractType(wristPositionUnlockCurve), ::il2cpp_utils::ExtractType(wristRotationLockCurve), ::il2cpp_utils::ExtractType(wristRotationUnlockCurve), ::il2cpp_utils::ExtractType(jointLockCurve), ::il2cpp_utils::ExtractType(jointUnlockCurve), ::il2cpp_utils::ExtractType(spreadAllowance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateMode, updateAfter, modifyDataFromSource, applyModifier, wristPositionLockCurve, wristPositionUnlockCurve, wristRotationLockCurve, wristRotationUnlockCurve, jointLockCurve, jointUnlockCurve, spreadAllowance);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.InjectWristPositionLockCurve
void Oculus::Interaction::Input::SyntheticHand::InjectWristPositionLockCurve(::Oculus::Interaction::ProgressCurve* wristPositionLockCurve) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::InjectWristPositionLockCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectWristPositionLockCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wristPositionLockCurve)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wristPositionLockCurve);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.InjectWristPositionUnlockCurve
void Oculus::Interaction::Input::SyntheticHand::InjectWristPositionUnlockCurve(::Oculus::Interaction::ProgressCurve* wristPositionUnlockCurve) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::InjectWristPositionUnlockCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectWristPositionUnlockCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wristPositionUnlockCurve)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wristPositionUnlockCurve);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.InjectWristRotationLockCurve
void Oculus::Interaction::Input::SyntheticHand::InjectWristRotationLockCurve(::Oculus::Interaction::ProgressCurve* wristRotationLockCurve) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::InjectWristRotationLockCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectWristRotationLockCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wristRotationLockCurve)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wristRotationLockCurve);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.InjectWristRotationUnlockCurve
void Oculus::Interaction::Input::SyntheticHand::InjectWristRotationUnlockCurve(::Oculus::Interaction::ProgressCurve* wristRotationUnlockCurve) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::InjectWristRotationUnlockCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectWristRotationUnlockCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wristRotationUnlockCurve)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wristRotationUnlockCurve);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.InjectJointLockCurve
void Oculus::Interaction::Input::SyntheticHand::InjectJointLockCurve(::Oculus::Interaction::ProgressCurve* jointLockCurve) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::InjectJointLockCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectJointLockCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointLockCurve)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jointLockCurve);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.InjectJointUnlockCurve
void Oculus::Interaction::Input::SyntheticHand::InjectJointUnlockCurve(::Oculus::Interaction::ProgressCurve* jointUnlockCurve) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::InjectJointUnlockCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectJointUnlockCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointUnlockCurve)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jointUnlockCurve);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.InjectSpreadAllowance
void Oculus::Interaction::Input::SyntheticHand::InjectSpreadAllowance(float spreadAllowance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::InjectSpreadAllowance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSpreadAllowance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spreadAllowance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, spreadAllowance);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.<Start>b__25_0
void Oculus::Interaction::Input::SyntheticHand::$Start$b__25_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::<Start>b__25_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__25_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.Start
void Oculus::Interaction::Input::SyntheticHand::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataModifier_1<TData>*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand.Apply
void Oculus::Interaction::Input::SyntheticHand::Apply(::Oculus::Interaction::Input::HandDataAsset* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.SyntheticHand/WristLockMode
#include "Oculus/Interaction/Input/SyntheticHand_WristLockMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.SyntheticHand/WristLockMode Position
::Oculus::Interaction::Input::SyntheticHand::WristLockMode Oculus::Interaction::Input::SyntheticHand::WristLockMode::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::WristLockMode::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::SyntheticHand::WristLockMode>("Oculus.Interaction.Input", "SyntheticHand/WristLockMode", "Position"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.SyntheticHand/WristLockMode Position
void Oculus::Interaction::Input::SyntheticHand::WristLockMode::_set_Position(::Oculus::Interaction::Input::SyntheticHand::WristLockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::WristLockMode::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "SyntheticHand/WristLockMode", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.SyntheticHand/WristLockMode Rotation
::Oculus::Interaction::Input::SyntheticHand::WristLockMode Oculus::Interaction::Input::SyntheticHand::WristLockMode::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::WristLockMode::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::SyntheticHand::WristLockMode>("Oculus.Interaction.Input", "SyntheticHand/WristLockMode", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.SyntheticHand/WristLockMode Rotation
void Oculus::Interaction::Input::SyntheticHand::WristLockMode::_set_Rotation(::Oculus::Interaction::Input::SyntheticHand::WristLockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::WristLockMode::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "SyntheticHand/WristLockMode", "Rotation", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.SyntheticHand/WristLockMode Full
::Oculus::Interaction::Input::SyntheticHand::WristLockMode Oculus::Interaction::Input::SyntheticHand::WristLockMode::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::WristLockMode::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::SyntheticHand::WristLockMode>("Oculus.Interaction.Input", "SyntheticHand/WristLockMode", "Full"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.SyntheticHand/WristLockMode Full
void Oculus::Interaction::Input::SyntheticHand::WristLockMode::_set_Full(::Oculus::Interaction::Input::SyntheticHand::WristLockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::WristLockMode::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "SyntheticHand/WristLockMode", "Full", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::SyntheticHand::WristLockMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::WristLockMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.SyntheticHand/<>c
#include "Oculus/Interaction/Input/SyntheticHand_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Input.SyntheticHand/<>c <>9
::Oculus::Interaction::Input::SyntheticHand::$$c* Oculus::Interaction::Input::SyntheticHand::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::SyntheticHand::$$c*>("Oculus.Interaction.Input", "SyntheticHand/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Input.SyntheticHand/<>c <>9
void Oculus::Interaction::Input::SyntheticHand::$$c::_set_$$9(::Oculus::Interaction::Input::SyntheticHand::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "SyntheticHand/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__55_0
::System::Action* Oculus::Interaction::Input::SyntheticHand::$$c::_get_$$9__55_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::$$c::_get_$$9__55_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction.Input", "SyntheticHand/<>c", "<>9__55_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__55_0
void Oculus::Interaction::Input::SyntheticHand::$$c::_set_$$9__55_0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::$$c::_set_$$9__55_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "SyntheticHand/<>c", "<>9__55_0", value)));
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand/<>c..cctor
void Oculus::Interaction::Input::SyntheticHand::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "SyntheticHand/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.SyntheticHand/<>c.<.ctor>b__55_0
void Oculus::Interaction::Input::SyntheticHand::$$c::$_ctor$b__55_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SyntheticHand::$$c::<.ctor>b__55_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__55_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.JointFreedom
#include "Oculus/Interaction/Input/JointFreedom.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.JointFreedom Free
::Oculus::Interaction::Input::JointFreedom Oculus::Interaction::Input::JointFreedom::_get_Free() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointFreedom::_get_Free");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::JointFreedom>("Oculus.Interaction.Input", "JointFreedom", "Free"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.JointFreedom Free
void Oculus::Interaction::Input::JointFreedom::_set_Free(::Oculus::Interaction::Input::JointFreedom value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointFreedom::_set_Free");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "JointFreedom", "Free", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.JointFreedom Constrained
::Oculus::Interaction::Input::JointFreedom Oculus::Interaction::Input::JointFreedom::_get_Constrained() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointFreedom::_get_Constrained");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::JointFreedom>("Oculus.Interaction.Input", "JointFreedom", "Constrained"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.JointFreedom Constrained
void Oculus::Interaction::Input::JointFreedom::_set_Constrained(::Oculus::Interaction::Input::JointFreedom value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointFreedom::_set_Constrained");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "JointFreedom", "Constrained", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.JointFreedom Locked
::Oculus::Interaction::Input::JointFreedom Oculus::Interaction::Input::JointFreedom::_get_Locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointFreedom::_get_Locked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::JointFreedom>("Oculus.Interaction.Input", "JointFreedom", "Locked"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.JointFreedom Locked
void Oculus::Interaction::Input::JointFreedom::_set_Locked(::Oculus::Interaction::Input::JointFreedom value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointFreedom::_set_Locked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "JointFreedom", "Locked", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::JointFreedom::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointFreedom::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.FingersMetadata
#include "Oculus/Interaction/Input/FingersMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Input.HandJointId[] HAND_JOINT_IDS
::ArrayW<::Oculus::Interaction::Input::HandJointId> Oculus::Interaction::Input::FingersMetadata::_get_HAND_JOINT_IDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FingersMetadata::_get_HAND_JOINT_IDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Oculus::Interaction::Input::HandJointId>>("Oculus.Interaction.Input", "FingersMetadata", "HAND_JOINT_IDS"));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Input.HandJointId[] HAND_JOINT_IDS
void Oculus::Interaction::Input::FingersMetadata::_set_HAND_JOINT_IDS(::ArrayW<::Oculus::Interaction::Input::HandJointId> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FingersMetadata::_set_HAND_JOINT_IDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "FingersMetadata", "HAND_JOINT_IDS", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32[][] FINGER_TO_JOINT_INDEX
::ArrayW<::ArrayW<int>> Oculus::Interaction::Input::FingersMetadata::_get_FINGER_TO_JOINT_INDEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FingersMetadata::_get_FINGER_TO_JOINT_INDEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::ArrayW<int>>>("Oculus.Interaction.Input", "FingersMetadata", "FINGER_TO_JOINT_INDEX"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32[][] FINGER_TO_JOINT_INDEX
void Oculus::Interaction::Input::FingersMetadata::_set_FINGER_TO_JOINT_INDEX(::ArrayW<::ArrayW<int>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FingersMetadata::_set_FINGER_TO_JOINT_INDEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "FingersMetadata", "FINGER_TO_JOINT_INDEX", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Input.HandJointId[][] FINGER_TO_JOINTS
::ArrayW<::ArrayW<::Oculus::Interaction::Input::HandJointId>> Oculus::Interaction::Input::FingersMetadata::_get_FINGER_TO_JOINTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FingersMetadata::_get_FINGER_TO_JOINTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::ArrayW<::Oculus::Interaction::Input::HandJointId>>>("Oculus.Interaction.Input", "FingersMetadata", "FINGER_TO_JOINTS"));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Input.HandJointId[][] FINGER_TO_JOINTS
void Oculus::Interaction::Input::FingersMetadata::_set_FINGER_TO_JOINTS(::ArrayW<::ArrayW<::Oculus::Interaction::Input::HandJointId>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FingersMetadata::_set_FINGER_TO_JOINTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "FingersMetadata", "FINGER_TO_JOINTS", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean[] HAND_JOINT_CAN_SPREAD
::ArrayW<bool> Oculus::Interaction::Input::FingersMetadata::_get_HAND_JOINT_CAN_SPREAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FingersMetadata::_get_HAND_JOINT_CAN_SPREAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<bool>>("Oculus.Interaction.Input", "FingersMetadata", "HAND_JOINT_CAN_SPREAD"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean[] HAND_JOINT_CAN_SPREAD
void Oculus::Interaction::Input::FingersMetadata::_set_HAND_JOINT_CAN_SPREAD(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FingersMetadata::_set_HAND_JOINT_CAN_SPREAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "FingersMetadata", "HAND_JOINT_CAN_SPREAD", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Input.HandFinger[] JOINT_TO_FINGER
::ArrayW<::Oculus::Interaction::Input::HandFinger> Oculus::Interaction::Input::FingersMetadata::_get_JOINT_TO_FINGER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FingersMetadata::_get_JOINT_TO_FINGER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Oculus::Interaction::Input::HandFinger>>("Oculus.Interaction.Input", "FingersMetadata", "JOINT_TO_FINGER"));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Input.HandFinger[] JOINT_TO_FINGER
void Oculus::Interaction::Input::FingersMetadata::_set_JOINT_TO_FINGER(::ArrayW<::Oculus::Interaction::Input::HandFinger> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FingersMetadata::_set_JOINT_TO_FINGER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "FingersMetadata", "JOINT_TO_FINGER", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32[] JOINT_TO_FINGER_INDEX
::ArrayW<int> Oculus::Interaction::Input::FingersMetadata::_get_JOINT_TO_FINGER_INDEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FingersMetadata::_get_JOINT_TO_FINGER_INDEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Oculus.Interaction.Input", "FingersMetadata", "JOINT_TO_FINGER_INDEX"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32[] JOINT_TO_FINGER_INDEX
void Oculus::Interaction::Input::FingersMetadata::_set_JOINT_TO_FINGER_INDEX(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FingersMetadata::_set_JOINT_TO_FINGER_INDEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "FingersMetadata", "JOINT_TO_FINGER_INDEX", value));
}
// Autogenerated method: Oculus.Interaction.Input.FingersMetadata.DefaultFingersFreedom
::ArrayW<::Oculus::Interaction::Input::JointFreedom> Oculus::Interaction::Input::FingersMetadata::DefaultFingersFreedom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FingersMetadata::DefaultFingersFreedom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "FingersMetadata", "DefaultFingersFreedom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Oculus::Interaction::Input::JointFreedom>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FingersMetadata.HandJointIdToIndex
int Oculus::Interaction::Input::FingersMetadata::HandJointIdToIndex(::Oculus::Interaction::Input::HandJointId id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FingersMetadata::HandJointIdToIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "FingersMetadata", "HandJointIdToIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Interaction.Input.FingersMetadata..cctor
void Oculus::Interaction::Input::FingersMetadata::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FingersMetadata::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "FingersMetadata", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.FromHandPrefabDataSource
#include "Oculus/Interaction/Input/FromHandPrefabDataSource.hpp"
// Including type: Oculus.Interaction.Input.HandDataAsset
#include "Oculus/Interaction/Input/HandDataAsset.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.Input.IHandSkeletonProvider
#include "Oculus/Interaction/Input/IHandSkeletonProvider.hpp"
// Including type: Oculus.Interaction.Input.ITrackingToWorldTransformer
#include "Oculus/Interaction/Input/ITrackingToWorldTransformer.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.Input.HandDataAsset _handDataAsset
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandDataAsset*& Oculus::Interaction::Input::FromHandPrefabDataSource::dyn__handDataAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromHandPrefabDataSource::dyn__handDataAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handDataAsset"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandDataAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.Handedness _handedness
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::Handedness& Oculus::Interaction::Input::FromHandPrefabDataSource::dyn__handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromHandPrefabDataSource::dyn__handedness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handedness"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::Handedness*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hidePrefabOnStart
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::FromHandPrefabDataSource::dyn__hidePrefabOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromHandPrefabDataSource::dyn__hidePrefabOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hidePrefabOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Transform> _jointTransforms
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Transform*>*& Oculus::Interaction::Input::FromHandPrefabDataSource::dyn__jointTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromHandPrefabDataSource::dyn__jointTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointTransforms"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _handSkeletonProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Input::FromHandPrefabDataSource::dyn__handSkeletonProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromHandPrefabDataSource::dyn__handSkeletonProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handSkeletonProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHandSkeletonProvider HandSkeletonProvider
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHandSkeletonProvider*& Oculus::Interaction::Input::FromHandPrefabDataSource::dyn_HandSkeletonProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromHandPrefabDataSource::dyn_HandSkeletonProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandSkeletonProvider"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHandSkeletonProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _trackingToWorldTransformer
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Input::FromHandPrefabDataSource::dyn__trackingToWorldTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromHandPrefabDataSource::dyn__trackingToWorldTransformer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackingToWorldTransformer"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.ITrackingToWorldTransformer TrackingToWorldTransformer
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ITrackingToWorldTransformer*& Oculus::Interaction::Input::FromHandPrefabDataSource::dyn_TrackingToWorldTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromHandPrefabDataSource::dyn_TrackingToWorldTransformer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackingToWorldTransformer"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ITrackingToWorldTransformer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.FromHandPrefabDataSource.get_DataAsset
::Oculus::Interaction::Input::HandDataAsset* Oculus::Interaction::Input::FromHandPrefabDataSource::get_DataAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromHandPrefabDataSource::get_DataAsset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::FromHandPrefabDataSource*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandDataAsset*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromHandPrefabDataSource.get_Handedness
::Oculus::Interaction::Input::Handedness Oculus::Interaction::Input::FromHandPrefabDataSource::get_Handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromHandPrefabDataSource::get_Handedness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handedness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::Handedness, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromHandPrefabDataSource.get_JointTransforms
::System::Collections::Generic::List_1<::UnityEngine::Transform*>* Oculus::Interaction::Input::FromHandPrefabDataSource::get_JointTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromHandPrefabDataSource::get_JointTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_JointTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Transform*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromHandPrefabDataSource.Awake
void Oculus::Interaction::Input::FromHandPrefabDataSource::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromHandPrefabDataSource::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::FromHandPrefabDataSource*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromHandPrefabDataSource.GetTransformFor
::UnityEngine::Transform* Oculus::Interaction::Input::FromHandPrefabDataSource::GetTransformFor(::Oculus::Interaction::Input::HandJointId jointId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromHandPrefabDataSource::GetTransformFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransformFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, jointId);
}
// Autogenerated method: Oculus.Interaction.Input.FromHandPrefabDataSource.Start
void Oculus::Interaction::Input::FromHandPrefabDataSource::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromHandPrefabDataSource::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromHandPrefabDataSource.UpdateData
void Oculus::Interaction::Input::FromHandPrefabDataSource::UpdateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromHandPrefabDataSource::UpdateData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.Hand
#include "Oculus/Interaction/Input/Hand.hpp"
// Including type: Oculus.Interaction.Input.Hand/<>c
#include "Oculus/Interaction/Input/Hand_--c.hpp"
// Including type: Oculus.Interaction.Input.HandDataAsset
#include "Oculus/Interaction/Input/HandDataAsset.hpp"
// Including type: Oculus.Interaction.Input.HandJointCache
#include "Oculus/Interaction/Input/HandJointCache.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
// Including type: Oculus.Interaction.Input.ITrackingToWorldTransformer
#include "Oculus/Interaction/Input/ITrackingToWorldTransformer.hpp"
// Including type: Oculus.Interaction.Input.HandSkeleton
#include "Oculus/Interaction/Input/HandSkeleton.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
// Including type: Oculus.Interaction.Input.ReadOnlyHandJointPoses
#include "Oculus/Interaction/Input/ReadOnlyHandJointPoses.hpp"
// Including type: Oculus.Interaction.Input.PoseOrigin
#include "Oculus/Interaction/Input/PoseOrigin.hpp"
// Including type: Oculus.Interaction.Input.IDataSource
#include "Oculus/Interaction/Input/IDataSource.hpp"
// Including type: Oculus.Interaction.Input.DataSource`1/UpdateModeFlags
#include "Oculus/Interaction/Input/DataSource_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 PALM_LOCAL_OFFSET
::UnityEngine::Vector3 Oculus::Interaction::Input::Hand::_get_PALM_LOCAL_OFFSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::_get_PALM_LOCAL_OFFSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("Oculus.Interaction.Input", "Hand", "PALM_LOCAL_OFFSET"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 PALM_LOCAL_OFFSET
void Oculus::Interaction::Input::Hand::_set_PALM_LOCAL_OFFSET(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::_set_PALM_LOCAL_OFFSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "Hand", "PALM_LOCAL_OFFSET", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.HandJointCache _jointPosesCache
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandJointCache*& Oculus::Interaction::Input::Hand::dyn__jointPosesCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::dyn__jointPosesCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointPosesCache"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandJointCache**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action WhenHandUpdated
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::Input::Hand::dyn_WhenHandUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::dyn_WhenHandUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenHandUpdated"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.get_Handedness
::Oculus::Interaction::Input::Handedness Oculus::Interaction::Input::Hand::get_Handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::get_Handedness");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::Handedness, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.get_TrackingToWorldTransformer
::Oculus::Interaction::Input::ITrackingToWorldTransformer* Oculus::Interaction::Input::Hand::get_TrackingToWorldTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::get_TrackingToWorldTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrackingToWorldTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::ITrackingToWorldTransformer*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.get_HandSkeleton
::Oculus::Interaction::Input::HandSkeleton* Oculus::Interaction::Input::Hand::get_HandSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::get_HandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandSkeleton*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.add_WhenHandUpdated
void Oculus::Interaction::Input::Hand::add_WhenHandUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::add_WhenHandUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.remove_WhenHandUpdated
void Oculus::Interaction::Input::Hand::remove_WhenHandUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::remove_WhenHandUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.get_IsConnected
bool Oculus::Interaction::Input::Hand::get_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::get_IsConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.get_IsHighConfidence
bool Oculus::Interaction::Input::Hand::get_IsHighConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::get_IsHighConfidence");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.get_IsDominantHand
bool Oculus::Interaction::Input::Hand::get_IsDominantHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::get_IsDominantHand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.get_Scale
float Oculus::Interaction::Input::Hand::get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::get_Scale");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 25));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.Apply
void Oculus::Interaction::Input::Hand::Apply(::Oculus::Interaction::Input::HandDataAsset* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.InitializeJointPosesCache
void Oculus::Interaction::Input::Hand::InitializeJointPosesCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::InitializeJointPosesCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeJointPosesCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.CheckJointPosesCacheUpdate
void Oculus::Interaction::Input::Hand::CheckJointPosesCacheUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::CheckJointPosesCacheUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckJointPosesCacheUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.GetFingerIsPinching
bool Oculus::Interaction::Input::Hand::GetFingerIsPinching(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::GetFingerIsPinching");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 26));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.GetIndexFingerIsPinching
bool Oculus::Interaction::Input::Hand::GetIndexFingerIsPinching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::GetIndexFingerIsPinching");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.get_IsPointerPoseValid
bool Oculus::Interaction::Input::Hand::get_IsPointerPoseValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::get_IsPointerPoseValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.GetPointerPose
bool Oculus::Interaction::Input::Hand::GetPointerPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::GetPointerPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 29));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.Hand.GetJointPose
bool Oculus::Interaction::Input::Hand::GetJointPose(::Oculus::Interaction::Input::HandJointId handJointId, ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::GetJointPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 30));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handJointId, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.Hand.GetJointPoseLocal
bool Oculus::Interaction::Input::Hand::GetJointPoseLocal(::Oculus::Interaction::Input::HandJointId handJointId, ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::GetJointPoseLocal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handJointId, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.Hand.GetJointPosesLocal
bool Oculus::Interaction::Input::Hand::GetJointPosesLocal(ByRef<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*> localJointPoses) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::GetJointPosesLocal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(localJointPoses));
}
// Autogenerated method: Oculus.Interaction.Input.Hand.GetJointPoseFromWrist
bool Oculus::Interaction::Input::Hand::GetJointPoseFromWrist(::Oculus::Interaction::Input::HandJointId handJointId, ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::GetJointPoseFromWrist");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 33));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handJointId, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.Hand.GetJointPosesFromWrist
bool Oculus::Interaction::Input::Hand::GetJointPosesFromWrist(ByRef<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*> jointPosesFromWrist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::GetJointPosesFromWrist");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 34));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(jointPosesFromWrist));
}
// Autogenerated method: Oculus.Interaction.Input.Hand.GetPalmPoseLocal
bool Oculus::Interaction::Input::Hand::GetPalmPoseLocal(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::GetPalmPoseLocal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 35));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.Hand.GetFingerIsHighConfidence
bool Oculus::Interaction::Input::Hand::GetFingerIsHighConfidence(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::GetFingerIsHighConfidence");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 36));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.GetFingerPinchStrength
float Oculus::Interaction::Input::Hand::GetFingerPinchStrength(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::GetFingerPinchStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 37));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.get_IsTrackedDataValid
bool Oculus::Interaction::Input::Hand::get_IsTrackedDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::get_IsTrackedDataValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 38));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.GetRootPose
bool Oculus::Interaction::Input::Hand::GetRootPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::GetRootPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 39));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.Hand.ValidatePose
bool Oculus::Interaction::Input::Hand::ValidatePose(ByRef<::UnityEngine::Pose> sourcePose, ::Oculus::Interaction::Input::PoseOrigin sourcePoseOrigin, ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::ValidatePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidatePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePose), ::il2cpp_utils::ExtractType(sourcePoseOrigin), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Pose&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(sourcePose), sourcePoseOrigin, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.Hand.IsPoseOriginAllowed
bool Oculus::Interaction::Input::Hand::IsPoseOriginAllowed(::Oculus::Interaction::Input::PoseOrigin poseOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::IsPoseOriginAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPoseOriginAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poseOrigin)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, poseOrigin);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.IsPoseOriginDisallowed
bool Oculus::Interaction::Input::Hand::IsPoseOriginDisallowed(::Oculus::Interaction::Input::PoseOrigin poseOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::IsPoseOriginDisallowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPoseOriginDisallowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poseOrigin)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, poseOrigin);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.InjectAllHand
void Oculus::Interaction::Input::Hand::InjectAllHand(typename ::Oculus::Interaction::Input::DataSource_1<::Oculus::Interaction::Input::HandDataAsset*>::UpdateModeFlags updateMode, ::Oculus::Interaction::Input::IDataSource* updateAfter, ::Oculus::Interaction::Input::DataModifier_1<::Oculus::Interaction::Input::HandDataAsset*>* modifyDataFromSource, bool applyModifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::InjectAllHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateMode), ::il2cpp_utils::ExtractType(updateAfter), ::il2cpp_utils::ExtractType(modifyDataFromSource), ::il2cpp_utils::ExtractType(applyModifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateMode, updateAfter, modifyDataFromSource, applyModifier);
}
// Autogenerated method: Oculus.Interaction.Input.Hand.MarkInputDataRequiresUpdate
void Oculus::Interaction::Input::Hand::MarkInputDataRequiresUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::MarkInputDataRequiresUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Hand..cctor
void Oculus::Interaction::Input::Hand::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "Hand", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.Hand/<>c
#include "Oculus/Interaction/Input/Hand_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Input.Hand/<>c <>9
::Oculus::Interaction::Input::Hand::$$c* Oculus::Interaction::Input::Hand::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::Hand::$$c*>("Oculus.Interaction.Input", "Hand/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Input.Hand/<>c <>9
void Oculus::Interaction::Input::Hand::$$c::_set_$$9(::Oculus::Interaction::Input::Hand::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "Hand/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__43_0
::System::Action* Oculus::Interaction::Input::Hand::$$c::_get_$$9__43_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::$$c::_get_$$9__43_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction.Input", "Hand/<>c", "<>9__43_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__43_0
void Oculus::Interaction::Input::Hand::$$c::_set_$$9__43_0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::$$c::_set_$$9__43_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "Hand/<>c", "<>9__43_0", value)));
}
// Autogenerated method: Oculus.Interaction.Input.Hand/<>c..cctor
void Oculus::Interaction::Input::Hand::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "Hand/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Hand/<>c.<.ctor>b__43_0
void Oculus::Interaction::Input::Hand::$$c::$_ctor$b__43_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hand::$$c::<.ctor>b__43_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__43_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HandDataAsset
#include "Oculus/Interaction/Input/HandDataAsset.hpp"
// Including type: Oculus.Interaction.Input.HandDataSourceConfig
#include "Oculus/Interaction/Input/HandDataSourceConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsDataValid
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::HandDataAsset::dyn_IsDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataAsset::dyn_IsDataValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsDataValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsConnected
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::HandDataAsset::dyn_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataAsset::dyn_IsConnected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsConnected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsTracked
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::HandDataAsset::dyn_IsTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataAsset::dyn_IsTracked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsTracked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Pose Root
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Input::HandDataAsset::dyn_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataAsset::dyn_Root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Root"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Input.PoseOrigin RootPoseOrigin
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::PoseOrigin& Oculus::Interaction::Input::HandDataAsset::dyn_RootPoseOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataAsset::dyn_RootPoseOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RootPoseOrigin"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::PoseOrigin*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion[] Joints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& Oculus::Interaction::Input::HandDataAsset::dyn_Joints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataAsset::dyn_Joints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Joints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsHighConfidence
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::HandDataAsset::dyn_IsHighConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataAsset::dyn_IsHighConfidence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsHighConfidence"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean[] IsFingerPinching
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& Oculus::Interaction::Input::HandDataAsset::dyn_IsFingerPinching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataAsset::dyn_IsFingerPinching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsFingerPinching"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean[] IsFingerHighConfidence
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& Oculus::Interaction::Input::HandDataAsset::dyn_IsFingerHighConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataAsset::dyn_IsFingerHighConfidence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsFingerHighConfidence"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] FingerPinchStrength
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Oculus::Interaction::Input::HandDataAsset::dyn_FingerPinchStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataAsset::dyn_FingerPinchStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FingerPinchStrength"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single HandScale
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::HandDataAsset::dyn_HandScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataAsset::dyn_HandScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Pose PointerPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Input::HandDataAsset::dyn_PointerPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataAsset::dyn_PointerPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PointerPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Input.PoseOrigin PointerPoseOrigin
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::PoseOrigin& Oculus::Interaction::Input::HandDataAsset::dyn_PointerPoseOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataAsset::dyn_PointerPoseOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PointerPoseOrigin"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::PoseOrigin*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsDominantHand
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::HandDataAsset::dyn_IsDominantHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataAsset::dyn_IsDominantHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsDominantHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Input.HandDataSourceConfig Config
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandDataSourceConfig*& Oculus::Interaction::Input::HandDataAsset::dyn_Config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataAsset::dyn_Config");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Config"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandDataSourceConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.HandDataAsset.get_IsDataValidAndConnected
bool Oculus::Interaction::Input::HandDataAsset::get_IsDataValidAndConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataAsset::get_IsDataValidAndConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDataValidAndConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandDataAsset.CopyFrom
void Oculus::Interaction::Input::HandDataAsset::CopyFrom(::Oculus::Interaction::Input::HandDataAsset* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataAsset::CopyFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandDataAsset*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: Oculus.Interaction.Input.HandDataAsset.CopyPosesFrom
void Oculus::Interaction::Input::HandDataAsset::CopyPosesFrom(::Oculus::Interaction::Input::HandDataAsset* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataAsset::CopyPosesFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyPosesFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HandDataSourceConfig
#include "Oculus/Interaction/Input/HandDataSourceConfig.hpp"
// Including type: Oculus.Interaction.Input.ITrackingToWorldTransformer
#include "Oculus/Interaction/Input/ITrackingToWorldTransformer.hpp"
// Including type: Oculus.Interaction.Input.HandSkeleton
#include "Oculus/Interaction/Input/HandSkeleton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.Handedness <Handedness>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::Handedness& Oculus::Interaction::Input::HandDataSourceConfig::dyn_$Handedness$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataSourceConfig::dyn_$Handedness$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handedness>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::Handedness*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.ITrackingToWorldTransformer <TrackingToWorldTransformer>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ITrackingToWorldTransformer*& Oculus::Interaction::Input::HandDataSourceConfig::dyn_$TrackingToWorldTransformer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataSourceConfig::dyn_$TrackingToWorldTransformer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TrackingToWorldTransformer>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ITrackingToWorldTransformer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.HandSkeleton <HandSkeleton>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandSkeleton*& Oculus::Interaction::Input::HandDataSourceConfig::dyn_$HandSkeleton$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataSourceConfig::dyn_$HandSkeleton$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HandSkeleton>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandSkeleton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.HandDataSourceConfig.get_Handedness
::Oculus::Interaction::Input::Handedness Oculus::Interaction::Input::HandDataSourceConfig::get_Handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataSourceConfig::get_Handedness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handedness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::Handedness, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandDataSourceConfig.set_Handedness
void Oculus::Interaction::Input::HandDataSourceConfig::set_Handedness(::Oculus::Interaction::Input::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataSourceConfig::set_Handedness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Handedness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.HandDataSourceConfig.get_TrackingToWorldTransformer
::Oculus::Interaction::Input::ITrackingToWorldTransformer* Oculus::Interaction::Input::HandDataSourceConfig::get_TrackingToWorldTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataSourceConfig::get_TrackingToWorldTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrackingToWorldTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::ITrackingToWorldTransformer*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandDataSourceConfig.set_TrackingToWorldTransformer
void Oculus::Interaction::Input::HandDataSourceConfig::set_TrackingToWorldTransformer(::Oculus::Interaction::Input::ITrackingToWorldTransformer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataSourceConfig::set_TrackingToWorldTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TrackingToWorldTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.HandDataSourceConfig.get_HandSkeleton
::Oculus::Interaction::Input::HandSkeleton* Oculus::Interaction::Input::HandDataSourceConfig::get_HandSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataSourceConfig::get_HandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandSkeleton*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandDataSourceConfig.set_HandSkeleton
void Oculus::Interaction::Input::HandDataSourceConfig::set_HandSkeleton(::Oculus::Interaction::Input::HandSkeleton* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandDataSourceConfig::set_HandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HandJointCache
#include "Oculus/Interaction/Input/HandJointCache.hpp"
// Including type: Oculus.Interaction.Input.ReadOnlyHandJointPoses
#include "Oculus/Interaction/Input/ReadOnlyHandJointPoses.hpp"
// Including type: Oculus.Interaction.Input.IReadOnlyHandSkeletonJointList
#include "Oculus/Interaction/Input/IReadOnlyHandSkeletonJointList.hpp"
// Including type: Oculus.Interaction.Input.IReadOnlyHandSkeleton
#include "Oculus/Interaction/Input/IReadOnlyHandSkeleton.hpp"
// Including type: Oculus.Interaction.Input.HandDataAsset
#include "Oculus/Interaction/Input/HandDataAsset.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose[] _localPoses
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Pose>& Oculus::Interaction::Input::HandJointCache::dyn__localPoses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::dyn__localPoses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPoses"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Pose>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose[] _posesFromWrist
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Pose>& Oculus::Interaction::Input::HandJointCache::dyn__posesFromWrist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::dyn__posesFromWrist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_posesFromWrist"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Pose>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose[] _worldPoses
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Pose>& Oculus::Interaction::Input::HandJointCache::dyn__worldPoses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::dyn__worldPoses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_worldPoses"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Pose>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.ReadOnlyHandJointPoses _posesFromWristCollection
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ReadOnlyHandJointPoses*& Oculus::Interaction::Input::HandJointCache::dyn__posesFromWristCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::dyn__posesFromWristCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_posesFromWristCollection"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ReadOnlyHandJointPoses**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.ReadOnlyHandJointPoses _localPosesCollection
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ReadOnlyHandJointPoses*& Oculus::Interaction::Input::HandJointCache::dyn__localPosesCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::dyn__localPosesCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPosesCollection"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ReadOnlyHandJointPoses**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IReadOnlyHandSkeletonJointList _originalJoints
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IReadOnlyHandSkeletonJointList*& Oculus::Interaction::Input::HandJointCache::dyn__originalJoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::dyn__originalJoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalJoints"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IReadOnlyHandSkeletonJointList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _dirtyWorldJoints
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::HandJointCache::dyn__dirtyWorldJoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::dyn__dirtyWorldJoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dirtyWorldJoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _dirtyWristJoints
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::HandJointCache::dyn__dirtyWristJoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::dyn__dirtyWristJoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dirtyWristJoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <LocalDataVersion>k__BackingField
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::HandJointCache::dyn_$LocalDataVersion$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::dyn_$LocalDataVersion$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LocalDataVersion>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.HandJointCache.get_LocalDataVersion
int Oculus::Interaction::Input::HandJointCache::get_LocalDataVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::get_LocalDataVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalDataVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandJointCache.set_LocalDataVersion
void Oculus::Interaction::Input::HandJointCache::set_LocalDataVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::set_LocalDataVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LocalDataVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.HandJointCache.Update
void Oculus::Interaction::Input::HandJointCache::Update(::Oculus::Interaction::Input::HandDataAsset* data, int dataVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataVersion)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, dataVersion);
}
// Autogenerated method: Oculus.Interaction.Input.HandJointCache.GetAllLocalPoses
bool Oculus::Interaction::Input::HandJointCache::GetAllLocalPoses(ByRef<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*> localJointPoses) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::GetAllLocalPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllLocalPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(localJointPoses));
}
// Autogenerated method: Oculus.Interaction.Input.HandJointCache.GetAllPosesFromWrist
bool Oculus::Interaction::Input::HandJointCache::GetAllPosesFromWrist(ByRef<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*> jointPosesFromWrist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::GetAllPosesFromWrist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllPosesFromWrist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(jointPosesFromWrist));
}
// Autogenerated method: Oculus.Interaction.Input.HandJointCache.LocalJointPose
::UnityEngine::Pose Oculus::Interaction::Input::HandJointCache::LocalJointPose(::Oculus::Interaction::Input::HandJointId jointid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::LocalJointPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalJointPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointid)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, jointid);
}
// Autogenerated method: Oculus.Interaction.Input.HandJointCache.PoseFromWrist
::UnityEngine::Pose Oculus::Interaction::Input::HandJointCache::PoseFromWrist(::Oculus::Interaction::Input::HandJointId jointid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::PoseFromWrist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PoseFromWrist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointid)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, jointid);
}
// Autogenerated method: Oculus.Interaction.Input.HandJointCache.WorldJointPose
::UnityEngine::Pose Oculus::Interaction::Input::HandJointCache::WorldJointPose(::Oculus::Interaction::Input::HandJointId jointid, ::UnityEngine::Pose rootPose, float handScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::WorldJointPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorldJointPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointid), ::il2cpp_utils::ExtractType(rootPose), ::il2cpp_utils::ExtractType(handScale)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, jointid, rootPose, handScale);
}
// Autogenerated method: Oculus.Interaction.Input.HandJointCache.UpdateAllLocalPoses
void Oculus::Interaction::Input::HandJointCache::UpdateAllLocalPoses(::Oculus::Interaction::Input::HandDataAsset* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::UpdateAllLocalPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAllLocalPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Oculus.Interaction.Input.HandJointCache.UpdateAllPosesFromWrist
void Oculus::Interaction::Input::HandJointCache::UpdateAllPosesFromWrist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::UpdateAllPosesFromWrist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAllPosesFromWrist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandJointCache.UpdateWristJoint
void Oculus::Interaction::Input::HandJointCache::UpdateWristJoint(::Oculus::Interaction::Input::HandJointId jointid, ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointCache::UpdateWristJoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateWristJoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointid), ::il2cpp_utils::ExtractType(pose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jointid, byref(pose));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HandPhysicsCapsules
#include "Oculus/Interaction/Input/HandPhysicsCapsules.hpp"
// Including type: Oculus.Interaction.Input.HandPhysicsCapsules/<>c
#include "Oculus/Interaction/Input/HandPhysicsCapsules_--c.hpp"
// Including type: Oculus.Interaction.IHandVisual
#include "Oculus/Interaction/IHandVisual.hpp"
// Including type: Oculus.Interaction.Input.JointsRadiusFeature
#include "Oculus/Interaction/Input/JointsRadiusFeature.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Interaction.Input.BoneCapsule
#include "Oculus/Interaction/Input/BoneCapsule.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: UnityEngine.CapsuleCollider
#include "UnityEngine/CapsuleCollider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _handVisual
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Input::HandPhysicsCapsules::dyn__handVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::dyn__handVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handVisual"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IHandVisual HandVisual
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IHandVisual*& Oculus::Interaction::Input::HandPhysicsCapsules::dyn_HandVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::dyn_HandVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandVisual"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IHandVisual**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.JointsRadiusFeature _jointsRadiusFeature
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::JointsRadiusFeature*& Oculus::Interaction::Input::HandPhysicsCapsules::dyn__jointsRadiusFeature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::dyn__jointsRadiusFeature");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointsRadiusFeature"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::JointsRadiusFeature**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _asTriggers
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::HandPhysicsCapsules::dyn__asTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::dyn__asTriggers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asTriggers"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _useLayer
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::HandPhysicsCapsules::dyn__useLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::dyn__useLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.HandFingerJointFlags _mask
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandFingerJointFlags& Oculus::Interaction::Input::HandPhysicsCapsules::dyn__mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::dyn__mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mask"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandFingerJointFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action _whenCapsulesGenerated
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::Input::HandPhysicsCapsules::dyn__whenCapsulesGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::dyn__whenCapsulesGenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenCapsulesGenerated"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _rootTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Input::HandPhysicsCapsules::dyn__rootTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::dyn__rootTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.Input.BoneCapsule> _capsules
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::Input::BoneCapsule*>*& Oculus::Interaction::Input::HandPhysicsCapsules::dyn__capsules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::dyn__capsules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capsules"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::Input::BoneCapsule*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IList`1<Oculus.Interaction.Input.BoneCapsule> <Capsules>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::Oculus::Interaction::Input::BoneCapsule*>*& Oculus::Interaction::Input::HandPhysicsCapsules::dyn_$Capsules$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::dyn_$Capsules$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Capsules>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::Oculus::Interaction::Input::BoneCapsule*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody[] _rigidbodies
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Rigidbody*>& Oculus::Interaction::Input::HandPhysicsCapsules::dyn__rigidbodies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::dyn__rigidbodies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbodies"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Rigidbody*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _capsulesAreActive
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::HandPhysicsCapsules::dyn__capsulesAreActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::dyn__capsulesAreActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capsulesAreActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _capsulesGenerated
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::HandPhysicsCapsules::dyn__capsulesGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::dyn__capsulesGenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capsulesGenerated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::HandPhysicsCapsules::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.add_WhenCapsulesGenerated
void Oculus::Interaction::Input::HandPhysicsCapsules::add_WhenCapsulesGenerated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::add_WhenCapsulesGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_WhenCapsulesGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.remove_WhenCapsulesGenerated
void Oculus::Interaction::Input::HandPhysicsCapsules::remove_WhenCapsulesGenerated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::remove_WhenCapsulesGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_WhenCapsulesGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.get_RootTransform
::UnityEngine::Transform* Oculus::Interaction::Input::HandPhysicsCapsules::get_RootTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::get_RootTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RootTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.get_Capsules
::System::Collections::Generic::IList_1<::Oculus::Interaction::Input::BoneCapsule*>* Oculus::Interaction::Input::HandPhysicsCapsules::get_Capsules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::get_Capsules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capsules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Oculus::Interaction::Input::BoneCapsule*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.set_Capsules
void Oculus::Interaction::Input::HandPhysicsCapsules::set_Capsules(::System::Collections::Generic::IList_1<::Oculus::Interaction::Input::BoneCapsule*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::set_Capsules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Capsules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.Reset
void Oculus::Interaction::Input::HandPhysicsCapsules::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandPhysicsCapsules*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.Awake
void Oculus::Interaction::Input::HandPhysicsCapsules::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandPhysicsCapsules*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.Start
void Oculus::Interaction::Input::HandPhysicsCapsules::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandPhysicsCapsules*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.GenerateCapsules
void Oculus::Interaction::Input::HandPhysicsCapsules::GenerateCapsules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::GenerateCapsules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateCapsules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.IgnoreSelfCollisions
void Oculus::Interaction::Input::HandPhysicsCapsules::IgnoreSelfCollisions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::IgnoreSelfCollisions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IgnoreSelfCollisions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.TryGetJointRigidbody
bool Oculus::Interaction::Input::HandPhysicsCapsules::TryGetJointRigidbody(::Oculus::Interaction::Input::HandJointId joint, ByRef<::UnityEngine::Rigidbody*> body) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::TryGetJointRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetJointRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joint), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Rigidbody*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, joint, byref(body));
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.CreateJointRigidbody
::UnityEngine::Rigidbody* Oculus::Interaction::Input::HandPhysicsCapsules::CreateJointRigidbody(::Oculus::Interaction::Input::HandJointId joint, ::UnityEngine::Transform* holder, ::UnityEngine::Pose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::CreateJointRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateJointRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joint), ::il2cpp_utils::ExtractType(holder), ::il2cpp_utils::ExtractType(pose)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method, joint, holder, pose);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.CreateCollider
::UnityEngine::CapsuleCollider* Oculus::Interaction::Input::HandPhysicsCapsules::CreateCollider(::StringW name, ::UnityEngine::Transform* from, ::UnityEngine::Vector3 to, float radius, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::CreateCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::CapsuleCollider*, false>(this, ___internal__method, name, from, to, radius, offset);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.OnEnable
void Oculus::Interaction::Input::HandPhysicsCapsules::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandPhysicsCapsules*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.OnDisable
void Oculus::Interaction::Input::HandPhysicsCapsules::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandPhysicsCapsules*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.LateUpdate
void Oculus::Interaction::Input::HandPhysicsCapsules::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::LateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandPhysicsCapsules*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.EnableRigidbodies
void Oculus::Interaction::Input::HandPhysicsCapsules::EnableRigidbodies(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::EnableRigidbodies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableRigidbodies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.HandleHandVisualUpdated
void Oculus::Interaction::Input::HandPhysicsCapsules::HandleHandVisualUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::HandleHandVisualUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHandVisualUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.InjectAllOVRHandPhysicsCapsules
void Oculus::Interaction::Input::HandPhysicsCapsules::InjectAllOVRHandPhysicsCapsules(::Oculus::Interaction::IHandVisual* handVisual, bool asTriggers, int useLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::InjectAllOVRHandPhysicsCapsules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllOVRHandPhysicsCapsules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handVisual), ::il2cpp_utils::ExtractType(asTriggers), ::il2cpp_utils::ExtractType(useLayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handVisual, asTriggers, useLayer);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.InjectHandVisual
void Oculus::Interaction::Input::HandPhysicsCapsules::InjectHandVisual(::Oculus::Interaction::IHandVisual* handVisual) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::InjectHandVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handVisual)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handVisual);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.InjectAsTriggers
void Oculus::Interaction::Input::HandPhysicsCapsules::InjectAsTriggers(bool asTriggers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::InjectAsTriggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAsTriggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asTriggers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asTriggers);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules.InjectUseLayer
void Oculus::Interaction::Input::HandPhysicsCapsules::InjectUseLayer(int useLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::InjectUseLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectUseLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useLayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, useLayer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HandPhysicsCapsules/<>c
#include "Oculus/Interaction/Input/HandPhysicsCapsules_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Input.HandPhysicsCapsules/<>c <>9
::Oculus::Interaction::Input::HandPhysicsCapsules::$$c* Oculus::Interaction::Input::HandPhysicsCapsules::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandPhysicsCapsules::$$c*>("Oculus.Interaction.Input", "HandPhysicsCapsules/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Input.HandPhysicsCapsules/<>c <>9
void Oculus::Interaction::Input::HandPhysicsCapsules::$$c::_set_$$9(::Oculus::Interaction::Input::HandPhysicsCapsules::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandPhysicsCapsules/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__39_0
::System::Action* Oculus::Interaction::Input::HandPhysicsCapsules::$$c::_get_$$9__39_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::$$c::_get_$$9__39_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction.Input", "HandPhysicsCapsules/<>c", "<>9__39_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__39_0
void Oculus::Interaction::Input::HandPhysicsCapsules::$$c::_set_$$9__39_0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::$$c::_set_$$9__39_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandPhysicsCapsules/<>c", "<>9__39_0", value)));
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules/<>c..cctor
void Oculus::Interaction::Input::HandPhysicsCapsules::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "HandPhysicsCapsules/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandPhysicsCapsules/<>c.<.ctor>b__39_0
void Oculus::Interaction::Input::HandPhysicsCapsules::$$c::$_ctor$b__39_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandPhysicsCapsules::$$c::<.ctor>b__39_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__39_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.BoneCapsule
#include "Oculus/Interaction/Input/BoneCapsule.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.CapsuleCollider
#include "UnityEngine/CapsuleCollider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.HandJointId <StartJoint>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandJointId& Oculus::Interaction::Input::BoneCapsule::dyn_$StartJoint$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::BoneCapsule::dyn_$StartJoint$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StartJoint>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandJointId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.HandJointId <EndJoint>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandJointId& Oculus::Interaction::Input::BoneCapsule::dyn_$EndJoint$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::BoneCapsule::dyn_$EndJoint$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EndJoint>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandJointId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody <CapsuleRigidbody>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Oculus::Interaction::Input::BoneCapsule::dyn_$CapsuleRigidbody$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::BoneCapsule::dyn_$CapsuleRigidbody$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CapsuleRigidbody>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CapsuleCollider <CapsuleCollider>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::CapsuleCollider*& Oculus::Interaction::Input::BoneCapsule::dyn_$CapsuleCollider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::BoneCapsule::dyn_$CapsuleCollider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CapsuleCollider>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::CapsuleCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.BoneCapsule.get_StartJoint
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::BoneCapsule::get_StartJoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::BoneCapsule::get_StartJoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartJoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandJointId, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.BoneCapsule.set_StartJoint
void Oculus::Interaction::Input::BoneCapsule::set_StartJoint(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::BoneCapsule::set_StartJoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartJoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.BoneCapsule.get_EndJoint
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::BoneCapsule::get_EndJoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::BoneCapsule::get_EndJoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndJoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandJointId, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.BoneCapsule.set_EndJoint
void Oculus::Interaction::Input::BoneCapsule::set_EndJoint(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::BoneCapsule::set_EndJoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EndJoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.BoneCapsule.get_CapsuleRigidbody
::UnityEngine::Rigidbody* Oculus::Interaction::Input::BoneCapsule::get_CapsuleRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::BoneCapsule::get_CapsuleRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CapsuleRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.BoneCapsule.set_CapsuleRigidbody
void Oculus::Interaction::Input::BoneCapsule::set_CapsuleRigidbody(::UnityEngine::Rigidbody* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::BoneCapsule::set_CapsuleRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CapsuleRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.BoneCapsule.get_CapsuleCollider
::UnityEngine::CapsuleCollider* Oculus::Interaction::Input::BoneCapsule::get_CapsuleCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::BoneCapsule::get_CapsuleCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CapsuleCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::CapsuleCollider*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.BoneCapsule.set_CapsuleCollider
void Oculus::Interaction::Input::BoneCapsule::set_CapsuleCollider(::UnityEngine::CapsuleCollider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::BoneCapsule::set_CapsuleCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CapsuleCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.Constants
#include "Oculus/Interaction/Input/Constants.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 NUM_HAND_JOINTS
int Oculus::Interaction::Input::Constants::_get_NUM_HAND_JOINTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Constants::_get_NUM_HAND_JOINTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction.Input", "Constants", "NUM_HAND_JOINTS"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 NUM_HAND_JOINTS
void Oculus::Interaction::Input::Constants::_set_NUM_HAND_JOINTS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Constants::_set_NUM_HAND_JOINTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "Constants", "NUM_HAND_JOINTS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 NUM_FINGERS
int Oculus::Interaction::Input::Constants::_get_NUM_FINGERS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Constants::_get_NUM_FINGERS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction.Input", "Constants", "NUM_FINGERS"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 NUM_FINGERS
void Oculus::Interaction::Input::Constants::_set_NUM_FINGERS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Constants::_set_NUM_FINGERS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "Constants", "NUM_FINGERS", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.Handedness Left
::Oculus::Interaction::Input::Handedness Oculus::Interaction::Input::Handedness::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Handedness::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::Handedness>("Oculus.Interaction.Input", "Handedness", "Left"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.Handedness Left
void Oculus::Interaction::Input::Handedness::_set_Left(::Oculus::Interaction::Input::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Handedness::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "Handedness", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.Handedness Right
::Oculus::Interaction::Input::Handedness Oculus::Interaction::Input::Handedness::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Handedness::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::Handedness>("Oculus.Interaction.Input", "Handedness", "Right"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.Handedness Right
void Oculus::Interaction::Input::Handedness::_set_Right(::Oculus::Interaction::Input::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Handedness::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "Handedness", "Right", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::Handedness::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Handedness::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFinger Invalid
::Oculus::Interaction::Input::HandFinger Oculus::Interaction::Input::HandFinger::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFinger::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFinger>("Oculus.Interaction.Input", "HandFinger", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFinger Invalid
void Oculus::Interaction::Input::HandFinger::_set_Invalid(::Oculus::Interaction::Input::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFinger::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFinger", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFinger Thumb
::Oculus::Interaction::Input::HandFinger Oculus::Interaction::Input::HandFinger::_get_Thumb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFinger::_get_Thumb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFinger>("Oculus.Interaction.Input", "HandFinger", "Thumb"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFinger Thumb
void Oculus::Interaction::Input::HandFinger::_set_Thumb(::Oculus::Interaction::Input::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFinger::_set_Thumb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFinger", "Thumb", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFinger Index
::Oculus::Interaction::Input::HandFinger Oculus::Interaction::Input::HandFinger::_get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFinger::_get_Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFinger>("Oculus.Interaction.Input", "HandFinger", "Index"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFinger Index
void Oculus::Interaction::Input::HandFinger::_set_Index(::Oculus::Interaction::Input::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFinger::_set_Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFinger", "Index", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFinger Middle
::Oculus::Interaction::Input::HandFinger Oculus::Interaction::Input::HandFinger::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFinger::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFinger>("Oculus.Interaction.Input", "HandFinger", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFinger Middle
void Oculus::Interaction::Input::HandFinger::_set_Middle(::Oculus::Interaction::Input::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFinger::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFinger", "Middle", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFinger Ring
::Oculus::Interaction::Input::HandFinger Oculus::Interaction::Input::HandFinger::_get_Ring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFinger::_get_Ring");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFinger>("Oculus.Interaction.Input", "HandFinger", "Ring"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFinger Ring
void Oculus::Interaction::Input::HandFinger::_set_Ring(::Oculus::Interaction::Input::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFinger::_set_Ring");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFinger", "Ring", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFinger Pinky
::Oculus::Interaction::Input::HandFinger Oculus::Interaction::Input::HandFinger::_get_Pinky() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFinger::_get_Pinky");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFinger>("Oculus.Interaction.Input", "HandFinger", "Pinky"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFinger Pinky
void Oculus::Interaction::Input::HandFinger::_set_Pinky(::Oculus::Interaction::Input::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFinger::_set_Pinky");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFinger", "Pinky", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFinger Max
::Oculus::Interaction::Input::HandFinger Oculus::Interaction::Input::HandFinger::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFinger::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFinger>("Oculus.Interaction.Input", "HandFinger", "Max"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFinger Max
void Oculus::Interaction::Input::HandFinger::_set_Max(::Oculus::Interaction::Input::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFinger::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFinger", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::HandFinger::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFinger::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HandFingerFlags
#include "Oculus/Interaction/Input/HandFingerFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerFlags None
::Oculus::Interaction::Input::HandFingerFlags Oculus::Interaction::Input::HandFingerFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerFlags>("Oculus.Interaction.Input", "HandFingerFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerFlags None
void Oculus::Interaction::Input::HandFingerFlags::_set_None(::Oculus::Interaction::Input::HandFingerFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerFlags Thumb
::Oculus::Interaction::Input::HandFingerFlags Oculus::Interaction::Input::HandFingerFlags::_get_Thumb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerFlags::_get_Thumb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerFlags>("Oculus.Interaction.Input", "HandFingerFlags", "Thumb"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerFlags Thumb
void Oculus::Interaction::Input::HandFingerFlags::_set_Thumb(::Oculus::Interaction::Input::HandFingerFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerFlags::_set_Thumb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerFlags", "Thumb", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerFlags Index
::Oculus::Interaction::Input::HandFingerFlags Oculus::Interaction::Input::HandFingerFlags::_get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerFlags::_get_Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerFlags>("Oculus.Interaction.Input", "HandFingerFlags", "Index"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerFlags Index
void Oculus::Interaction::Input::HandFingerFlags::_set_Index(::Oculus::Interaction::Input::HandFingerFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerFlags::_set_Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerFlags", "Index", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerFlags Middle
::Oculus::Interaction::Input::HandFingerFlags Oculus::Interaction::Input::HandFingerFlags::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerFlags::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerFlags>("Oculus.Interaction.Input", "HandFingerFlags", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerFlags Middle
void Oculus::Interaction::Input::HandFingerFlags::_set_Middle(::Oculus::Interaction::Input::HandFingerFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerFlags::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerFlags", "Middle", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerFlags Ring
::Oculus::Interaction::Input::HandFingerFlags Oculus::Interaction::Input::HandFingerFlags::_get_Ring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerFlags::_get_Ring");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerFlags>("Oculus.Interaction.Input", "HandFingerFlags", "Ring"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerFlags Ring
void Oculus::Interaction::Input::HandFingerFlags::_set_Ring(::Oculus::Interaction::Input::HandFingerFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerFlags::_set_Ring");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerFlags", "Ring", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerFlags Pinky
::Oculus::Interaction::Input::HandFingerFlags Oculus::Interaction::Input::HandFingerFlags::_get_Pinky() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerFlags::_get_Pinky");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerFlags>("Oculus.Interaction.Input", "HandFingerFlags", "Pinky"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerFlags Pinky
void Oculus::Interaction::Input::HandFingerFlags::_set_Pinky(::Oculus::Interaction::Input::HandFingerFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerFlags::_set_Pinky");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerFlags", "Pinky", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerFlags All
::Oculus::Interaction::Input::HandFingerFlags Oculus::Interaction::Input::HandFingerFlags::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerFlags::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerFlags>("Oculus.Interaction.Input", "HandFingerFlags", "All"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerFlags All
void Oculus::Interaction::Input::HandFingerFlags::_set_All(::Oculus::Interaction::Input::HandFingerFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerFlags::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerFlags", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::HandFingerFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.PinchGrabParam
#include "Oculus/Interaction/Input/PinchGrabParam.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.PinchGrabParam PinchDistanceStart
::Oculus::Interaction::Input::PinchGrabParam Oculus::Interaction::Input::PinchGrabParam::_get_PinchDistanceStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_get_PinchDistanceStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::PinchGrabParam>("Oculus.Interaction.Input", "PinchGrabParam", "PinchDistanceStart"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.PinchGrabParam PinchDistanceStart
void Oculus::Interaction::Input::PinchGrabParam::_set_PinchDistanceStart(::Oculus::Interaction::Input::PinchGrabParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_set_PinchDistanceStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "PinchGrabParam", "PinchDistanceStart", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.PinchGrabParam PinchDistanceStopMax
::Oculus::Interaction::Input::PinchGrabParam Oculus::Interaction::Input::PinchGrabParam::_get_PinchDistanceStopMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_get_PinchDistanceStopMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::PinchGrabParam>("Oculus.Interaction.Input", "PinchGrabParam", "PinchDistanceStopMax"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.PinchGrabParam PinchDistanceStopMax
void Oculus::Interaction::Input::PinchGrabParam::_set_PinchDistanceStopMax(::Oculus::Interaction::Input::PinchGrabParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_set_PinchDistanceStopMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "PinchGrabParam", "PinchDistanceStopMax", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.PinchGrabParam PinchDistanceStopOffset
::Oculus::Interaction::Input::PinchGrabParam Oculus::Interaction::Input::PinchGrabParam::_get_PinchDistanceStopOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_get_PinchDistanceStopOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::PinchGrabParam>("Oculus.Interaction.Input", "PinchGrabParam", "PinchDistanceStopOffset"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.PinchGrabParam PinchDistanceStopOffset
void Oculus::Interaction::Input::PinchGrabParam::_set_PinchDistanceStopOffset(::Oculus::Interaction::Input::PinchGrabParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_set_PinchDistanceStopOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "PinchGrabParam", "PinchDistanceStopOffset", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.PinchGrabParam PinchHqDistanceStart
::Oculus::Interaction::Input::PinchGrabParam Oculus::Interaction::Input::PinchGrabParam::_get_PinchHqDistanceStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_get_PinchHqDistanceStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::PinchGrabParam>("Oculus.Interaction.Input", "PinchGrabParam", "PinchHqDistanceStart"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.PinchGrabParam PinchHqDistanceStart
void Oculus::Interaction::Input::PinchGrabParam::_set_PinchHqDistanceStart(::Oculus::Interaction::Input::PinchGrabParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_set_PinchHqDistanceStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "PinchGrabParam", "PinchHqDistanceStart", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.PinchGrabParam PinchHqDistanceStopMax
::Oculus::Interaction::Input::PinchGrabParam Oculus::Interaction::Input::PinchGrabParam::_get_PinchHqDistanceStopMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_get_PinchHqDistanceStopMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::PinchGrabParam>("Oculus.Interaction.Input", "PinchGrabParam", "PinchHqDistanceStopMax"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.PinchGrabParam PinchHqDistanceStopMax
void Oculus::Interaction::Input::PinchGrabParam::_set_PinchHqDistanceStopMax(::Oculus::Interaction::Input::PinchGrabParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_set_PinchHqDistanceStopMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "PinchGrabParam", "PinchHqDistanceStopMax", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.PinchGrabParam PinchHqDistanceStopOffset
::Oculus::Interaction::Input::PinchGrabParam Oculus::Interaction::Input::PinchGrabParam::_get_PinchHqDistanceStopOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_get_PinchHqDistanceStopOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::PinchGrabParam>("Oculus.Interaction.Input", "PinchGrabParam", "PinchHqDistanceStopOffset"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.PinchGrabParam PinchHqDistanceStopOffset
void Oculus::Interaction::Input::PinchGrabParam::_set_PinchHqDistanceStopOffset(::Oculus::Interaction::Input::PinchGrabParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_set_PinchHqDistanceStopOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "PinchGrabParam", "PinchHqDistanceStopOffset", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.PinchGrabParam PinchHqViewAngleThreshold
::Oculus::Interaction::Input::PinchGrabParam Oculus::Interaction::Input::PinchGrabParam::_get_PinchHqViewAngleThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_get_PinchHqViewAngleThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::PinchGrabParam>("Oculus.Interaction.Input", "PinchGrabParam", "PinchHqViewAngleThreshold"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.PinchGrabParam PinchHqViewAngleThreshold
void Oculus::Interaction::Input::PinchGrabParam::_set_PinchHqViewAngleThreshold(::Oculus::Interaction::Input::PinchGrabParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_set_PinchHqViewAngleThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "PinchGrabParam", "PinchHqViewAngleThreshold", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.PinchGrabParam ThumbDistanceStart
::Oculus::Interaction::Input::PinchGrabParam Oculus::Interaction::Input::PinchGrabParam::_get_ThumbDistanceStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_get_ThumbDistanceStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::PinchGrabParam>("Oculus.Interaction.Input", "PinchGrabParam", "ThumbDistanceStart"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.PinchGrabParam ThumbDistanceStart
void Oculus::Interaction::Input::PinchGrabParam::_set_ThumbDistanceStart(::Oculus::Interaction::Input::PinchGrabParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_set_ThumbDistanceStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "PinchGrabParam", "ThumbDistanceStart", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.PinchGrabParam ThumbDistanceStopMax
::Oculus::Interaction::Input::PinchGrabParam Oculus::Interaction::Input::PinchGrabParam::_get_ThumbDistanceStopMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_get_ThumbDistanceStopMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::PinchGrabParam>("Oculus.Interaction.Input", "PinchGrabParam", "ThumbDistanceStopMax"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.PinchGrabParam ThumbDistanceStopMax
void Oculus::Interaction::Input::PinchGrabParam::_set_ThumbDistanceStopMax(::Oculus::Interaction::Input::PinchGrabParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_set_ThumbDistanceStopMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "PinchGrabParam", "ThumbDistanceStopMax", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.PinchGrabParam ThumbDistanceStopOffset
::Oculus::Interaction::Input::PinchGrabParam Oculus::Interaction::Input::PinchGrabParam::_get_ThumbDistanceStopOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_get_ThumbDistanceStopOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::PinchGrabParam>("Oculus.Interaction.Input", "PinchGrabParam", "ThumbDistanceStopOffset"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.PinchGrabParam ThumbDistanceStopOffset
void Oculus::Interaction::Input::PinchGrabParam::_set_ThumbDistanceStopOffset(::Oculus::Interaction::Input::PinchGrabParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_set_ThumbDistanceStopOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "PinchGrabParam", "ThumbDistanceStopOffset", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.PinchGrabParam ThumbMaxDot
::Oculus::Interaction::Input::PinchGrabParam Oculus::Interaction::Input::PinchGrabParam::_get_ThumbMaxDot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_get_ThumbMaxDot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::PinchGrabParam>("Oculus.Interaction.Input", "PinchGrabParam", "ThumbMaxDot"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.PinchGrabParam ThumbMaxDot
void Oculus::Interaction::Input::PinchGrabParam::_set_ThumbMaxDot(::Oculus::Interaction::Input::PinchGrabParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::_set_ThumbMaxDot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "PinchGrabParam", "ThumbMaxDot", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::PinchGrabParam::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PinchGrabParam::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HandFingerJointFlags
#include "Oculus/Interaction/Input/HandFingerJointFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags None
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags None
void Oculus::Interaction::Input::HandFingerJointFlags::_set_None(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags Wrist
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_Wrist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_Wrist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "Wrist"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags Wrist
void Oculus::Interaction::Input::HandFingerJointFlags::_set_Wrist(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_Wrist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "Wrist", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags ForearmStub
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_ForearmStub() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_ForearmStub");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "ForearmStub"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags ForearmStub
void Oculus::Interaction::Input::HandFingerJointFlags::_set_ForearmStub(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_ForearmStub");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "ForearmStub", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags Thumb0
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_Thumb0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_Thumb0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "Thumb0"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags Thumb0
void Oculus::Interaction::Input::HandFingerJointFlags::_set_Thumb0(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_Thumb0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "Thumb0", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags Thumb1
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_Thumb1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_Thumb1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "Thumb1"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags Thumb1
void Oculus::Interaction::Input::HandFingerJointFlags::_set_Thumb1(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_Thumb1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "Thumb1", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags Thumb2
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_Thumb2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_Thumb2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "Thumb2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags Thumb2
void Oculus::Interaction::Input::HandFingerJointFlags::_set_Thumb2(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_Thumb2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "Thumb2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags Thumb3
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_Thumb3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_Thumb3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "Thumb3"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags Thumb3
void Oculus::Interaction::Input::HandFingerJointFlags::_set_Thumb3(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_Thumb3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "Thumb3", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags Index1
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_Index1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_Index1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "Index1"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags Index1
void Oculus::Interaction::Input::HandFingerJointFlags::_set_Index1(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_Index1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "Index1", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags Index2
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_Index2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_Index2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "Index2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags Index2
void Oculus::Interaction::Input::HandFingerJointFlags::_set_Index2(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_Index2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "Index2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags Index3
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_Index3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_Index3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "Index3"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags Index3
void Oculus::Interaction::Input::HandFingerJointFlags::_set_Index3(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_Index3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "Index3", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags Middle1
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_Middle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_Middle1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "Middle1"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags Middle1
void Oculus::Interaction::Input::HandFingerJointFlags::_set_Middle1(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_Middle1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "Middle1", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags Middle2
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_Middle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_Middle2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "Middle2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags Middle2
void Oculus::Interaction::Input::HandFingerJointFlags::_set_Middle2(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_Middle2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "Middle2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags Middle3
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_Middle3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_Middle3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "Middle3"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags Middle3
void Oculus::Interaction::Input::HandFingerJointFlags::_set_Middle3(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_Middle3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "Middle3", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags Ring1
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_Ring1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_Ring1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "Ring1"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags Ring1
void Oculus::Interaction::Input::HandFingerJointFlags::_set_Ring1(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_Ring1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "Ring1", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags Ring2
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_Ring2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_Ring2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "Ring2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags Ring2
void Oculus::Interaction::Input::HandFingerJointFlags::_set_Ring2(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_Ring2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "Ring2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags Ring3
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_Ring3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_Ring3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "Ring3"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags Ring3
void Oculus::Interaction::Input::HandFingerJointFlags::_set_Ring3(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_Ring3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "Ring3", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags Pinky0
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_Pinky0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_Pinky0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "Pinky0"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags Pinky0
void Oculus::Interaction::Input::HandFingerJointFlags::_set_Pinky0(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_Pinky0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "Pinky0", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags Pinky1
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_Pinky1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_Pinky1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "Pinky1"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags Pinky1
void Oculus::Interaction::Input::HandFingerJointFlags::_set_Pinky1(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_Pinky1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "Pinky1", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags Pinky2
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_Pinky2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_Pinky2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "Pinky2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags Pinky2
void Oculus::Interaction::Input::HandFingerJointFlags::_set_Pinky2(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_Pinky2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "Pinky2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags Pinky3
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_Pinky3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_Pinky3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "Pinky3"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags Pinky3
void Oculus::Interaction::Input::HandFingerJointFlags::_set_Pinky3(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_Pinky3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "Pinky3", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags ThumbTip
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_ThumbTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_ThumbTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "ThumbTip"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags ThumbTip
void Oculus::Interaction::Input::HandFingerJointFlags::_set_ThumbTip(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_ThumbTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "ThumbTip", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags IndexTip
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_IndexTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_IndexTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "IndexTip"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags IndexTip
void Oculus::Interaction::Input::HandFingerJointFlags::_set_IndexTip(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_IndexTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "IndexTip", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags MiddleTip
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_MiddleTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_MiddleTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "MiddleTip"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags MiddleTip
void Oculus::Interaction::Input::HandFingerJointFlags::_set_MiddleTip(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_MiddleTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "MiddleTip", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags RingTip
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_RingTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_RingTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "RingTip"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags RingTip
void Oculus::Interaction::Input::HandFingerJointFlags::_set_RingTip(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_RingTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "RingTip", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags PinkyTip
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_PinkyTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_PinkyTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "PinkyTip"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags PinkyTip
void Oculus::Interaction::Input::HandFingerJointFlags::_set_PinkyTip(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_PinkyTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "PinkyTip", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandFingerJointFlags All
::Oculus::Interaction::Input::HandFingerJointFlags Oculus::Interaction::Input::HandFingerJointFlags::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandFingerJointFlags>("Oculus.Interaction.Input", "HandFingerJointFlags", "All"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandFingerJointFlags All
void Oculus::Interaction::Input::HandFingerJointFlags::_set_All(::Oculus::Interaction::Input::HandFingerJointFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandFingerJointFlags", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::HandFingerJointFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerJointFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HandFingerUtils
#include "Oculus/Interaction/Input/HandFingerUtils.hpp"
// Including type: Oculus.Interaction.Input.HandFingerFlags
#include "Oculus/Interaction/Input/HandFingerFlags.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Input.HandFingerUtils.ToFlags
::Oculus::Interaction::Input::HandFingerFlags Oculus::Interaction::Input::HandFingerUtils::ToFlags(::Oculus::Interaction::Input::HandFinger handFinger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFingerUtils::ToFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "HandFingerUtils", "ToFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handFinger)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandFingerFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handFinger);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId Invalid
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId Invalid
void Oculus::Interaction::Input::HandJointId::_set_Invalid(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandStart
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandStart"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandStart
void Oculus::Interaction::Input::HandJointId::_set_HandStart(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandStart", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandWristRoot
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandWristRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandWristRoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandWristRoot"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandWristRoot
void Oculus::Interaction::Input::HandJointId::_set_HandWristRoot(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandWristRoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandWristRoot", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandForearmStub
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandForearmStub() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandForearmStub");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandForearmStub"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandForearmStub
void Oculus::Interaction::Input::HandJointId::_set_HandForearmStub(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandForearmStub");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandForearmStub", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandThumb0
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandThumb0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandThumb0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandThumb0"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandThumb0
void Oculus::Interaction::Input::HandJointId::_set_HandThumb0(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandThumb0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandThumb0", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandThumb1
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandThumb1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandThumb1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandThumb1"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandThumb1
void Oculus::Interaction::Input::HandJointId::_set_HandThumb1(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandThumb1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandThumb1", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandThumb2
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandThumb2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandThumb2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandThumb2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandThumb2
void Oculus::Interaction::Input::HandJointId::_set_HandThumb2(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandThumb2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandThumb2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandThumb3
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandThumb3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandThumb3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandThumb3"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandThumb3
void Oculus::Interaction::Input::HandJointId::_set_HandThumb3(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandThumb3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandThumb3", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandIndex1
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandIndex1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandIndex1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandIndex1"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandIndex1
void Oculus::Interaction::Input::HandJointId::_set_HandIndex1(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandIndex1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandIndex1", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandIndex2
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandIndex2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandIndex2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandIndex2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandIndex2
void Oculus::Interaction::Input::HandJointId::_set_HandIndex2(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandIndex2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandIndex2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandIndex3
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandIndex3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandIndex3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandIndex3"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandIndex3
void Oculus::Interaction::Input::HandJointId::_set_HandIndex3(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandIndex3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandIndex3", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandMiddle1
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandMiddle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandMiddle1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandMiddle1"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandMiddle1
void Oculus::Interaction::Input::HandJointId::_set_HandMiddle1(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandMiddle1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandMiddle1", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandMiddle2
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandMiddle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandMiddle2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandMiddle2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandMiddle2
void Oculus::Interaction::Input::HandJointId::_set_HandMiddle2(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandMiddle2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandMiddle2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandMiddle3
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandMiddle3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandMiddle3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandMiddle3"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandMiddle3
void Oculus::Interaction::Input::HandJointId::_set_HandMiddle3(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandMiddle3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandMiddle3", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandRing1
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandRing1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandRing1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandRing1"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandRing1
void Oculus::Interaction::Input::HandJointId::_set_HandRing1(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandRing1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandRing1", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandRing2
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandRing2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandRing2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandRing2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandRing2
void Oculus::Interaction::Input::HandJointId::_set_HandRing2(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandRing2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandRing2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandRing3
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandRing3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandRing3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandRing3"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandRing3
void Oculus::Interaction::Input::HandJointId::_set_HandRing3(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandRing3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandRing3", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandPinky0
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandPinky0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandPinky0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandPinky0"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandPinky0
void Oculus::Interaction::Input::HandJointId::_set_HandPinky0(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandPinky0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandPinky0", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandPinky1
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandPinky1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandPinky1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandPinky1"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandPinky1
void Oculus::Interaction::Input::HandJointId::_set_HandPinky1(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandPinky1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandPinky1", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandPinky2
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandPinky2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandPinky2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandPinky2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandPinky2
void Oculus::Interaction::Input::HandJointId::_set_HandPinky2(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandPinky2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandPinky2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandPinky3
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandPinky3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandPinky3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandPinky3"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandPinky3
void Oculus::Interaction::Input::HandJointId::_set_HandPinky3(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandPinky3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandPinky3", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandMaxSkinnable
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandMaxSkinnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandMaxSkinnable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandMaxSkinnable"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandMaxSkinnable
void Oculus::Interaction::Input::HandJointId::_set_HandMaxSkinnable(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandMaxSkinnable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandMaxSkinnable", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandThumbTip
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandThumbTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandThumbTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandThumbTip"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandThumbTip
void Oculus::Interaction::Input::HandJointId::_set_HandThumbTip(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandThumbTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandThumbTip", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandIndexTip
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandIndexTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandIndexTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandIndexTip"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandIndexTip
void Oculus::Interaction::Input::HandJointId::_set_HandIndexTip(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandIndexTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandIndexTip", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandMiddleTip
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandMiddleTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandMiddleTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandMiddleTip"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandMiddleTip
void Oculus::Interaction::Input::HandJointId::_set_HandMiddleTip(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandMiddleTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandMiddleTip", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandRingTip
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandRingTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandRingTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandRingTip"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandRingTip
void Oculus::Interaction::Input::HandJointId::_set_HandRingTip(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandRingTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandRingTip", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandPinkyTip
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandPinkyTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandPinkyTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandPinkyTip"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandPinkyTip
void Oculus::Interaction::Input::HandJointId::_set_HandPinkyTip(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandPinkyTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandPinkyTip", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId HandEnd
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointId::_get_HandEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_get_HandEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandJointId>("Oculus.Interaction.Input", "HandJointId", "HandEnd"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId HandEnd
void Oculus::Interaction::Input::HandJointId::_set_HandEnd(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::_set_HandEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointId", "HandEnd", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::HandJointId::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointId::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HandJointUtils
#include "Oculus/Interaction/Input/HandJointUtils.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.List`1<Oculus.Interaction.Input.HandJointId[]> FingerToJointList
::System::Collections::Generic::List_1<::ArrayW<::Oculus::Interaction::Input::HandJointId>>* Oculus::Interaction::Input::HandJointUtils::_get_FingerToJointList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointUtils::_get_FingerToJointList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::ArrayW<::Oculus::Interaction::Input::HandJointId>>*>("Oculus.Interaction.Input", "HandJointUtils", "FingerToJointList"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.List`1<Oculus.Interaction.Input.HandJointId[]> FingerToJointList
void Oculus::Interaction::Input::HandJointUtils::_set_FingerToJointList(::System::Collections::Generic::List_1<::ArrayW<::Oculus::Interaction::Input::HandJointId>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointUtils::_set_FingerToJointList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointUtils", "FingerToJointList", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId[] JointParentList
::ArrayW<::Oculus::Interaction::Input::HandJointId> Oculus::Interaction::Input::HandJointUtils::_get_JointParentList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointUtils::_get_JointParentList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Oculus::Interaction::Input::HandJointId>>("Oculus.Interaction.Input", "HandJointUtils", "JointParentList"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId[] JointParentList
void Oculus::Interaction::Input::HandJointUtils::_set_JointParentList(::ArrayW<::Oculus::Interaction::Input::HandJointId> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointUtils::_set_JointParentList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointUtils", "JointParentList", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.HandJointId[][] JointChildrenList
::ArrayW<::ArrayW<::Oculus::Interaction::Input::HandJointId>> Oculus::Interaction::Input::HandJointUtils::_get_JointChildrenList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointUtils::_get_JointChildrenList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::ArrayW<::Oculus::Interaction::Input::HandJointId>>>("Oculus.Interaction.Input", "HandJointUtils", "JointChildrenList"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.HandJointId[][] JointChildrenList
void Oculus::Interaction::Input::HandJointUtils::_set_JointChildrenList(::ArrayW<::ArrayW<::Oculus::Interaction::Input::HandJointId>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointUtils::_set_JointChildrenList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointUtils", "JointChildrenList", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.List`1<Oculus.Interaction.Input.HandJointId> JointIds
::System::Collections::Generic::List_1<::Oculus::Interaction::Input::HandJointId>* Oculus::Interaction::Input::HandJointUtils::_get_JointIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointUtils::_get_JointIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Oculus::Interaction::Input::HandJointId>*>("Oculus.Interaction.Input", "HandJointUtils", "JointIds"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.List`1<Oculus.Interaction.Input.HandJointId> JointIds
void Oculus::Interaction::Input::HandJointUtils::_set_JointIds(::System::Collections::Generic::List_1<::Oculus::Interaction::Input::HandJointId>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointUtils::_set_JointIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointUtils", "JointIds", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Oculus.Interaction.Input.HandJointId[] _handFingerProximals
::ArrayW<::Oculus::Interaction::Input::HandJointId> Oculus::Interaction::Input::HandJointUtils::_get__handFingerProximals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointUtils::_get__handFingerProximals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Oculus::Interaction::Input::HandJointId>>("Oculus.Interaction.Input", "HandJointUtils", "_handFingerProximals"));
}
// Autogenerated static field setter
// Set static field: static private readonly Oculus.Interaction.Input.HandJointId[] _handFingerProximals
void Oculus::Interaction::Input::HandJointUtils::_set__handFingerProximals(::ArrayW<::Oculus::Interaction::Input::HandJointId> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointUtils::_set__handFingerProximals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandJointUtils", "_handFingerProximals", value));
}
// Autogenerated method: Oculus.Interaction.Input.HandJointUtils.GetHandFingerTip
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointUtils::GetHandFingerTip(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointUtils::GetHandFingerTip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "HandJointUtils", "GetHandFingerTip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finger)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandJointId, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.Input.HandJointUtils.GetHandFingerProximal
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::Input::HandJointUtils::GetHandFingerProximal(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointUtils::GetHandFingerProximal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "HandJointUtils", "GetHandFingerProximal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finger)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandJointId, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.Input.HandJointUtils..cctor
void Oculus::Interaction::Input::HandJointUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandJointUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "HandJointUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.IReadOnlyHandSkeletonJointList
#include "Oculus/Interaction/Input/IReadOnlyHandSkeletonJointList.hpp"
// Including type: Oculus.Interaction.Input.HandSkeletonJoint
#include "Oculus/Interaction/Input/HandSkeletonJoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Input.IReadOnlyHandSkeletonJointList.get_Item
::Oculus::Interaction::Input::HandSkeletonJoint Oculus::Interaction::Input::IReadOnlyHandSkeletonJointList::get_Item(int jointId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IReadOnlyHandSkeletonJointList::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IReadOnlyHandSkeletonJointList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandSkeletonJoint, false>(this, ___internal__method, jointId);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.IReadOnlyHandSkeleton
#include "Oculus/Interaction/Input/IReadOnlyHandSkeleton.hpp"
// Including type: Oculus.Interaction.Input.IReadOnlyHandSkeletonJointList
#include "Oculus/Interaction/Input/IReadOnlyHandSkeletonJointList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Input.IReadOnlyHandSkeleton.get_Joints
::Oculus::Interaction::Input::IReadOnlyHandSkeletonJointList* Oculus::Interaction::Input::IReadOnlyHandSkeleton::get_Joints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IReadOnlyHandSkeleton::get_Joints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IReadOnlyHandSkeleton*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IReadOnlyHandSkeletonJointList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.ReadOnlyHandJointPoses
#include "Oculus/Interaction/Input/ReadOnlyHandJointPoses.hpp"
// Including type: Oculus.Interaction.Input.ReadOnlyHandJointPoses/<GetEnumerator>d__2
#include "Oculus/Interaction/Input/ReadOnlyHandJointPoses_-GetEnumerator-d__2.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Oculus.Interaction.Input.ReadOnlyHandJointPoses <Empty>k__BackingField
::Oculus::Interaction::Input::ReadOnlyHandJointPoses* Oculus::Interaction::Input::ReadOnlyHandJointPoses::_get_$Empty$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::_get_$Empty$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*>("Oculus.Interaction.Input", "ReadOnlyHandJointPoses", "<Empty>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly Oculus.Interaction.Input.ReadOnlyHandJointPoses <Empty>k__BackingField
void Oculus::Interaction::Input::ReadOnlyHandJointPoses::_set_$Empty$k__BackingField(::Oculus::Interaction::Input::ReadOnlyHandJointPoses* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::_set_$Empty$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "ReadOnlyHandJointPoses", "<Empty>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose[] _poses
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Pose>& Oculus::Interaction::Input::ReadOnlyHandJointPoses::dyn__poses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::dyn__poses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_poses"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Pose>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.ReadOnlyHandJointPoses.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::UnityEngine::Pose>* Oculus::Interaction::Input::ReadOnlyHandJointPoses::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ReadOnlyHandJointPoses*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::UnityEngine::Pose>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ReadOnlyHandJointPoses.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Oculus::Interaction::Input::ReadOnlyHandJointPoses::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ReadOnlyHandJointPoses*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ReadOnlyHandJointPoses.get_Empty
::Oculus::Interaction::Input::ReadOnlyHandJointPoses* Oculus::Interaction::Input::ReadOnlyHandJointPoses::get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::get_Empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "ReadOnlyHandJointPoses", "get_Empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ReadOnlyHandJointPoses.get_Count
int Oculus::Interaction::Input::ReadOnlyHandJointPoses::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ReadOnlyHandJointPoses*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ReadOnlyHandJointPoses.get_Item
::UnityEngine::Pose Oculus::Interaction::Input::ReadOnlyHandJointPoses::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ReadOnlyHandJointPoses*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, index);
}
// Autogenerated method: Oculus.Interaction.Input.ReadOnlyHandJointPoses.get_Item
::UnityEngine::Pose Oculus::Interaction::Input::ReadOnlyHandJointPoses::get_Item(::Oculus::Interaction::Input::HandJointId index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, index);
}
// Autogenerated method: Oculus.Interaction.Input.ReadOnlyHandJointPoses..cctor
void Oculus::Interaction::Input::ReadOnlyHandJointPoses::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "ReadOnlyHandJointPoses", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.Input.ReadOnlyHandJointPoses/<GetEnumerator>d__2
#include "Oculus/Interaction/Input/ReadOnlyHandJointPoses_-GetEnumerator-d__2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose <>2__current
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Input.ReadOnlyHandJointPoses <>4__this
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ReadOnlyHandJointPoses*& Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ReadOnlyHandJointPoses**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose[] <>7__wrap1
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Pose>& Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Pose>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>7__wrap2
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.ReadOnlyHandJointPoses/<GetEnumerator>d__2.System.IDisposable.Dispose
void Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ReadOnlyHandJointPoses/<GetEnumerator>d__2.MoveNext
bool Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ReadOnlyHandJointPoses/<GetEnumerator>d__2.System.Collections.Generic.IEnumerator<UnityEngine.Pose>.get_Current
::UnityEngine::Pose Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::System_Collections_Generic_IEnumerator$UnityEngine_Pose$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::System.Collections.Generic.IEnumerator<UnityEngine.Pose>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ReadOnlyHandJointPoses/<GetEnumerator>d__2.System.Collections.IEnumerator.Reset
void Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ReadOnlyHandJointPoses/<GetEnumerator>d__2.System.Collections.IEnumerator.get_Current
::Il2CppObject* Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ReadOnlyHandJointPoses::$GetEnumerator$d__2*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HandSkeleton
#include "Oculus/Interaction/Input/HandSkeleton.hpp"
// Including type: Oculus.Interaction.Input.HandSkeleton/<>c
#include "Oculus/Interaction/Input/HandSkeleton_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Input.HandSkeleton DefaultLeftSkeleton
::Oculus::Interaction::Input::HandSkeleton* Oculus::Interaction::Input::HandSkeleton::_get_DefaultLeftSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeleton::_get_DefaultLeftSkeleton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandSkeleton*>("Oculus.Interaction.Input", "HandSkeleton", "DefaultLeftSkeleton"));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Input.HandSkeleton DefaultLeftSkeleton
void Oculus::Interaction::Input::HandSkeleton::_set_DefaultLeftSkeleton(::Oculus::Interaction::Input::HandSkeleton* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeleton::_set_DefaultLeftSkeleton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandSkeleton", "DefaultLeftSkeleton", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Input.HandSkeleton DefaultRightSkeleton
::Oculus::Interaction::Input::HandSkeleton* Oculus::Interaction::Input::HandSkeleton::_get_DefaultRightSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeleton::_get_DefaultRightSkeleton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandSkeleton*>("Oculus.Interaction.Input", "HandSkeleton", "DefaultRightSkeleton"));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Input.HandSkeleton DefaultRightSkeleton
void Oculus::Interaction::Input::HandSkeleton::_set_DefaultRightSkeleton(::Oculus::Interaction::Input::HandSkeleton* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeleton::_set_DefaultRightSkeleton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandSkeleton", "DefaultRightSkeleton", value));
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Input.HandSkeletonJoint[] joints
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Interaction::Input::HandSkeletonJoint>& Oculus::Interaction::Input::HandSkeleton::dyn_joints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeleton::dyn_joints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joints"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Interaction::Input::HandSkeletonJoint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.HandSkeleton.get_Joints
::Oculus::Interaction::Input::IReadOnlyHandSkeletonJointList* Oculus::Interaction::Input::HandSkeleton::get_Joints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeleton::get_Joints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandSkeleton*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IReadOnlyHandSkeletonJointList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandSkeleton.get_Item
::Oculus::Interaction::Input::HandSkeletonJoint Oculus::Interaction::Input::HandSkeleton::get_Item(int jointId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeleton::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandSkeleton*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandSkeletonJoint, false>(this, ___internal__method, jointId);
}
// Autogenerated method: Oculus.Interaction.Input.HandSkeleton..cctor
void Oculus::Interaction::Input::HandSkeleton::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeleton::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "HandSkeleton", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HandSkeleton/<>c
#include "Oculus/Interaction/Input/HandSkeleton_--c.hpp"
// Including type: Oculus.Interaction.Input.HandSkeletonJoint
#include "Oculus/Interaction/Input/HandSkeletonJoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Input.HandSkeleton/<>c <>9
::Oculus::Interaction::Input::HandSkeleton::$$c* Oculus::Interaction::Input::HandSkeleton::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeleton::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::HandSkeleton::$$c*>("Oculus.Interaction.Input", "HandSkeleton/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Input.HandSkeleton/<>c <>9
void Oculus::Interaction::Input::HandSkeleton::$$c::_set_$$9(::Oculus::Interaction::Input::HandSkeleton::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeleton::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "HandSkeleton/<>c", "<>9", value)));
}
// Autogenerated method: Oculus.Interaction.Input.HandSkeleton/<>c..cctor
void Oculus::Interaction::Input::HandSkeleton::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeleton::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "HandSkeleton/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandSkeleton/<>c.<.cctor>b__8_0
::Oculus::Interaction::Input::HandSkeletonJoint Oculus::Interaction::Input::HandSkeleton::$$c::$_cctor$b__8_0(::Oculus::Interaction::Input::HandSkeletonJoint joint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeleton::$$c::<.cctor>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joint)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandSkeletonJoint, false>(this, ___internal__method, joint);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HandRef
#include "Oculus/Interaction/Input/HandRef.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
// Including type: Oculus.Interaction.Input.ReadOnlyHandJointPoses
#include "Oculus/Interaction/Input/ReadOnlyHandJointPoses.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Input::HandRef::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::Input::HandRef::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::Input::HandRef::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.set_Hand
void Oculus::Interaction::Input::HandRef::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.get_Handedness
::Oculus::Interaction::Input::Handedness Oculus::Interaction::Input::HandRef::get_Handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::get_Handedness");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::Handedness, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.get_IsConnected
bool Oculus::Interaction::Input::HandRef::get_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::get_IsConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.get_IsHighConfidence
bool Oculus::Interaction::Input::HandRef::get_IsHighConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::get_IsHighConfidence");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.get_IsDominantHand
bool Oculus::Interaction::Input::HandRef::get_IsDominantHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::get_IsDominantHand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.get_Scale
float Oculus::Interaction::Input::HandRef::get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::get_Scale");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 8));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.get_IsPointerPoseValid
bool Oculus::Interaction::Input::HandRef::get_IsPointerPoseValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::get_IsPointerPoseValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.get_IsTrackedDataValid
bool Oculus::Interaction::Input::HandRef::get_IsTrackedDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::get_IsTrackedDataValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.get_CurrentDataVersion
int Oculus::Interaction::Input::HandRef::get_CurrentDataVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::get_CurrentDataVersion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 23));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.add_WhenHandUpdated
void Oculus::Interaction::Input::HandRef::add_WhenHandUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::add_WhenHandUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.remove_WhenHandUpdated
void Oculus::Interaction::Input::HandRef::remove_WhenHandUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::remove_WhenHandUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.get_Active
bool Oculus::Interaction::Input::HandRef::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 26));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.Awake
void Oculus::Interaction::Input::HandRef::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.Start
void Oculus::Interaction::Input::HandRef::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.GetFingerIsPinching
bool Oculus::Interaction::Input::HandRef::GetFingerIsPinching(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::GetFingerIsPinching");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.GetIndexFingerIsPinching
bool Oculus::Interaction::Input::HandRef::GetIndexFingerIsPinching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::GetIndexFingerIsPinching");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.GetPointerPose
bool Oculus::Interaction::Input::HandRef::GetPointerPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::GetPointerPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.GetJointPose
bool Oculus::Interaction::Input::HandRef::GetJointPose(::Oculus::Interaction::Input::HandJointId handJointId, ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::GetJointPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handJointId, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.GetJointPoseLocal
bool Oculus::Interaction::Input::HandRef::GetJointPoseLocal(::Oculus::Interaction::Input::HandJointId handJointId, ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::GetJointPoseLocal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handJointId, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.GetJointPosesLocal
bool Oculus::Interaction::Input::HandRef::GetJointPosesLocal(ByRef<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*> jointPosesLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::GetJointPosesLocal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(jointPosesLocal));
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.GetJointPoseFromWrist
bool Oculus::Interaction::Input::HandRef::GetJointPoseFromWrist(::Oculus::Interaction::Input::HandJointId handJointId, ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::GetJointPoseFromWrist");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handJointId, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.GetJointPosesFromWrist
bool Oculus::Interaction::Input::HandRef::GetJointPosesFromWrist(ByRef<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*> jointPosesFromWrist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::GetJointPosesFromWrist");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(jointPosesFromWrist));
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.GetPalmPoseLocal
bool Oculus::Interaction::Input::HandRef::GetPalmPoseLocal(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::GetPalmPoseLocal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.GetFingerIsHighConfidence
bool Oculus::Interaction::Input::HandRef::GetFingerIsHighConfidence(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::GetFingerIsHighConfidence");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.GetFingerPinchStrength
float Oculus::Interaction::Input::HandRef::GetFingerPinchStrength(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::GetFingerPinchStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 20));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.GetRootPose
bool Oculus::Interaction::Input::HandRef::GetRootPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::GetRootPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandRef*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.InjectAllHandRef
void Oculus::Interaction::Input::HandRef::InjectAllHandRef(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::InjectAllHandRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.Input.HandRef.InjectHand
void Oculus::Interaction::Input::HandRef::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandRef::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
// Including type: Oculus.Interaction.Input.ReadOnlyHandJointPoses
#include "Oculus/Interaction/Input/ReadOnlyHandJointPoses.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Input.IHand.get_Handedness
::Oculus::Interaction::Input::Handedness Oculus::Interaction::Input::IHand::get_Handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::get_Handedness");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::Handedness, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IHand.get_IsConnected
bool Oculus::Interaction::Input::IHand::get_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::get_IsConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IHand.get_IsHighConfidence
bool Oculus::Interaction::Input::IHand::get_IsHighConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::get_IsHighConfidence");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IHand.get_IsDominantHand
bool Oculus::Interaction::Input::IHand::get_IsDominantHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::get_IsDominantHand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IHand.get_Scale
float Oculus::Interaction::Input::IHand::get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::get_Scale");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IHand.GetFingerIsPinching
bool Oculus::Interaction::Input::IHand::GetFingerIsPinching(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::GetFingerIsPinching");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.Input.IHand.GetIndexFingerIsPinching
bool Oculus::Interaction::Input::IHand::GetIndexFingerIsPinching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::GetIndexFingerIsPinching");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IHand.get_IsPointerPoseValid
bool Oculus::Interaction::Input::IHand::get_IsPointerPoseValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::get_IsPointerPoseValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IHand.GetPointerPose
bool Oculus::Interaction::Input::IHand::GetPointerPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::GetPointerPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.IHand.GetJointPose
bool Oculus::Interaction::Input::IHand::GetJointPose(::Oculus::Interaction::Input::HandJointId handJointId, ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::GetJointPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handJointId, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.IHand.GetJointPoseLocal
bool Oculus::Interaction::Input::IHand::GetJointPoseLocal(::Oculus::Interaction::Input::HandJointId handJointId, ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::GetJointPoseLocal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handJointId, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.IHand.GetJointPosesLocal
bool Oculus::Interaction::Input::IHand::GetJointPosesLocal(ByRef<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*> localJointPoses) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::GetJointPosesLocal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(localJointPoses));
}
// Autogenerated method: Oculus.Interaction.Input.IHand.GetJointPoseFromWrist
bool Oculus::Interaction::Input::IHand::GetJointPoseFromWrist(::Oculus::Interaction::Input::HandJointId handJointId, ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::GetJointPoseFromWrist");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handJointId, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.IHand.GetJointPosesFromWrist
bool Oculus::Interaction::Input::IHand::GetJointPosesFromWrist(ByRef<::Oculus::Interaction::Input::ReadOnlyHandJointPoses*> jointPosesFromWrist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::GetJointPosesFromWrist");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(jointPosesFromWrist));
}
// Autogenerated method: Oculus.Interaction.Input.IHand.GetPalmPoseLocal
bool Oculus::Interaction::Input::IHand::GetPalmPoseLocal(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::GetPalmPoseLocal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.IHand.GetFingerIsHighConfidence
bool Oculus::Interaction::Input::IHand::GetFingerIsHighConfidence(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::GetFingerIsHighConfidence");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.Input.IHand.GetFingerPinchStrength
float Oculus::Interaction::Input::IHand::GetFingerPinchStrength(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::GetFingerPinchStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.Input.IHand.get_IsTrackedDataValid
bool Oculus::Interaction::Input::IHand::get_IsTrackedDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::get_IsTrackedDataValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IHand.GetRootPose
bool Oculus::Interaction::Input::IHand::GetRootPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::GetRootPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.IHand.get_CurrentDataVersion
int Oculus::Interaction::Input::IHand::get_CurrentDataVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::get_CurrentDataVersion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IHand.add_WhenHandUpdated
void Oculus::Interaction::Input::IHand::add_WhenHandUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::add_WhenHandUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.IHand.remove_WhenHandUpdated
void Oculus::Interaction::Input::IHand::remove_WhenHandUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHand::remove_WhenHandUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHand*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.IHandSkeletonProvider
#include "Oculus/Interaction/Input/IHandSkeletonProvider.hpp"
// Including type: Oculus.Interaction.Input.HandSkeleton
#include "Oculus/Interaction/Input/HandSkeleton.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Input.IHandSkeletonProvider.get_Item
::Oculus::Interaction::Input::HandSkeleton* Oculus::Interaction::Input::IHandSkeletonProvider::get_Item(::Oculus::Interaction::Input::Handedness handedness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHandSkeletonProvider::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHandSkeletonProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandSkeleton*, false>(this, ___internal__method, handedness);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.JointsRadiusFeature
#include "Oculus/Interaction/Input/JointsRadiusFeature.hpp"
// Including type: Oculus.Interaction.Input.Hand
#include "Oculus/Interaction/Input/Hand.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.Hand _hand
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::Hand*& Oculus::Interaction::Input::JointsRadiusFeature::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointsRadiusFeature::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::Hand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.JointsRadiusFeature.GetJointRadius
float Oculus::Interaction::Input::JointsRadiusFeature::GetJointRadius(::Oculus::Interaction::Input::HandJointId id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::JointsRadiusFeature::GetJointRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetJointRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, id);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.ShadowHand
#include "Oculus/Interaction/Input/ShadowHand.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose[] _localJointMap
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Pose>& Oculus::Interaction::Input::ShadowHand::dyn__localJointMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHand::dyn__localJointMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localJointMap"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Pose>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose[] _worldJointMap
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Pose>& Oculus::Interaction::Input::ShadowHand::dyn__worldJointMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHand::dyn__worldJointMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_worldJointMap"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Pose>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _rootPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Input::ShadowHand::dyn__rootPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHand::dyn__rootPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rootScale
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::ShadowHand::dyn__rootScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHand::dyn__rootScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _dirtyMap
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::ShadowHand::dyn__dirtyMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHand::dyn__dirtyMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dirtyMap"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.ShadowHand.GetLocalPose
::UnityEngine::Pose Oculus::Interaction::Input::ShadowHand::GetLocalPose(::Oculus::Interaction::Input::HandJointId handJointId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHand::GetLocalPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handJointId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, handJointId);
}
// Autogenerated method: Oculus.Interaction.Input.ShadowHand.SetLocalPose
void Oculus::Interaction::Input::ShadowHand::SetLocalPose(::Oculus::Interaction::Input::HandJointId jointId, ::UnityEngine::Pose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHand::SetLocalPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointId), ::il2cpp_utils::ExtractType(pose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jointId, pose);
}
// Autogenerated method: Oculus.Interaction.Input.ShadowHand.GetWorldPose
::UnityEngine::Pose Oculus::Interaction::Input::ShadowHand::GetWorldPose(::Oculus::Interaction::Input::HandJointId jointId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHand::GetWorldPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorldPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, jointId);
}
// Autogenerated method: Oculus.Interaction.Input.ShadowHand.GetRoot
::UnityEngine::Pose Oculus::Interaction::Input::ShadowHand::GetRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHand::GetRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ShadowHand.SetRoot
void Oculus::Interaction::Input::ShadowHand::SetRoot(::UnityEngine::Pose rootPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHand::SetRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootPose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rootPose);
}
// Autogenerated method: Oculus.Interaction.Input.ShadowHand.GetRootScale
float Oculus::Interaction::Input::ShadowHand::GetRootScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHand::GetRootScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ShadowHand.SetRootScale
void Oculus::Interaction::Input::ShadowHand::SetRootScale(float scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHand::SetRootScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRootScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scale);
}
// Autogenerated method: Oculus.Interaction.Input.ShadowHand.CheckDirtyBit
bool Oculus::Interaction::Input::ShadowHand::CheckDirtyBit(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHand::CheckDirtyBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDirtyBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, i);
}
// Autogenerated method: Oculus.Interaction.Input.ShadowHand.SetDirtyBit
void Oculus::Interaction::Input::ShadowHand::SetDirtyBit(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHand::SetDirtyBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirtyBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: Oculus.Interaction.Input.ShadowHand.ClearDirtyBit
void Oculus::Interaction::Input::ShadowHand::ClearDirtyBit(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHand::ClearDirtyBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDirtyBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: Oculus.Interaction.Input.ShadowHand.MarkDirty
void Oculus::Interaction::Input::ShadowHand::MarkDirty(::Oculus::Interaction::Input::HandJointId jointId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHand::MarkDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jointId);
}
// Autogenerated method: Oculus.Interaction.Input.ShadowHand.UpdateDirty
void Oculus::Interaction::Input::ShadowHand::UpdateDirty(::Oculus::Interaction::Input::HandJointId jointId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHand::UpdateDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jointId);
}
// Autogenerated method: Oculus.Interaction.Input.ShadowHand.Copy
void Oculus::Interaction::Input::ShadowHand::Copy(::Oculus::Interaction::Input::ShadowHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHand::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.ShadowHandExtensions
#include "Oculus/Interaction/Input/ShadowHandExtensions.hpp"
// Including type: Oculus.Interaction.Input.ShadowHand
#include "Oculus/Interaction/Input/ShadowHand.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Input.ShadowHandExtensions.FromHandRoot
void Oculus::Interaction::Input::ShadowHandExtensions::FromHandRoot(::Oculus::Interaction::Input::ShadowHand* shadow, ::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHandExtensions::FromHandRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "ShadowHandExtensions", "FromHandRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shadow), ::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, shadow, hand);
}
// Autogenerated method: Oculus.Interaction.Input.ShadowHandExtensions.FromHandFingers
void Oculus::Interaction::Input::ShadowHandExtensions::FromHandFingers(::Oculus::Interaction::Input::ShadowHand* shadow, ::Oculus::Interaction::Input::IHand* hand, bool flipHandedness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHandExtensions::FromHandFingers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "ShadowHandExtensions", "FromHandFingers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shadow), ::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(flipHandedness)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, shadow, hand, flipHandedness);
}
// Autogenerated method: Oculus.Interaction.Input.ShadowHandExtensions.FromHand
void Oculus::Interaction::Input::ShadowHandExtensions::FromHand(::Oculus::Interaction::Input::ShadowHand* shadow, ::Oculus::Interaction::Input::IHand* hand, bool flipHandedness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ShadowHandExtensions::FromHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "ShadowHandExtensions", "FromHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shadow), ::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(flipHandedness)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, shadow, hand, flipHandedness);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.Hmd
#include "Oculus/Interaction/Input/Hmd.hpp"
// Including type: Oculus.Interaction.Input.Hmd/<>c
#include "Oculus/Interaction/Input/Hmd_--c.hpp"
// Including type: Oculus.Interaction.Input.HmdDataAsset
#include "Oculus/Interaction/Input/HmdDataAsset.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action WhenUpdated
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::Input::Hmd::dyn_WhenUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hmd::dyn_WhenUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenUpdated"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.Hmd.add_WhenUpdated
void Oculus::Interaction::Input::Hmd::add_WhenUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hmd::add_WhenUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hmd*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.Hmd.remove_WhenUpdated
void Oculus::Interaction::Input::Hmd::remove_WhenUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hmd::remove_WhenUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hmd*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.Hmd.Apply
void Oculus::Interaction::Input::Hmd::Apply(::Oculus::Interaction::Input::HmdDataAsset* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hmd::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hmd*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Oculus.Interaction.Input.Hmd.TryGetRootPose
bool Oculus::Interaction::Input::Hmd::TryGetRootPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hmd::TryGetRootPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hmd*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.Hmd.MarkInputDataRequiresUpdate
void Oculus::Interaction::Input::Hmd::MarkInputDataRequiresUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hmd::MarkInputDataRequiresUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.Hmd/<>c
#include "Oculus/Interaction/Input/Hmd_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Input.Hmd/<>c <>9
::Oculus::Interaction::Input::Hmd::$$c* Oculus::Interaction::Input::Hmd::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hmd::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::Hmd::$$c*>("Oculus.Interaction.Input", "Hmd/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Input.Hmd/<>c <>9
void Oculus::Interaction::Input::Hmd::$$c::_set_$$9(::Oculus::Interaction::Input::Hmd::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hmd::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "Hmd/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__6_0
::System::Action* Oculus::Interaction::Input::Hmd::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hmd::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction.Input", "Hmd/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__6_0
void Oculus::Interaction::Input::Hmd::$$c::_set_$$9__6_0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hmd::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "Hmd/<>c", "<>9__6_0", value)));
}
// Autogenerated method: Oculus.Interaction.Input.Hmd/<>c..cctor
void Oculus::Interaction::Input::Hmd::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hmd::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "Hmd/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Hmd/<>c.<.ctor>b__6_0
void Oculus::Interaction::Input::Hmd::$$c::$_ctor$b__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Hmd::$$c::<.ctor>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HmdDataAsset
#include "Oculus/Interaction/Input/HmdDataAsset.hpp"
// Including type: Oculus.Interaction.Input.HmdDataSourceConfig
#include "Oculus/Interaction/Input/HmdDataSourceConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Pose Root
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Input::HmdDataAsset::dyn_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HmdDataAsset::dyn_Root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Root"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsTracked
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::HmdDataAsset::dyn_IsTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HmdDataAsset::dyn_IsTracked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsTracked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 FrameId
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::HmdDataAsset::dyn_FrameId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HmdDataAsset::dyn_FrameId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FrameId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Input.HmdDataSourceConfig Config
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HmdDataSourceConfig*& Oculus::Interaction::Input::HmdDataAsset::dyn_Config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HmdDataAsset::dyn_Config");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Config"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HmdDataSourceConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.HmdDataAsset.CopyFrom
void Oculus::Interaction::Input::HmdDataAsset::CopyFrom(::Oculus::Interaction::Input::HmdDataAsset* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HmdDataAsset::CopyFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HmdDataAsset*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HmdDataSourceConfig
#include "Oculus/Interaction/Input/HmdDataSourceConfig.hpp"
// Including type: Oculus.Interaction.Input.ITrackingToWorldTransformer
#include "Oculus/Interaction/Input/ITrackingToWorldTransformer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.ITrackingToWorldTransformer <TrackingToWorldTransformer>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ITrackingToWorldTransformer*& Oculus::Interaction::Input::HmdDataSourceConfig::dyn_$TrackingToWorldTransformer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HmdDataSourceConfig::dyn_$TrackingToWorldTransformer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TrackingToWorldTransformer>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ITrackingToWorldTransformer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.HmdDataSourceConfig.get_TrackingToWorldTransformer
::Oculus::Interaction::Input::ITrackingToWorldTransformer* Oculus::Interaction::Input::HmdDataSourceConfig::get_TrackingToWorldTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HmdDataSourceConfig::get_TrackingToWorldTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrackingToWorldTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::ITrackingToWorldTransformer*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HmdDataSourceConfig.set_TrackingToWorldTransformer
void Oculus::Interaction::Input::HmdDataSourceConfig::set_TrackingToWorldTransformer(::Oculus::Interaction::Input::ITrackingToWorldTransformer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HmdDataSourceConfig::set_TrackingToWorldTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TrackingToWorldTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HmdRef
#include "Oculus/Interaction/Input/HmdRef.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hmd
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Input::HmdRef::dyn__hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HmdRef::dyn__hmd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hmd"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHmd Hmd
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHmd*& Oculus::Interaction::Input::HmdRef::dyn_Hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HmdRef::dyn_Hmd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hmd"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHmd**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.HmdRef.add_WhenUpdated
void Oculus::Interaction::Input::HmdRef::add_WhenUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HmdRef::add_WhenUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HmdRef*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.HmdRef.remove_WhenUpdated
void Oculus::Interaction::Input::HmdRef::remove_WhenUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HmdRef::remove_WhenUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HmdRef*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.HmdRef.Awake
void Oculus::Interaction::Input::HmdRef::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HmdRef::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HmdRef*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HmdRef.Start
void Oculus::Interaction::Input::HmdRef::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HmdRef::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HmdRef*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HmdRef.TryGetRootPose
bool Oculus::Interaction::Input::HmdRef::TryGetRootPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HmdRef::TryGetRootPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HmdRef*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.HmdRef.InjectAllHmdRef
void Oculus::Interaction::Input::HmdRef::InjectAllHmdRef(::Oculus::Interaction::Input::IHmd* hmd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HmdRef::InjectAllHmdRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHmdRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hmd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hmd);
}
// Autogenerated method: Oculus.Interaction.Input.HmdRef.InjectHmd
void Oculus::Interaction::Input::HmdRef::InjectHmd(::Oculus::Interaction::Input::IHmd* hmd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HmdRef::InjectHmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hmd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hmd);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.IHmd
#include "Oculus/Interaction/Input/IHmd.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Input.IHmd.TryGetRootPose
bool Oculus::Interaction::Input::IHmd::TryGetRootPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHmd::TryGetRootPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHmd*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Input.IHmd.add_WhenUpdated
void Oculus::Interaction::Input::IHmd::add_WhenUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHmd::add_WhenUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHmd*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.IHmd.remove_WhenUpdated
void Oculus::Interaction::Input::IHmd::remove_WhenUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IHmd::remove_WhenUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IHmd*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.IAxis1D
#include "Oculus/Interaction/Input/IAxis1D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Input.IAxis1D.Value
float Oculus::Interaction::Input::IAxis1D::Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IAxis1D::Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IAxis1D*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.IAxis2D
#include "Oculus/Interaction/Input/IAxis2D.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Input.IAxis2D.Value
::UnityEngine::Vector2 Oculus::Interaction::Input::IAxis2D::Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IAxis2D::Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IAxis2D*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.IButton
#include "Oculus/Interaction/Input/IButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Input.IButton.Value
bool Oculus::Interaction::Input::IButton::Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IButton::Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IButton*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.ITrackingToWorldTransformer
#include "Oculus/Interaction/Input/ITrackingToWorldTransformer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Input.ITrackingToWorldTransformer.get_Transform
::UnityEngine::Transform* Oculus::Interaction::Input::ITrackingToWorldTransformer::get_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ITrackingToWorldTransformer::get_Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ITrackingToWorldTransformer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.ITrackingToWorldTransformer.ToWorldPose
::UnityEngine::Pose Oculus::Interaction::Input::ITrackingToWorldTransformer::ToWorldPose(::UnityEngine::Pose poseRh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ITrackingToWorldTransformer::ToWorldPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ITrackingToWorldTransformer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, poseRh);
}
// Autogenerated method: Oculus.Interaction.Input.ITrackingToWorldTransformer.ToTrackingPose
::UnityEngine::Pose Oculus::Interaction::Input::ITrackingToWorldTransformer::ToTrackingPose(ByRef<::UnityEngine::Pose> worldPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ITrackingToWorldTransformer::ToTrackingPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ITrackingToWorldTransformer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, byref(worldPose));
}
// Autogenerated method: Oculus.Interaction.Input.ITrackingToWorldTransformer.get_WorldToTrackingWristJointFixup
::UnityEngine::Quaternion Oculus::Interaction::Input::ITrackingToWorldTransformer::get_WorldToTrackingWristJointFixup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::ITrackingToWorldTransformer::get_WorldToTrackingWristJointFixup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::ITrackingToWorldTransformer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HandFilterParameterBlock
#include "Oculus/Interaction/Input/HandFilterParameterBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Input.OneEuroFilterPropertyBlock wristPositionParameters
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::OneEuroFilterPropertyBlock& Oculus::Interaction::Input::HandFilterParameterBlock::dyn_wristPositionParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFilterParameterBlock::dyn_wristPositionParameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wristPositionParameters"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::OneEuroFilterPropertyBlock*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Input.OneEuroFilterPropertyBlock wristRotationParameters
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::OneEuroFilterPropertyBlock& Oculus::Interaction::Input::HandFilterParameterBlock::dyn_wristRotationParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFilterParameterBlock::dyn_wristRotationParameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wristRotationParameters"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::OneEuroFilterPropertyBlock*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Input.OneEuroFilterPropertyBlock fingerRotationParameters
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::OneEuroFilterPropertyBlock& Oculus::Interaction::Input::HandFilterParameterBlock::dyn_fingerRotationParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFilterParameterBlock::dyn_fingerRotationParameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fingerRotationParameters"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::OneEuroFilterPropertyBlock*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single frequency
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::HandFilterParameterBlock::dyn_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandFilterParameterBlock::dyn_frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.OneEuroFilter
#include "Oculus/Interaction/Input/OneEuroFilter.hpp"
// Including type: Oculus.Interaction.Input.OneEuroFilter/LowPassFilter
#include "Oculus/Interaction/Input/OneEuroFilter_LowPassFilter.hpp"
// Including type: Oculus.Interaction.Input.OneEuroFilter/OneEuroFilterMulti`1
#include "Oculus/Interaction/Input/OneEuroFilter_OneEuroFilterMulti_1.hpp"
// Including type: Oculus.Interaction.Input.OneEuroFilter/<>c
#include "Oculus/Interaction/Input/OneEuroFilter_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single _DEFAULT_FREQUENCY_HZ
float Oculus::Interaction::Input::OneEuroFilter::_get__DEFAULT_FREQUENCY_HZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::_get__DEFAULT_FREQUENCY_HZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Interaction.Input", "OneEuroFilter", "_DEFAULT_FREQUENCY_HZ"));
}
// Autogenerated static field setter
// Set static field: static public System.Single _DEFAULT_FREQUENCY_HZ
void Oculus::Interaction::Input::OneEuroFilter::_set__DEFAULT_FREQUENCY_HZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::_set__DEFAULT_FREQUENCY_HZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "OneEuroFilter", "_DEFAULT_FREQUENCY_HZ", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single <Value>k__BackingField
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::OneEuroFilter::dyn_$Value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::dyn_$Value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Value>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.OneEuroFilterPropertyBlock _properties
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::OneEuroFilterPropertyBlock& Oculus::Interaction::Input::OneEuroFilter::dyn__properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::dyn__properties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_properties"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::OneEuroFilterPropertyBlock*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isFirstUpdate
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::OneEuroFilter::dyn__isFirstUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::dyn__isFirstUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isFirstUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.OneEuroFilter/LowPassFilter _xfilt
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::OneEuroFilter::LowPassFilter*& Oculus::Interaction::Input::OneEuroFilter::dyn__xfilt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::dyn__xfilt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xfilt"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::OneEuroFilter::LowPassFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.OneEuroFilter/LowPassFilter _dxfilt
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::OneEuroFilter::LowPassFilter*& Oculus::Interaction::Input::OneEuroFilter::dyn__dxfilt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::dyn__dxfilt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dxfilt"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::OneEuroFilter::LowPassFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter.get_Value
float Oculus::Interaction::Input::OneEuroFilter::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OneEuroFilter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter.set_Value
void Oculus::Interaction::Input::OneEuroFilter::set_Value(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter.SetProperties
void Oculus::Interaction::Input::OneEuroFilter::SetProperties(ByRef<::Oculus::Interaction::Input::OneEuroFilterPropertyBlock> properties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::SetProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(properties)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(properties));
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter.Step
float Oculus::Interaction::Input::OneEuroFilter::Step(float newValue, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::Step");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OneEuroFilter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, newValue, deltaTime);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter.Reset
void Oculus::Interaction::Input::OneEuroFilter::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OneEuroFilter*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter.GetAlpha
float Oculus::Interaction::Input::OneEuroFilter::GetAlpha(float rate, float cutoff) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::GetAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rate), ::il2cpp_utils::ExtractType(cutoff)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, rate, cutoff);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter.CreateFloat
::Oculus::Interaction::Input::IOneEuroFilter_1<float>* Oculus::Interaction::Input::OneEuroFilter::CreateFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::CreateFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "OneEuroFilter", "CreateFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IOneEuroFilter_1<float>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter.CreateVector2
::Oculus::Interaction::Input::IOneEuroFilter_1<::UnityEngine::Vector2>* Oculus::Interaction::Input::OneEuroFilter::CreateVector2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::CreateVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "OneEuroFilter", "CreateVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IOneEuroFilter_1<::UnityEngine::Vector2>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter.CreateVector3
::Oculus::Interaction::Input::IOneEuroFilter_1<::UnityEngine::Vector3>* Oculus::Interaction::Input::OneEuroFilter::CreateVector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::CreateVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "OneEuroFilter", "CreateVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IOneEuroFilter_1<::UnityEngine::Vector3>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter.CreateVector4
::Oculus::Interaction::Input::IOneEuroFilter_1<::UnityEngine::Vector4>* Oculus::Interaction::Input::OneEuroFilter::CreateVector4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::CreateVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "OneEuroFilter", "CreateVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IOneEuroFilter_1<::UnityEngine::Vector4>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter.CreateQuaternion
::Oculus::Interaction::Input::IOneEuroFilter_1<::UnityEngine::Quaternion>* Oculus::Interaction::Input::OneEuroFilter::CreateQuaternion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::CreateQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "OneEuroFilter", "CreateQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IOneEuroFilter_1<::UnityEngine::Quaternion>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter.Oculus.Interaction.Input.IOneEuroFilter<System.Single>.SetProperties
void Oculus::Interaction::Input::OneEuroFilter::Oculus_Interaction_Input_IOneEuroFilter$System_Single$_SetProperties(ByRef<::Oculus::Interaction::Input::OneEuroFilterPropertyBlock> properties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::Oculus.Interaction.Input.IOneEuroFilter<System.Single>.SetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OneEuroFilter*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(properties));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.OneEuroFilter/LowPassFilter
#include "Oculus/Interaction/Input/OneEuroFilter_LowPassFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isFirstUpdate
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::OneEuroFilter::LowPassFilter::dyn__isFirstUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::LowPassFilter::dyn__isFirstUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isFirstUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _hatx
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::OneEuroFilter::LowPassFilter::dyn__hatx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::LowPassFilter::dyn__hatx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hatx"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _hatxprev
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::OneEuroFilter::LowPassFilter::dyn__hatxprev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::LowPassFilter::dyn__hatxprev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hatxprev"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter/LowPassFilter.get_PrevValue
float Oculus::Interaction::Input::OneEuroFilter::LowPassFilter::get_PrevValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::LowPassFilter::get_PrevValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrevValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter/LowPassFilter.Reset
void Oculus::Interaction::Input::OneEuroFilter::LowPassFilter::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::LowPassFilter::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter/LowPassFilter.Filter
float Oculus::Interaction::Input::OneEuroFilter::LowPassFilter::Filter(float x, float alpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::LowPassFilter::Filter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Filter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(alpha)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, x, alpha);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.OneEuroFilter/<>c
#include "Oculus/Interaction/Input/OneEuroFilter_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Input.OneEuroFilter/<>c <>9
::Oculus::Interaction::Input::OneEuroFilter::$$c* Oculus::Interaction::Input::OneEuroFilter::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::OneEuroFilter::$$c*>("Oculus.Interaction.Input", "OneEuroFilter/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Input.OneEuroFilter/<>c <>9
void Oculus::Interaction::Input::OneEuroFilter::$$c::_set_$$9(::Oculus::Interaction::Input::OneEuroFilter::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "OneEuroFilter/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Single[],UnityEngine.Vector2> <>9__16_0
::System::Func_2<::ArrayW<float>, ::UnityEngine::Vector2>* Oculus::Interaction::Input::OneEuroFilter::$$c::_get_$$9__16_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::_get_$$9__16_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::ArrayW<float>, ::UnityEngine::Vector2>*>("Oculus.Interaction.Input", "OneEuroFilter/<>c", "<>9__16_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Single[],UnityEngine.Vector2> <>9__16_0
void Oculus::Interaction::Input::OneEuroFilter::$$c::_set_$$9__16_0(::System::Func_2<::ArrayW<float>, ::UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::_set_$$9__16_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "OneEuroFilter/<>c", "<>9__16_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<UnityEngine.Vector2,System.Int32,System.Single> <>9__16_1
::System::Func_3<::UnityEngine::Vector2, int, float>* Oculus::Interaction::Input::OneEuroFilter::$$c::_get_$$9__16_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::_get_$$9__16_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::UnityEngine::Vector2, int, float>*>("Oculus.Interaction.Input", "OneEuroFilter/<>c", "<>9__16_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<UnityEngine.Vector2,System.Int32,System.Single> <>9__16_1
void Oculus::Interaction::Input::OneEuroFilter::$$c::_set_$$9__16_1(::System::Func_3<::UnityEngine::Vector2, int, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::_set_$$9__16_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "OneEuroFilter/<>c", "<>9__16_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Single[],UnityEngine.Vector3> <>9__17_0
::System::Func_2<::ArrayW<float>, ::UnityEngine::Vector3>* Oculus::Interaction::Input::OneEuroFilter::$$c::_get_$$9__17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::_get_$$9__17_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::ArrayW<float>, ::UnityEngine::Vector3>*>("Oculus.Interaction.Input", "OneEuroFilter/<>c", "<>9__17_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Single[],UnityEngine.Vector3> <>9__17_0
void Oculus::Interaction::Input::OneEuroFilter::$$c::_set_$$9__17_0(::System::Func_2<::ArrayW<float>, ::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::_set_$$9__17_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "OneEuroFilter/<>c", "<>9__17_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<UnityEngine.Vector3,System.Int32,System.Single> <>9__17_1
::System::Func_3<::UnityEngine::Vector3, int, float>* Oculus::Interaction::Input::OneEuroFilter::$$c::_get_$$9__17_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::_get_$$9__17_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::UnityEngine::Vector3, int, float>*>("Oculus.Interaction.Input", "OneEuroFilter/<>c", "<>9__17_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<UnityEngine.Vector3,System.Int32,System.Single> <>9__17_1
void Oculus::Interaction::Input::OneEuroFilter::$$c::_set_$$9__17_1(::System::Func_3<::UnityEngine::Vector3, int, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::_set_$$9__17_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "OneEuroFilter/<>c", "<>9__17_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Single[],UnityEngine.Vector4> <>9__18_0
::System::Func_2<::ArrayW<float>, ::UnityEngine::Vector4>* Oculus::Interaction::Input::OneEuroFilter::$$c::_get_$$9__18_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::_get_$$9__18_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::ArrayW<float>, ::UnityEngine::Vector4>*>("Oculus.Interaction.Input", "OneEuroFilter/<>c", "<>9__18_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Single[],UnityEngine.Vector4> <>9__18_0
void Oculus::Interaction::Input::OneEuroFilter::$$c::_set_$$9__18_0(::System::Func_2<::ArrayW<float>, ::UnityEngine::Vector4>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::_set_$$9__18_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "OneEuroFilter/<>c", "<>9__18_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<UnityEngine.Vector4,System.Int32,System.Single> <>9__18_1
::System::Func_3<::UnityEngine::Vector4, int, float>* Oculus::Interaction::Input::OneEuroFilter::$$c::_get_$$9__18_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::_get_$$9__18_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::UnityEngine::Vector4, int, float>*>("Oculus.Interaction.Input", "OneEuroFilter/<>c", "<>9__18_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<UnityEngine.Vector4,System.Int32,System.Single> <>9__18_1
void Oculus::Interaction::Input::OneEuroFilter::$$c::_set_$$9__18_1(::System::Func_3<::UnityEngine::Vector4, int, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::_set_$$9__18_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "OneEuroFilter/<>c", "<>9__18_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Single[],UnityEngine.Quaternion> <>9__19_0
::System::Func_2<::ArrayW<float>, ::UnityEngine::Quaternion>* Oculus::Interaction::Input::OneEuroFilter::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::ArrayW<float>, ::UnityEngine::Quaternion>*>("Oculus.Interaction.Input", "OneEuroFilter/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Single[],UnityEngine.Quaternion> <>9__19_0
void Oculus::Interaction::Input::OneEuroFilter::$$c::_set_$$9__19_0(::System::Func_2<::ArrayW<float>, ::UnityEngine::Quaternion>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "OneEuroFilter/<>c", "<>9__19_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<UnityEngine.Quaternion,System.Int32,System.Single> <>9__19_1
::System::Func_3<::UnityEngine::Quaternion, int, float>* Oculus::Interaction::Input::OneEuroFilter::$$c::_get_$$9__19_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::_get_$$9__19_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::UnityEngine::Quaternion, int, float>*>("Oculus.Interaction.Input", "OneEuroFilter/<>c", "<>9__19_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<UnityEngine.Quaternion,System.Int32,System.Single> <>9__19_1
void Oculus::Interaction::Input::OneEuroFilter::$$c::_set_$$9__19_1(::System::Func_3<::UnityEngine::Quaternion, int, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::_set_$$9__19_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "OneEuroFilter/<>c", "<>9__19_1", value)));
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter/<>c..cctor
void Oculus::Interaction::Input::OneEuroFilter::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "OneEuroFilter/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter/<>c.<CreateVector2>b__16_0
::UnityEngine::Vector2 Oculus::Interaction::Input::OneEuroFilter::$$c::$CreateVector2$b__16_0(::ArrayW<float> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::<CreateVector2>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateVector2>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, values);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter/<>c.<CreateVector2>b__16_1
float Oculus::Interaction::Input::OneEuroFilter::$$c::$CreateVector2$b__16_1(::UnityEngine::Vector2 value, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::<CreateVector2>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateVector2>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value, index);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter/<>c.<CreateVector3>b__17_0
::UnityEngine::Vector3 Oculus::Interaction::Input::OneEuroFilter::$$c::$CreateVector3$b__17_0(::ArrayW<float> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::<CreateVector3>b__17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateVector3>b__17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, values);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter/<>c.<CreateVector3>b__17_1
float Oculus::Interaction::Input::OneEuroFilter::$$c::$CreateVector3$b__17_1(::UnityEngine::Vector3 value, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::<CreateVector3>b__17_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateVector3>b__17_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value, index);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter/<>c.<CreateVector4>b__18_0
::UnityEngine::Vector4 Oculus::Interaction::Input::OneEuroFilter::$$c::$CreateVector4$b__18_0(::ArrayW<float> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::<CreateVector4>b__18_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateVector4>b__18_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method, values);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter/<>c.<CreateVector4>b__18_1
float Oculus::Interaction::Input::OneEuroFilter::$$c::$CreateVector4$b__18_1(::UnityEngine::Vector4 value, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::<CreateVector4>b__18_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateVector4>b__18_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value, index);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter/<>c.<CreateQuaternion>b__19_0
::UnityEngine::Quaternion Oculus::Interaction::Input::OneEuroFilter::$$c::$CreateQuaternion$b__19_0(::ArrayW<float> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::<CreateQuaternion>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateQuaternion>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, values);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilter/<>c.<CreateQuaternion>b__19_1
float Oculus::Interaction::Input::OneEuroFilter::$$c::$CreateQuaternion$b__19_1(::UnityEngine::Quaternion value, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilter::$$c::<CreateQuaternion>b__19_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateQuaternion>b__19_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.OneEuroFilterPropertyBlock
#include "Oculus/Interaction/Input/OneEuroFilterPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single _minCutoff
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::OneEuroFilterPropertyBlock::dyn__minCutoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilterPropertyBlock::dyn__minCutoff");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minCutoff"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _beta
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::OneEuroFilterPropertyBlock::dyn__beta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilterPropertyBlock::dyn__beta");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _dCutoff
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::OneEuroFilterPropertyBlock::dyn__dCutoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilterPropertyBlock::dyn__dCutoff");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dCutoff"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilterPropertyBlock.get_MinCutoff
float Oculus::Interaction::Input::OneEuroFilterPropertyBlock::get_MinCutoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilterPropertyBlock::get_MinCutoff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MinCutoff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilterPropertyBlock.get_Beta
float Oculus::Interaction::Input::OneEuroFilterPropertyBlock::get_Beta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilterPropertyBlock::get_Beta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Beta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilterPropertyBlock.get_DCutoff
float Oculus::Interaction::Input::OneEuroFilterPropertyBlock::get_DCutoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilterPropertyBlock::get_DCutoff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DCutoff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilterPropertyBlock.get_DefaultMinCutoff
float Oculus::Interaction::Input::OneEuroFilterPropertyBlock::get_DefaultMinCutoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilterPropertyBlock::get_DefaultMinCutoff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "OneEuroFilterPropertyBlock", "get_DefaultMinCutoff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilterPropertyBlock.get_DefaultBeta
float Oculus::Interaction::Input::OneEuroFilterPropertyBlock::get_DefaultBeta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilterPropertyBlock::get_DefaultBeta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "OneEuroFilterPropertyBlock", "get_DefaultBeta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilterPropertyBlock.get_DefaultDCutoff
float Oculus::Interaction::Input::OneEuroFilterPropertyBlock::get_DefaultDCutoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilterPropertyBlock::get_DefaultDCutoff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "OneEuroFilterPropertyBlock", "get_DefaultDCutoff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilterPropertyBlock..ctor
// ABORTED elsewhere.  Oculus::Interaction::Input::OneEuroFilterPropertyBlock::OneEuroFilterPropertyBlock(float minCutoff, float beta, float dCutoff)
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilterPropertyBlock..ctor
Oculus::Interaction::Input::OneEuroFilterPropertyBlock::OneEuroFilterPropertyBlock(float minCutoff, float beta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilterPropertyBlock::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minCutoff), ::il2cpp_utils::ExtractType(beta)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, minCutoff, beta);
}
// Autogenerated method: Oculus.Interaction.Input.OneEuroFilterPropertyBlock.get_Default
::Oculus::Interaction::Input::OneEuroFilterPropertyBlock Oculus::Interaction::Input::OneEuroFilterPropertyBlock::get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OneEuroFilterPropertyBlock::get_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "OneEuroFilterPropertyBlock", "get_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::OneEuroFilterPropertyBlock, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.PoseOrigin
#include "Oculus/Interaction/Input/PoseOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.PoseOrigin None
::Oculus::Interaction::Input::PoseOrigin Oculus::Interaction::Input::PoseOrigin::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PoseOrigin::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::PoseOrigin>("Oculus.Interaction.Input", "PoseOrigin", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.PoseOrigin None
void Oculus::Interaction::Input::PoseOrigin::_set_None(::Oculus::Interaction::Input::PoseOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PoseOrigin::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "PoseOrigin", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.PoseOrigin RawTrackedPose
::Oculus::Interaction::Input::PoseOrigin Oculus::Interaction::Input::PoseOrigin::_get_RawTrackedPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PoseOrigin::_get_RawTrackedPose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::PoseOrigin>("Oculus.Interaction.Input", "PoseOrigin", "RawTrackedPose"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.PoseOrigin RawTrackedPose
void Oculus::Interaction::Input::PoseOrigin::_set_RawTrackedPose(::Oculus::Interaction::Input::PoseOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PoseOrigin::_set_RawTrackedPose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "PoseOrigin", "RawTrackedPose", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.PoseOrigin FilteredTrackedPose
::Oculus::Interaction::Input::PoseOrigin Oculus::Interaction::Input::PoseOrigin::_get_FilteredTrackedPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PoseOrigin::_get_FilteredTrackedPose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::PoseOrigin>("Oculus.Interaction.Input", "PoseOrigin", "FilteredTrackedPose"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.PoseOrigin FilteredTrackedPose
void Oculus::Interaction::Input::PoseOrigin::_set_FilteredTrackedPose(::Oculus::Interaction::Input::PoseOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PoseOrigin::_set_FilteredTrackedPose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "PoseOrigin", "FilteredTrackedPose", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.PoseOrigin SyntheticPose
::Oculus::Interaction::Input::PoseOrigin Oculus::Interaction::Input::PoseOrigin::_get_SyntheticPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PoseOrigin::_get_SyntheticPose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::PoseOrigin>("Oculus.Interaction.Input", "PoseOrigin", "SyntheticPose"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.PoseOrigin SyntheticPose
void Oculus::Interaction::Input::PoseOrigin::_set_SyntheticPose(::Oculus::Interaction::Input::PoseOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PoseOrigin::_set_SyntheticPose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "PoseOrigin", "SyntheticPose", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::PoseOrigin::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::PoseOrigin::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.Filter.HandData
#include "Oculus/Interaction/Input/Filter/HandData.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 NumHandJoints
int Oculus::Interaction::Input::Filter::HandData::_get_NumHandJoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandData::_get_NumHandJoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction.Input.Filter", "HandData", "NumHandJoints"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NumHandJoints
void Oculus::Interaction::Input::Filter::HandData::_set_NumHandJoints(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandData::_set_NumHandJoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input.Filter", "HandData", "NumHandJoints", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] jointValues
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Oculus::Interaction::Input::Filter::HandData::dyn_jointValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandData::dyn_jointValues");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jointValues"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rootRotX
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::Filter::HandData::dyn__rootRotX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandData::dyn__rootRotX");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootRotX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rootRotY
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::Filter::HandData::dyn__rootRotY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandData::dyn__rootRotY");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootRotY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rootRotZ
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::Filter::HandData::dyn__rootRotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandData::dyn__rootRotZ");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootRotZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rootRotW
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::Filter::HandData::dyn__rootRotW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandData::dyn__rootRotW");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootRotW"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rootPosX
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::Filter::HandData::dyn__rootPosX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandData::dyn__rootPosX");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootPosX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rootPosY
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::Filter::HandData::dyn__rootPosY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandData::dyn__rootPosY");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootPosY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rootPosZ
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::Filter::HandData::dyn__rootPosZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandData::dyn__rootPosZ");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootPosZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.Filter.HandData.Init
void Oculus::Interaction::Input::Filter::HandData::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandData::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Filter.HandData.SetData
void Oculus::Interaction::Input::Filter::HandData::SetData(::ArrayW<::UnityEngine::Quaternion> joints, ::UnityEngine::Pose root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandData::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joints), ::il2cpp_utils::ExtractType(root)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, joints, root);
}
// Autogenerated method: Oculus.Interaction.Input.Filter.HandData.GetData
void Oculus::Interaction::Input::Filter::HandData::GetData(ByRef<::ArrayW<::UnityEngine::Quaternion>> joints, ByRef<::UnityEngine::Pose> root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandData::GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joints), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Pose&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(joints), byref(root));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.Filter.HandFilter
#include "Oculus/Interaction/Input/Filter/HandFilter.hpp"
// Including type: Oculus.Interaction.Input.Filter.HandFilter/AttributeId
#include "Oculus/Interaction/Input/Filter/HandFilter_AttributeId.hpp"
// Including type: Oculus.Interaction.Input.HandFilterParameterBlock
#include "Oculus/Interaction/Input/HandFilterParameterBlock.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Interaction.Input.HandDataAsset
#include "Oculus/Interaction/Input/HandDataAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 _isdkExternalHandSourceId
int Oculus::Interaction::Input::Filter::HandFilter::_get__isdkExternalHandSourceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::_get__isdkExternalHandSourceId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction.Input.Filter", "HandFilter", "_isdkExternalHandSourceId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _isdkExternalHandSourceId
void Oculus::Interaction::Input::Filter::HandFilter::_set__isdkExternalHandSourceId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::_set__isdkExternalHandSourceId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input.Filter", "HandFilter", "_isdkExternalHandSourceId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _isdkOneEuroHandModifierId
int Oculus::Interaction::Input::Filter::HandFilter::_get__isdkOneEuroHandModifierId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::_get__isdkOneEuroHandModifierId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction.Input.Filter", "HandFilter", "_isdkOneEuroHandModifierId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _isdkOneEuroHandModifierId
void Oculus::Interaction::Input::Filter::HandFilter::_set__isdkOneEuroHandModifierId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::_set__isdkOneEuroHandModifierId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input.Filter", "HandFilter", "_isdkOneEuroHandModifierId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _isdkSuccess
int Oculus::Interaction::Input::Filter::HandFilter::_get__isdkSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::_get__isdkSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction.Input.Filter", "HandFilter", "_isdkSuccess"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _isdkSuccess
void Oculus::Interaction::Input::Filter::HandFilter::_set__isdkSuccess(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::_set__isdkSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input.Filter", "HandFilter", "_isdkSuccess", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _logPrefix
::StringW Oculus::Interaction::Input::Filter::HandFilter::_get__logPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::_get__logPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.Input.Filter", "HandFilter", "_logPrefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String _logPrefix
void Oculus::Interaction::Input::Filter::HandFilter::_set__logPrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::_set__logPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input.Filter", "HandFilter", "_logPrefix", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.HandFilterParameterBlock _filterParameters
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandFilterParameterBlock*& Oculus::Interaction::Input::Filter::HandFilter::dyn__filterParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::dyn__filterParameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filterParameters"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandFilterParameterBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _dataSourceHandle
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::Filter::HandFilter::dyn__dataSourceHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::dyn__dataSourceHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSourceHandle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _handModifierHandle
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::Filter::HandFilter::dyn__handModifierHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::dyn__handModifierHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handModifierHandle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasFlaggedError
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::Filter::HandFilter::dyn__hasFlaggedError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::dyn__hasFlaggedError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasFlaggedError"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.Filter.HandData _handData
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::Filter::HandData& Oculus::Interaction::Input::Filter::HandFilter::dyn__handData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::dyn__handData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handData"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::Filter::HandData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.Filter.HandFilter.isdk_DataSource_Create
int Oculus::Interaction::Input::Filter::HandFilter::isdk_DataSource_Create(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::isdk_DataSource_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input.Filter", "HandFilter", "isdk_DataSource_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Interaction.Input.Filter.HandFilter.isdk_DataSource_Destroy
int Oculus::Interaction::Input::Filter::HandFilter::isdk_DataSource_Destroy(int handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::isdk_DataSource_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input.Filter", "HandFilter", "isdk_DataSource_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Interaction.Input.Filter.HandFilter.isdk_DataModifier_Create
int Oculus::Interaction::Input::Filter::HandFilter::isdk_DataModifier_Create(int id, int handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::isdk_DataModifier_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input.Filter", "HandFilter", "isdk_DataModifier_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id, handle);
}
// Autogenerated method: Oculus.Interaction.Input.Filter.HandFilter.isdk_DataSource_Update
int Oculus::Interaction::Input::Filter::HandFilter::isdk_DataSource_Update(int handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::isdk_DataSource_Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input.Filter", "HandFilter", "isdk_DataSource_Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Interaction.Input.Filter.HandFilter.isdk_DataSource_GetData
int Oculus::Interaction::Input::Filter::HandFilter::isdk_DataSource_GetData(int handle, ByRef<::Oculus::Interaction::Input::Filter::HandData> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::isdk_DataSource_GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input.Filter", "HandFilter", "isdk_DataSource_GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, byref(data));
}
// Autogenerated method: Oculus.Interaction.Input.Filter.HandFilter.isdk_ExternalHandSource_SetData
int Oculus::Interaction::Input::Filter::HandFilter::isdk_ExternalHandSource_SetData(int handle, ByRef<::Oculus::Interaction::Input::Filter::HandData> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::isdk_ExternalHandSource_SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input.Filter", "HandFilter", "isdk_ExternalHandSource_SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, byref(data));
}
// Autogenerated method: Oculus.Interaction.Input.Filter.HandFilter.isdk_DataSource_SetAttributeFloat
int Oculus::Interaction::Input::Filter::HandFilter::isdk_DataSource_SetAttributeFloat(int handle, int attrId, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::isdk_DataSource_SetAttributeFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input.Filter", "HandFilter", "isdk_DataSource_SetAttributeFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(attrId), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, attrId, value);
}
// Autogenerated method: Oculus.Interaction.Input.Filter.HandFilter.Awake
void Oculus::Interaction::Input::Filter::HandFilter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Filter::HandFilter*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Filter.HandFilter.OnDestroy
void Oculus::Interaction::Input::Filter::HandFilter::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Filter::HandFilter*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Filter.HandFilter.UpdateFilterParameters
bool Oculus::Interaction::Input::Filter::HandFilter::UpdateFilterParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::UpdateFilterParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFilterParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Filter.HandFilter.UpdateHandData
bool Oculus::Interaction::Input::Filter::HandFilter::UpdateHandData(::Oculus::Interaction::Input::HandDataAsset* handDataAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::UpdateHandData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateHandData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handDataAsset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handDataAsset);
}
// Autogenerated method: Oculus.Interaction.Input.Filter.HandFilter.Apply
void Oculus::Interaction::Input::Filter::HandFilter::Apply(::Oculus::Interaction::Input::HandDataAsset* handDataAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Hand*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handDataAsset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.Filter.HandFilter/AttributeId
#include "Oculus/Interaction/Input/Filter/HandFilter_AttributeId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId Unknown
::Oculus::Interaction::Input::Filter::HandFilter::AttributeId Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::Filter::HandFilter::AttributeId>("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId Unknown
void Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_Unknown(::Oculus::Interaction::Input::Filter::HandFilter::AttributeId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId WristPosBeta
::Oculus::Interaction::Input::Filter::HandFilter::AttributeId Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_WristPosBeta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_WristPosBeta");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::Filter::HandFilter::AttributeId>("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "WristPosBeta"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId WristPosBeta
void Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_WristPosBeta(::Oculus::Interaction::Input::Filter::HandFilter::AttributeId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_WristPosBeta");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "WristPosBeta", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId WristPosMinCutOff
::Oculus::Interaction::Input::Filter::HandFilter::AttributeId Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_WristPosMinCutOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_WristPosMinCutOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::Filter::HandFilter::AttributeId>("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "WristPosMinCutOff"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId WristPosMinCutOff
void Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_WristPosMinCutOff(::Oculus::Interaction::Input::Filter::HandFilter::AttributeId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_WristPosMinCutOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "WristPosMinCutOff", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId WristRotBeta
::Oculus::Interaction::Input::Filter::HandFilter::AttributeId Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_WristRotBeta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_WristRotBeta");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::Filter::HandFilter::AttributeId>("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "WristRotBeta"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId WristRotBeta
void Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_WristRotBeta(::Oculus::Interaction::Input::Filter::HandFilter::AttributeId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_WristRotBeta");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "WristRotBeta", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId WristRotMinCutOff
::Oculus::Interaction::Input::Filter::HandFilter::AttributeId Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_WristRotMinCutOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_WristRotMinCutOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::Filter::HandFilter::AttributeId>("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "WristRotMinCutOff"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId WristRotMinCutOff
void Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_WristRotMinCutOff(::Oculus::Interaction::Input::Filter::HandFilter::AttributeId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_WristRotMinCutOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "WristRotMinCutOff", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId FingerRotBeta
::Oculus::Interaction::Input::Filter::HandFilter::AttributeId Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_FingerRotBeta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_FingerRotBeta");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::Filter::HandFilter::AttributeId>("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "FingerRotBeta"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId FingerRotBeta
void Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_FingerRotBeta(::Oculus::Interaction::Input::Filter::HandFilter::AttributeId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_FingerRotBeta");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "FingerRotBeta", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId FingerRotMinCutOff
::Oculus::Interaction::Input::Filter::HandFilter::AttributeId Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_FingerRotMinCutOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_FingerRotMinCutOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::Filter::HandFilter::AttributeId>("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "FingerRotMinCutOff"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId FingerRotMinCutOff
void Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_FingerRotMinCutOff(::Oculus::Interaction::Input::Filter::HandFilter::AttributeId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_FingerRotMinCutOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "FingerRotMinCutOff", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId Frequency
::Oculus::Interaction::Input::Filter::HandFilter::AttributeId Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_Frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_Frequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::Filter::HandFilter::AttributeId>("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "Frequency"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId Frequency
void Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_Frequency(::Oculus::Interaction::Input::Filter::HandFilter::AttributeId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_Frequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "Frequency", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId WristPosDeltaCutOff
::Oculus::Interaction::Input::Filter::HandFilter::AttributeId Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_WristPosDeltaCutOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_WristPosDeltaCutOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::Filter::HandFilter::AttributeId>("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "WristPosDeltaCutOff"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId WristPosDeltaCutOff
void Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_WristPosDeltaCutOff(::Oculus::Interaction::Input::Filter::HandFilter::AttributeId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_WristPosDeltaCutOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "WristPosDeltaCutOff", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId WristRotDeltaCutOff
::Oculus::Interaction::Input::Filter::HandFilter::AttributeId Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_WristRotDeltaCutOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_WristRotDeltaCutOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::Filter::HandFilter::AttributeId>("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "WristRotDeltaCutOff"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId WristRotDeltaCutOff
void Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_WristRotDeltaCutOff(::Oculus::Interaction::Input::Filter::HandFilter::AttributeId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_WristRotDeltaCutOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "WristRotDeltaCutOff", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId FingerRotDeltaCutOff
::Oculus::Interaction::Input::Filter::HandFilter::AttributeId Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_FingerRotDeltaCutOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_get_FingerRotDeltaCutOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::Filter::HandFilter::AttributeId>("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "FingerRotDeltaCutOff"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.Filter.HandFilter/AttributeId FingerRotDeltaCutOff
void Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_FingerRotDeltaCutOff(::Oculus::Interaction::Input::Filter::HandFilter::AttributeId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::_set_FingerRotDeltaCutOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input.Filter", "HandFilter/AttributeId", "FingerRotDeltaCutOff", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::Filter::HandFilter::AttributeId::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Filter::HandFilter::AttributeId::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandGrabStateVisual
#include "Oculus/Interaction/HandGrab/HandGrabStateVisual.hpp"
// Including type: Oculus.Interaction.HandGrab.IHandGrabState
#include "Oculus/Interaction/HandGrab/IHandGrabState.hpp"
// Including type: Oculus.Interaction.Input.SyntheticHand
#include "Oculus/Interaction/Input/SyntheticHand.hpp"
// Including type: Oculus.Interaction.HandGrab.HandPose
#include "Oculus/Interaction/HandGrab/HandPose.hpp"
// Including type: Oculus.Interaction.Input.HandFingerFlags
#include "Oculus/Interaction/Input/HandFingerFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _handGrabState
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandGrab::HandGrabStateVisual::dyn__handGrabState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateVisual::dyn__handGrabState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handGrabState"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.IHandGrabState HandGrabState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::IHandGrabState*& Oculus::Interaction::HandGrab::HandGrabStateVisual::dyn_HandGrabState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateVisual::dyn_HandGrabState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandGrabState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::IHandGrabState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.SyntheticHand _syntheticHand
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::SyntheticHand*& Oculus::Interaction::HandGrab::HandGrabStateVisual::dyn__syntheticHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateVisual::dyn__syntheticHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syntheticHand"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::SyntheticHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _areFingersFree
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::HandGrabStateVisual::dyn__areFingersFree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateVisual::dyn__areFingersFree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_areFingersFree"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isWristFree
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::HandGrabStateVisual::dyn__isWristFree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateVisual::dyn__isWristFree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isWristFree"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wasCompletelyFree
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::HandGrabStateVisual::dyn__wasCompletelyFree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateVisual::dyn__wasCompletelyFree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wasCompletelyFree"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::HandGrabStateVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabStateVisual.Awake
void Oculus::Interaction::HandGrab::HandGrabStateVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabStateVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabStateVisual.Start
void Oculus::Interaction::HandGrab::HandGrabStateVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabStateVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabStateVisual.LateUpdate
void Oculus::Interaction::HandGrab::HandGrabStateVisual::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateVisual::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabStateVisual.ConstrainingForce
void Oculus::Interaction::HandGrab::HandGrabStateVisual::ConstrainingForce(::Oculus::Interaction::HandGrab::IHandGrabState* grabSource, ByRef<float> fingersConstraint, ByRef<float> wristConstraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateVisual::ConstrainingForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstrainingForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabSource), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabSource, byref(fingersConstraint), byref(wristConstraint));
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabStateVisual.UpdateHandPose
void Oculus::Interaction::HandGrab::HandGrabStateVisual::UpdateHandPose(::Oculus::Interaction::HandGrab::IHandGrabState* grabSource, float fingersConstraint, float wristConstraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateVisual::UpdateHandPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateHandPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabSource), ::il2cpp_utils::ExtractType(fingersConstraint), ::il2cpp_utils::ExtractType(wristConstraint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabSource, fingersConstraint, wristConstraint);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabStateVisual.UpdateFingers
void Oculus::Interaction::HandGrab::HandGrabStateVisual::UpdateFingers(::Oculus::Interaction::HandGrab::HandPose* handPose, ::Oculus::Interaction::Input::HandFingerFlags grabbingFingers, float strength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateVisual::UpdateFingers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFingers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handPose), ::il2cpp_utils::ExtractType(grabbingFingers), ::il2cpp_utils::ExtractType(strength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handPose, grabbingFingers, strength);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabStateVisual.FreeFingers
bool Oculus::Interaction::HandGrab::HandGrabStateVisual::FreeFingers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateVisual::FreeFingers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeFingers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabStateVisual.FreeWrist
bool Oculus::Interaction::HandGrab::HandGrabStateVisual::FreeWrist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateVisual::FreeWrist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeWrist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabStateVisual.InjectAllHandGrabInteractorVisual
void Oculus::Interaction::HandGrab::HandGrabStateVisual::InjectAllHandGrabInteractorVisual(::Oculus::Interaction::HandGrab::IHandGrabState* handGrabState, ::Oculus::Interaction::Input::SyntheticHand* syntheticHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateVisual::InjectAllHandGrabInteractorVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandGrabInteractorVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabState), ::il2cpp_utils::ExtractType(syntheticHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handGrabState, syntheticHand);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabStateVisual.InjectHandGrabState
void Oculus::Interaction::HandGrab::HandGrabStateVisual::InjectHandGrabState(::Oculus::Interaction::HandGrab::IHandGrabState* handGrabState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateVisual::InjectHandGrabState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandGrabState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handGrabState);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabStateVisual.InjectSyntheticHand
void Oculus::Interaction::HandGrab::HandGrabStateVisual::InjectSyntheticHand(::Oculus::Interaction::Input::SyntheticHand* syntheticHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateVisual::InjectSyntheticHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSyntheticHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syntheticHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, syntheticHand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable
#include "Oculus/Interaction/HandGrab/DistanceHandGrabInteractable.hpp"
// Including type: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor
#include "Oculus/Interaction/HandGrab/DistanceHandGrabInteractor.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: Oculus.Interaction.PhysicsGrabbable
#include "Oculus/Interaction/PhysicsGrabbable.hpp"
// Including type: Oculus.Interaction.IMovementProvider
#include "Oculus/Interaction/IMovementProvider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabPose
#include "Oculus/Interaction/HandGrab/HandGrabPose.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: Oculus.Interaction.HandGrab.GrabPoseFinder
#include "Oculus/Interaction/HandGrab/GrabPoseFinder.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabResult
#include "Oculus/Interaction/HandGrab/HandGrabResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PhysicsGrabbable _physicsGrabbable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PhysicsGrabbable*& Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__physicsGrabbable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__physicsGrabbable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsGrabbable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PhysicsGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _resetGrabOnGrabsUpdated
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__resetGrabOnGrabsUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__resetGrabOnGrabsUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resetGrabOnGrabsUpdated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _slippiness
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__slippiness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__slippiness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_slippiness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Grab.GrabTypeFlags _supportedGrabTypes
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Grab::GrabTypeFlags& Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__supportedGrabTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__supportedGrabTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_supportedGrabTypes"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Grab::GrabTypeFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.GrabAPI.GrabbingRule _pinchGrabRules
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabAPI::GrabbingRule& Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__pinchGrabRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__pinchGrabRules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinchGrabRules"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::GrabAPI::GrabbingRule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.GrabAPI.GrabbingRule _palmGrabRules
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabAPI::GrabbingRule& Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__palmGrabRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__palmGrabRules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_palmGrabRules"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::GrabAPI::GrabbingRule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _movementProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__movementProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__movementProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IMovementProvider <MovementProvider>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IMovementProvider*& Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn_$MovementProvider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn_$MovementProvider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MovementProvider>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IMovementProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.HandAlignType _handAligment
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandAlignType& Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__handAligment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__handAligment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handAligment"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandAlignType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.HandGrabPose> _handGrabPoses
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>*& Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__handGrabPoses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__handGrabPoses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handGrabPoses"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] <Colliders>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn_$Colliders$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn_$Colliders$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Colliders>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.GrabPoseFinder _grabPoseFinder
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::GrabPoseFinder*& Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__grabPoseFinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn__grabPoseFinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabPoseFinder"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::GrabPoseFinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.Grab.PoseMeasureParameters SCORE_MODIFIER
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Grab::PoseMeasureParameters& Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn_SCORE_MODIFIER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::dyn_SCORE_MODIFIER");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SCORE_MODIFIER"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Grab::PoseMeasureParameters*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.get_Rigidbody
::UnityEngine::Rigidbody* Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_Rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_Rigidbody");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), 48));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.get_ResetGrabOnGrabsUpdated
bool Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_ResetGrabOnGrabsUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_ResetGrabOnGrabsUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResetGrabOnGrabsUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.set_ResetGrabOnGrabsUpdated
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_ResetGrabOnGrabsUpdated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_ResetGrabOnGrabsUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ResetGrabOnGrabsUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.get_Slippiness
float Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_Slippiness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_Slippiness");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), 40));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.set_Slippiness
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_Slippiness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_Slippiness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Slippiness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.get_MovementProvider
::Oculus::Interaction::IMovementProvider* Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_MovementProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_MovementProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MovementProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovementProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.set_MovementProvider
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_MovementProvider(::Oculus::Interaction::IMovementProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_MovementProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MovementProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.get_HandAlignment
::Oculus::Interaction::HandGrab::HandAlignType Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_HandAlignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_HandAlignment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandAlignType, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.set_HandAlignment
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_HandAlignment(::Oculus::Interaction::HandGrab::HandAlignType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_HandAlignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HandAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.get_RelativeTo
::UnityEngine::Transform* Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_RelativeTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_RelativeTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.get_SupportedGrabTypes
::Oculus::Interaction::Grab::GrabTypeFlags Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_SupportedGrabTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_SupportedGrabTypes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), 44));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Grab::GrabTypeFlags, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.get_PinchGrabRules
::Oculus::Interaction::GrabAPI::GrabbingRule Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_PinchGrabRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_PinchGrabRules");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::GrabAPI::GrabbingRule, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.get_PalmGrabRules
::Oculus::Interaction::GrabAPI::GrabbingRule Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_PalmGrabRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_PalmGrabRules");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::GrabAPI::GrabbingRule, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.get_HandGrabPoses
::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>* Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_HandGrabPoses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_HandGrabPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HandGrabPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.get_Colliders
::ArrayW<::UnityEngine::Collider*> Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_Colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_Colliders");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), 49));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Collider*>, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.set_Colliders
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_Colliders(::ArrayW<::UnityEngine::Collider*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::set_Colliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Colliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.Reset
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.GenerateMovement
::Oculus::Interaction::IMovement* Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::GenerateMovement(ByRef<::UnityEngine::Pose> from, ByRef<::UnityEngine::Pose> to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::GenerateMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovement*, false>(this, ___internal__method, byref(from), byref(to));
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.ApplyVelocities
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::ApplyVelocities(::UnityEngine::Vector3 linearVelocity, ::UnityEngine::Vector3 angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::ApplyVelocities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyVelocities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linearVelocity), ::il2cpp_utils::ExtractType(angularVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, linearVelocity, angularVelocity);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.CalculateBestPose
bool Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::CalculateBestPose(::UnityEngine::Pose userPose, float handScale, ::Oculus::Interaction::Input::Handedness handedness, ByRef<::Oculus::Interaction::HandGrab::HandGrabResult*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::CalculateBestPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), 43));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, userPose, handScale, handedness, byref(result));
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.get_UsesHandPose
bool Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_UsesHandPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::get_UsesHandPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), 39));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.SupportsHandedness
bool Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::SupportsHandedness(::Oculus::Interaction::Input::Handedness handedness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::SupportsHandedness");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), 41));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handedness);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.InjectAllDistanceHandGrabInteractable
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectAllDistanceHandGrabInteractable(::Oculus::Interaction::Grab::GrabTypeFlags supportedGrabTypes, ::UnityEngine::Rigidbody* rigidbody, ::Oculus::Interaction::GrabAPI::GrabbingRule pinchGrabRules, ::Oculus::Interaction::GrabAPI::GrabbingRule palmGrabRules) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectAllDistanceHandGrabInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllDistanceHandGrabInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(supportedGrabTypes), ::il2cpp_utils::ExtractType(rigidbody), ::il2cpp_utils::ExtractType(pinchGrabRules), ::il2cpp_utils::ExtractType(palmGrabRules)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, supportedGrabTypes, rigidbody, pinchGrabRules, palmGrabRules);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.InjectOptionalPhysicsGrabbable
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectOptionalPhysicsGrabbable(::Oculus::Interaction::PhysicsGrabbable* physicsObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectOptionalPhysicsGrabbable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalPhysicsGrabbable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, physicsObject);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.InjectSupportedGrabTypes
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectSupportedGrabTypes(::Oculus::Interaction::Grab::GrabTypeFlags supportedGrabTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectSupportedGrabTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSupportedGrabTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(supportedGrabTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, supportedGrabTypes);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.InjectPinchGrabRules
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectPinchGrabRules(::Oculus::Interaction::GrabAPI::GrabbingRule pinchGrabRules) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectPinchGrabRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPinchGrabRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pinchGrabRules)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pinchGrabRules);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.InjectPalmGrabRules
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectPalmGrabRules(::Oculus::Interaction::GrabAPI::GrabbingRule palmGrabRules) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectPalmGrabRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPalmGrabRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(palmGrabRules)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, palmGrabRules);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.InjectRigidbody
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectRigidbody(::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rigidbody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rigidbody);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.InjectOptionalHandGrabPoses
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectOptionalHandGrabPoses(::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>* handGrabPoses) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectOptionalHandGrabPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalHandGrabPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabPoses)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handGrabPoses);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.InjectOptionalMovementProvider
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectOptionalMovementProvider(::Oculus::Interaction::IMovementProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::InjectOptionalMovementProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalMovementProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, provider);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.Oculus.Interaction.HandGrab.IHandGrabInteractable.GenerateMovement
::Oculus::Interaction::IMovement* Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::Oculus_Interaction_HandGrab_IHandGrabInteractable_GenerateMovement(ByRef<::UnityEngine::Pose> from, ByRef<::UnityEngine::Pose> to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::Oculus.Interaction.HandGrab.IHandGrabInteractable.GenerateMovement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*), 42));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovement*, false>(this, ___internal__method, byref(from), byref(to));
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.<Start>b__43_0
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::$Start$b__43_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::<Start>b__43_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__43_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.Awake
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractable_2<TInteractor, TInteractable>*), 31)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable.Start
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractable_2<TInteractor, TInteractable>*), 32)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor
#include "Oculus/Interaction/HandGrab/DistanceHandGrabInteractor.hpp"
// Including type: Oculus.Interaction.HandGrab.DistanceHandGrabInteractable
#include "Oculus/Interaction/HandGrab/DistanceHandGrabInteractable.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: Oculus.Interaction.GrabAPI.HandGrabAPI
#include "Oculus/Interaction/GrabAPI/HandGrabAPI.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.Throw.IVelocityCalculator
#include "Oculus/Interaction/Throw/IVelocityCalculator.hpp"
// Including type: Oculus.Interaction.DistantCandidateComputer`2
#include "Oculus/Interaction/DistantCandidateComputer_2.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabResult
#include "Oculus/Interaction/HandGrab/HandGrabResult.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabTarget
#include "Oculus/Interaction/HandGrab/HandGrabTarget.hpp"
// Including type: Oculus.Interaction.HandGrab.IHandGrabInteractable
#include "Oculus/Interaction/HandGrab/IHandGrabInteractable.hpp"
// Including type: Oculus.Interaction.IRelativeToRef
#include "Oculus/Interaction/IRelativeToRef.hpp"
// Including type: Oculus.Interaction.Input.HandFingerFlags
#include "Oculus/Interaction/Input/HandFingerFlags.hpp"
// Including type: Oculus.Interaction.PointerEvent
#include "Oculus/Interaction/PointerEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.GrabAPI.HandGrabAPI _handGrabApi
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabAPI::HandGrabAPI*& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__handGrabApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__handGrabApi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handGrabApi"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::GrabAPI::HandGrabAPI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Grab.GrabTypeFlags _supportedGrabTypes
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Grab::GrabTypeFlags& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__supportedGrabTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__supportedGrabTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_supportedGrabTypes"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Grab::GrabTypeFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _grabOrigin
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__grabOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__grabOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabOrigin"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _gripPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__gripPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__gripPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gripPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _pinchPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__pinchPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__pinchPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinchPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _velocityCalculator
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__velocityCalculator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__velocityCalculator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_velocityCalculator"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Throw.IVelocityCalculator <VelocityCalculator>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Throw::IVelocityCalculator*& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn_$VelocityCalculator$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn_$VelocityCalculator$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<VelocityCalculator>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Throw::IVelocityCalculator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.DistantCandidateComputer`2<Oculus.Interaction.HandGrab.DistanceHandGrabInteractor,Oculus.Interaction.HandGrab.DistanceHandGrabInteractable> _distantCandidateComputer
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*, ::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*>*& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__distantCandidateComputer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__distantCandidateComputer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distantCandidateComputer"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*, ::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _handGrabShouldSelect
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__handGrabShouldSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__handGrabShouldSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handGrabShouldSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _handGrabShouldUnselect
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__handGrabShouldUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__handGrabShouldUnselect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handGrabShouldUnselect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.HandGrabResult _cachedResult
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabResult*& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__cachedResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn__cachedResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedResult"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandGrabResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IMovement <Movement>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IMovement*& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn_$Movement$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn_$Movement$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Movement>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IMovement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <MovementFinished>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn_$MovementFinished$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn_$MovementFinished$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MovementFinished>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.HandGrab.HandGrabTarget <HandGrabTarget>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabTarget*& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn_$HandGrabTarget$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn_$HandGrabTarget$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HandGrabTarget>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandGrabTarget**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <HitPoint>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn_$HitPoint$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn_$HitPoint$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HitPoint>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <FingersStrength>k__BackingField
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn_$FingersStrength$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn_$FingersStrength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FingersStrength>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <WristStrength>k__BackingField
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn_$WristStrength$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn_$WristStrength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WristStrength>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose <WristToGrabPoseOffset>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn_$WristToGrabPoseOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::dyn_$WristToGrabPoseOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WristToGrabPoseOffset>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_Hand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 75));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.set_Hand
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.get_VelocityCalculator
::Oculus::Interaction::Throw::IVelocityCalculator* Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_VelocityCalculator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_VelocityCalculator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VelocityCalculator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Throw::IVelocityCalculator*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.set_VelocityCalculator
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_VelocityCalculator(::Oculus::Interaction::Throw::IVelocityCalculator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_VelocityCalculator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VelocityCalculator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.get_Movement
::Oculus::Interaction::IMovement* Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_Movement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_Movement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Movement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovement*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.set_Movement
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_Movement(::Oculus::Interaction::IMovement* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_Movement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Movement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.get_MovementFinished
bool Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_MovementFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_MovementFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MovementFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.set_MovementFinished
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_MovementFinished(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_MovementFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MovementFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.get_HandGrabTarget
::Oculus::Interaction::HandGrab::HandGrabTarget* Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_HandGrabTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_HandGrabTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandGrabTarget*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.get_WristPoint
::UnityEngine::Transform* Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_WristPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_WristPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 76));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.get_PinchPoint
::UnityEngine::Transform* Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_PinchPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_PinchPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 77));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.get_PalmPoint
::UnityEngine::Transform* Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_PalmPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_PalmPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 78));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.get_HandGrabApi
::Oculus::Interaction::GrabAPI::HandGrabAPI* Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_HandGrabApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_HandGrabApi");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 79));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::GrabAPI::HandGrabAPI*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.get_SupportedGrabTypes
::Oculus::Interaction::Grab::GrabTypeFlags Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_SupportedGrabTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_SupportedGrabTypes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 80));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Grab::GrabTypeFlags, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.get_TargetInteractable
::Oculus::Interaction::HandGrab::IHandGrabInteractable* Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_TargetInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_TargetInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 81));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::IHandGrabInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.get_Origin
::UnityEngine::Pose Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_Origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_Origin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 88));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.get_HitPoint
::UnityEngine::Vector3 Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_HitPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_HitPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 89));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.set_HitPoint
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_HitPoint(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_HitPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HitPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.get_DistanceInteractable
::Oculus::Interaction::IRelativeToRef* Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_DistanceInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_DistanceInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 90));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IRelativeToRef*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.get_IsGrabbing
bool Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_IsGrabbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_IsGrabbing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 91));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.get_FingersStrength
float Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_FingersStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_FingersStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 83));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.set_FingersStrength
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_FingersStrength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_FingersStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FingersStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.get_WristStrength
float Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_WristStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_WristStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 84));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.set_WristStrength
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_WristStrength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_WristStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WristStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.get_WristToGrabPoseOffset
::UnityEngine::Pose Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_WristToGrabPoseOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::get_WristToGrabPoseOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 85));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.set_WristToGrabPoseOffset
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_WristToGrabPoseOffset(::UnityEngine::Pose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::set_WristToGrabPoseOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WristToGrabPoseOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.GrabbingFingers
::Oculus::Interaction::Input::HandFingerFlags Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::GrabbingFingers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::GrabbingFingers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 87));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandFingerFlags, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.Reset
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 92));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.InteractableSet
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InteractableSet(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InteractableSet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.InteractableUnset
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InteractableUnset(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InteractableUnset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.InteractableSelected
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InteractableSelected(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InteractableSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.InteractableUnselected
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InteractableUnselected(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InteractableUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.CanSelect
bool Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::CanSelect(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 66));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.ComputeCandidate
::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable* Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::ComputeCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::ComputeCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*), 64));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.SelectingGrabTypes
::Oculus::Interaction::Grab::GrabTypeFlags Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::SelectingGrabTypes(::Oculus::Interaction::HandGrab::IHandGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::SelectingGrabTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectingGrabTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Grab::GrabTypeFlags, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.UpdateTarget
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::UpdateTarget(::Oculus::Interaction::HandGrab::IHandGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::UpdateTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.UpdateTargetSliding
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::UpdateTargetSliding(::Oculus::Interaction::HandGrab::IHandGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::UpdateTargetSliding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTargetSliding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.TrySetTarget
bool Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::TrySetTarget(::Oculus::Interaction::HandGrab::IHandGrabInteractable* interactable, ::Oculus::Interaction::Grab::GrabTypeFlags selectingGrabTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::TrySetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(selectingGrabTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable, selectingGrabTypes);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.SetGrabStrength
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::SetGrabStrength(float strength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::SetGrabStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGrabStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, strength);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.InjectAllDistanceHandGrabInteractor
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectAllDistanceHandGrabInteractor(::Oculus::Interaction::GrabAPI::HandGrabAPI* handGrabApi, ::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*, ::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*>* distantCandidateComputer, ::UnityEngine::Transform* grabOrigin, ::Oculus::Interaction::Input::IHand* hand, ::Oculus::Interaction::Grab::GrabTypeFlags supportedGrabTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectAllDistanceHandGrabInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllDistanceHandGrabInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabApi), ::il2cpp_utils::ExtractType(distantCandidateComputer), ::il2cpp_utils::ExtractType(grabOrigin), ::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(supportedGrabTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handGrabApi, distantCandidateComputer, grabOrigin, hand, supportedGrabTypes);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.InjectHandGrabApi
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectHandGrabApi(::Oculus::Interaction::GrabAPI::HandGrabAPI* handGrabApi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectHandGrabApi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandGrabApi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabApi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handGrabApi);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.InjectDistantCandidateComputer
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectDistantCandidateComputer(::Oculus::Interaction::DistantCandidateComputer_2<::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor*, ::Oculus::Interaction::HandGrab::DistanceHandGrabInteractable*>* distantCandidateComputer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectDistantCandidateComputer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectDistantCandidateComputer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distantCandidateComputer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distantCandidateComputer);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.InjectHand
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.InjectSupportedGrabTypes
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectSupportedGrabTypes(::Oculus::Interaction::Grab::GrabTypeFlags supportedGrabTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectSupportedGrabTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSupportedGrabTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(supportedGrabTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, supportedGrabTypes);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.InjectGrabOrigin
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectGrabOrigin(::UnityEngine::Transform* grabOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectGrabOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectGrabOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabOrigin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabOrigin);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.InjectOptionalGripPoint
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectOptionalGripPoint(::UnityEngine::Transform* gripPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectOptionalGripPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalGripPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gripPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gripPoint);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.InjectOptionalPinchPoint
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectOptionalPinchPoint(::UnityEngine::Transform* pinchPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectOptionalPinchPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalPinchPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pinchPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pinchPoint);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.InjectOptionalVelocityCalculator
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectOptionalVelocityCalculator(::Oculus::Interaction::Throw::IVelocityCalculator* velocityCalculator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::InjectOptionalVelocityCalculator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalVelocityCalculator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(velocityCalculator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, velocityCalculator);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.<Start>b__67_0
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::$Start$b__67_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::<Start>b__67_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__67_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.Awake
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 50)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.Start
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 51)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.DoHoverUpdate
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::DoHoverUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::DoHoverUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 38)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.DoSelectUpdate
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::DoSelectUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::DoSelectUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 39)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.HandlePointerEventRaised
void Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::HandlePointerEventRaised(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::HandlePointerEventRaised");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractor_2<TInteractor, TInteractable>*), 73)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.ComputePointerPose
::UnityEngine::Pose Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::ComputePointerPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::ComputePointerPose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractor_2<TInteractor, TInteractable>*), 74)));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.ComputeShouldSelect
bool Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::ComputeShouldSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::ComputeShouldSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 43)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.DistanceHandGrabInteractor.ComputeShouldUnselect
bool Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::ComputeShouldUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::DistanceHandGrabInteractor::ComputeShouldUnselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 44)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.GrabPoseFinder
#include "Oculus/Interaction/HandGrab/GrabPoseFinder.hpp"
// Including type: Oculus.Interaction.HandGrab.GrabPoseFinder/FindResult
#include "Oculus/Interaction/HandGrab/GrabPoseFinder_FindResult.hpp"
// Including type: Oculus.Interaction.HandGrab.GrabPoseFinder/InterpolationCache
#include "Oculus/Interaction/HandGrab/GrabPoseFinder_InterpolationCache.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabPose
#include "Oculus/Interaction/HandGrab/HandGrabPose.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.Grab.PoseMeasureParameters
#include "Oculus/Interaction/Grab/PoseMeasureParameters.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabResult
#include "Oculus/Interaction/HandGrab/HandGrabResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.HandGrabPose> _handGrabPoses
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>*& Oculus::Interaction::HandGrab::GrabPoseFinder::dyn__handGrabPoses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::dyn__handGrabPoses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handGrabPoses"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _relativeTo
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::HandGrab::GrabPoseFinder::dyn__relativeTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::dyn__relativeTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeTo"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.GrabPoseFinder/InterpolationCache _interpolationCache
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::GrabPoseFinder::InterpolationCache*& Oculus::Interaction::HandGrab::GrabPoseFinder::dyn__interpolationCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::dyn__interpolationCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interpolationCache"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::GrabPoseFinder::InterpolationCache**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.GrabPoseFinder.get_UsesHandPose
bool Oculus::Interaction::HandGrab::GrabPoseFinder::get_UsesHandPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::get_UsesHandPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UsesHandPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.GrabPoseFinder.SupportsHandedness
bool Oculus::Interaction::HandGrab::GrabPoseFinder::SupportsHandedness(::Oculus::Interaction::Input::Handedness handedness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::SupportsHandedness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportsHandedness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handedness)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handedness);
}
// Autogenerated method: Oculus.Interaction.HandGrab.GrabPoseFinder.FindBestPose
::Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult Oculus::Interaction::HandGrab::GrabPoseFinder::FindBestPose(::UnityEngine::Pose userPose, float handScale, ::Oculus::Interaction::Input::Handedness handedness, ::Oculus::Interaction::Grab::PoseMeasureParameters scoringModifier, ByRef<::Oculus::Interaction::HandGrab::HandGrabResult*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::FindBestPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindBestPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userPose), ::il2cpp_utils::ExtractType(handScale), ::il2cpp_utils::ExtractType(handedness), ::il2cpp_utils::ExtractType(scoringModifier), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult, false>(this, ___internal__method, userPose, handScale, handedness, scoringModifier, byref(result));
}
// Autogenerated method: Oculus.Interaction.HandGrab.GrabPoseFinder.CalculateBestScaleInterpolatedPose
bool Oculus::Interaction::HandGrab::GrabPoseFinder::CalculateBestScaleInterpolatedPose(::UnityEngine::Pose userPose, ::Oculus::Interaction::Input::Handedness handedness, float handScale, ::Oculus::Interaction::Grab::PoseMeasureParameters scoringModifier, ByRef<::Oculus::Interaction::HandGrab::HandGrabResult*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::CalculateBestScaleInterpolatedPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateBestScaleInterpolatedPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userPose), ::il2cpp_utils::ExtractType(handedness), ::il2cpp_utils::ExtractType(handScale), ::il2cpp_utils::ExtractType(scoringModifier), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, userPose, handedness, handScale, scoringModifier, byref(result));
}
// Autogenerated method: Oculus.Interaction.HandGrab.GrabPoseFinder.FindInterpolationRange
bool Oculus::Interaction::HandGrab::GrabPoseFinder::FindInterpolationRange(float relativeHandScale, ::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>* grabPoses, ByRef<::Oculus::Interaction::HandGrab::HandGrabPose*> from, ByRef<::Oculus::Interaction::HandGrab::HandGrabPose*> to, ByRef<float> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::FindInterpolationRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "GrabPoseFinder", "FindInterpolationRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativeHandScale), ::il2cpp_utils::ExtractType(grabPoses), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::HandGrab::HandGrabPose*&>(), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::HandGrab::HandGrabPose*&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, relativeHandScale, grabPoses, byref(from), byref(to), byref(t));
}
// Autogenerated method: Oculus.Interaction.HandGrab.GrabPoseFinder.FindPreviousScaledGrabPose
::Oculus::Interaction::HandGrab::HandGrabPose* Oculus::Interaction::HandGrab::GrabPoseFinder::FindPreviousScaledGrabPose(::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>* grabPoses, float upLimit, bool notEqual) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::FindPreviousScaledGrabPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "GrabPoseFinder", "FindPreviousScaledGrabPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabPoses), ::il2cpp_utils::ExtractType(upLimit), ::il2cpp_utils::ExtractType(notEqual)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandGrabPose*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, grabPoses, upLimit, notEqual);
}
// Autogenerated method: Oculus.Interaction.HandGrab.GrabPoseFinder.FindNextScaledGrabPose
::Oculus::Interaction::HandGrab::HandGrabPose* Oculus::Interaction::HandGrab::GrabPoseFinder::FindNextScaledGrabPose(::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>* grabPoses, float lowLimit, bool notEqual) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::FindNextScaledGrabPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "GrabPoseFinder", "FindNextScaledGrabPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabPoses), ::il2cpp_utils::ExtractType(lowLimit), ::il2cpp_utils::ExtractType(notEqual)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandGrabPose*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, grabPoses, lowLimit, notEqual);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.GrabPoseFinder/FindResult
#include "Oculus/Interaction/HandGrab/GrabPoseFinder_FindResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrab.GrabPoseFinder/FindResult NotFound
::Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult::_get_NotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult::_get_NotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult>("Oculus.Interaction.HandGrab", "GrabPoseFinder/FindResult", "NotFound"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrab.GrabPoseFinder/FindResult NotFound
void Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult::_set_NotFound(::Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult::_set_NotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "GrabPoseFinder/FindResult", "NotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrab.GrabPoseFinder/FindResult NotCompatible
::Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult::_get_NotCompatible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult::_get_NotCompatible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult>("Oculus.Interaction.HandGrab", "GrabPoseFinder/FindResult", "NotCompatible"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrab.GrabPoseFinder/FindResult NotCompatible
void Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult::_set_NotCompatible(::Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult::_set_NotCompatible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "GrabPoseFinder/FindResult", "NotCompatible", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrab.GrabPoseFinder/FindResult Found
::Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult::_get_Found() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult::_get_Found");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult>("Oculus.Interaction.HandGrab", "GrabPoseFinder/FindResult", "Found"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrab.GrabPoseFinder/FindResult Found
void Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult::_set_Found(::Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult::_set_Found");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "GrabPoseFinder/FindResult", "Found", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::FindResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.GrabPoseFinder/InterpolationCache
#include "Oculus/Interaction/HandGrab/GrabPoseFinder_InterpolationCache.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabResult
#include "Oculus/Interaction/HandGrab/HandGrabResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.HandGrab.HandGrabResult underResult
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabResult*& Oculus::Interaction::HandGrab::GrabPoseFinder::InterpolationCache::dyn_underResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::InterpolationCache::dyn_underResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "underResult"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandGrabResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.HandGrab.HandGrabResult overResult
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabResult*& Oculus::Interaction::HandGrab::GrabPoseFinder::InterpolationCache::dyn_overResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::GrabPoseFinder::InterpolationCache::dyn_overResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overResult"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandGrabResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractable
#include "Oculus/Interaction/HandGrab/HandGrabInteractable.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractor
#include "Oculus/Interaction/HandGrab/HandGrabInteractor.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: Oculus.Interaction.PhysicsGrabbable
#include "Oculus/Interaction/PhysicsGrabbable.hpp"
// Including type: Oculus.Interaction.IMovementProvider
#include "Oculus/Interaction/IMovementProvider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabPose
#include "Oculus/Interaction/HandGrab/HandGrabPose.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: Oculus.Interaction.HandGrab.GrabPoseFinder
#include "Oculus/Interaction/HandGrab/GrabPoseFinder.hpp"
// Including type: Oculus.Interaction.CollisionInteractionRegistry`2
#include "Oculus/Interaction/CollisionInteractionRegistry_2.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabResult
#include "Oculus/Interaction/HandGrab/HandGrabResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Oculus.Interaction.CollisionInteractionRegistry`2<Oculus.Interaction.HandGrab.HandGrabInteractor,Oculus.Interaction.HandGrab.HandGrabInteractable> _registry
::Oculus::Interaction::CollisionInteractionRegistry_2<::Oculus::Interaction::HandGrab::HandGrabInteractor*, ::Oculus::Interaction::HandGrab::HandGrabInteractable*>* Oculus::Interaction::HandGrab::HandGrabInteractable::_get__registry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::_get__registry");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::CollisionInteractionRegistry_2<::Oculus::Interaction::HandGrab::HandGrabInteractor*, ::Oculus::Interaction::HandGrab::HandGrabInteractable*>*>("Oculus.Interaction.HandGrab", "HandGrabInteractable", "_registry")));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Interaction.CollisionInteractionRegistry`2<Oculus.Interaction.HandGrab.HandGrabInteractor,Oculus.Interaction.HandGrab.HandGrabInteractable> _registry
void Oculus::Interaction::HandGrab::HandGrabInteractable::_set__registry(::Oculus::Interaction::CollisionInteractionRegistry_2<::Oculus::Interaction::HandGrab::HandGrabInteractor*, ::Oculus::Interaction::HandGrab::HandGrabInteractable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::_set__registry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "HandGrabInteractable", "_registry", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PhysicsGrabbable _physicsGrabbable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PhysicsGrabbable*& Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__physicsGrabbable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__physicsGrabbable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsGrabbable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PhysicsGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _resetGrabOnGrabsUpdated
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__resetGrabOnGrabsUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__resetGrabOnGrabsUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resetGrabOnGrabsUpdated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Grab.PoseMeasureParameters _scoringModifier
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Grab::PoseMeasureParameters& Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__scoringModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__scoringModifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoringModifier"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Grab::PoseMeasureParameters*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _slippiness
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__slippiness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__slippiness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_slippiness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Grab.GrabTypeFlags _supportedGrabTypes
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Grab::GrabTypeFlags& Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__supportedGrabTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__supportedGrabTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_supportedGrabTypes"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Grab::GrabTypeFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.GrabAPI.GrabbingRule _pinchGrabRules
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabAPI::GrabbingRule& Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__pinchGrabRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__pinchGrabRules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinchGrabRules"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::GrabAPI::GrabbingRule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.GrabAPI.GrabbingRule _palmGrabRules
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabAPI::GrabbingRule& Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__palmGrabRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__palmGrabRules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_palmGrabRules"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::GrabAPI::GrabbingRule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _movementProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__movementProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__movementProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IMovementProvider <MovementProvider>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IMovementProvider*& Oculus::Interaction::HandGrab::HandGrabInteractable::dyn_$MovementProvider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::dyn_$MovementProvider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MovementProvider>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IMovementProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.HandAlignType _handAligment
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandAlignType& Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__handAligment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__handAligment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handAligment"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandAlignType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.HandGrabPose> _handGrabPoses
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>*& Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__handGrabPoses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__handGrabPoses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handGrabPoses"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] <Colliders>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& Oculus::Interaction::HandGrab::HandGrabInteractable::dyn_$Colliders$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::dyn_$Colliders$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Colliders>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.GrabPoseFinder _grabPoseFinder
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::GrabPoseFinder*& Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__grabPoseFinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::dyn__grabPoseFinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabPoseFinder"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::GrabPoseFinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.get_Rigidbody
::UnityEngine::Rigidbody* Oculus::Interaction::HandGrab::HandGrabInteractable::get_Rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::get_Rigidbody");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractable*), 48));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.get_ResetGrabOnGrabsUpdated
bool Oculus::Interaction::HandGrab::HandGrabInteractable::get_ResetGrabOnGrabsUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::get_ResetGrabOnGrabsUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResetGrabOnGrabsUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.set_ResetGrabOnGrabsUpdated
void Oculus::Interaction::HandGrab::HandGrabInteractable::set_ResetGrabOnGrabsUpdated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::set_ResetGrabOnGrabsUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ResetGrabOnGrabsUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.get_Slippiness
float Oculus::Interaction::HandGrab::HandGrabInteractable::get_Slippiness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::get_Slippiness");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractable*), 40));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.set_Slippiness
void Oculus::Interaction::HandGrab::HandGrabInteractable::set_Slippiness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::set_Slippiness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Slippiness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.get_MovementProvider
::Oculus::Interaction::IMovementProvider* Oculus::Interaction::HandGrab::HandGrabInteractable::get_MovementProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::get_MovementProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MovementProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovementProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.set_MovementProvider
void Oculus::Interaction::HandGrab::HandGrabInteractable::set_MovementProvider(::Oculus::Interaction::IMovementProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::set_MovementProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MovementProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.get_HandAlignment
::Oculus::Interaction::HandGrab::HandAlignType Oculus::Interaction::HandGrab::HandGrabInteractable::get_HandAlignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::get_HandAlignment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractable*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandAlignType, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.set_HandAlignment
void Oculus::Interaction::HandGrab::HandGrabInteractable::set_HandAlignment(::Oculus::Interaction::HandGrab::HandAlignType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::set_HandAlignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HandAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.get_HandGrabPoses
::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>* Oculus::Interaction::HandGrab::HandGrabInteractable::get_HandGrabPoses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::get_HandGrabPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HandGrabPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.get_RelativeTo
::UnityEngine::Transform* Oculus::Interaction::HandGrab::HandGrabInteractable::get_RelativeTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::get_RelativeTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractable*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.get_ScoreModifier
::Oculus::Interaction::Grab::PoseMeasureParameters Oculus::Interaction::HandGrab::HandGrabInteractable::get_ScoreModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::get_ScoreModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ScoreModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Grab::PoseMeasureParameters, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.get_SupportedGrabTypes
::Oculus::Interaction::Grab::GrabTypeFlags Oculus::Interaction::HandGrab::HandGrabInteractable::get_SupportedGrabTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::get_SupportedGrabTypes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractable*), 44));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Grab::GrabTypeFlags, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.get_PinchGrabRules
::Oculus::Interaction::GrabAPI::GrabbingRule Oculus::Interaction::HandGrab::HandGrabInteractable::get_PinchGrabRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::get_PinchGrabRules");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractable*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::GrabAPI::GrabbingRule, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.get_PalmGrabRules
::Oculus::Interaction::GrabAPI::GrabbingRule Oculus::Interaction::HandGrab::HandGrabInteractable::get_PalmGrabRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::get_PalmGrabRules");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractable*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::GrabAPI::GrabbingRule, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.get_Colliders
::ArrayW<::UnityEngine::Collider*> Oculus::Interaction::HandGrab::HandGrabInteractable::get_Colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::get_Colliders");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractable*), 49));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Collider*>, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.set_Colliders
void Oculus::Interaction::HandGrab::HandGrabInteractable::set_Colliders(::ArrayW<::UnityEngine::Collider*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::set_Colliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Colliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.Reset
void Oculus::Interaction::HandGrab::HandGrabInteractable::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractable*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.GenerateMovement
::Oculus::Interaction::IMovement* Oculus::Interaction::HandGrab::HandGrabInteractable::GenerateMovement(ByRef<::UnityEngine::Pose> from, ByRef<::UnityEngine::Pose> to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::GenerateMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovement*, false>(this, ___internal__method, byref(from), byref(to));
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.ApplyVelocities
void Oculus::Interaction::HandGrab::HandGrabInteractable::ApplyVelocities(::UnityEngine::Vector3 linearVelocity, ::UnityEngine::Vector3 angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::ApplyVelocities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyVelocities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linearVelocity), ::il2cpp_utils::ExtractType(angularVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, linearVelocity, angularVelocity);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.CalculateBestPose
bool Oculus::Interaction::HandGrab::HandGrabInteractable::CalculateBestPose(::UnityEngine::Pose userPose, float handScale, ::Oculus::Interaction::Input::Handedness handedness, ByRef<::Oculus::Interaction::HandGrab::HandGrabResult*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::CalculateBestPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractable*), 43));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, userPose, handScale, handedness, byref(result));
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.get_UsesHandPose
bool Oculus::Interaction::HandGrab::HandGrabInteractable::get_UsesHandPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::get_UsesHandPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractable*), 39));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.SupportsHandedness
bool Oculus::Interaction::HandGrab::HandGrabInteractable::SupportsHandedness(::Oculus::Interaction::Input::Handedness handedness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::SupportsHandedness");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractable*), 41));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handedness);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.InjectAllHandGrabInteractable
void Oculus::Interaction::HandGrab::HandGrabInteractable::InjectAllHandGrabInteractable(::Oculus::Interaction::Grab::GrabTypeFlags supportedGrabTypes, ::UnityEngine::Rigidbody* rigidbody, ::Oculus::Interaction::GrabAPI::GrabbingRule pinchGrabRules, ::Oculus::Interaction::GrabAPI::GrabbingRule palmGrabRules) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::InjectAllHandGrabInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandGrabInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(supportedGrabTypes), ::il2cpp_utils::ExtractType(rigidbody), ::il2cpp_utils::ExtractType(pinchGrabRules), ::il2cpp_utils::ExtractType(palmGrabRules)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, supportedGrabTypes, rigidbody, pinchGrabRules, palmGrabRules);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.InjectSupportedGrabTypes
void Oculus::Interaction::HandGrab::HandGrabInteractable::InjectSupportedGrabTypes(::Oculus::Interaction::Grab::GrabTypeFlags supportedGrabTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::InjectSupportedGrabTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSupportedGrabTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(supportedGrabTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, supportedGrabTypes);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.InjectPinchGrabRules
void Oculus::Interaction::HandGrab::HandGrabInteractable::InjectPinchGrabRules(::Oculus::Interaction::GrabAPI::GrabbingRule pinchGrabRules) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::InjectPinchGrabRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPinchGrabRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pinchGrabRules)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pinchGrabRules);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.InjectPalmGrabRules
void Oculus::Interaction::HandGrab::HandGrabInteractable::InjectPalmGrabRules(::Oculus::Interaction::GrabAPI::GrabbingRule palmGrabRules) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::InjectPalmGrabRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPalmGrabRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(palmGrabRules)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, palmGrabRules);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.InjectRigidbody
void Oculus::Interaction::HandGrab::HandGrabInteractable::InjectRigidbody(::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::InjectRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rigidbody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rigidbody);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.InjectOptionalScoreModifier
void Oculus::Interaction::HandGrab::HandGrabInteractable::InjectOptionalScoreModifier(::Oculus::Interaction::Grab::PoseMeasureParameters scoreModifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::InjectOptionalScoreModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalScoreModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreModifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scoreModifier);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.InjectOptionalPhysicsGrabbable
void Oculus::Interaction::HandGrab::HandGrabInteractable::InjectOptionalPhysicsGrabbable(::Oculus::Interaction::PhysicsGrabbable* physicsGrabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::InjectOptionalPhysicsGrabbable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalPhysicsGrabbable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsGrabbable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, physicsGrabbable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.InjectOptionalHandGrabPoses
void Oculus::Interaction::HandGrab::HandGrabInteractable::InjectOptionalHandGrabPoses(::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>* handGrabPoses) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::InjectOptionalHandGrabPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalHandGrabPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabPoses)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handGrabPoses);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.InjectOptionalMovementProvider
void Oculus::Interaction::HandGrab::HandGrabInteractable::InjectOptionalMovementProvider(::Oculus::Interaction::IMovementProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::InjectOptionalMovementProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalMovementProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, provider);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.Oculus.Interaction.HandGrab.IHandGrabInteractable.GenerateMovement
::Oculus::Interaction::IMovement* Oculus::Interaction::HandGrab::HandGrabInteractable::Oculus_Interaction_HandGrab_IHandGrabInteractable_GenerateMovement(ByRef<::UnityEngine::Pose> from, ByRef<::UnityEngine::Pose> to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::Oculus.Interaction.HandGrab.IHandGrabInteractable.GenerateMovement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractable*), 42));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovement*, false>(this, ___internal__method, byref(from), byref(to));
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.<Start>b__46_0
void Oculus::Interaction::HandGrab::HandGrabInteractable::$Start$b__46_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::<Start>b__46_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__46_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.Awake
void Oculus::Interaction::HandGrab::HandGrabInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractable_2<TInteractor, TInteractable>*), 31)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractable.Start
void Oculus::Interaction::HandGrab::HandGrabInteractable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractable::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractable_2<TInteractor, TInteractable>*), 32)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractableDataCollection
#include "Oculus/Interaction/HandGrab/HandGrabInteractableDataCollection.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.HandGrabUtils/HandGrabInteractableData> _interactablesData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabInteractableData>*& Oculus::Interaction::HandGrab::HandGrabInteractableDataCollection::dyn__interactablesData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractableDataCollection::dyn__interactablesData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactablesData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabInteractableData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractableDataCollection.get_InteractablesData
::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabInteractableData>* Oculus::Interaction::HandGrab::HandGrabInteractableDataCollection::get_InteractablesData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractableDataCollection::get_InteractablesData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InteractablesData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabInteractableData>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractableDataCollection.StoreInteractables
void Oculus::Interaction::HandGrab::HandGrabInteractableDataCollection::StoreInteractables(::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabInteractableData>* interactablesData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractableDataCollection::StoreInteractables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreInteractables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactablesData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactablesData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandGrabInteraction
#include "Oculus/Interaction/HandGrab/HandGrabInteraction.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabInteraction/HandGrabInteractionPoses
#include "Oculus/Interaction/HandGrab/HandGrabInteraction_HandGrabInteractionPoses.hpp"
// Including type: Oculus.Interaction.HandGrab.IHandGrabInteractor
#include "Oculus/Interaction/HandGrab/IHandGrabInteractor.hpp"
// Including type: Oculus.Interaction.HandGrab.IHandGrabInteractable
#include "Oculus/Interaction/HandGrab/IHandGrabInteractable.hpp"
// Including type: Oculus.Interaction.Grab.GrabTypeFlags
#include "Oculus/Interaction/Grab/GrabTypeFlags.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabResult
#include "Oculus/Interaction/HandGrab/HandGrabResult.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.Grab.GrabPoseScore
#include "Oculus/Interaction/Grab/GrabPoseScore.hpp"
// Including type: Oculus.Interaction.Input.HandFingerFlags
#include "Oculus/Interaction/Input/HandFingerFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteraction.TryCalculateBestGrab
bool Oculus::Interaction::HandGrab::HandGrabInteraction::TryCalculateBestGrab(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor, ::Oculus::Interaction::HandGrab::IHandGrabInteractable* interactable, ::Oculus::Interaction::Grab::GrabTypeFlags grabTypes, ByRef<::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor> anchorMode, ByRef<::Oculus::Interaction::HandGrab::HandGrabResult*> handGrabResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteraction::TryCalculateBestGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteraction", "TryCalculateBestGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor), ::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(grabTypes), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor&>(), ::il2cpp_utils::ExtractType(handGrabResult)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabInteractor, interactable, grabTypes, byref(anchorMode), byref(handGrabResult));
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteraction.CurrentGrabType
::Oculus::Interaction::Grab::GrabTypeFlags Oculus::Interaction::HandGrab::HandGrabInteraction::CurrentGrabType(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteraction::CurrentGrabType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteraction", "CurrentGrabType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Grab::GrabTypeFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabInteractor);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteraction.GenerateMovement
::Oculus::Interaction::IMovement* Oculus::Interaction::HandGrab::HandGrabInteraction::GenerateMovement(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor, ::Oculus::Interaction::HandGrab::IHandGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteraction::GenerateMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteraction", "GenerateMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor), ::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovement*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabInteractor, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteraction.GetHandGrabPose
::UnityEngine::Pose Oculus::Interaction::HandGrab::HandGrabInteraction::GetHandGrabPose(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteraction::GetHandGrabPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteraction", "GetHandGrabPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabInteractor);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteraction.GetPoseScore
::Oculus::Interaction::Grab::GrabPoseScore Oculus::Interaction::HandGrab::HandGrabInteraction::GetPoseScore(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor, ::Oculus::Interaction::HandGrab::IHandGrabInteractable* interactable, ::Oculus::Interaction::Grab::GrabTypeFlags grabTypes, ByRef<::Oculus::Interaction::HandGrab::HandGrabResult*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteraction::GetPoseScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteraction", "GetPoseScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor), ::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(grabTypes), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Grab::GrabPoseScore, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabInteractor, interactable, grabTypes, byref(result));
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteraction.CanInteractWith
bool Oculus::Interaction::HandGrab::HandGrabInteraction::CanInteractWith(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor, ::Oculus::Interaction::HandGrab::IHandGrabInteractable* handGrabInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteraction::CanInteractWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteraction", "CanInteractWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor), ::il2cpp_utils::ExtractType(handGrabInteractable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabInteractor, handGrabInteractable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteraction.GetGrabOffset
::UnityEngine::Pose Oculus::Interaction::HandGrab::HandGrabInteraction::GetGrabOffset(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteraction::GetGrabOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteraction", "GetGrabOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabInteractor);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteraction.ComputeHandGrabScore
float Oculus::Interaction::HandGrab::HandGrabInteraction::ComputeHandGrabScore(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor, ::Oculus::Interaction::HandGrab::IHandGrabInteractable* handGrabInteractable, ByRef<::Oculus::Interaction::Grab::GrabTypeFlags> handGrabTypes, bool includeSelecting) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteraction::ComputeHandGrabScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteraction", "ComputeHandGrabScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor), ::il2cpp_utils::ExtractType(handGrabInteractable), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Grab::GrabTypeFlags&>(), ::il2cpp_utils::ExtractType(includeSelecting)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabInteractor, handGrabInteractable, byref(handGrabTypes), includeSelecting);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteraction.ComputeShouldSelect
bool Oculus::Interaction::HandGrab::HandGrabInteraction::ComputeShouldSelect(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor, ::Oculus::Interaction::HandGrab::IHandGrabInteractable* handGrabInteractable, ByRef<::Oculus::Interaction::Grab::GrabTypeFlags> selectingGrabTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteraction::ComputeShouldSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteraction", "ComputeShouldSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor), ::il2cpp_utils::ExtractType(handGrabInteractable), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Grab::GrabTypeFlags&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabInteractor, handGrabInteractable, byref(selectingGrabTypes));
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteraction.ComputeShouldUnselect
bool Oculus::Interaction::HandGrab::HandGrabInteraction::ComputeShouldUnselect(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor, ::Oculus::Interaction::HandGrab::IHandGrabInteractable* handGrabInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteraction::ComputeShouldUnselect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteraction", "ComputeShouldUnselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor), ::il2cpp_utils::ExtractType(handGrabInteractable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabInteractor, handGrabInteractable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteraction.GrabbingFingers
::Oculus::Interaction::Input::HandFingerFlags Oculus::Interaction::HandGrab::HandGrabInteraction::GrabbingFingers(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor, ::Oculus::Interaction::HandGrab::IHandGrabInteractable* handGrabInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteraction::GrabbingFingers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteraction", "GrabbingFingers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor), ::il2cpp_utils::ExtractType(handGrabInteractable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandFingerFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabInteractor, handGrabInteractable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteraction.SupportsPinch
bool Oculus::Interaction::HandGrab::HandGrabInteraction::SupportsPinch(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor, ::Oculus::Interaction::HandGrab::IHandGrabInteractable* handGrabInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteraction::SupportsPinch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteraction", "SupportsPinch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor), ::il2cpp_utils::ExtractType(handGrabInteractable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabInteractor, handGrabInteractable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteraction.SupportsPalm
bool Oculus::Interaction::HandGrab::HandGrabInteraction::SupportsPalm(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor, ::Oculus::Interaction::HandGrab::IHandGrabInteractable* handGrabInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteraction::SupportsPalm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteraction", "SupportsPalm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor), ::il2cpp_utils::ExtractType(handGrabInteractable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabInteractor, handGrabInteractable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteraction.SupportsPinch
bool Oculus::Interaction::HandGrab::HandGrabInteraction::SupportsPinch(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor, ::Oculus::Interaction::Grab::GrabTypeFlags grabTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteraction::SupportsPinch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteraction", "SupportsPinch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor), ::il2cpp_utils::ExtractType(grabTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabInteractor, grabTypes);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteraction.SupportsPalm
bool Oculus::Interaction::HandGrab::HandGrabInteraction::SupportsPalm(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor, ::Oculus::Interaction::Grab::GrabTypeFlags grabTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteraction::SupportsPalm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteraction", "SupportsPalm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor), ::il2cpp_utils::ExtractType(grabTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabInteractor, grabTypes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandGrabInteraction/HandGrabInteractionPoses
#include "Oculus/Interaction/HandGrab/HandGrabInteraction_HandGrabInteractionPoses.hpp"
// Including type: Oculus.Interaction.HandGrab.IHandGrabInteractor
#include "Oculus/Interaction/HandGrab/IHandGrabInteractor.hpp"
// Including type: Oculus.Interaction.Grab.GrabTypeFlags
#include "Oculus/Interaction/Grab/GrabTypeFlags.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteraction/HandGrabInteractionPoses.GetBestAvailableAnchor
::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor Oculus::Interaction::HandGrab::HandGrabInteraction::HandGrabInteractionPoses::GetBestAvailableAnchor(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor, ::Oculus::Interaction::Grab::GrabTypeFlags grabTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteraction::HandGrabInteractionPoses::GetBestAvailableAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteraction/HandGrabInteractionPoses", "GetBestAvailableAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor), ::il2cpp_utils::ExtractType(grabTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabInteractor, grabTypes);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteraction/HandGrabInteractionPoses.GetHandAlignmentPoint
::UnityEngine::Pose Oculus::Interaction::HandGrab::HandGrabInteraction::HandGrabInteractionPoses::GetHandAlignmentPoint(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor, bool forceWrist, ::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor anchorMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteraction::HandGrabInteractionPoses::GetHandAlignmentPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteraction/HandGrabInteractionPoses", "GetHandAlignmentPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor), ::il2cpp_utils::ExtractType(forceWrist), ::il2cpp_utils::ExtractType(anchorMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabInteractor, forceWrist, anchorMode);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteraction/HandGrabInteractionPoses.GetPose
::UnityEngine::Pose Oculus::Interaction::HandGrab::HandGrabInteraction::HandGrabInteractionPoses::GetPose(::Oculus::Interaction::HandGrab::IHandGrabInteractor* handGrabInteractor, ::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor anchorMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteraction::HandGrabInteractionPoses::GetPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteraction/HandGrabInteractionPoses", "GetPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor), ::il2cpp_utils::ExtractType(anchorMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabInteractor, anchorMode);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractor
#include "Oculus/Interaction/HandGrab/HandGrabInteractor.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractor/<>c
#include "Oculus/Interaction/HandGrab/HandGrabInteractor_--c.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractor/<>c__DisplayClass82_0
#include "Oculus/Interaction/HandGrab/HandGrabInteractor_--c__DisplayClass82_0.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractor/<>c__DisplayClass84_0
#include "Oculus/Interaction/HandGrab/HandGrabInteractor_--c__DisplayClass84_0.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractable
#include "Oculus/Interaction/HandGrab/HandGrabInteractable.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: Oculus.Interaction.GrabAPI.HandGrabAPI
#include "Oculus/Interaction/GrabAPI/HandGrabAPI.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.SphereCollider
#include "UnityEngine/SphereCollider.hpp"
// Including type: Oculus.Interaction.Throw.IVelocityCalculator
#include "Oculus/Interaction/Throw/IVelocityCalculator.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabResult
#include "Oculus/Interaction/HandGrab/HandGrabResult.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabTarget
#include "Oculus/Interaction/HandGrab/HandGrabTarget.hpp"
// Including type: Oculus.Interaction.HandGrab.IHandGrabInteractable
#include "Oculus/Interaction/HandGrab/IHandGrabInteractable.hpp"
// Including type: Oculus.Interaction.Input.HandFingerFlags
#include "Oculus/Interaction/Input/HandFingerFlags.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: Oculus.Interaction.PointerEvent
#include "Oculus/Interaction/PointerEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.GrabAPI.HandGrabAPI _handGrabApi
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabAPI::HandGrabAPI*& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__handGrabApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__handGrabApi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handGrabApi"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::GrabAPI::HandGrabAPI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Grab.GrabTypeFlags _supportedGrabTypes
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Grab::GrabTypeFlags& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__supportedGrabTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__supportedGrabTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_supportedGrabTypes"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Grab::GrabTypeFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hoverOnZeroStrength
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__hoverOnZeroStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__hoverOnZeroStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverOnZeroStrength"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _grabOrigin
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__grabOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__grabOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabOrigin"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _gripPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__gripPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__gripPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gripPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SphereCollider _gripCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::SphereCollider*& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__gripCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__gripCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gripCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::SphereCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _pinchPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__pinchPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__pinchPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinchPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SphereCollider _pinchCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::SphereCollider*& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__pinchCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__pinchCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinchCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::SphereCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _velocityCalculator
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__velocityCalculator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__velocityCalculator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_velocityCalculator"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Throw.IVelocityCalculator <VelocityCalculator>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Throw::IVelocityCalculator*& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn_$VelocityCalculator$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn_$VelocityCalculator$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<VelocityCalculator>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Throw::IVelocityCalculator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _handGrabShouldSelect
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__handGrabShouldSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__handGrabShouldSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handGrabShouldSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _handGrabShouldUnselect
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__handGrabShouldUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__handGrabShouldUnselect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handGrabShouldUnselect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.HandGrabResult _cachedResult
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabResult*& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__cachedResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__cachedResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedResult"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandGrabResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.HandGrabInteractable _selectedInteractableOverride
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabInteractable*& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__selectedInteractableOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn__selectedInteractableOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedInteractableOverride"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandGrabInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IMovement <Movement>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IMovement*& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn_$Movement$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn_$Movement$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Movement>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IMovement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <MovementFinished>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn_$MovementFinished$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn_$MovementFinished$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MovementFinished>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.HandGrab.HandGrabTarget <HandGrabTarget>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabTarget*& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn_$HandGrabTarget$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn_$HandGrabTarget$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HandGrabTarget>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandGrabTarget**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <FingersStrength>k__BackingField
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn_$FingersStrength$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn_$FingersStrength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FingersStrength>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <WristStrength>k__BackingField
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn_$WristStrength$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn_$WristStrength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WristStrength>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose <WristToGrabPoseOffset>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::HandGrab::HandGrabInteractor::dyn_$WristToGrabPoseOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::dyn_$WristToGrabPoseOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WristToGrabPoseOffset>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::HandGrab::HandGrabInteractor::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::get_Hand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 75));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.set_Hand
void Oculus::Interaction::HandGrab::HandGrabInteractor::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.get_HoverOnZeroStrength
bool Oculus::Interaction::HandGrab::HandGrabInteractor::get_HoverOnZeroStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::get_HoverOnZeroStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HoverOnZeroStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.set_HoverOnZeroStrength
void Oculus::Interaction::HandGrab::HandGrabInteractor::set_HoverOnZeroStrength(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::set_HoverOnZeroStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HoverOnZeroStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.get_VelocityCalculator
::Oculus::Interaction::Throw::IVelocityCalculator* Oculus::Interaction::HandGrab::HandGrabInteractor::get_VelocityCalculator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::get_VelocityCalculator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VelocityCalculator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Throw::IVelocityCalculator*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.set_VelocityCalculator
void Oculus::Interaction::HandGrab::HandGrabInteractor::set_VelocityCalculator(::Oculus::Interaction::Throw::IVelocityCalculator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::set_VelocityCalculator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VelocityCalculator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.get_Movement
::Oculus::Interaction::IMovement* Oculus::Interaction::HandGrab::HandGrabInteractor::get_Movement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::get_Movement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Movement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovement*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.set_Movement
void Oculus::Interaction::HandGrab::HandGrabInteractor::set_Movement(::Oculus::Interaction::IMovement* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::set_Movement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Movement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.get_MovementFinished
bool Oculus::Interaction::HandGrab::HandGrabInteractor::get_MovementFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::get_MovementFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MovementFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.set_MovementFinished
void Oculus::Interaction::HandGrab::HandGrabInteractor::set_MovementFinished(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::set_MovementFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MovementFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.get_HandGrabTarget
::Oculus::Interaction::HandGrab::HandGrabTarget* Oculus::Interaction::HandGrab::HandGrabInteractor::get_HandGrabTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::get_HandGrabTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandGrabTarget*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.get_WristPoint
::UnityEngine::Transform* Oculus::Interaction::HandGrab::HandGrabInteractor::get_WristPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::get_WristPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 76));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.get_PinchPoint
::UnityEngine::Transform* Oculus::Interaction::HandGrab::HandGrabInteractor::get_PinchPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::get_PinchPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 77));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.get_PalmPoint
::UnityEngine::Transform* Oculus::Interaction::HandGrab::HandGrabInteractor::get_PalmPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::get_PalmPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 78));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.get_HandGrabApi
::Oculus::Interaction::GrabAPI::HandGrabAPI* Oculus::Interaction::HandGrab::HandGrabInteractor::get_HandGrabApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::get_HandGrabApi");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 79));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::GrabAPI::HandGrabAPI*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.get_SupportedGrabTypes
::Oculus::Interaction::Grab::GrabTypeFlags Oculus::Interaction::HandGrab::HandGrabInteractor::get_SupportedGrabTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::get_SupportedGrabTypes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 80));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Grab::GrabTypeFlags, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.get_TargetInteractable
::Oculus::Interaction::HandGrab::IHandGrabInteractable* Oculus::Interaction::HandGrab::HandGrabInteractor::get_TargetInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::get_TargetInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 81));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::IHandGrabInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.get_IsGrabbing
bool Oculus::Interaction::HandGrab::HandGrabInteractor::get_IsGrabbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::get_IsGrabbing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 89));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.get_FingersStrength
float Oculus::Interaction::HandGrab::HandGrabInteractor::get_FingersStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::get_FingersStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 83));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.set_FingersStrength
void Oculus::Interaction::HandGrab::HandGrabInteractor::set_FingersStrength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::set_FingersStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FingersStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.get_WristStrength
float Oculus::Interaction::HandGrab::HandGrabInteractor::get_WristStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::get_WristStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 84));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.set_WristStrength
void Oculus::Interaction::HandGrab::HandGrabInteractor::set_WristStrength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::set_WristStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WristStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.get_WristToGrabPoseOffset
::UnityEngine::Pose Oculus::Interaction::HandGrab::HandGrabInteractor::get_WristToGrabPoseOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::get_WristToGrabPoseOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 85));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.set_WristToGrabPoseOffset
void Oculus::Interaction::HandGrab::HandGrabInteractor::set_WristToGrabPoseOffset(::UnityEngine::Pose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::set_WristToGrabPoseOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WristToGrabPoseOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.GrabbingFingers
::Oculus::Interaction::Input::HandFingerFlags Oculus::Interaction::HandGrab::HandGrabInteractor::GrabbingFingers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::GrabbingFingers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 87));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandFingerFlags, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.get_Rigidbody
::UnityEngine::Rigidbody* Oculus::Interaction::HandGrab::HandGrabInteractor::get_Rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::get_Rigidbody");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 88));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.Reset
void Oculus::Interaction::HandGrab::HandGrabInteractor::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 90));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.InteractableSet
void Oculus::Interaction::HandGrab::HandGrabInteractor::InteractableSet(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::InteractableSet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.InteractableUnset
void Oculus::Interaction::HandGrab::HandGrabInteractor::InteractableUnset(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::InteractableUnset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.InteractableSelected
void Oculus::Interaction::HandGrab::HandGrabInteractor::InteractableSelected(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::InteractableSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.InteractableUnselected
void Oculus::Interaction::HandGrab::HandGrabInteractor::InteractableUnselected(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::InteractableUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.CanSelect
bool Oculus::Interaction::HandGrab::HandGrabInteractor::CanSelect(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 66));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.ComputeCandidate
::Oculus::Interaction::HandGrab::HandGrabInteractable* Oculus::Interaction::HandGrab::HandGrabInteractor::ComputeCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::ComputeCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 64));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandGrabInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.SelectingGrabTypes
::Oculus::Interaction::Grab::GrabTypeFlags Oculus::Interaction::HandGrab::HandGrabInteractor::SelectingGrabTypes(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable, float minFingerScoreRequired, ByRef<float> fingerScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::SelectingGrabTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectingGrabTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(minFingerScoreRequired), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Grab::GrabTypeFlags, false>(this, ___internal__method, interactable, minFingerScoreRequired, byref(fingerScore));
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.ForceSelect
void Oculus::Interaction::HandGrab::HandGrabInteractor::ForceSelect(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable, bool allowManualRelease) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::ForceSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(allowManualRelease)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable, allowManualRelease);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.ForceRelease
void Oculus::Interaction::HandGrab::HandGrabInteractor::ForceRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::ForceRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.SetComputeCandidateOverride
void Oculus::Interaction::HandGrab::HandGrabInteractor::SetComputeCandidateOverride(::System::Func_1<::Oculus::Interaction::HandGrab::HandGrabInteractable*>* computeCandidate, bool shouldClearOverrideOnSelect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::SetComputeCandidateOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabInteractor*), 55));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, computeCandidate, shouldClearOverrideOnSelect);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.OverlapsSphere
bool Oculus::Interaction::HandGrab::HandGrabInteractor::OverlapsSphere(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable, ::UnityEngine::SphereCollider* sphere) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::OverlapsSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OverlapsSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(sphere)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable, sphere);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.UpdateTarget
void Oculus::Interaction::HandGrab::HandGrabInteractor::UpdateTarget(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::UpdateTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.UpdateTargetSliding
void Oculus::Interaction::HandGrab::HandGrabInteractor::UpdateTargetSliding(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::UpdateTargetSliding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTargetSliding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.TrySetTarget
bool Oculus::Interaction::HandGrab::HandGrabInteractor::TrySetTarget(::Oculus::Interaction::HandGrab::IHandGrabInteractable* interactable, ::Oculus::Interaction::Grab::GrabTypeFlags selectingGrabTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::TrySetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(selectingGrabTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable, selectingGrabTypes);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.SetGrabStrength
void Oculus::Interaction::HandGrab::HandGrabInteractor::SetGrabStrength(float strength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::SetGrabStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGrabStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, strength);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.InjectAllHandGrabInteractor
void Oculus::Interaction::HandGrab::HandGrabInteractor::InjectAllHandGrabInteractor(::Oculus::Interaction::GrabAPI::HandGrabAPI* handGrabApi, ::UnityEngine::Transform* grabOrigin, ::Oculus::Interaction::Input::IHand* hand, ::UnityEngine::Rigidbody* rigidbody, ::Oculus::Interaction::Grab::GrabTypeFlags supportedGrabTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::InjectAllHandGrabInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandGrabInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabApi), ::il2cpp_utils::ExtractType(grabOrigin), ::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(rigidbody), ::il2cpp_utils::ExtractType(supportedGrabTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handGrabApi, grabOrigin, hand, rigidbody, supportedGrabTypes);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.InjectHandGrabApi
void Oculus::Interaction::HandGrab::HandGrabInteractor::InjectHandGrabApi(::Oculus::Interaction::GrabAPI::HandGrabAPI* handGrabAPI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::InjectHandGrabApi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandGrabApi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabAPI)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handGrabAPI);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.InjectHand
void Oculus::Interaction::HandGrab::HandGrabInteractor::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.InjectRigidbody
void Oculus::Interaction::HandGrab::HandGrabInteractor::InjectRigidbody(::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::InjectRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rigidbody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rigidbody);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.InjectSupportedGrabTypes
void Oculus::Interaction::HandGrab::HandGrabInteractor::InjectSupportedGrabTypes(::Oculus::Interaction::Grab::GrabTypeFlags supportedGrabTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::InjectSupportedGrabTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSupportedGrabTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(supportedGrabTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, supportedGrabTypes);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.InjectGrabOrigin
void Oculus::Interaction::HandGrab::HandGrabInteractor::InjectGrabOrigin(::UnityEngine::Transform* grabOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::InjectGrabOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectGrabOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabOrigin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabOrigin);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.InjectOptionalGripPoint
void Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalGripPoint(::UnityEngine::Transform* gripPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalGripPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalGripPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gripPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gripPoint);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.InjectOptionalGripCollider
void Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalGripCollider(::UnityEngine::SphereCollider* gripCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalGripCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalGripCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gripCollider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gripCollider);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.InjectOptionalPinchPoint
void Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalPinchPoint(::UnityEngine::Transform* pinchPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalPinchPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalPinchPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pinchPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pinchPoint);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.InjectOptionalPinchCollider
void Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalPinchCollider(::UnityEngine::SphereCollider* pinchCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalPinchCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalPinchCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pinchCollider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pinchCollider);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.InjectOptionalVelocityCalculator
void Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalVelocityCalculator(::Oculus::Interaction::Throw::IVelocityCalculator* velocityCalculator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::InjectOptionalVelocityCalculator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalVelocityCalculator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(velocityCalculator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, velocityCalculator);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.<Start>b__68_0
void Oculus::Interaction::HandGrab::HandGrabInteractor::$Start$b__68_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::<Start>b__68_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__68_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.Awake
void Oculus::Interaction::HandGrab::HandGrabInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 50)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.Start
void Oculus::Interaction::HandGrab::HandGrabInteractor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 51)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.DoHoverUpdate
void Oculus::Interaction::HandGrab::HandGrabInteractor::DoHoverUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::DoHoverUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 38)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.DoSelectUpdate
void Oculus::Interaction::HandGrab::HandGrabInteractor::DoSelectUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::DoSelectUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 39)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.HandlePointerEventRaised
void Oculus::Interaction::HandGrab::HandGrabInteractor::HandlePointerEventRaised(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::HandlePointerEventRaised");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractor_2<TInteractor, TInteractable>*), 73)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.ComputePointerPose
::UnityEngine::Pose Oculus::Interaction::HandGrab::HandGrabInteractor::ComputePointerPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::ComputePointerPose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointerInteractor_2<TInteractor, TInteractable>*), 74)));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.ComputeShouldSelect
bool Oculus::Interaction::HandGrab::HandGrabInteractor::ComputeShouldSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::ComputeShouldSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 43)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.ComputeShouldUnselect
bool Oculus::Interaction::HandGrab::HandGrabInteractor::ComputeShouldUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::ComputeShouldUnselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 44)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor.Unselect
void Oculus::Interaction::HandGrab::HandGrabInteractor::Unselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::Unselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 63)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractor/<>c
#include "Oculus/Interaction/HandGrab/HandGrabInteractor_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.HandGrab.HandGrabInteractor/<>c <>9
::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c* Oculus::Interaction::HandGrab::HandGrabInteractor::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c*>("Oculus.Interaction.HandGrab", "HandGrabInteractor/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.HandGrab.HandGrabInteractor/<>c <>9
void Oculus::Interaction::HandGrab::HandGrabInteractor::$$c::_set_$$9(::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "HandGrabInteractor/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Boolean> <>9__83_0
::System::Func_1<bool>* Oculus::Interaction::HandGrab::HandGrabInteractor::$$c::_get_$$9__83_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c::_get_$$9__83_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<bool>*>("Oculus.Interaction.HandGrab", "HandGrabInteractor/<>c", "<>9__83_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Boolean> <>9__83_0
void Oculus::Interaction::HandGrab::HandGrabInteractor::$$c::_set_$$9__83_0(::System::Func_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c::_set_$$9__83_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "HandGrabInteractor/<>c", "<>9__83_0", value)));
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor/<>c..cctor
void Oculus::Interaction::HandGrab::HandGrabInteractor::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabInteractor/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor/<>c.<ForceRelease>b__83_0
bool Oculus::Interaction::HandGrab::HandGrabInteractor::$$c::$ForceRelease$b__83_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c::<ForceRelease>b__83_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ForceRelease>b__83_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractor/<>c__DisplayClass82_0
#include "Oculus/Interaction/HandGrab/HandGrabInteractor_--c__DisplayClass82_0.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractable
#include "Oculus/Interaction/HandGrab/HandGrabInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.HandGrab.HandGrabInteractable interactable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabInteractable*& Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass82_0::dyn_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass82_0::dyn_interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandGrabInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.HandGrab.HandGrabInteractor <>4__this
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabInteractor*& Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass82_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass82_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandGrabInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor/<>c__DisplayClass82_0.<ForceSelect>b__0
::Oculus::Interaction::HandGrab::HandGrabInteractable* Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass82_0::$ForceSelect$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass82_0::<ForceSelect>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ForceSelect>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandGrabInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor/<>c__DisplayClass82_0.<ForceSelect>b__1
bool Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass82_0::$ForceSelect$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass82_0::<ForceSelect>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ForceSelect>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor/<>c__DisplayClass82_0.<ForceSelect>b__2
bool Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass82_0::$ForceSelect$b__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass82_0::<ForceSelect>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ForceSelect>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractor/<>c__DisplayClass84_0
#include "Oculus/Interaction/HandGrab/HandGrabInteractor_--c__DisplayClass84_0.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractable
#include "Oculus/Interaction/HandGrab/HandGrabInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Func`1<Oculus.Interaction.HandGrab.HandGrabInteractable> computeCandidate
[[deprecated("Use field access instead!")]] ::System::Func_1<::Oculus::Interaction::HandGrab::HandGrabInteractable*>*& Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass84_0::dyn_computeCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass84_0::dyn_computeCandidate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "computeCandidate"))->offset;
  return *reinterpret_cast<::System::Func_1<::Oculus::Interaction::HandGrab::HandGrabInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabInteractor/<>c__DisplayClass84_0.<SetComputeCandidateOverride>b__0
::Oculus::Interaction::HandGrab::HandGrabInteractable* Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass84_0::$SetComputeCandidateOverride$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabInteractor::$$c__DisplayClass84_0::<SetComputeCandidateOverride>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetComputeCandidateOverride>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandGrabInteractable*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandGrabPose
#include "Oculus/Interaction/HandGrab/HandGrabPose.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.Grab.GrabSurfaces.IGrabSurface
#include "Oculus/Interaction/Grab/GrabSurfaces/IGrabSurface.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.HandGrab.HandPose
#include "Oculus/Interaction/HandGrab/HandPose.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
// Including type: Oculus.Interaction.Grab.PoseMeasureParameters
#include "Oculus/Interaction/Grab/PoseMeasureParameters.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabResult
#include "Oculus/Interaction/HandGrab/HandGrabResult.hpp"
// Including type: Oculus.Interaction.Grab.GrabPoseScore
#include "Oculus/Interaction/Grab/GrabPoseScore.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _surface
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandGrab::HandGrabPose::dyn__surface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::dyn__surface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_surface"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Grab.GrabSurfaces.IGrabSurface _snapSurface
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Grab::GrabSurfaces::IGrabSurface*& Oculus::Interaction::HandGrab::HandGrabPose::dyn__snapSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::dyn__snapSurface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_snapSurface"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Grab::GrabSurfaces::IGrabSurface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _relativeTo
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::HandGrab::HandGrabPose::dyn__relativeTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::dyn__relativeTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeTo"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _usesHandPose
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::HandGrabPose::dyn__usesHandPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::dyn__usesHandPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_usesHandPose"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.HandPose _handPose
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandPose*& Oculus::Interaction::HandGrab::HandGrabPose::dyn__handPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::dyn__handPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handPose"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandPose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabPose.get_SnapSurface
::Oculus::Interaction::Grab::GrabSurfaces::IGrabSurface* Oculus::Interaction::HandGrab::HandGrabPose::get_SnapSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::get_SnapSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SnapSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Grab::GrabSurfaces::IGrabSurface*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabPose.set_SnapSurface
void Oculus::Interaction::HandGrab::HandGrabPose::set_SnapSurface(::Oculus::Interaction::Grab::GrabSurfaces::IGrabSurface* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::set_SnapSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SnapSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabPose.get_HandPose
::Oculus::Interaction::HandGrab::HandPose* Oculus::Interaction::HandGrab::HandGrabPose::get_HandPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::get_HandPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HandPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandPose*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabPose.get_RelativeScale
float Oculus::Interaction::HandGrab::HandGrabPose::get_RelativeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::get_RelativeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RelativeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabPose.get_RelativePose
::UnityEngine::Pose Oculus::Interaction::HandGrab::HandGrabPose::get_RelativePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::get_RelativePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RelativePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabPose.get_RelativeTo
::UnityEngine::Transform* Oculus::Interaction::HandGrab::HandGrabPose::get_RelativeTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::get_RelativeTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RelativeTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabPose.Reset
void Oculus::Interaction::HandGrab::HandGrabPose::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabPose*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabPose.UsesHandPose
bool Oculus::Interaction::HandGrab::HandGrabPose::UsesHandPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::UsesHandPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UsesHandPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabPose.CalculateBestPose
bool Oculus::Interaction::HandGrab::HandGrabPose::CalculateBestPose(::UnityEngine::Pose userPose, ::Oculus::Interaction::Input::Handedness handedness, ::Oculus::Interaction::Grab::PoseMeasureParameters scoringModifier, ::UnityEngine::Transform* relativeTo, ByRef<::Oculus::Interaction::HandGrab::HandGrabResult*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::CalculateBestPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabPose*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, userPose, handedness, scoringModifier, relativeTo, byref(result));
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabPose.CompareNearPoses
::Oculus::Interaction::Grab::GrabPoseScore Oculus::Interaction::HandGrab::HandGrabPose::CompareNearPoses(ByRef<::UnityEngine::Pose> worldPoint, ::Oculus::Interaction::Grab::PoseMeasureParameters scoringModifier, ::UnityEngine::Transform* relativeTo, ByRef<::UnityEngine::Pose> bestWorldPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::CompareNearPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareNearPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPoint), ::il2cpp_utils::ExtractType(scoringModifier), ::il2cpp_utils::ExtractType(relativeTo), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Pose&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Grab::GrabPoseScore, false>(this, ___internal__method, byref(worldPoint), scoringModifier, relativeTo, byref(bestWorldPose));
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabPose.InjectAllHandGrabPose
void Oculus::Interaction::HandGrab::HandGrabPose::InjectAllHandGrabPose(::UnityEngine::Transform* relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::InjectAllHandGrabPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandGrabPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relativeTo);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabPose.InjectRelativeTo
void Oculus::Interaction::HandGrab::HandGrabPose::InjectRelativeTo(::UnityEngine::Transform* relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::InjectRelativeTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRelativeTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relativeTo);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabPose.InjectOptionalSurface
void Oculus::Interaction::HandGrab::HandGrabPose::InjectOptionalSurface(::Oculus::Interaction::Grab::GrabSurfaces::IGrabSurface* surface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::InjectOptionalSurface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalSurface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surface)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, surface);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabPose.InjectOptionalHandPose
void Oculus::Interaction::HandGrab::HandGrabPose::InjectOptionalHandPose(::Oculus::Interaction::HandGrab::HandPose* handPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabPose::InjectOptionalHandPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalHandPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handPose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handPose);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandGrabResult
#include "Oculus/Interaction/HandGrab/HandGrabResult.hpp"
// Including type: Oculus.Interaction.HandGrab.HandPose
#include "Oculus/Interaction/HandGrab/HandPose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean HasHandPose
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::HandGrabResult::dyn_HasHandPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabResult::dyn_HasHandPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HasHandPose"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.HandGrab.HandPose HandPose
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandPose*& Oculus::Interaction::HandGrab::HandGrabResult::dyn_HandPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabResult::dyn_HandPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandPose"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandPose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Pose RelativePose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::HandGrab::HandGrabResult::dyn_RelativePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabResult::dyn_RelativePose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RelativePose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Grab.GrabPoseScore Score
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Grab::GrabPoseScore& Oculus::Interaction::HandGrab::HandGrabResult::dyn_Score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabResult::dyn_Score");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Score"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Grab::GrabPoseScore*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabResult.CopyFrom
void Oculus::Interaction::HandGrab::HandGrabResult::CopyFrom(::Oculus::Interaction::HandGrab::HandGrabResult* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabResult::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandGrabTarget
#include "Oculus/Interaction/HandGrab/HandGrabTarget.hpp"
// Including type: Oculus.Interaction.HandGrab.HandPose
#include "Oculus/Interaction/HandGrab/HandPose.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabResult
#include "Oculus/Interaction/HandGrab/HandGrabResult.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _relativeTo
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::HandGrab::HandGrabTarget::dyn__relativeTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::dyn__relativeTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeTo"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.HandGrabResult _handGrabResult
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabResult*& Oculus::Interaction::HandGrab::HandGrabTarget::dyn__handGrabResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::dyn__handGrabResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handGrabResult"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandGrabResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.HandAlignType <HandAlignment>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandAlignType& Oculus::Interaction::HandGrab::HandGrabTarget::dyn_$HandAlignment$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::dyn_$HandAlignment$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HandAlignment>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandAlignType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor <Anchor>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor& Oculus::Interaction::HandGrab::HandGrabTarget::dyn_$Anchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::dyn_$Anchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Anchor>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabTarget.get_HandPose
::Oculus::Interaction::HandGrab::HandPose* Oculus::Interaction::HandGrab::HandGrabTarget::get_HandPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::get_HandPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HandPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandPose*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabTarget.GetWorldPoseDisplaced
::UnityEngine::Pose Oculus::Interaction::HandGrab::HandGrabTarget::GetWorldPoseDisplaced(ByRef<::UnityEngine::Pose> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::GetWorldPoseDisplaced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorldPoseDisplaced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, byref(offset));
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabTarget.get_HandAlignment
::Oculus::Interaction::HandGrab::HandAlignType Oculus::Interaction::HandGrab::HandGrabTarget::get_HandAlignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::get_HandAlignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HandAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandAlignType, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabTarget.set_HandAlignment
void Oculus::Interaction::HandGrab::HandGrabTarget::set_HandAlignment(::Oculus::Interaction::HandGrab::HandAlignType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::set_HandAlignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HandAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabTarget.get_Anchor
::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor Oculus::Interaction::HandGrab::HandGrabTarget::get_Anchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::get_Anchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Anchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabTarget.set_Anchor
void Oculus::Interaction::HandGrab::HandGrabTarget::set_Anchor(::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::set_Anchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Anchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabTarget.Set
void Oculus::Interaction::HandGrab::HandGrabTarget::Set(::UnityEngine::Transform* relativeTo, ::Oculus::Interaction::HandGrab::HandAlignType handAlignment, ::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor anchor, ::Oculus::Interaction::HandGrab::HandGrabResult* handGrabResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativeTo), ::il2cpp_utils::ExtractType(handAlignment), ::il2cpp_utils::ExtractType(anchor), ::il2cpp_utils::ExtractType(handGrabResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relativeTo, handAlignment, anchor, handGrabResult);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor
#include "Oculus/Interaction/HandGrab/HandGrabTarget.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor None
::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor>("Oculus.Interaction.HandGrab", "HandGrabTarget/GrabAnchor", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor None
void Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor::_set_None(::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "HandGrabTarget/GrabAnchor", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor Wrist
::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor::_get_Wrist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor::_get_Wrist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor>("Oculus.Interaction.HandGrab", "HandGrabTarget/GrabAnchor", "Wrist"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor Wrist
void Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor::_set_Wrist(::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor::_set_Wrist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "HandGrabTarget/GrabAnchor", "Wrist", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor Pinch
::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor::_get_Pinch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor::_get_Pinch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor>("Oculus.Interaction.HandGrab", "HandGrabTarget/GrabAnchor", "Pinch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor Pinch
void Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor::_set_Pinch(::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor::_set_Pinch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "HandGrabTarget/GrabAnchor", "Pinch", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor Palm
::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor::_get_Palm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor::_get_Palm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor>("Oculus.Interaction.HandGrab", "HandGrabTarget/GrabAnchor", "Palm"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrab.HandGrabTarget/GrabAnchor Palm
void Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor::_set_Palm(::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor::_set_Palm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "HandGrabTarget/GrabAnchor", "Palm", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabTarget::GrabAnchor::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandGrabUtils
#include "Oculus/Interaction/HandGrab/HandGrabUtils.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabUtils/HandGrabInteractableData
#include "Oculus/Interaction/HandGrab/HandGrabUtils_HandGrabInteractableData.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabUtils/HandGrabPoseData
#include "Oculus/Interaction/HandGrab/HandGrabUtils_HandGrabPoseData.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractable
#include "Oculus/Interaction/HandGrab/HandGrabInteractable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabPose
#include "Oculus/Interaction/HandGrab/HandGrabPose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUtils.CreateHandGrabInteractable
::Oculus::Interaction::HandGrab::HandGrabInteractable* Oculus::Interaction::HandGrab::HandGrabUtils::CreateHandGrabInteractable(::UnityEngine::Transform* parent, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUtils::CreateHandGrabInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabUtils", "CreateHandGrabInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandGrabInteractable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parent, name);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUtils.CreateHandGrabPose
::Oculus::Interaction::HandGrab::HandGrabPose* Oculus::Interaction::HandGrab::HandGrabUtils::CreateHandGrabPose(::UnityEngine::Transform* parent, ::UnityEngine::Transform* relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUtils::CreateHandGrabPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabUtils", "CreateHandGrabPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(relativeTo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandGrabPose*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parent, relativeTo);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUtils.MirrorHandGrabPose
void Oculus::Interaction::HandGrab::HandGrabUtils::MirrorHandGrabPose(::Oculus::Interaction::HandGrab::HandGrabPose* originalPoint, ::Oculus::Interaction::HandGrab::HandGrabPose* mirrorPoint, ::UnityEngine::Transform* relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUtils::MirrorHandGrabPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabUtils", "MirrorHandGrabPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPoint), ::il2cpp_utils::ExtractType(mirrorPoint), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, originalPoint, mirrorPoint, relativeTo);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUtils.SaveHandGrabPoseData
::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabPoseData Oculus::Interaction::HandGrab::HandGrabUtils::SaveHandGrabPoseData(::Oculus::Interaction::HandGrab::HandGrabPose* handGrabPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUtils::SaveHandGrabPoseData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabUtils", "SaveHandGrabPoseData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabPose)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabPoseData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabPose);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUtils.LoadHandGrabPoseData
void Oculus::Interaction::HandGrab::HandGrabUtils::LoadHandGrabPoseData(::Oculus::Interaction::HandGrab::HandGrabPose* handGrabPose, ::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabPoseData data, ::UnityEngine::Transform* relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUtils::LoadHandGrabPoseData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabUtils", "LoadHandGrabPoseData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabPose), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handGrabPose, data, relativeTo);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUtils.SaveData
::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabInteractableData Oculus::Interaction::HandGrab::HandGrabUtils::SaveData(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUtils::SaveData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabUtils", "SaveData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabInteractableData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUtils.LoadData
void Oculus::Interaction::HandGrab::HandGrabUtils::LoadData(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable, ::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabInteractableData data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUtils::LoadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabUtils", "LoadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactable, data);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUtils.LoadHandGrabPose
::Oculus::Interaction::HandGrab::HandGrabPose* Oculus::Interaction::HandGrab::HandGrabUtils::LoadHandGrabPose(::Oculus::Interaction::HandGrab::HandGrabInteractable* interactable, ::Oculus::Interaction::HandGrab::HandGrabUtils::HandGrabPoseData poseData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUtils::LoadHandGrabPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabUtils", "LoadHandGrabPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable), ::il2cpp_utils::ExtractType(poseData)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandGrabPose*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactable, poseData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandPose
#include "Oculus/Interaction/HandGrab/HandPose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.Handedness _handedness
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::Handedness& Oculus::Interaction::HandGrab::HandPose::dyn__handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandPose::dyn__handedness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handedness"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::Handedness*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.JointFreedom[] _fingersFreedom
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Interaction::Input::JointFreedom>& Oculus::Interaction::HandGrab::HandPose::dyn__fingersFreedom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandPose::dyn__fingersFreedom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingersFreedom"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Interaction::Input::JointFreedom>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion[] _jointRotations
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& Oculus::Interaction::HandGrab::HandPose::dyn__jointRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandPose::dyn__jointRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointRotations"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandPose.get_Handedness
::Oculus::Interaction::Input::Handedness Oculus::Interaction::HandGrab::HandPose::get_Handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandPose::get_Handedness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handedness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::Handedness, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandPose.set_Handedness
void Oculus::Interaction::HandGrab::HandPose::set_Handedness(::Oculus::Interaction::Input::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandPose::set_Handedness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Handedness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandPose.get_JointRotations
::ArrayW<::UnityEngine::Quaternion> Oculus::Interaction::HandGrab::HandPose::get_JointRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandPose::get_JointRotations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_JointRotations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Quaternion>, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandPose.set_JointRotations
void Oculus::Interaction::HandGrab::HandPose::set_JointRotations(::ArrayW<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandPose::set_JointRotations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_JointRotations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandPose.get_FingersFreedom
::ArrayW<::Oculus::Interaction::Input::JointFreedom> Oculus::Interaction::HandGrab::HandPose::get_FingersFreedom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandPose::get_FingersFreedom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FingersFreedom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Oculus::Interaction::Input::JointFreedom>, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandPose.CopyFrom
void Oculus::Interaction::HandGrab::HandPose::CopyFrom(::Oculus::Interaction::HandGrab::HandPose* from, bool mirrorHandedness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandPose::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(mirrorHandedness)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, mirrorHandedness);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandPose.Lerp
void Oculus::Interaction::HandGrab::HandPose::Lerp(ByRef<::Oculus::Interaction::HandGrab::HandPose*> from, ByRef<::Oculus::Interaction::HandGrab::HandPose*> to, float t, ByRef<::Oculus::Interaction::HandGrab::HandPose*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandPose::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandPose", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(from), byref(to), t, byref(result));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.IHandGrabInteractable
#include "Oculus/Interaction/HandGrab/IHandGrabInteractable.hpp"
// Including type: Oculus.Interaction.HandGrab.HandAlignType
#include "Oculus/Interaction/HandGrab/HandAlignType.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabResult
#include "Oculus/Interaction/HandGrab/HandGrabResult.hpp"
// Including type: Oculus.Interaction.Grab.GrabTypeFlags
#include "Oculus/Interaction/Grab/GrabTypeFlags.hpp"
// Including type: Oculus.Interaction.GrabAPI.GrabbingRule
#include "Oculus/Interaction/GrabAPI/GrabbingRule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabInteractable.get_HandAlignment
::Oculus::Interaction::HandGrab::HandAlignType Oculus::Interaction::HandGrab::IHandGrabInteractable::get_HandAlignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabInteractable::get_HandAlignment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandAlignType, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabInteractable.get_UsesHandPose
bool Oculus::Interaction::HandGrab::IHandGrabInteractable::get_UsesHandPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabInteractable::get_UsesHandPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabInteractable.get_Slippiness
float Oculus::Interaction::HandGrab::IHandGrabInteractable::get_Slippiness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabInteractable::get_Slippiness");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabInteractable.SupportsHandedness
bool Oculus::Interaction::HandGrab::IHandGrabInteractable::SupportsHandedness(::Oculus::Interaction::Input::Handedness handedness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabInteractable::SupportsHandedness");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handedness);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabInteractable.GenerateMovement
::Oculus::Interaction::IMovement* Oculus::Interaction::HandGrab::IHandGrabInteractable::GenerateMovement(ByRef<::UnityEngine::Pose> from, ByRef<::UnityEngine::Pose> to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabInteractable::GenerateMovement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovement*, false>(this, ___internal__method, byref(from), byref(to));
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabInteractable.CalculateBestPose
bool Oculus::Interaction::HandGrab::IHandGrabInteractable::CalculateBestPose(::UnityEngine::Pose userPose, float handScale, ::Oculus::Interaction::Input::Handedness handedness, ByRef<::Oculus::Interaction::HandGrab::HandGrabResult*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabInteractable::CalculateBestPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, userPose, handScale, handedness, byref(result));
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabInteractable.get_SupportedGrabTypes
::Oculus::Interaction::Grab::GrabTypeFlags Oculus::Interaction::HandGrab::IHandGrabInteractable::get_SupportedGrabTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabInteractable::get_SupportedGrabTypes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Grab::GrabTypeFlags, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabInteractable.get_PinchGrabRules
::Oculus::Interaction::GrabAPI::GrabbingRule Oculus::Interaction::HandGrab::IHandGrabInteractable::get_PinchGrabRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabInteractable::get_PinchGrabRules");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::GrabAPI::GrabbingRule, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabInteractable.get_PalmGrabRules
::Oculus::Interaction::GrabAPI::GrabbingRule Oculus::Interaction::HandGrab::IHandGrabInteractable::get_PalmGrabRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabInteractable::get_PalmGrabRules");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabInteractable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::GrabAPI::GrabbingRule, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.IHandGrabInteractor
#include "Oculus/Interaction/HandGrab/IHandGrabInteractor.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.GrabAPI.HandGrabAPI
#include "Oculus/Interaction/GrabAPI/HandGrabAPI.hpp"
// Including type: Oculus.Interaction.Grab.GrabTypeFlags
#include "Oculus/Interaction/Grab/GrabTypeFlags.hpp"
// Including type: Oculus.Interaction.HandGrab.IHandGrabInteractable
#include "Oculus/Interaction/HandGrab/IHandGrabInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabInteractor.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::HandGrab::IHandGrabInteractor::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabInteractor::get_Hand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabInteractor.get_WristPoint
::UnityEngine::Transform* Oculus::Interaction::HandGrab::IHandGrabInteractor::get_WristPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabInteractor::get_WristPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabInteractor.get_PinchPoint
::UnityEngine::Transform* Oculus::Interaction::HandGrab::IHandGrabInteractor::get_PinchPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabInteractor::get_PinchPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabInteractor.get_PalmPoint
::UnityEngine::Transform* Oculus::Interaction::HandGrab::IHandGrabInteractor::get_PalmPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabInteractor::get_PalmPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabInteractor.get_HandGrabApi
::Oculus::Interaction::GrabAPI::HandGrabAPI* Oculus::Interaction::HandGrab::IHandGrabInteractor::get_HandGrabApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabInteractor::get_HandGrabApi");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::GrabAPI::HandGrabAPI*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabInteractor.get_SupportedGrabTypes
::Oculus::Interaction::Grab::GrabTypeFlags Oculus::Interaction::HandGrab::IHandGrabInteractor::get_SupportedGrabTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabInteractor::get_SupportedGrabTypes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Grab::GrabTypeFlags, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabInteractor.get_TargetInteractable
::Oculus::Interaction::HandGrab::IHandGrabInteractable* Oculus::Interaction::HandGrab::IHandGrabInteractor::get_TargetInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabInteractor::get_TargetInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::IHandGrabInteractable*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandAlignType
#include "Oculus/Interaction/HandGrab/HandAlignType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrab.HandAlignType None
::Oculus::Interaction::HandGrab::HandAlignType Oculus::Interaction::HandGrab::HandAlignType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandAlignType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrab::HandAlignType>("Oculus.Interaction.HandGrab", "HandAlignType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrab.HandAlignType None
void Oculus::Interaction::HandGrab::HandAlignType::_set_None(::Oculus::Interaction::HandGrab::HandAlignType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandAlignType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "HandAlignType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrab.HandAlignType AlignOnGrab
::Oculus::Interaction::HandGrab::HandAlignType Oculus::Interaction::HandGrab::HandAlignType::_get_AlignOnGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandAlignType::_get_AlignOnGrab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrab::HandAlignType>("Oculus.Interaction.HandGrab", "HandAlignType", "AlignOnGrab"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrab.HandAlignType AlignOnGrab
void Oculus::Interaction::HandGrab::HandAlignType::_set_AlignOnGrab(::Oculus::Interaction::HandGrab::HandAlignType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandAlignType::_set_AlignOnGrab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "HandAlignType", "AlignOnGrab", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrab.HandAlignType AttractOnHover
::Oculus::Interaction::HandGrab::HandAlignType Oculus::Interaction::HandGrab::HandAlignType::_get_AttractOnHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandAlignType::_get_AttractOnHover");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrab::HandAlignType>("Oculus.Interaction.HandGrab", "HandAlignType", "AttractOnHover"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrab.HandAlignType AttractOnHover
void Oculus::Interaction::HandGrab::HandAlignType::_set_AttractOnHover(::Oculus::Interaction::HandGrab::HandAlignType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandAlignType::_set_AttractOnHover");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "HandAlignType", "AttractOnHover", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.HandGrab.HandAlignType AlignFingersOnHover
::Oculus::Interaction::HandGrab::HandAlignType Oculus::Interaction::HandGrab::HandAlignType::_get_AlignFingersOnHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandAlignType::_get_AlignFingersOnHover");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrab::HandAlignType>("Oculus.Interaction.HandGrab", "HandAlignType", "AlignFingersOnHover"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.HandGrab.HandAlignType AlignFingersOnHover
void Oculus::Interaction::HandGrab::HandAlignType::_set_AlignFingersOnHover(::Oculus::Interaction::HandGrab::HandAlignType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandAlignType::_set_AlignFingersOnHover");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "HandAlignType", "AlignFingersOnHover", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandGrab::HandAlignType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandAlignType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.IHandGrabState
#include "Oculus/Interaction/HandGrab/IHandGrabState.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabTarget
#include "Oculus/Interaction/HandGrab/HandGrabTarget.hpp"
// Including type: Oculus.Interaction.Input.HandFingerFlags
#include "Oculus/Interaction/Input/HandFingerFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabState.get_IsGrabbing
bool Oculus::Interaction::HandGrab::IHandGrabState::get_IsGrabbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabState::get_IsGrabbing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabState*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabState.get_FingersStrength
float Oculus::Interaction::HandGrab::IHandGrabState::get_FingersStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabState::get_FingersStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabState*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabState.get_WristStrength
float Oculus::Interaction::HandGrab::IHandGrabState::get_WristStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabState::get_WristStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabState*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabState.get_WristToGrabPoseOffset
::UnityEngine::Pose Oculus::Interaction::HandGrab::IHandGrabState::get_WristToGrabPoseOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabState::get_WristToGrabPoseOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabState*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabState.get_HandGrabTarget
::Oculus::Interaction::HandGrab::HandGrabTarget* Oculus::Interaction::HandGrab::IHandGrabState::get_HandGrabTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabState::get_HandGrabTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabState*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandGrabTarget*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabState.GrabbingFingers
::Oculus::Interaction::Input::HandFingerFlags Oculus::Interaction::HandGrab::IHandGrabState::GrabbingFingers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabState::GrabbingFingers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabState*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandFingerFlags, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandGrabStateExtensions
#include "Oculus/Interaction/HandGrab/HandGrabStateExtensions.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.HandGrab.IHandGrabState
#include "Oculus/Interaction/HandGrab/IHandGrabState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabStateExtensions.GetVisualWristPose
::UnityEngine::Pose Oculus::Interaction::HandGrab::HandGrabStateExtensions::GetVisualWristPose(::Oculus::Interaction::HandGrab::IHandGrabState* grabState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateExtensions::GetVisualWristPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabStateExtensions", "GetVisualWristPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabState)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, grabState);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabStateExtensions.GetTargetGrabPose
::UnityEngine::Pose Oculus::Interaction::HandGrab::HandGrabStateExtensions::GetTargetGrabPose(::Oculus::Interaction::HandGrab::IHandGrabState* grabState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabStateExtensions::GetTargetGrabPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabStateExtensions", "GetTargetGrabPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabState)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, grabState);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.PoseTravelData
#include "Oculus/Interaction/HandGrab/PoseTravelData.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: Oculus.Interaction.Tween
#include "Oculus/Interaction/Tween.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single DEGREES_TO_PERCEIVED_METERS
float Oculus::Interaction::HandGrab::PoseTravelData::_get_DEGREES_TO_PERCEIVED_METERS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::PoseTravelData::_get_DEGREES_TO_PERCEIVED_METERS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Interaction.HandGrab", "PoseTravelData", "DEGREES_TO_PERCEIVED_METERS"));
}
// Autogenerated static field setter
// Set static field: static private System.Single DEGREES_TO_PERCEIVED_METERS
void Oculus::Interaction::HandGrab::PoseTravelData::_set_DEGREES_TO_PERCEIVED_METERS(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::PoseTravelData::_set_DEGREES_TO_PERCEIVED_METERS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "PoseTravelData", "DEGREES_TO_PERCEIVED_METERS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _travelSpeed
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrab::PoseTravelData::dyn__travelSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::PoseTravelData::dyn__travelSpeed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_travelSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useFixedTravelTime
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::PoseTravelData::dyn__useFixedTravelTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::PoseTravelData::dyn__useFixedTravelTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useFixedTravelTime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _travelCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::HandGrab::PoseTravelData::dyn__travelCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::PoseTravelData::dyn__travelCurve");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_travelCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.PoseTravelData.get_DEFAULT
::Oculus::Interaction::HandGrab::PoseTravelData Oculus::Interaction::HandGrab::PoseTravelData::get_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::PoseTravelData::get_DEFAULT");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "PoseTravelData", "get_DEFAULT", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::PoseTravelData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.PoseTravelData.get_FAST
::Oculus::Interaction::HandGrab::PoseTravelData Oculus::Interaction::HandGrab::PoseTravelData::get_FAST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::PoseTravelData::get_FAST");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "PoseTravelData", "get_FAST", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::PoseTravelData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.PoseTravelData.CreateTween
::Oculus::Interaction::Tween* Oculus::Interaction::HandGrab::PoseTravelData::CreateTween(ByRef<::UnityEngine::Pose> from, ByRef<::UnityEngine::Pose> to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::PoseTravelData::CreateTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Tween*, false>(this, ___internal__method, byref(from), byref(to));
}
// Autogenerated method: Oculus.Interaction.HandGrab.PoseTravelData.PerceivedDistance
float Oculus::Interaction::HandGrab::PoseTravelData::PerceivedDistance(ByRef<::UnityEngine::Pose> from, ByRef<::UnityEngine::Pose> to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::PoseTravelData::PerceivedDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "PoseTravelData", "PerceivedDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(from), byref(to));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandGrabUseInteractable
#include "Oculus/Interaction/HandGrab/HandGrabUseInteractable.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabUseInteractor
#include "Oculus/Interaction/HandGrab/HandGrabUseInteractor.hpp"
// Including type: Oculus.Interaction.HandGrab.IHandGrabUseDelegate
#include "Oculus/Interaction/HandGrab/IHandGrabUseDelegate.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabPose
#include "Oculus/Interaction/HandGrab/HandGrabPose.hpp"
// Including type: Oculus.Interaction.HandGrab.HandPose
#include "Oculus/Interaction/HandGrab/HandPose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _handUseDelegate
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandGrab::HandGrabUseInteractable::dyn__handUseDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::dyn__handUseDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handUseDelegate"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.IHandGrabUseDelegate <HandUseDelegate>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::IHandGrabUseDelegate*& Oculus::Interaction::HandGrab::HandGrabUseInteractable::dyn_$HandUseDelegate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::dyn_$HandUseDelegate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HandUseDelegate>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::IHandGrabUseDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.GrabAPI.GrabbingRule _useFingers
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabAPI::GrabbingRule& Oculus::Interaction::HandGrab::HandGrabUseInteractable::dyn__useFingers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::dyn__useFingers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useFingers"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::GrabAPI::GrabbingRule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _strengthDeadzone
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrab::HandGrabUseInteractable::dyn__strengthDeadzone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::dyn__strengthDeadzone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strengthDeadzone"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.HandGrabPose> _relaxedHandGrabPoses
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>*& Oculus::Interaction::HandGrab::HandGrabUseInteractable::dyn__relaxedHandGrabPoses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::dyn__relaxedHandGrabPoses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relaxedHandGrabPoses"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.HandGrabPose> _tightHandGrabPoses
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>*& Oculus::Interaction::HandGrab::HandGrabUseInteractable::dyn__tightHandGrabPoses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::dyn__tightHandGrabPoses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tightHandGrabPoses"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <UseProgress>k__BackingField
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrab::HandGrabUseInteractable::dyn_$UseProgress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::dyn_$UseProgress$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UseProgress>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.get_HandUseDelegate
::Oculus::Interaction::HandGrab::IHandGrabUseDelegate* Oculus::Interaction::HandGrab::HandGrabUseInteractable::get_HandUseDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::get_HandUseDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HandUseDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::IHandGrabUseDelegate*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.set_HandUseDelegate
void Oculus::Interaction::HandGrab::HandGrabUseInteractable::set_HandUseDelegate(::Oculus::Interaction::HandGrab::IHandGrabUseDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::set_HandUseDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HandUseDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.get_UseFingers
::Oculus::Interaction::GrabAPI::GrabbingRule Oculus::Interaction::HandGrab::HandGrabUseInteractable::get_UseFingers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::get_UseFingers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseFingers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::GrabAPI::GrabbingRule, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.set_UseFingers
void Oculus::Interaction::HandGrab::HandGrabUseInteractable::set_UseFingers(::Oculus::Interaction::GrabAPI::GrabbingRule value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::set_UseFingers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseFingers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.get_StrengthDeadzone
float Oculus::Interaction::HandGrab::HandGrabUseInteractable::get_StrengthDeadzone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::get_StrengthDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StrengthDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.set_StrengthDeadzone
void Oculus::Interaction::HandGrab::HandGrabUseInteractable::set_StrengthDeadzone(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::set_StrengthDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StrengthDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.get_UseProgress
float Oculus::Interaction::HandGrab::HandGrabUseInteractable::get_UseProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::get_UseProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.set_UseProgress
void Oculus::Interaction::HandGrab::HandGrabUseInteractable::set_UseProgress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::set_UseProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.get_RelaxGrabPoints
::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>* Oculus::Interaction::HandGrab::HandGrabUseInteractable::get_RelaxGrabPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::get_RelaxGrabPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RelaxGrabPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.get_TightGrabPoints
::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>* Oculus::Interaction::HandGrab::HandGrabUseInteractable::get_TightGrabPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::get_TightGrabPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TightGrabPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.get_UseStrengthDeadZone
float Oculus::Interaction::HandGrab::HandGrabUseInteractable::get_UseStrengthDeadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::get_UseStrengthDeadZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseStrengthDeadZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.Reset
void Oculus::Interaction::HandGrab::HandGrabUseInteractable::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabUseInteractable*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.SelectingInteractorAdded
void Oculus::Interaction::HandGrab::HandGrabUseInteractable::SelectingInteractorAdded(::Oculus::Interaction::HandGrab::HandGrabUseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::SelectingInteractorAdded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabUseInteractable*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.SelectingInteractorRemoved
void Oculus::Interaction::HandGrab::HandGrabUseInteractable::SelectingInteractorRemoved(::Oculus::Interaction::HandGrab::HandGrabUseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::SelectingInteractorRemoved");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabUseInteractable*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.ComputeUseStrength
float Oculus::Interaction::HandGrab::HandGrabUseInteractable::ComputeUseStrength(float strength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::ComputeUseStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeUseStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strength)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, strength);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.FindBestHandPoses
bool Oculus::Interaction::HandGrab::HandGrabUseInteractable::FindBestHandPoses(float handScale, ByRef<::Oculus::Interaction::HandGrab::HandPose*> relaxedHandPose, ByRef<::Oculus::Interaction::HandGrab::HandPose*> tightHandPose, ByRef<float> score) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::FindBestHandPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindBestHandPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handScale), ::il2cpp_utils::ExtractType(relaxedHandPose), ::il2cpp_utils::ExtractType(tightHandPose), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handScale, byref(relaxedHandPose), byref(tightHandPose), byref(score));
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.FindScaledHandPose
bool Oculus::Interaction::HandGrab::HandGrabUseInteractable::FindScaledHandPose(::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>* _handGrabPoses, float handScale, ByRef<::Oculus::Interaction::HandGrab::HandPose*> handPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::FindScaledHandPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindScaledHandPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_handGrabPoses), ::il2cpp_utils::ExtractType(handScale), ::il2cpp_utils::ExtractType(handPose)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, _handGrabPoses, handScale, byref(handPose));
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.InjectOptionalForwardUseDelegate
void Oculus::Interaction::HandGrab::HandGrabUseInteractable::InjectOptionalForwardUseDelegate(::Oculus::Interaction::HandGrab::IHandGrabUseDelegate* useDelegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::InjectOptionalForwardUseDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalForwardUseDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useDelegate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, useDelegate);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.InjectOptionalRelaxedHandGrabPoints
void Oculus::Interaction::HandGrab::HandGrabUseInteractable::InjectOptionalRelaxedHandGrabPoints(::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>* relaxedHandGrabPoints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::InjectOptionalRelaxedHandGrabPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalRelaxedHandGrabPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relaxedHandGrabPoints)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relaxedHandGrabPoints);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.InjectOptionalTightHandGrabPoints
void Oculus::Interaction::HandGrab::HandGrabUseInteractable::InjectOptionalTightHandGrabPoints(::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::HandGrabPose*>* tightHandGrabPoints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::InjectOptionalTightHandGrabPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalTightHandGrabPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tightHandGrabPoints)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tightHandGrabPoints);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractable.Awake
void Oculus::Interaction::HandGrab::HandGrabUseInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactable_2<TInteractor, TInteractable>*), 31)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandGrabUseInteractor
#include "Oculus/Interaction/HandGrab/HandGrabUseInteractor.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabUseInteractor/<>c
#include "Oculus/Interaction/HandGrab/HandGrabUseInteractor_--c.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabUseInteractable
#include "Oculus/Interaction/HandGrab/HandGrabUseInteractable.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: Oculus.Interaction.IFingerUseAPI
#include "Oculus/Interaction/IFingerUseAPI.hpp"
// Including type: Oculus.Interaction.HandGrab.HandPose
#include "Oculus/Interaction/HandGrab/HandPose.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabTarget
#include "Oculus/Interaction/HandGrab/HandGrabTarget.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _useAPI
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__useAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__useAPI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useAPI"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IFingerUseAPI <UseAPI>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IFingerUseAPI*& Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn_$UseAPI$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn_$UseAPI$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UseAPI>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IFingerUseAPI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.HandPose _relaxedHandPose
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandPose*& Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__relaxedHandPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__relaxedHandPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relaxedHandPose"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandPose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.HandPose _tightHandPose
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandPose*& Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__tightHandPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__tightHandPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tightHandPose"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandPose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.HandPose _cachedRelaxedHandPose
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandPose*& Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__cachedRelaxedHandPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__cachedRelaxedHandPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedRelaxedHandPose"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandPose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.HandPose _cachedTightHandPose
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandPose*& Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__cachedTightHandPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__cachedTightHandPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedTightHandPose"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandPose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.HandFingerFlags _fingersInUse
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandFingerFlags& Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__fingersInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__fingersInUse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingersInUse"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandFingerFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _fingerUseStrength
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__fingerUseStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__fingerUseStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerUseStrength"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _usesHandPose
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__usesHandPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__usesHandPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_usesHandPose"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _handUseShouldSelect
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__handUseShouldSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__handUseShouldSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handUseShouldSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _handUseShouldUnselect
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__handUseShouldUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn__handUseShouldUnselect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handUseShouldUnselect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.HandGrab.HandGrabTarget <HandGrabTarget>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabTarget*& Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn_$HandGrabTarget$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn_$HandGrabTarget$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HandGrabTarget>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandGrabTarget**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Oculus.Interaction.HandGrab.IHandGrabState> <WhenHandGrabStarted>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::HandGrab::IHandGrabState*>*& Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn_$WhenHandGrabStarted$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn_$WhenHandGrabStarted$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WhenHandGrabStarted>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::HandGrab::IHandGrabState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Oculus.Interaction.HandGrab.IHandGrabState> <WhenHandGrabEnded>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::HandGrab::IHandGrabState*>*& Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn_$WhenHandGrabEnded$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::dyn_$WhenHandGrabEnded$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WhenHandGrabEnded>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::HandGrab::IHandGrabState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::HandGrab::HandGrabUseInteractor::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.set_Hand
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.get_UseAPI
::Oculus::Interaction::IFingerUseAPI* Oculus::Interaction::HandGrab::HandGrabUseInteractor::get_UseAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::get_UseAPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseAPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IFingerUseAPI*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.set_UseAPI
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::set_UseAPI(::Oculus::Interaction::IFingerUseAPI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::set_UseAPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseAPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.get_HandGrabTarget
::Oculus::Interaction::HandGrab::HandGrabTarget* Oculus::Interaction::HandGrab::HandGrabUseInteractor::get_HandGrabTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::get_HandGrabTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabUseInteractor*), 77));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandGrabTarget*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.get_IsGrabbing
bool Oculus::Interaction::HandGrab::HandGrabUseInteractor::get_IsGrabbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::get_IsGrabbing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabUseInteractor*), 73));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.get_WristStrength
float Oculus::Interaction::HandGrab::HandGrabUseInteractor::get_WristStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::get_WristStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabUseInteractor*), 75));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.get_FingersStrength
float Oculus::Interaction::HandGrab::HandGrabUseInteractor::get_FingersStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::get_FingersStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabUseInteractor*), 74));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.get_WristToGrabPoseOffset
::UnityEngine::Pose Oculus::Interaction::HandGrab::HandGrabUseInteractor::get_WristToGrabPoseOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::get_WristToGrabPoseOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabUseInteractor*), 76));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.get_WhenHandGrabStarted
::System::Action_1<::Oculus::Interaction::HandGrab::IHandGrabState*>* Oculus::Interaction::HandGrab::HandGrabUseInteractor::get_WhenHandGrabStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::get_WhenHandGrabStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenHandGrabStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action_1<::Oculus::Interaction::HandGrab::IHandGrabState*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.set_WhenHandGrabStarted
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::set_WhenHandGrabStarted(::System::Action_1<::Oculus::Interaction::HandGrab::IHandGrabState*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::set_WhenHandGrabStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WhenHandGrabStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.get_WhenHandGrabEnded
::System::Action_1<::Oculus::Interaction::HandGrab::IHandGrabState*>* Oculus::Interaction::HandGrab::HandGrabUseInteractor::get_WhenHandGrabEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::get_WhenHandGrabEnded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenHandGrabEnded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action_1<::Oculus::Interaction::HandGrab::IHandGrabState*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.set_WhenHandGrabEnded
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::set_WhenHandGrabEnded(::System::Action_1<::Oculus::Interaction::HandGrab::IHandGrabState*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::set_WhenHandGrabEnded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WhenHandGrabEnded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.InteractableSelected
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::InteractableSelected(::Oculus::Interaction::HandGrab::HandGrabUseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::InteractableSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabUseInteractor*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.InteractableUnselected
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::InteractableUnselected(::Oculus::Interaction::HandGrab::HandGrabUseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::InteractableUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabUseInteractor*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.StartUsing
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::StartUsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::StartUsing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartUsing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.IsUsingInteractable
bool Oculus::Interaction::HandGrab::HandGrabUseInteractor::IsUsingInteractable(::Oculus::Interaction::HandGrab::HandGrabUseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::IsUsingInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsUsingInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.CalculateUseStrength
float Oculus::Interaction::HandGrab::HandGrabUseInteractor::CalculateUseStrength(ByRef<::ArrayW<float>> fingerUseStrength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::CalculateUseStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateUseStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fingerUseStrength)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, byref(fingerUseStrength));
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.MoveFingers
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::MoveFingers(ByRef<::ArrayW<float>> fingerUseProgress, float useProgress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::MoveFingers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveFingers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fingerUseProgress), ::il2cpp_utils::ExtractType(useProgress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(fingerUseProgress), useProgress);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.MarkFingerInUse
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::MarkFingerInUse(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::MarkFingerInUse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkFingerInUse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.UnmarkFingerInUse
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::UnmarkFingerInUse(::Oculus::Interaction::Input::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::UnmarkFingerInUse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnmarkFingerInUse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finger);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.LerpFingerRotation
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::LerpFingerRotation(::ArrayW<::UnityEngine::Quaternion> from, ::ArrayW<::UnityEngine::Quaternion> to, ::ArrayW<::UnityEngine::Quaternion> result, ::Oculus::Interaction::Input::HandFinger finger, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::LerpFingerRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LerpFingerRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(finger), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to, result, finger, t);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.GrabbingFingers
::Oculus::Interaction::Input::HandFingerFlags Oculus::Interaction::HandGrab::HandGrabUseInteractor::GrabbingFingers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::GrabbingFingers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabUseInteractor*), 78));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandFingerFlags, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.ComputeCandidate
::Oculus::Interaction::HandGrab::HandGrabUseInteractable* Oculus::Interaction::HandGrab::HandGrabUseInteractor::ComputeCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::ComputeCandidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::HandGrabUseInteractor*), 64));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandGrabUseInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.InjectAllHandGrabUseInteractor
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::InjectAllHandGrabUseInteractor(::Oculus::Interaction::IFingerUseAPI* useApi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::InjectAllHandGrabUseInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandGrabUseInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useApi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, useApi);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.InjectUseApi
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::InjectUseApi(::Oculus::Interaction::IFingerUseAPI* useApi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::InjectUseApi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectUseApi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useApi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, useApi);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.InjectOptionalHand
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::InjectOptionalHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::InjectOptionalHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.ComputeShouldSelect
bool Oculus::Interaction::HandGrab::HandGrabUseInteractor::ComputeShouldSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::ComputeShouldSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 43)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.ComputeShouldUnselect
bool Oculus::Interaction::HandGrab::HandGrabUseInteractor::ComputeShouldUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::ComputeShouldUnselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 44)));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.Awake
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 50)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.Start
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 51)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.DoHoverUpdate
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::DoHoverUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::DoHoverUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 38)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor.DoSelectUpdate
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::DoSelectUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::DoSelectUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Interactor_2<TInteractor, TInteractable>*), 39)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.HandGrabUseInteractor/<>c
#include "Oculus/Interaction/HandGrab/HandGrabUseInteractor_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Oculus.Interaction.HandGrab.IHandGrabState
#include "Oculus/Interaction/HandGrab/IHandGrabState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.HandGrab.HandGrabUseInteractor/<>c <>9
::Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c* Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c*>("Oculus.Interaction.HandGrab", "HandGrabUseInteractor/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.HandGrab.HandGrabUseInteractor/<>c <>9
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c::_set_$$9(::Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "HandGrabUseInteractor/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Oculus.Interaction.HandGrab.IHandGrabState> <>9__58_0
::System::Action_1<::Oculus::Interaction::HandGrab::IHandGrabState*>* Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c::_get_$$9__58_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c::_get_$$9__58_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::HandGrab::IHandGrabState*>*>("Oculus.Interaction.HandGrab", "HandGrabUseInteractor/<>c", "<>9__58_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Oculus.Interaction.HandGrab.IHandGrabState> <>9__58_0
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c::_set_$$9__58_0(::System::Action_1<::Oculus::Interaction::HandGrab::IHandGrabState*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c::_set_$$9__58_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "HandGrabUseInteractor/<>c", "<>9__58_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Oculus.Interaction.HandGrab.IHandGrabState> <>9__58_1
::System::Action_1<::Oculus::Interaction::HandGrab::IHandGrabState*>* Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c::_get_$$9__58_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c::_get_$$9__58_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::HandGrab::IHandGrabState*>*>("Oculus.Interaction.HandGrab", "HandGrabUseInteractor/<>c", "<>9__58_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Oculus.Interaction.HandGrab.IHandGrabState> <>9__58_1
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c::_set_$$9__58_1(::System::Action_1<::Oculus::Interaction::HandGrab::IHandGrabState*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c::_set_$$9__58_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "HandGrabUseInteractor/<>c", "<>9__58_1", value)));
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor/<>c..cctor
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "HandGrabUseInteractor/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor/<>c.<.ctor>b__58_0
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c::$_ctor$b__58_0(::Oculus::Interaction::HandGrab::IHandGrabState* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c::<.ctor>b__58_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__58_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated method: Oculus.Interaction.HandGrab.HandGrabUseInteractor/<>c.<.ctor>b__58_1
void Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c::$_ctor$b__58_1(::Oculus::Interaction::HandGrab::IHandGrabState* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::HandGrabUseInteractor::$$c::<.ctor>b__58_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__58_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.IHandGrabUseDelegate
#include "Oculus/Interaction/HandGrab/IHandGrabUseDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabUseDelegate.BeginUse
void Oculus::Interaction::HandGrab::IHandGrabUseDelegate::BeginUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabUseDelegate::BeginUse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabUseDelegate*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabUseDelegate.EndUse
void Oculus::Interaction::HandGrab::IHandGrabUseDelegate::EndUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabUseDelegate::EndUse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabUseDelegate*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.IHandGrabUseDelegate.ComputeUseStrength
float Oculus::Interaction::HandGrab::IHandGrabUseDelegate::ComputeUseStrength(float strength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::IHandGrabUseDelegate::ComputeUseStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::IHandGrabUseDelegate*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, strength);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.AutoMoveTowardsTargetProvider
#include "Oculus/Interaction/HandGrab/AutoMoveTowardsTargetProvider.hpp"
// Including type: Oculus.Interaction.IPointableElement
#include "Oculus/Interaction/IPointableElement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget
#include "Oculus/Interaction/HandGrab/AutoMoveTowardsTarget.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.PoseTravelData _travellingData
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::PoseTravelData& Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::dyn__travellingData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::dyn__travellingData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_travellingData"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::PoseTravelData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _pointableElement
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::dyn__pointableElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::dyn__pointableElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointableElement"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IPointableElement <PointableElement>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IPointableElement*& Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::dyn_$PointableElement$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::dyn_$PointableElement$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PointableElement>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IPointableElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.AutoMoveTowardsTarget> _movers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*>*& Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::dyn__movers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::dyn__movers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTargetProvider.get_TravellingData
::Oculus::Interaction::HandGrab::PoseTravelData Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::get_TravellingData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::get_TravellingData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TravellingData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::PoseTravelData, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTargetProvider.set_TravellingData
void Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::set_TravellingData(::Oculus::Interaction::HandGrab::PoseTravelData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::set_TravellingData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TravellingData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTargetProvider.get_PointableElement
::Oculus::Interaction::IPointableElement* Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::get_PointableElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::get_PointableElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PointableElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IPointableElement*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTargetProvider.set_PointableElement
void Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::set_PointableElement(::Oculus::Interaction::IPointableElement* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::set_PointableElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PointableElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTargetProvider.Awake
void Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTargetProvider.Start
void Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTargetProvider.LateUpdate
void Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTargetProvider.CreateMovement
::Oculus::Interaction::IMovement* Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::CreateMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::CreateMovement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovement*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTargetProvider.HandleAborted
void Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::HandleAborted(::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget* mover) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::HandleAborted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAborted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mover)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mover);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTargetProvider.InjectAllAutoMoveTowardsTargetProvider
void Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::InjectAllAutoMoveTowardsTargetProvider(::Oculus::Interaction::IPointableElement* pointableElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::InjectAllAutoMoveTowardsTargetProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllAutoMoveTowardsTargetProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointableElement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointableElement);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTargetProvider.InjectPointableElement
void Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::InjectPointableElement(::Oculus::Interaction::IPointableElement* pointableElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTargetProvider::InjectPointableElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPointableElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointableElement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointableElement);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget
#include "Oculus/Interaction/HandGrab/AutoMoveTowardsTarget.hpp"
// Including type: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget/<>c
#include "Oculus/Interaction/HandGrab/AutoMoveTowardsTarget_--c.hpp"
// Including type: Oculus.Interaction.IPointableElement
#include "Oculus/Interaction/IPointableElement.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Oculus.Interaction.UniqueIdentifier
#include "Oculus/Interaction/UniqueIdentifier.hpp"
// Including type: Oculus.Interaction.Tween
#include "Oculus/Interaction/Tween.hpp"
// Including type: Oculus.Interaction.PointerEvent
#include "Oculus/Interaction/PointerEvent.hpp"
// Including type: Oculus.Interaction.PointerEventType
#include "Oculus/Interaction/PointerEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.PoseTravelData _travellingData
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::PoseTravelData& Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::dyn__travellingData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::dyn__travellingData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_travellingData"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::PoseTravelData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IPointableElement _pointableElement
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IPointableElement*& Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::dyn__pointableElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::dyn__pointableElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointableElement"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IPointableElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Aborting>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::dyn_$Aborting$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::dyn_$Aborting$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Aborting>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Oculus.Interaction.HandGrab.AutoMoveTowardsTarget> WhenAborted
[[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*>*& Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::dyn_WhenAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::dyn_WhenAborted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenAborted"))->offset;
  return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.UniqueIdentifier _identifier
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::UniqueIdentifier*& Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::dyn__identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::dyn__identifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_identifier"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::UniqueIdentifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Tween _tween
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Tween*& Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::dyn__tween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::dyn__tween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tween"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Tween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _target
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::dyn__target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::dyn__target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_target"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _source
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::dyn__source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::dyn__source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_source"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _eventRegistered
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::dyn__eventRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::dyn__eventRegistered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventRegistered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget.get_Pose
::UnityEngine::Pose Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::get_Pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::get_Pose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget.get_Stopped
bool Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::get_Stopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::get_Stopped");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget.get_Aborting
bool Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::get_Aborting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::get_Aborting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Aborting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget.set_Aborting
void Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::set_Aborting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::set_Aborting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Aborting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget.get_Identifier
int Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::get_Identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::get_Identifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Identifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget.MoveTo
void Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::MoveTo(::UnityEngine::Pose target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::MoveTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget.UpdateTarget
void Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::UpdateTarget(::UnityEngine::Pose target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::UpdateTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget.StopAndSetPose
void Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::StopAndSetPose(::UnityEngine::Pose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::StopAndSetPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pose);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget.Tick
void Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::Tick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget.HandlePointerEventRaised
void Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::HandlePointerEventRaised(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::HandlePointerEventRaised");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePointerEventRaised", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget.AbortSelfAligment
void Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::AbortSelfAligment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::AbortSelfAligment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbortSelfAligment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget.GeneratePointerEvent
void Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::GeneratePointerEvent(::Oculus::Interaction::PointerEventType pointerEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::GeneratePointerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GeneratePointerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerEventType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget/<>c
#include "Oculus/Interaction/HandGrab/AutoMoveTowardsTarget_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.HandGrab.AutoMoveTowardsTarget/<>c <>9
::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::$$c* Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::$$c*>("Oculus.Interaction.HandGrab", "AutoMoveTowardsTarget/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.HandGrab.AutoMoveTowardsTarget/<>c <>9
void Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::$$c::_set_$$9(::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "AutoMoveTowardsTarget/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Oculus.Interaction.HandGrab.AutoMoveTowardsTarget> <>9__18_0
::System::Action_1<::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*>* Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::$$c::_get_$$9__18_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::$$c::_get_$$9__18_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*>*>("Oculus.Interaction.HandGrab", "AutoMoveTowardsTarget/<>c", "<>9__18_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Oculus.Interaction.HandGrab.AutoMoveTowardsTarget> <>9__18_0
void Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::$$c::_set_$$9__18_0(::System::Action_1<::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::$$c::_set_$$9__18_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "AutoMoveTowardsTarget/<>c", "<>9__18_0", value)));
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget/<>c..cctor
void Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.HandGrab", "AutoMoveTowardsTarget/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.AutoMoveTowardsTarget/<>c.<.ctor>b__18_0
void Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::$$c::$_ctor$b__18_0(::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::AutoMoveTowardsTarget::$$c::<.ctor>b__18_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__18_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.FollowTargetProvider
#include "Oculus/Interaction/HandGrab/FollowTargetProvider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _speed
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrab::FollowTargetProvider::dyn__speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTargetProvider::dyn__speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _space
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::HandGrab::FollowTargetProvider::dyn__space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTargetProvider::dyn__space");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_space"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.FollowTargetProvider.Awake
void Oculus::Interaction::HandGrab::FollowTargetProvider::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTargetProvider::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.FollowTargetProvider.CreateMovement
::Oculus::Interaction::IMovement* Oculus::Interaction::HandGrab::FollowTargetProvider::CreateMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTargetProvider::CreateMovement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::FollowTargetProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovement*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.FollowTarget
#include "Oculus/Interaction/HandGrab/FollowTarget.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single ROTATION_SPEED_FACTOR
float Oculus::Interaction::HandGrab::FollowTarget::_get_ROTATION_SPEED_FACTOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTarget::_get_ROTATION_SPEED_FACTOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Interaction.HandGrab", "FollowTarget", "ROTATION_SPEED_FACTOR"));
}
// Autogenerated static field setter
// Set static field: static private System.Single ROTATION_SPEED_FACTOR
void Oculus::Interaction::HandGrab::FollowTarget::_set_ROTATION_SPEED_FACTOR(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTarget::_set_ROTATION_SPEED_FACTOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.HandGrab", "FollowTarget", "ROTATION_SPEED_FACTOR", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _speed
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrab::FollowTarget::dyn__speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTarget::dyn__speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _space
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::HandGrab::FollowTarget::dyn__space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTarget::dyn__space");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_space"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _localTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::HandGrab::FollowTarget::dyn__localTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTarget::dyn__localTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _localPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::HandGrab::FollowTarget::dyn__localPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTarget::dyn__localPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrab::FollowTarget::dyn__startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTarget::dyn__startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.FollowTarget.get_Pose
::UnityEngine::Pose Oculus::Interaction::HandGrab::FollowTarget::get_Pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTarget::get_Pose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::FollowTarget*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.FollowTarget.get_Stopped
bool Oculus::Interaction::HandGrab::FollowTarget::get_Stopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTarget::get_Stopped");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::FollowTarget*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.FollowTarget.ToLocal
::UnityEngine::Pose Oculus::Interaction::HandGrab::FollowTarget::ToLocal(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTarget::ToLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.HandGrab.FollowTarget.ToWorld
::UnityEngine::Pose Oculus::Interaction::HandGrab::FollowTarget::ToWorld(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTarget::ToWorld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToWorld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.HandGrab.FollowTarget.MoveTo
void Oculus::Interaction::HandGrab::FollowTarget::MoveTo(::UnityEngine::Pose target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTarget::MoveTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::FollowTarget*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: Oculus.Interaction.HandGrab.FollowTarget.UpdateTarget
void Oculus::Interaction::HandGrab::FollowTarget::UpdateTarget(::UnityEngine::Pose target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTarget::UpdateTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::FollowTarget*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: Oculus.Interaction.HandGrab.FollowTarget.StopAndSetPose
void Oculus::Interaction::HandGrab::FollowTarget::StopAndSetPose(::UnityEngine::Pose source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTarget::StopAndSetPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::FollowTarget*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: Oculus.Interaction.HandGrab.FollowTarget.Tick
void Oculus::Interaction::HandGrab::FollowTarget::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::FollowTarget::Tick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::FollowTarget*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.MoveAtSourceProvider
#include "Oculus/Interaction/HandGrab/MoveAtSourceProvider.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.HandGrab.MoveAtSourceProvider.CreateMovement
::Oculus::Interaction::IMovement* Oculus::Interaction::HandGrab::MoveAtSourceProvider::CreateMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::MoveAtSourceProvider::CreateMovement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::MoveAtSourceProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovement*, false>(this, ___internal__method);
}
