// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.WebSockets.WebSocketHandle/<ConnectSocketAsync>d__27
#include "System/Net/WebSockets/WebSocketHandle_-ConnectSocketAsync-d__27.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Net.Sockets.Socket> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Net::Sockets::Socket*>& System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Net::Sockets::Socket*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String host
[[deprecated("Use field access instead!")]] ::StringW& System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_host");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "host"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.WebSockets.WebSocketHandle <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::WebSockets::WebSocketHandle*& System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::WebSockets::WebSocketHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 port
[[deprecated("Use field access instead!")]] int& System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_port");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<System.Net.IPAddress[]> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::ArrayW<::System::Net::IPAddress*>>::ConfiguredTaskAwaiter& System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::ArrayW<::System::Net::IPAddress*>>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IPAddress[] <>7__wrap1
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Net::IPAddress*>& System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$$7__wrap1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Net::IPAddress*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>7__wrap2
[[deprecated("Use field access instead!")]] int& System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$$7__wrap2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.Socket <socket>5__4
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::Socket*& System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$socket$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$socket$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<socket>5__4"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::Socket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenRegistration <>7__wrap4
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenRegistration& System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$$7__wrap4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$$7__wrap4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap4"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenRegistration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenRegistration <>7__wrap5
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenRegistration& System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$$7__wrap5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$$7__wrap5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap5"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenRegistration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/ConfiguredTaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.WebSockets.WebSocketHandle/<ConnectSocketAsync>d__27.MoveNext
void System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebSockets.WebSocketHandle/<ConnectSocketAsync>d__27.SetStateMachine
void System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Net::WebSockets::WebSocketHandle::$ConnectSocketAsync$d__27), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.WebSockets.WebSocketHandle/<>c__DisplayClass30_0
#include "System/Net/WebSockets/WebSocketHandle_--c__DisplayClass30_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String headerValue
[[deprecated("Use field access instead!")]] ::StringW& System::Net::WebSockets::WebSocketHandle::$$c__DisplayClass30_0::dyn_headerValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$$c__DisplayClass30_0::dyn_headerValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headerValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.WebSockets.WebSocketHandle/<>c__DisplayClass30_0.<ParseAndValidateConnectResponseAsync>b__0
bool System::Net::WebSockets::WebSocketHandle::$$c__DisplayClass30_0::$ParseAndValidateConnectResponseAsync$b__0(::StringW requested) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$$c__DisplayClass30_0::<ParseAndValidateConnectResponseAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ParseAndValidateConnectResponseAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requested)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, requested);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.WebSockets.WebSocketHandle/<ParseAndValidateConnectResponseAsync>d__30
#include "System/Net/WebSockets/WebSocketHandle_-ParseAndValidateConnectResponseAsync-d__30.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.WebSockets.ClientWebSocketOptions
#include "System/Net/WebSockets/ClientWebSocketOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.String> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>& System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.Stream stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_stream");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String expectedSecWebSocketAccept
[[deprecated("Use field access instead!")]] ::StringW& System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_expectedSecWebSocketAccept() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_expectedSecWebSocketAccept");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expectedSecWebSocketAccept"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.WebSockets.ClientWebSocketOptions options
[[deprecated("Use field access instead!")]] ::System::Net::WebSockets::ClientWebSocketOptions*& System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_options");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "options"))->offset;
  return *reinterpret_cast<::System::Net::WebSockets::ClientWebSocketOptions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <foundUpgrade>5__2
[[deprecated("Use field access instead!")]] bool& System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_$foundUpgrade$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_$foundUpgrade$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<foundUpgrade>5__2"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <foundConnection>5__3
[[deprecated("Use field access instead!")]] bool& System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_$foundConnection$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_$foundConnection$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<foundConnection>5__3"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <foundSecWebSocketAccept>5__4
[[deprecated("Use field access instead!")]] bool& System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_$foundSecWebSocketAccept$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_$foundSecWebSocketAccept$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<foundSecWebSocketAccept>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <subprotocol>5__5
[[deprecated("Use field access instead!")]] ::StringW& System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_$subprotocol$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_$subprotocol$5__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<subprotocol>5__5"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<System.String> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::StringW>::ConfiguredTaskAwaiter& System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::StringW>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.WebSockets.WebSocketHandle/<ParseAndValidateConnectResponseAsync>d__30.MoveNext
void System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebSockets.WebSocketHandle/<ParseAndValidateConnectResponseAsync>d__30.SetStateMachine
void System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Net::WebSockets::WebSocketHandle::$ParseAndValidateConnectResponseAsync$d__30), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.WebSockets.WebSocketHandle/<ReadResponseHeaderLineAsync>d__32
#include "System/Net/WebSockets/WebSocketHandle_-ReadResponseHeaderLineAsync-d__32.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.String> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>& System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.Stream stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::dyn_stream");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder <sb>5__2
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::dyn_$sb$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::dyn_$sb$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sb>5__2"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <arr>5__3
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::dyn_$arr$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::dyn_$arr$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<arr>5__3"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char <prevChar>5__4
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::dyn_$prevChar$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::dyn_$prevChar$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<prevChar>5__4"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<System.Int32> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter& System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.WebSockets.WebSocketHandle/<ReadResponseHeaderLineAsync>d__32.MoveNext
void System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebSockets.WebSocketHandle/<ReadResponseHeaderLineAsync>d__32.SetStateMachine
void System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Net::WebSockets::WebSocketHandle::$ReadResponseHeaderLineAsync$d__32), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.WebSockets.WebSocket
#include "System/Net/WebSockets/WebSocket.hpp"
// Including type: System.Net.WebSockets.WebSocketState
#include "System/Net/WebSockets/WebSocketState.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Net.WebSockets.WebSocketCloseStatus
#include "System/Net/WebSockets/WebSocketCloseStatus.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.WebSockets.WebSocketReceiveResult
#include "System/Net/WebSockets/WebSocketReceiveResult.hpp"
// Including type: System.ArraySegment`1
#include "System/ArraySegment_1.hpp"
// Including type: System.Net.WebSockets.WebSocketMessageType
#include "System/Net/WebSockets/WebSocketMessageType.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.WebSockets.WebSocket.get_CloseStatusDescription
::StringW System::Net::WebSockets::WebSocket::get_CloseStatusDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocket::get_CloseStatusDescription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebSockets::WebSocket*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebSockets.WebSocket.get_State
::System::Net::WebSockets::WebSocketState System::Net::WebSockets::WebSocket::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocket::get_State");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebSockets::WebSocket*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebSockets::WebSocketState, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebSockets.WebSocket.Abort
void System::Net::WebSockets::WebSocket::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocket::Abort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebSockets::WebSocket*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebSockets.WebSocket.CloseOutputAsync
::System::Threading::Tasks::Task* System::Net::WebSockets::WebSocket::CloseOutputAsync(::System::Net::WebSockets::WebSocketCloseStatus closeStatus, ::StringW statusDescription, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocket::CloseOutputAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebSockets::WebSocket*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, closeStatus, statusDescription, cancellationToken);
}
// Autogenerated method: System.Net.WebSockets.WebSocket.Dispose
void System::Net::WebSockets::WebSocket::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocket::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebSockets::WebSocket*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebSockets.WebSocket.ReceiveAsync
::System::Threading::Tasks::Task_1<::System::Net::WebSockets::WebSocketReceiveResult*>* System::Net::WebSockets::WebSocket::ReceiveAsync(::System::ArraySegment_1<uint8_t> buffer, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocket::ReceiveAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebSockets::WebSocket*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::WebSockets::WebSocketReceiveResult*>*, false>(this, ___internal__method, buffer, cancellationToken);
}
// Autogenerated method: System.Net.WebSockets.WebSocket.SendAsync
::System::Threading::Tasks::Task* System::Net::WebSockets::WebSocket::SendAsync(::System::ArraySegment_1<uint8_t> buffer, ::System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocket::SendAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebSockets::WebSocket*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, messageType, endOfMessage, cancellationToken);
}
// Autogenerated method: System.Net.WebSockets.WebSocket.get_DefaultKeepAliveInterval
::System::TimeSpan System::Net::WebSockets::WebSocket::get_DefaultKeepAliveInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocket::get_DefaultKeepAliveInterval");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.WebSockets", "WebSocket", "get_DefaultKeepAliveInterval", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.WebSockets.WebSocket.CreateClientWebSocket
::System::Net::WebSockets::WebSocket* System::Net::WebSockets::WebSocket::CreateClientWebSocket(::System::IO::Stream* innerStream, ::StringW subProtocol, int receiveBufferSize, int sendBufferSize, ::System::TimeSpan keepAliveInterval, bool useZeroMaskingKey, ::System::ArraySegment_1<uint8_t> internalBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocket::CreateClientWebSocket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.WebSockets", "WebSocket", "CreateClientWebSocket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerStream), ::il2cpp_utils::ExtractType(subProtocol), ::il2cpp_utils::ExtractType(receiveBufferSize), ::il2cpp_utils::ExtractType(sendBufferSize), ::il2cpp_utils::ExtractType(keepAliveInterval), ::il2cpp_utils::ExtractType(useZeroMaskingKey), ::il2cpp_utils::ExtractType(internalBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebSockets::WebSocket*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, innerStream, subProtocol, receiveBufferSize, sendBufferSize, keepAliveInterval, useZeroMaskingKey, internalBuffer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.WebSockets.WebSocketCloseStatus
#include "System/Net/WebSockets/WebSocketCloseStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketCloseStatus NormalClosure
::System::Net::WebSockets::WebSocketCloseStatus System::Net::WebSockets::WebSocketCloseStatus::_get_NormalClosure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_get_NormalClosure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketCloseStatus>("System.Net.WebSockets", "WebSocketCloseStatus", "NormalClosure"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketCloseStatus NormalClosure
void System::Net::WebSockets::WebSocketCloseStatus::_set_NormalClosure(::System::Net::WebSockets::WebSocketCloseStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_set_NormalClosure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketCloseStatus", "NormalClosure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketCloseStatus EndpointUnavailable
::System::Net::WebSockets::WebSocketCloseStatus System::Net::WebSockets::WebSocketCloseStatus::_get_EndpointUnavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_get_EndpointUnavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketCloseStatus>("System.Net.WebSockets", "WebSocketCloseStatus", "EndpointUnavailable"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketCloseStatus EndpointUnavailable
void System::Net::WebSockets::WebSocketCloseStatus::_set_EndpointUnavailable(::System::Net::WebSockets::WebSocketCloseStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_set_EndpointUnavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketCloseStatus", "EndpointUnavailable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketCloseStatus ProtocolError
::System::Net::WebSockets::WebSocketCloseStatus System::Net::WebSockets::WebSocketCloseStatus::_get_ProtocolError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_get_ProtocolError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketCloseStatus>("System.Net.WebSockets", "WebSocketCloseStatus", "ProtocolError"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketCloseStatus ProtocolError
void System::Net::WebSockets::WebSocketCloseStatus::_set_ProtocolError(::System::Net::WebSockets::WebSocketCloseStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_set_ProtocolError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketCloseStatus", "ProtocolError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketCloseStatus InvalidMessageType
::System::Net::WebSockets::WebSocketCloseStatus System::Net::WebSockets::WebSocketCloseStatus::_get_InvalidMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_get_InvalidMessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketCloseStatus>("System.Net.WebSockets", "WebSocketCloseStatus", "InvalidMessageType"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketCloseStatus InvalidMessageType
void System::Net::WebSockets::WebSocketCloseStatus::_set_InvalidMessageType(::System::Net::WebSockets::WebSocketCloseStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_set_InvalidMessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketCloseStatus", "InvalidMessageType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketCloseStatus Empty
::System::Net::WebSockets::WebSocketCloseStatus System::Net::WebSockets::WebSocketCloseStatus::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketCloseStatus>("System.Net.WebSockets", "WebSocketCloseStatus", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketCloseStatus Empty
void System::Net::WebSockets::WebSocketCloseStatus::_set_Empty(::System::Net::WebSockets::WebSocketCloseStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketCloseStatus", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketCloseStatus InvalidPayloadData
::System::Net::WebSockets::WebSocketCloseStatus System::Net::WebSockets::WebSocketCloseStatus::_get_InvalidPayloadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_get_InvalidPayloadData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketCloseStatus>("System.Net.WebSockets", "WebSocketCloseStatus", "InvalidPayloadData"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketCloseStatus InvalidPayloadData
void System::Net::WebSockets::WebSocketCloseStatus::_set_InvalidPayloadData(::System::Net::WebSockets::WebSocketCloseStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_set_InvalidPayloadData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketCloseStatus", "InvalidPayloadData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketCloseStatus PolicyViolation
::System::Net::WebSockets::WebSocketCloseStatus System::Net::WebSockets::WebSocketCloseStatus::_get_PolicyViolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_get_PolicyViolation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketCloseStatus>("System.Net.WebSockets", "WebSocketCloseStatus", "PolicyViolation"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketCloseStatus PolicyViolation
void System::Net::WebSockets::WebSocketCloseStatus::_set_PolicyViolation(::System::Net::WebSockets::WebSocketCloseStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_set_PolicyViolation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketCloseStatus", "PolicyViolation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketCloseStatus MessageTooBig
::System::Net::WebSockets::WebSocketCloseStatus System::Net::WebSockets::WebSocketCloseStatus::_get_MessageTooBig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_get_MessageTooBig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketCloseStatus>("System.Net.WebSockets", "WebSocketCloseStatus", "MessageTooBig"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketCloseStatus MessageTooBig
void System::Net::WebSockets::WebSocketCloseStatus::_set_MessageTooBig(::System::Net::WebSockets::WebSocketCloseStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_set_MessageTooBig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketCloseStatus", "MessageTooBig", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketCloseStatus MandatoryExtension
::System::Net::WebSockets::WebSocketCloseStatus System::Net::WebSockets::WebSocketCloseStatus::_get_MandatoryExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_get_MandatoryExtension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketCloseStatus>("System.Net.WebSockets", "WebSocketCloseStatus", "MandatoryExtension"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketCloseStatus MandatoryExtension
void System::Net::WebSockets::WebSocketCloseStatus::_set_MandatoryExtension(::System::Net::WebSockets::WebSocketCloseStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_set_MandatoryExtension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketCloseStatus", "MandatoryExtension", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketCloseStatus InternalServerError
::System::Net::WebSockets::WebSocketCloseStatus System::Net::WebSockets::WebSocketCloseStatus::_get_InternalServerError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_get_InternalServerError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketCloseStatus>("System.Net.WebSockets", "WebSocketCloseStatus", "InternalServerError"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketCloseStatus InternalServerError
void System::Net::WebSockets::WebSocketCloseStatus::_set_InternalServerError(::System::Net::WebSockets::WebSocketCloseStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::_set_InternalServerError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketCloseStatus", "InternalServerError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::WebSockets::WebSocketCloseStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketCloseStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.WebSockets.WebSocketError
#include "System/Net/WebSockets/WebSocketError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketError Success
::System::Net::WebSockets::WebSocketError System::Net::WebSockets::WebSocketError::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketError>("System.Net.WebSockets", "WebSocketError", "Success"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketError Success
void System::Net::WebSockets::WebSocketError::_set_Success(::System::Net::WebSockets::WebSocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketError", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketError InvalidMessageType
::System::Net::WebSockets::WebSocketError System::Net::WebSockets::WebSocketError::_get_InvalidMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_get_InvalidMessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketError>("System.Net.WebSockets", "WebSocketError", "InvalidMessageType"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketError InvalidMessageType
void System::Net::WebSockets::WebSocketError::_set_InvalidMessageType(::System::Net::WebSockets::WebSocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_set_InvalidMessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketError", "InvalidMessageType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketError Faulted
::System::Net::WebSockets::WebSocketError System::Net::WebSockets::WebSocketError::_get_Faulted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_get_Faulted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketError>("System.Net.WebSockets", "WebSocketError", "Faulted"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketError Faulted
void System::Net::WebSockets::WebSocketError::_set_Faulted(::System::Net::WebSockets::WebSocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_set_Faulted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketError", "Faulted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketError NativeError
::System::Net::WebSockets::WebSocketError System::Net::WebSockets::WebSocketError::_get_NativeError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_get_NativeError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketError>("System.Net.WebSockets", "WebSocketError", "NativeError"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketError NativeError
void System::Net::WebSockets::WebSocketError::_set_NativeError(::System::Net::WebSockets::WebSocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_set_NativeError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketError", "NativeError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketError NotAWebSocket
::System::Net::WebSockets::WebSocketError System::Net::WebSockets::WebSocketError::_get_NotAWebSocket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_get_NotAWebSocket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketError>("System.Net.WebSockets", "WebSocketError", "NotAWebSocket"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketError NotAWebSocket
void System::Net::WebSockets::WebSocketError::_set_NotAWebSocket(::System::Net::WebSockets::WebSocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_set_NotAWebSocket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketError", "NotAWebSocket", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketError UnsupportedVersion
::System::Net::WebSockets::WebSocketError System::Net::WebSockets::WebSocketError::_get_UnsupportedVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_get_UnsupportedVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketError>("System.Net.WebSockets", "WebSocketError", "UnsupportedVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketError UnsupportedVersion
void System::Net::WebSockets::WebSocketError::_set_UnsupportedVersion(::System::Net::WebSockets::WebSocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_set_UnsupportedVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketError", "UnsupportedVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketError UnsupportedProtocol
::System::Net::WebSockets::WebSocketError System::Net::WebSockets::WebSocketError::_get_UnsupportedProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_get_UnsupportedProtocol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketError>("System.Net.WebSockets", "WebSocketError", "UnsupportedProtocol"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketError UnsupportedProtocol
void System::Net::WebSockets::WebSocketError::_set_UnsupportedProtocol(::System::Net::WebSockets::WebSocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_set_UnsupportedProtocol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketError", "UnsupportedProtocol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketError HeaderError
::System::Net::WebSockets::WebSocketError System::Net::WebSockets::WebSocketError::_get_HeaderError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_get_HeaderError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketError>("System.Net.WebSockets", "WebSocketError", "HeaderError"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketError HeaderError
void System::Net::WebSockets::WebSocketError::_set_HeaderError(::System::Net::WebSockets::WebSocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_set_HeaderError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketError", "HeaderError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketError ConnectionClosedPrematurely
::System::Net::WebSockets::WebSocketError System::Net::WebSockets::WebSocketError::_get_ConnectionClosedPrematurely() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_get_ConnectionClosedPrematurely");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketError>("System.Net.WebSockets", "WebSocketError", "ConnectionClosedPrematurely"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketError ConnectionClosedPrematurely
void System::Net::WebSockets::WebSocketError::_set_ConnectionClosedPrematurely(::System::Net::WebSockets::WebSocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_set_ConnectionClosedPrematurely");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketError", "ConnectionClosedPrematurely", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketError InvalidState
::System::Net::WebSockets::WebSocketError System::Net::WebSockets::WebSocketError::_get_InvalidState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_get_InvalidState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketError>("System.Net.WebSockets", "WebSocketError", "InvalidState"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketError InvalidState
void System::Net::WebSockets::WebSocketError::_set_InvalidState(::System::Net::WebSockets::WebSocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::_set_InvalidState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketError", "InvalidState", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::WebSockets::WebSocketError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.WebSockets.WebSocketException
#include "System/Net/WebSockets/WebSocketException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.WebSockets.WebSocketError _webSocketErrorCode
[[deprecated("Use field access instead!")]] ::System::Net::WebSockets::WebSocketError& System::Net::WebSockets::WebSocketException::dyn__webSocketErrorCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketException::dyn__webSocketErrorCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_webSocketErrorCode"))->offset;
  return *reinterpret_cast<::System::Net::WebSockets::WebSocketError*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.WebSockets.WebSocketException.GetErrorMessage
::StringW System::Net::WebSockets::WebSocketException::GetErrorMessage(::System::Net::WebSockets::WebSocketError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketException::GetErrorMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.WebSockets", "WebSocketException", "GetErrorMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Net.WebSockets.WebSocketException.SetErrorCodeOnError
void System::Net::WebSockets::WebSocketException::SetErrorCodeOnError(int nativeError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketException::SetErrorCodeOnError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetErrorCodeOnError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nativeError);
}
// Autogenerated method: System.Net.WebSockets.WebSocketException.Succeeded
bool System::Net::WebSockets::WebSocketException::Succeeded(int hr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketException::Succeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.WebSockets", "WebSocketException", "Succeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hr)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hr);
}
// Autogenerated method: System.Net.WebSockets.WebSocketException.GetObjectData
void System::Net::WebSockets::WebSocketException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::Win32Exception*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Net.WebSockets.WebSocketException.get_ErrorCode
int System::Net::WebSockets::WebSocketException::get_ErrorCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketException::get_ErrorCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::ExternalException*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.WebSockets.WebSocketMessageType
#include "System/Net/WebSockets/WebSocketMessageType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketMessageType Text
::System::Net::WebSockets::WebSocketMessageType System::Net::WebSockets::WebSocketMessageType::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketMessageType::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketMessageType>("System.Net.WebSockets", "WebSocketMessageType", "Text"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketMessageType Text
void System::Net::WebSockets::WebSocketMessageType::_set_Text(::System::Net::WebSockets::WebSocketMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketMessageType::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketMessageType", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketMessageType Binary
::System::Net::WebSockets::WebSocketMessageType System::Net::WebSockets::WebSocketMessageType::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketMessageType::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketMessageType>("System.Net.WebSockets", "WebSocketMessageType", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketMessageType Binary
void System::Net::WebSockets::WebSocketMessageType::_set_Binary(::System::Net::WebSockets::WebSocketMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketMessageType::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketMessageType", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketMessageType Close
::System::Net::WebSockets::WebSocketMessageType System::Net::WebSockets::WebSocketMessageType::_get_Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketMessageType::_get_Close");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketMessageType>("System.Net.WebSockets", "WebSocketMessageType", "Close"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketMessageType Close
void System::Net::WebSockets::WebSocketMessageType::_set_Close(::System::Net::WebSockets::WebSocketMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketMessageType::_set_Close");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketMessageType", "Close", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::WebSockets::WebSocketMessageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketMessageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.WebSockets.WebSocketReceiveResult
#include "System/Net/WebSockets/WebSocketReceiveResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <Count>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Net::WebSockets::WebSocketReceiveResult::dyn_$Count$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketReceiveResult::dyn_$Count$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Count>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <EndOfMessage>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::WebSockets::WebSocketReceiveResult::dyn_$EndOfMessage$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketReceiveResult::dyn_$EndOfMessage$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EndOfMessage>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.WebSockets.WebSocketMessageType <MessageType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::WebSockets::WebSocketMessageType& System::Net::WebSockets::WebSocketReceiveResult::dyn_$MessageType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketReceiveResult::dyn_$MessageType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MessageType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::WebSockets::WebSocketMessageType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Nullable`1<System.Net.WebSockets.WebSocketCloseStatus> <CloseStatus>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::Net::WebSockets::WebSocketCloseStatus>& System::Net::WebSockets::WebSocketReceiveResult::dyn_$CloseStatus$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketReceiveResult::dyn_$CloseStatus$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CloseStatus>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::Net::WebSockets::WebSocketCloseStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <CloseStatusDescription>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::WebSockets::WebSocketReceiveResult::dyn_$CloseStatusDescription$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketReceiveResult::dyn_$CloseStatusDescription$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CloseStatusDescription>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.WebSockets.WebSocketReceiveResult.get_Count
int System::Net::WebSockets::WebSocketReceiveResult::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketReceiveResult::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebSockets.WebSocketReceiveResult.get_EndOfMessage
bool System::Net::WebSockets::WebSocketReceiveResult::get_EndOfMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketReceiveResult::get_EndOfMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndOfMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.WebSockets.WebSocketState
#include "System/Net/WebSockets/WebSocketState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketState None
::System::Net::WebSockets::WebSocketState System::Net::WebSockets::WebSocketState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketState>("System.Net.WebSockets", "WebSocketState", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketState None
void System::Net::WebSockets::WebSocketState::_set_None(::System::Net::WebSockets::WebSocketState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketState Connecting
::System::Net::WebSockets::WebSocketState System::Net::WebSockets::WebSocketState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketState>("System.Net.WebSockets", "WebSocketState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketState Connecting
void System::Net::WebSockets::WebSocketState::_set_Connecting(::System::Net::WebSockets::WebSocketState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketState Open
::System::Net::WebSockets::WebSocketState System::Net::WebSockets::WebSocketState::_get_Open() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketState::_get_Open");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketState>("System.Net.WebSockets", "WebSocketState", "Open"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketState Open
void System::Net::WebSockets::WebSocketState::_set_Open(::System::Net::WebSockets::WebSocketState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketState::_set_Open");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketState", "Open", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketState CloseSent
::System::Net::WebSockets::WebSocketState System::Net::WebSockets::WebSocketState::_get_CloseSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketState::_get_CloseSent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketState>("System.Net.WebSockets", "WebSocketState", "CloseSent"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketState CloseSent
void System::Net::WebSockets::WebSocketState::_set_CloseSent(::System::Net::WebSockets::WebSocketState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketState::_set_CloseSent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketState", "CloseSent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketState CloseReceived
::System::Net::WebSockets::WebSocketState System::Net::WebSockets::WebSocketState::_get_CloseReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketState::_get_CloseReceived");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketState>("System.Net.WebSockets", "WebSocketState", "CloseReceived"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketState CloseReceived
void System::Net::WebSockets::WebSocketState::_set_CloseReceived(::System::Net::WebSockets::WebSocketState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketState::_set_CloseReceived");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketState", "CloseReceived", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketState Closed
::System::Net::WebSockets::WebSocketState System::Net::WebSockets::WebSocketState::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketState::_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketState>("System.Net.WebSockets", "WebSocketState", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketState Closed
void System::Net::WebSockets::WebSocketState::_set_Closed(::System::Net::WebSockets::WebSocketState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketState::_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketState", "Closed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebSockets.WebSocketState Aborted
::System::Net::WebSockets::WebSocketState System::Net::WebSockets::WebSocketState::_get_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketState::_get_Aborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebSockets::WebSocketState>("System.Net.WebSockets", "WebSocketState", "Aborted"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebSockets.WebSocketState Aborted
void System::Net::WebSockets::WebSocketState::_set_Aborted(::System::Net::WebSockets::WebSocketState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketState::_set_Aborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.WebSockets", "WebSocketState", "Aborted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::WebSockets::WebSocketState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Security.NegotiateStreamPal
#include "System/Net/Security/NegotiateStreamPal.hpp"
// Including type: System.Net.Security.SafeDeleteContext
#include "System/Net/Security/SafeDeleteContext.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeGssContextHandle
#include "Microsoft/Win32/SafeHandles/SafeGssContextHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeGssCredHandle
#include "Microsoft/Win32/SafeHandles/SafeGssCredHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeGssNameHandle
#include "Microsoft/Win32/SafeHandles/SafeGssNameHandle.hpp"
// Including type: System.Net.SecurityStatusPal
#include "System/Net/SecurityStatusPal.hpp"
// Including type: System.Net.Security.SafeFreeNegoCredentials
#include "System/Net/Security/SafeFreeNegoCredentials.hpp"
// Including type: System.Net.ContextFlagsPal
#include "System/Net/ContextFlagsPal.hpp"
// Including type: System.Net.Security.SecurityBuffer
#include "System/Net/Security/SecurityBuffer.hpp"
// Including type: System.Net.Security.SafeFreeCredentials
#include "System/Net/Security/SafeFreeCredentials.hpp"
// Including type: System.ComponentModel.Win32Exception
#include "System/ComponentModel/Win32Exception.hpp"
// Including type: System.Net.NetworkCredential
#include "System/Net/NetworkCredential.hpp"
// Including type: Interop/NetSecurityNative/GssFlags
#include "GlobalNamespace/Interop__NetSecurityNative_GssFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Security.NegotiateStreamPal.QueryContextClientSpecifiedSpn
::StringW System::Net::Security::NegotiateStreamPal::QueryContextClientSpecifiedSpn(::System::Net::Security::SafeDeleteContext* securityContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::NegotiateStreamPal::QueryContextClientSpecifiedSpn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "NegotiateStreamPal", "QueryContextClientSpecifiedSpn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(securityContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, securityContext);
}
// Autogenerated method: System.Net.Security.NegotiateStreamPal.QueryContextAuthenticationPackage
::StringW System::Net::Security::NegotiateStreamPal::QueryContextAuthenticationPackage(::System::Net::Security::SafeDeleteContext* securityContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::NegotiateStreamPal::QueryContextAuthenticationPackage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "NegotiateStreamPal", "QueryContextAuthenticationPackage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(securityContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, securityContext);
}
// Autogenerated method: System.Net.Security.NegotiateStreamPal.GssWrap
::ArrayW<uint8_t> System::Net::Security::NegotiateStreamPal::GssWrap(::Microsoft::Win32::SafeHandles::SafeGssContextHandle* context, bool encrypt, ::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::NegotiateStreamPal::GssWrap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "NegotiateStreamPal", "GssWrap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(encrypt), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, encrypt, buffer, offset, count);
}
// Autogenerated method: System.Net.Security.NegotiateStreamPal.GssUnwrap
int System::Net::Security::NegotiateStreamPal::GssUnwrap(::Microsoft::Win32::SafeHandles::SafeGssContextHandle* context, ::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::NegotiateStreamPal::GssUnwrap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "NegotiateStreamPal", "GssUnwrap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, buffer, offset, count);
}
// Autogenerated method: System.Net.Security.NegotiateStreamPal.GssInitSecurityContext
bool System::Net::Security::NegotiateStreamPal::GssInitSecurityContext(ByRef<::Microsoft::Win32::SafeHandles::SafeGssContextHandle*> context, ::Microsoft::Win32::SafeHandles::SafeGssCredHandle* credential, bool isNtlm, ::Microsoft::Win32::SafeHandles::SafeGssNameHandle* targetName, ::GlobalNamespace::Interop_::NetSecurityNative::GssFlags inFlags, ::ArrayW<uint8_t> buffer, ByRef<::ArrayW<uint8_t>> outputBuffer, ByRef<uint> outFlags, ByRef<int> isNtlmUsed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::NegotiateStreamPal::GssInitSecurityContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "NegotiateStreamPal", "GssInitSecurityContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(credential), ::il2cpp_utils::ExtractType(isNtlm), ::il2cpp_utils::ExtractType(targetName), ::il2cpp_utils::ExtractType(inFlags), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>(), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), credential, isNtlm, targetName, inFlags, buffer, byref(outputBuffer), byref(outFlags), byref(isNtlmUsed));
}
// Autogenerated method: System.Net.Security.NegotiateStreamPal.EstablishSecurityContext
::System::Net::SecurityStatusPal System::Net::Security::NegotiateStreamPal::EstablishSecurityContext(::System::Net::Security::SafeFreeNegoCredentials* credential, ByRef<::System::Net::Security::SafeDeleteContext*> context, ::StringW targetName, ::System::Net::ContextFlagsPal inFlags, ::System::Net::Security::SecurityBuffer* inputBuffer, ::System::Net::Security::SecurityBuffer* outputBuffer, ByRef<::System::Net::ContextFlagsPal> outFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::NegotiateStreamPal::EstablishSecurityContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "NegotiateStreamPal", "EstablishSecurityContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(credential), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(targetName), ::il2cpp_utils::ExtractType(inFlags), ::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::SecurityStatusPal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, credential, byref(context), targetName, inFlags, inputBuffer, outputBuffer, byref(outFlags));
}
// Autogenerated method: System.Net.Security.NegotiateStreamPal.InitializeSecurityContext
::System::Net::SecurityStatusPal System::Net::Security::NegotiateStreamPal::InitializeSecurityContext(::System::Net::Security::SafeFreeCredentials* credentialsHandle, ByRef<::System::Net::Security::SafeDeleteContext*> securityContext, ::StringW spn, ::System::Net::ContextFlagsPal requestedContextFlags, ::ArrayW<::System::Net::Security::SecurityBuffer*> inSecurityBufferArray, ::System::Net::Security::SecurityBuffer* outSecurityBuffer, ByRef<::System::Net::ContextFlagsPal> contextFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::NegotiateStreamPal::InitializeSecurityContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "NegotiateStreamPal", "InitializeSecurityContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(credentialsHandle), ::il2cpp_utils::ExtractType(securityContext), ::il2cpp_utils::ExtractType(spn), ::il2cpp_utils::ExtractType(requestedContextFlags), ::il2cpp_utils::ExtractType(inSecurityBufferArray), ::il2cpp_utils::ExtractType(outSecurityBuffer), ::il2cpp_utils::ExtractType(contextFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::SecurityStatusPal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, credentialsHandle, byref(securityContext), spn, requestedContextFlags, inSecurityBufferArray, outSecurityBuffer, byref(contextFlags));
}
// Autogenerated method: System.Net.Security.NegotiateStreamPal.AcceptSecurityContext
::System::Net::SecurityStatusPal System::Net::Security::NegotiateStreamPal::AcceptSecurityContext(::System::Net::Security::SafeFreeCredentials* credentialsHandle, ByRef<::System::Net::Security::SafeDeleteContext*> securityContext, ::System::Net::ContextFlagsPal requestedContextFlags, ::ArrayW<::System::Net::Security::SecurityBuffer*> inSecurityBufferArray, ::System::Net::Security::SecurityBuffer* outSecurityBuffer, ByRef<::System::Net::ContextFlagsPal> contextFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::NegotiateStreamPal::AcceptSecurityContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "NegotiateStreamPal", "AcceptSecurityContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(credentialsHandle), ::il2cpp_utils::ExtractType(securityContext), ::il2cpp_utils::ExtractType(requestedContextFlags), ::il2cpp_utils::ExtractType(inSecurityBufferArray), ::il2cpp_utils::ExtractType(outSecurityBuffer), ::il2cpp_utils::ExtractType(contextFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::SecurityStatusPal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, credentialsHandle, byref(securityContext), requestedContextFlags, inSecurityBufferArray, outSecurityBuffer, byref(contextFlags));
}
// Autogenerated method: System.Net.Security.NegotiateStreamPal.CreateExceptionFromError
::System::ComponentModel::Win32Exception* System::Net::Security::NegotiateStreamPal::CreateExceptionFromError(::System::Net::SecurityStatusPal statusCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::NegotiateStreamPal::CreateExceptionFromError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "NegotiateStreamPal", "CreateExceptionFromError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statusCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::Win32Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, statusCode);
}
// Autogenerated method: System.Net.Security.NegotiateStreamPal.QueryMaxTokenSize
int System::Net::Security::NegotiateStreamPal::QueryMaxTokenSize(::StringW package) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::NegotiateStreamPal::QueryMaxTokenSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "NegotiateStreamPal", "QueryMaxTokenSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(package)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, package);
}
// Autogenerated method: System.Net.Security.NegotiateStreamPal.AcquireDefaultCredential
::System::Net::Security::SafeFreeCredentials* System::Net::Security::NegotiateStreamPal::AcquireDefaultCredential(::StringW package, bool isServer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::NegotiateStreamPal::AcquireDefaultCredential");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "NegotiateStreamPal", "AcquireDefaultCredential", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(package), ::il2cpp_utils::ExtractType(isServer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::SafeFreeCredentials*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, package, isServer);
}
// Autogenerated method: System.Net.Security.NegotiateStreamPal.AcquireCredentialsHandle
::System::Net::Security::SafeFreeCredentials* System::Net::Security::NegotiateStreamPal::AcquireCredentialsHandle(::StringW package, bool isServer, ::System::Net::NetworkCredential* credential) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::NegotiateStreamPal::AcquireCredentialsHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "NegotiateStreamPal", "AcquireCredentialsHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(package), ::il2cpp_utils::ExtractType(isServer), ::il2cpp_utils::ExtractType(credential)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::SafeFreeCredentials*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, package, isServer, credential);
}
// Autogenerated method: System.Net.Security.NegotiateStreamPal.CompleteAuthToken
::System::Net::SecurityStatusPal System::Net::Security::NegotiateStreamPal::CompleteAuthToken(ByRef<::System::Net::Security::SafeDeleteContext*> securityContext, ::ArrayW<::System::Net::Security::SecurityBuffer*> inSecurityBufferArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::NegotiateStreamPal::CompleteAuthToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "NegotiateStreamPal", "CompleteAuthToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(securityContext), ::il2cpp_utils::ExtractType(inSecurityBufferArray)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::SecurityStatusPal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(securityContext), inSecurityBufferArray);
}
// Autogenerated method: System.Net.Security.NegotiateStreamPal.VerifySignature
int System::Net::Security::NegotiateStreamPal::VerifySignature(::System::Net::Security::SafeDeleteContext* securityContext, ::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::NegotiateStreamPal::VerifySignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "NegotiateStreamPal", "VerifySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(securityContext), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, securityContext, buffer, offset, count);
}
// Autogenerated method: System.Net.Security.NegotiateStreamPal.MakeSignature
int System::Net::Security::NegotiateStreamPal::MakeSignature(::System::Net::Security::SafeDeleteContext* securityContext, ::ArrayW<uint8_t> buffer, int offset, int count, ByRef<::ArrayW<uint8_t>> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::NegotiateStreamPal::MakeSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "NegotiateStreamPal", "MakeSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(securityContext), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(output)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, securityContext, buffer, offset, count, byref(output));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Security.SSPIHandleCache
#include "System/Net/Security/SSPIHandleCache.hpp"
// Including type: System.Net.Security.SafeCredentialReference
#include "System/Net/Security/SafeCredentialReference.hpp"
// Including type: System.Net.Security.SafeFreeCredentials
#include "System/Net/Security/SafeFreeCredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Net.Security.SafeCredentialReference[] s_cacheSlots
::ArrayW<::System::Net::Security::SafeCredentialReference*> System::Net::Security::SSPIHandleCache::_get_s_cacheSlots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SSPIHandleCache::_get_s_cacheSlots");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Net::Security::SafeCredentialReference*>>("System.Net.Security", "SSPIHandleCache", "s_cacheSlots"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.Security.SafeCredentialReference[] s_cacheSlots
void System::Net::Security::SSPIHandleCache::_set_s_cacheSlots(::ArrayW<::System::Net::Security::SafeCredentialReference*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SSPIHandleCache::_set_s_cacheSlots");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SSPIHandleCache", "s_cacheSlots", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_current
int System::Net::Security::SSPIHandleCache::_get_s_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SSPIHandleCache::_get_s_current");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net.Security", "SSPIHandleCache", "s_current"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_current
void System::Net::Security::SSPIHandleCache::_set_s_current(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SSPIHandleCache::_set_s_current");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SSPIHandleCache", "s_current", value));
}
// Autogenerated method: System.Net.Security.SSPIHandleCache.CacheCredential
void System::Net::Security::SSPIHandleCache::CacheCredential(::System::Net::Security::SafeFreeCredentials* newHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SSPIHandleCache::CacheCredential");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "SSPIHandleCache", "CacheCredential", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newHandle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newHandle);
}
// Autogenerated method: System.Net.Security.SSPIHandleCache..cctor
void System::Net::Security::SSPIHandleCache::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SSPIHandleCache::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "SSPIHandleCache", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Security.SecurityBuffer
#include "System/Net/Security/SecurityBuffer.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
// Including type: System.Security.Authentication.ExtendedProtection.ChannelBinding
#include "System/Security/Authentication/ExtendedProtection/ChannelBinding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 size
[[deprecated("Use field access instead!")]] int& System::Net::Security::SecurityBuffer::dyn_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBuffer::dyn_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Security.SecurityBufferType type
[[deprecated("Use field access instead!")]] ::System::Net::Security::SecurityBufferType& System::Net::Security::SecurityBuffer::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBuffer::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Net::Security::SecurityBufferType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] token
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::Security::SecurityBuffer::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBuffer::dyn_token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.InteropServices.SafeHandle unmanagedToken
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::SafeHandle*& System::Net::Security::SecurityBuffer::dyn_unmanagedToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBuffer::dyn_unmanagedToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unmanagedToken"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::SafeHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 offset
[[deprecated("Use field access instead!")]] int& System::Net::Security::SecurityBuffer::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBuffer::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Security.SecurityBufferType
#include "System/Net/Security/SecurityBufferType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SecurityBufferType SECBUFFER_EMPTY
::System::Net::Security::SecurityBufferType System::Net::Security::SecurityBufferType::_get_SECBUFFER_EMPTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_get_SECBUFFER_EMPTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SecurityBufferType>("System.Net.Security", "SecurityBufferType", "SECBUFFER_EMPTY"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SecurityBufferType SECBUFFER_EMPTY
void System::Net::Security::SecurityBufferType::_set_SECBUFFER_EMPTY(::System::Net::Security::SecurityBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_set_SECBUFFER_EMPTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SecurityBufferType", "SECBUFFER_EMPTY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SecurityBufferType SECBUFFER_DATA
::System::Net::Security::SecurityBufferType System::Net::Security::SecurityBufferType::_get_SECBUFFER_DATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_get_SECBUFFER_DATA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SecurityBufferType>("System.Net.Security", "SecurityBufferType", "SECBUFFER_DATA"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SecurityBufferType SECBUFFER_DATA
void System::Net::Security::SecurityBufferType::_set_SECBUFFER_DATA(::System::Net::Security::SecurityBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_set_SECBUFFER_DATA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SecurityBufferType", "SECBUFFER_DATA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SecurityBufferType SECBUFFER_TOKEN
::System::Net::Security::SecurityBufferType System::Net::Security::SecurityBufferType::_get_SECBUFFER_TOKEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_get_SECBUFFER_TOKEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SecurityBufferType>("System.Net.Security", "SecurityBufferType", "SECBUFFER_TOKEN"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SecurityBufferType SECBUFFER_TOKEN
void System::Net::Security::SecurityBufferType::_set_SECBUFFER_TOKEN(::System::Net::Security::SecurityBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_set_SECBUFFER_TOKEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SecurityBufferType", "SECBUFFER_TOKEN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SecurityBufferType SECBUFFER_PKG_PARAMS
::System::Net::Security::SecurityBufferType System::Net::Security::SecurityBufferType::_get_SECBUFFER_PKG_PARAMS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_get_SECBUFFER_PKG_PARAMS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SecurityBufferType>("System.Net.Security", "SecurityBufferType", "SECBUFFER_PKG_PARAMS"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SecurityBufferType SECBUFFER_PKG_PARAMS
void System::Net::Security::SecurityBufferType::_set_SECBUFFER_PKG_PARAMS(::System::Net::Security::SecurityBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_set_SECBUFFER_PKG_PARAMS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SecurityBufferType", "SECBUFFER_PKG_PARAMS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SecurityBufferType SECBUFFER_MISSING
::System::Net::Security::SecurityBufferType System::Net::Security::SecurityBufferType::_get_SECBUFFER_MISSING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_get_SECBUFFER_MISSING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SecurityBufferType>("System.Net.Security", "SecurityBufferType", "SECBUFFER_MISSING"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SecurityBufferType SECBUFFER_MISSING
void System::Net::Security::SecurityBufferType::_set_SECBUFFER_MISSING(::System::Net::Security::SecurityBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_set_SECBUFFER_MISSING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SecurityBufferType", "SECBUFFER_MISSING", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SecurityBufferType SECBUFFER_EXTRA
::System::Net::Security::SecurityBufferType System::Net::Security::SecurityBufferType::_get_SECBUFFER_EXTRA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_get_SECBUFFER_EXTRA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SecurityBufferType>("System.Net.Security", "SecurityBufferType", "SECBUFFER_EXTRA"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SecurityBufferType SECBUFFER_EXTRA
void System::Net::Security::SecurityBufferType::_set_SECBUFFER_EXTRA(::System::Net::Security::SecurityBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_set_SECBUFFER_EXTRA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SecurityBufferType", "SECBUFFER_EXTRA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SecurityBufferType SECBUFFER_STREAM_TRAILER
::System::Net::Security::SecurityBufferType System::Net::Security::SecurityBufferType::_get_SECBUFFER_STREAM_TRAILER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_get_SECBUFFER_STREAM_TRAILER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SecurityBufferType>("System.Net.Security", "SecurityBufferType", "SECBUFFER_STREAM_TRAILER"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SecurityBufferType SECBUFFER_STREAM_TRAILER
void System::Net::Security::SecurityBufferType::_set_SECBUFFER_STREAM_TRAILER(::System::Net::Security::SecurityBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_set_SECBUFFER_STREAM_TRAILER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SecurityBufferType", "SECBUFFER_STREAM_TRAILER", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SecurityBufferType SECBUFFER_STREAM_HEADER
::System::Net::Security::SecurityBufferType System::Net::Security::SecurityBufferType::_get_SECBUFFER_STREAM_HEADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_get_SECBUFFER_STREAM_HEADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SecurityBufferType>("System.Net.Security", "SecurityBufferType", "SECBUFFER_STREAM_HEADER"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SecurityBufferType SECBUFFER_STREAM_HEADER
void System::Net::Security::SecurityBufferType::_set_SECBUFFER_STREAM_HEADER(::System::Net::Security::SecurityBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_set_SECBUFFER_STREAM_HEADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SecurityBufferType", "SECBUFFER_STREAM_HEADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SecurityBufferType SECBUFFER_PADDING
::System::Net::Security::SecurityBufferType System::Net::Security::SecurityBufferType::_get_SECBUFFER_PADDING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_get_SECBUFFER_PADDING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SecurityBufferType>("System.Net.Security", "SecurityBufferType", "SECBUFFER_PADDING"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SecurityBufferType SECBUFFER_PADDING
void System::Net::Security::SecurityBufferType::_set_SECBUFFER_PADDING(::System::Net::Security::SecurityBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_set_SECBUFFER_PADDING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SecurityBufferType", "SECBUFFER_PADDING", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SecurityBufferType SECBUFFER_STREAM
::System::Net::Security::SecurityBufferType System::Net::Security::SecurityBufferType::_get_SECBUFFER_STREAM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_get_SECBUFFER_STREAM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SecurityBufferType>("System.Net.Security", "SecurityBufferType", "SECBUFFER_STREAM"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SecurityBufferType SECBUFFER_STREAM
void System::Net::Security::SecurityBufferType::_set_SECBUFFER_STREAM(::System::Net::Security::SecurityBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_set_SECBUFFER_STREAM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SecurityBufferType", "SECBUFFER_STREAM", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SecurityBufferType SECBUFFER_CHANNEL_BINDINGS
::System::Net::Security::SecurityBufferType System::Net::Security::SecurityBufferType::_get_SECBUFFER_CHANNEL_BINDINGS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_get_SECBUFFER_CHANNEL_BINDINGS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SecurityBufferType>("System.Net.Security", "SecurityBufferType", "SECBUFFER_CHANNEL_BINDINGS"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SecurityBufferType SECBUFFER_CHANNEL_BINDINGS
void System::Net::Security::SecurityBufferType::_set_SECBUFFER_CHANNEL_BINDINGS(::System::Net::Security::SecurityBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_set_SECBUFFER_CHANNEL_BINDINGS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SecurityBufferType", "SECBUFFER_CHANNEL_BINDINGS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SecurityBufferType SECBUFFER_TARGET_HOST
::System::Net::Security::SecurityBufferType System::Net::Security::SecurityBufferType::_get_SECBUFFER_TARGET_HOST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_get_SECBUFFER_TARGET_HOST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SecurityBufferType>("System.Net.Security", "SecurityBufferType", "SECBUFFER_TARGET_HOST"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SecurityBufferType SECBUFFER_TARGET_HOST
void System::Net::Security::SecurityBufferType::_set_SECBUFFER_TARGET_HOST(::System::Net::Security::SecurityBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_set_SECBUFFER_TARGET_HOST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SecurityBufferType", "SECBUFFER_TARGET_HOST", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SecurityBufferType SECBUFFER_ALERT
::System::Net::Security::SecurityBufferType System::Net::Security::SecurityBufferType::_get_SECBUFFER_ALERT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_get_SECBUFFER_ALERT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SecurityBufferType>("System.Net.Security", "SecurityBufferType", "SECBUFFER_ALERT"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SecurityBufferType SECBUFFER_ALERT
void System::Net::Security::SecurityBufferType::_set_SECBUFFER_ALERT(::System::Net::Security::SecurityBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_set_SECBUFFER_ALERT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SecurityBufferType", "SECBUFFER_ALERT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SecurityBufferType SECBUFFER_APPLICATION_PROTOCOLS
::System::Net::Security::SecurityBufferType System::Net::Security::SecurityBufferType::_get_SECBUFFER_APPLICATION_PROTOCOLS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_get_SECBUFFER_APPLICATION_PROTOCOLS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SecurityBufferType>("System.Net.Security", "SecurityBufferType", "SECBUFFER_APPLICATION_PROTOCOLS"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SecurityBufferType SECBUFFER_APPLICATION_PROTOCOLS
void System::Net::Security::SecurityBufferType::_set_SECBUFFER_APPLICATION_PROTOCOLS(::System::Net::Security::SecurityBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_set_SECBUFFER_APPLICATION_PROTOCOLS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SecurityBufferType", "SECBUFFER_APPLICATION_PROTOCOLS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SecurityBufferType SECBUFFER_READONLY
::System::Net::Security::SecurityBufferType System::Net::Security::SecurityBufferType::_get_SECBUFFER_READONLY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_get_SECBUFFER_READONLY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SecurityBufferType>("System.Net.Security", "SecurityBufferType", "SECBUFFER_READONLY"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SecurityBufferType SECBUFFER_READONLY
void System::Net::Security::SecurityBufferType::_set_SECBUFFER_READONLY(::System::Net::Security::SecurityBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_set_SECBUFFER_READONLY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SecurityBufferType", "SECBUFFER_READONLY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SecurityBufferType SECBUFFER_READONLY_WITH_CHECKSUM
::System::Net::Security::SecurityBufferType System::Net::Security::SecurityBufferType::_get_SECBUFFER_READONLY_WITH_CHECKSUM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_get_SECBUFFER_READONLY_WITH_CHECKSUM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SecurityBufferType>("System.Net.Security", "SecurityBufferType", "SECBUFFER_READONLY_WITH_CHECKSUM"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SecurityBufferType SECBUFFER_READONLY_WITH_CHECKSUM
void System::Net::Security::SecurityBufferType::_set_SECBUFFER_READONLY_WITH_CHECKSUM(::System::Net::Security::SecurityBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::_set_SECBUFFER_READONLY_WITH_CHECKSUM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SecurityBufferType", "SECBUFFER_READONLY_WITH_CHECKSUM", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Security::SecurityBufferType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SecurityBufferType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Security.SafeDeleteContext
#include "System/Net/Security/SafeDeleteContext.hpp"
// Including type: System.Net.Security.SafeFreeCredentials
#include "System/Net/Security/SafeFreeCredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Security.SafeFreeCredentials _credential
[[deprecated("Use field access instead!")]] ::System::Net::Security::SafeFreeCredentials*& System::Net::Security::SafeDeleteContext::dyn__credential() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeDeleteContext::dyn__credential");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_credential"))->offset;
  return *reinterpret_cast<::System::Net::Security::SafeFreeCredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Security.SafeDeleteContext.get_IsInvalid
bool System::Net::Security::SafeDeleteContext::get_IsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeDeleteContext::get_IsInvalid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SafeDeleteContext.ReleaseHandle
bool System::Net::Security::SafeDeleteContext::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeDeleteContext::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Security.SafeDeleteNegoContext
#include "System/Net/Security/SafeDeleteNegoContext.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeGssNameHandle
#include "Microsoft/Win32/SafeHandles/SafeGssNameHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeGssContextHandle
#include "Microsoft/Win32/SafeHandles/SafeGssContextHandle.hpp"
// Including type: System.Net.Security.SafeFreeNegoCredentials
#include "System/Net/Security/SafeFreeNegoCredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Microsoft.Win32.SafeHandles.SafeGssNameHandle _targetName
[[deprecated("Use field access instead!")]] ::Microsoft::Win32::SafeHandles::SafeGssNameHandle*& System::Net::Security::SafeDeleteNegoContext::dyn__targetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeDeleteNegoContext::dyn__targetName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetName"))->offset;
  return *reinterpret_cast<::Microsoft::Win32::SafeHandles::SafeGssNameHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Microsoft.Win32.SafeHandles.SafeGssContextHandle _context
[[deprecated("Use field access instead!")]] ::Microsoft::Win32::SafeHandles::SafeGssContextHandle*& System::Net::Security::SafeDeleteNegoContext::dyn__context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeDeleteNegoContext::dyn__context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_context"))->offset;
  return *reinterpret_cast<::Microsoft::Win32::SafeHandles::SafeGssContextHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isNtlmUsed
[[deprecated("Use field access instead!")]] bool& System::Net::Security::SafeDeleteNegoContext::dyn__isNtlmUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeDeleteNegoContext::dyn__isNtlmUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isNtlmUsed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Security.SafeDeleteNegoContext.get_TargetName
::Microsoft::Win32::SafeHandles::SafeGssNameHandle* System::Net::Security::SafeDeleteNegoContext::get_TargetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeDeleteNegoContext::get_TargetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::SafeHandles::SafeGssNameHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SafeDeleteNegoContext.get_IsNtlmUsed
bool System::Net::Security::SafeDeleteNegoContext::get_IsNtlmUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeDeleteNegoContext::get_IsNtlmUsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNtlmUsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SafeDeleteNegoContext.get_GssContext
::Microsoft::Win32::SafeHandles::SafeGssContextHandle* System::Net::Security::SafeDeleteNegoContext::get_GssContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeDeleteNegoContext::get_GssContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GssContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::SafeHandles::SafeGssContextHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SafeDeleteNegoContext.SetGssContext
void System::Net::Security::SafeDeleteNegoContext::SetGssContext(::Microsoft::Win32::SafeHandles::SafeGssContextHandle* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeDeleteNegoContext::SetGssContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGssContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Net.Security.SafeDeleteNegoContext.SetAuthenticationPackage
void System::Net::Security::SafeDeleteNegoContext::SetAuthenticationPackage(bool isNtlmUsed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeDeleteNegoContext::SetAuthenticationPackage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAuthenticationPackage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isNtlmUsed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isNtlmUsed);
}
// Autogenerated method: System.Net.Security.SafeDeleteNegoContext.Dispose
void System::Net::Security::SafeDeleteNegoContext::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeDeleteNegoContext::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Security.SafeFreeCredentials
#include "System/Net/Security/SafeFreeCredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Security.SafeCredentialReference
#include "System/Net/Security/SafeCredentialReference.hpp"
// Including type: System.Net.Security.SafeFreeCredentials
#include "System/Net/Security/SafeFreeCredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Net.Security.SafeFreeCredentials Target
[[deprecated("Use field access instead!")]] ::System::Net::Security::SafeFreeCredentials*& System::Net::Security::SafeCredentialReference::dyn_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeCredentialReference::dyn_Target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Target"))->offset;
  return *reinterpret_cast<::System::Net::Security::SafeFreeCredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Security.SafeCredentialReference.CreateReference
::System::Net::Security::SafeCredentialReference* System::Net::Security::SafeCredentialReference::CreateReference(::System::Net::Security::SafeFreeCredentials* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeCredentialReference::CreateReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "SafeCredentialReference", "CreateReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::SafeCredentialReference*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target);
}
// Autogenerated method: System.Net.Security.SafeCredentialReference.ReleaseHandle
bool System::Net::Security::SafeCredentialReference::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeCredentialReference::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::CriticalHandle*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Security.SafeFreeNegoCredentials
#include "System/Net/Security/SafeFreeNegoCredentials.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeGssCredHandle
#include "Microsoft/Win32/SafeHandles/SafeGssCredHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Microsoft.Win32.SafeHandles.SafeGssCredHandle _credential
[[deprecated("Use field access instead!")]] ::Microsoft::Win32::SafeHandles::SafeGssCredHandle*& System::Net::Security::SafeFreeNegoCredentials::dyn__credential() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeFreeNegoCredentials::dyn__credential");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_credential"))->offset;
  return *reinterpret_cast<::Microsoft::Win32::SafeHandles::SafeGssCredHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isNtlmOnly
[[deprecated("Use field access instead!")]] bool& System::Net::Security::SafeFreeNegoCredentials::dyn__isNtlmOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeFreeNegoCredentials::dyn__isNtlmOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isNtlmOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userName
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Security::SafeFreeNegoCredentials::dyn__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeFreeNegoCredentials::dyn__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isDefault
[[deprecated("Use field access instead!")]] bool& System::Net::Security::SafeFreeNegoCredentials::dyn__isDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeFreeNegoCredentials::dyn__isDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDefault"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Security.SafeFreeNegoCredentials.get_GssCredential
::Microsoft::Win32::SafeHandles::SafeGssCredHandle* System::Net::Security::SafeFreeNegoCredentials::get_GssCredential() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeFreeNegoCredentials::get_GssCredential");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GssCredential", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::SafeHandles::SafeGssCredHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SafeFreeNegoCredentials.get_IsNtlmOnly
bool System::Net::Security::SafeFreeNegoCredentials::get_IsNtlmOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeFreeNegoCredentials::get_IsNtlmOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNtlmOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SafeFreeNegoCredentials.get_UserName
::StringW System::Net::Security::SafeFreeNegoCredentials::get_UserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeFreeNegoCredentials::get_UserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SafeFreeNegoCredentials.get_IsDefault
bool System::Net::Security::SafeFreeNegoCredentials::get_IsDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeFreeNegoCredentials::get_IsDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SafeFreeNegoCredentials.get_IsInvalid
bool System::Net::Security::SafeFreeNegoCredentials::get_IsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeFreeNegoCredentials::get_IsInvalid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SafeFreeNegoCredentials.ReleaseHandle
bool System::Net::Security::SafeFreeNegoCredentials::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SafeFreeNegoCredentials::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Security.SslClientAuthenticationOptions
#include "System/Net/Security/SslClientAuthenticationOptions.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Security.EncryptionPolicy _encryptionPolicy
[[deprecated("Use field access instead!")]] ::System::Net::Security::EncryptionPolicy& System::Net::Security::SslClientAuthenticationOptions::dyn__encryptionPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslClientAuthenticationOptions::dyn__encryptionPolicy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encryptionPolicy"))->offset;
  return *reinterpret_cast<::System::Net::Security::EncryptionPolicy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509RevocationMode _checkCertificateRevocation
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509RevocationMode& System::Net::Security::SslClientAuthenticationOptions::dyn__checkCertificateRevocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslClientAuthenticationOptions::dyn__checkCertificateRevocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_checkCertificateRevocation"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509RevocationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Authentication.SslProtocols _enabledSslProtocols
[[deprecated("Use field access instead!")]] ::System::Security::Authentication::SslProtocols& System::Net::Security::SslClientAuthenticationOptions::dyn__enabledSslProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslClientAuthenticationOptions::dyn__enabledSslProtocols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enabledSslProtocols"))->offset;
  return *reinterpret_cast<::System::Security::Authentication::SslProtocols*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _allowRenegotiation
[[deprecated("Use field access instead!")]] bool& System::Net::Security::SslClientAuthenticationOptions::dyn__allowRenegotiation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslClientAuthenticationOptions::dyn__allowRenegotiation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowRenegotiation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <TargetHost>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Security::SslClientAuthenticationOptions::dyn_$TargetHost$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslClientAuthenticationOptions::dyn_$TargetHost$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TargetHost>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509CertificateCollection <ClientCertificates>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509CertificateCollection*& System::Net::Security::SslClientAuthenticationOptions::dyn_$ClientCertificates$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslClientAuthenticationOptions::dyn_$ClientCertificates$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ClientCertificates>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509CertificateCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Security.SslClientAuthenticationOptions.get_TargetHost
::StringW System::Net::Security::SslClientAuthenticationOptions::get_TargetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslClientAuthenticationOptions::get_TargetHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslClientAuthenticationOptions.set_TargetHost
void System::Net::Security::SslClientAuthenticationOptions::set_TargetHost(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslClientAuthenticationOptions::set_TargetHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TargetHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslClientAuthenticationOptions.get_ClientCertificates
::System::Security::Cryptography::X509Certificates::X509CertificateCollection* System::Net::Security::SslClientAuthenticationOptions::get_ClientCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslClientAuthenticationOptions::get_ClientCertificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslClientAuthenticationOptions.set_ClientCertificates
void System::Net::Security::SslClientAuthenticationOptions::set_ClientCertificates(::System::Security::Cryptography::X509Certificates::X509CertificateCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslClientAuthenticationOptions::set_ClientCertificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClientCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslClientAuthenticationOptions.set_CertificateRevocationCheckMode
void System::Net::Security::SslClientAuthenticationOptions::set_CertificateRevocationCheckMode(::System::Security::Cryptography::X509Certificates::X509RevocationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslClientAuthenticationOptions::set_CertificateRevocationCheckMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CertificateRevocationCheckMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslClientAuthenticationOptions.set_EncryptionPolicy
void System::Net::Security::SslClientAuthenticationOptions::set_EncryptionPolicy(::System::Net::Security::EncryptionPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslClientAuthenticationOptions::set_EncryptionPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EncryptionPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslClientAuthenticationOptions.get_EnabledSslProtocols
::System::Security::Authentication::SslProtocols System::Net::Security::SslClientAuthenticationOptions::get_EnabledSslProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslClientAuthenticationOptions::get_EnabledSslProtocols");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnabledSslProtocols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Authentication::SslProtocols, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslClientAuthenticationOptions.set_EnabledSslProtocols
void System::Net::Security::SslClientAuthenticationOptions::set_EnabledSslProtocols(::System::Security::Authentication::SslProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslClientAuthenticationOptions::set_EnabledSslProtocols");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnabledSslProtocols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Security.SslServerAuthenticationOptions
#include "System/Net/Security/SslServerAuthenticationOptions.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509RevocationMode _checkCertificateRevocation
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509RevocationMode& System::Net::Security::SslServerAuthenticationOptions::dyn__checkCertificateRevocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslServerAuthenticationOptions::dyn__checkCertificateRevocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_checkCertificateRevocation"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509RevocationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Authentication.SslProtocols _enabledSslProtocols
[[deprecated("Use field access instead!")]] ::System::Security::Authentication::SslProtocols& System::Net::Security::SslServerAuthenticationOptions::dyn__enabledSslProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslServerAuthenticationOptions::dyn__enabledSslProtocols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enabledSslProtocols"))->offset;
  return *reinterpret_cast<::System::Security::Authentication::SslProtocols*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Security.EncryptionPolicy _encryptionPolicy
[[deprecated("Use field access instead!")]] ::System::Net::Security::EncryptionPolicy& System::Net::Security::SslServerAuthenticationOptions::dyn__encryptionPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslServerAuthenticationOptions::dyn__encryptionPolicy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encryptionPolicy"))->offset;
  return *reinterpret_cast<::System::Net::Security::EncryptionPolicy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _allowRenegotiation
[[deprecated("Use field access instead!")]] bool& System::Net::Security::SslServerAuthenticationOptions::dyn__allowRenegotiation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslServerAuthenticationOptions::dyn__allowRenegotiation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowRenegotiation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ClientCertificateRequired>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Security::SslServerAuthenticationOptions::dyn_$ClientCertificateRequired$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslServerAuthenticationOptions::dyn_$ClientCertificateRequired$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ClientCertificateRequired>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate <ServerCertificate>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate*& System::Net::Security::SslServerAuthenticationOptions::dyn_$ServerCertificate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslServerAuthenticationOptions::dyn_$ServerCertificate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ServerCertificate>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Security.SslServerAuthenticationOptions.get_ClientCertificateRequired
bool System::Net::Security::SslServerAuthenticationOptions::get_ClientCertificateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslServerAuthenticationOptions::get_ClientCertificateRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificateRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslServerAuthenticationOptions.set_ClientCertificateRequired
void System::Net::Security::SslServerAuthenticationOptions::set_ClientCertificateRequired(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslServerAuthenticationOptions::set_ClientCertificateRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClientCertificateRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslServerAuthenticationOptions.get_ServerCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate* System::Net::Security::SslServerAuthenticationOptions::get_ServerCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslServerAuthenticationOptions::get_ServerCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslServerAuthenticationOptions.set_ServerCertificate
void System::Net::Security::SslServerAuthenticationOptions::set_ServerCertificate(::System::Security::Cryptography::X509Certificates::X509Certificate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslServerAuthenticationOptions::set_ServerCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ServerCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslServerAuthenticationOptions.get_EnabledSslProtocols
::System::Security::Authentication::SslProtocols System::Net::Security::SslServerAuthenticationOptions::get_EnabledSslProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslServerAuthenticationOptions::get_EnabledSslProtocols");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnabledSslProtocols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Authentication::SslProtocols, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslServerAuthenticationOptions.set_EnabledSslProtocols
void System::Net::Security::SslServerAuthenticationOptions::set_EnabledSslProtocols(::System::Security::Authentication::SslProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslServerAuthenticationOptions::set_EnabledSslProtocols");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnabledSslProtocols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslServerAuthenticationOptions.set_CertificateRevocationCheckMode
void System::Net::Security::SslServerAuthenticationOptions::set_CertificateRevocationCheckMode(::System::Security::Cryptography::X509Certificates::X509RevocationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslServerAuthenticationOptions::set_CertificateRevocationCheckMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CertificateRevocationCheckMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslServerAuthenticationOptions.set_EncryptionPolicy
void System::Net::Security::SslServerAuthenticationOptions::set_EncryptionPolicy(::System::Net::Security::EncryptionPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslServerAuthenticationOptions::set_EncryptionPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EncryptionPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Security.AuthenticatedStream
#include "System/Net/Security/AuthenticatedStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _InnerStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::Security::AuthenticatedStream::dyn__InnerStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticatedStream::dyn__InnerStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_InnerStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _LeaveStreamOpen
[[deprecated("Use field access instead!")]] bool& System::Net::Security::AuthenticatedStream::dyn__LeaveStreamOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticatedStream::dyn__LeaveStreamOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LeaveStreamOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Security.AuthenticatedStream.get_InnerStream
::System::IO::Stream* System::Net::Security::AuthenticatedStream::get_InnerStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticatedStream::get_InnerStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.AuthenticatedStream.get_IsAuthenticated
bool System::Net::Security::AuthenticatedStream::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticatedStream::get_IsAuthenticated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::AuthenticatedStream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.AuthenticatedStream.Dispose
void System::Net::Security::AuthenticatedStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticatedStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Security.AuthenticationLevel
#include "System/Net/Security/AuthenticationLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Security.AuthenticationLevel None
::System::Net::Security::AuthenticationLevel System::Net::Security::AuthenticationLevel::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticationLevel::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::AuthenticationLevel>("System.Net.Security", "AuthenticationLevel", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.AuthenticationLevel None
void System::Net::Security::AuthenticationLevel::_set_None(::System::Net::Security::AuthenticationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticationLevel::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "AuthenticationLevel", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.AuthenticationLevel MutualAuthRequested
::System::Net::Security::AuthenticationLevel System::Net::Security::AuthenticationLevel::_get_MutualAuthRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticationLevel::_get_MutualAuthRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::AuthenticationLevel>("System.Net.Security", "AuthenticationLevel", "MutualAuthRequested"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.AuthenticationLevel MutualAuthRequested
void System::Net::Security::AuthenticationLevel::_set_MutualAuthRequested(::System::Net::Security::AuthenticationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticationLevel::_set_MutualAuthRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "AuthenticationLevel", "MutualAuthRequested", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.AuthenticationLevel MutualAuthRequired
::System::Net::Security::AuthenticationLevel System::Net::Security::AuthenticationLevel::_get_MutualAuthRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticationLevel::_get_MutualAuthRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::AuthenticationLevel>("System.Net.Security", "AuthenticationLevel", "MutualAuthRequired"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.AuthenticationLevel MutualAuthRequired
void System::Net::Security::AuthenticationLevel::_set_MutualAuthRequired(::System::Net::Security::AuthenticationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticationLevel::_set_MutualAuthRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "AuthenticationLevel", "MutualAuthRequired", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Security::AuthenticationLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticationLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Security.EncryptionPolicy
#include "System/Net/Security/EncryptionPolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Security.EncryptionPolicy RequireEncryption
::System::Net::Security::EncryptionPolicy System::Net::Security::EncryptionPolicy::_get_RequireEncryption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::EncryptionPolicy::_get_RequireEncryption");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::EncryptionPolicy>("System.Net.Security", "EncryptionPolicy", "RequireEncryption"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.EncryptionPolicy RequireEncryption
void System::Net::Security::EncryptionPolicy::_set_RequireEncryption(::System::Net::Security::EncryptionPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::EncryptionPolicy::_set_RequireEncryption");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "EncryptionPolicy", "RequireEncryption", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.EncryptionPolicy AllowNoEncryption
::System::Net::Security::EncryptionPolicy System::Net::Security::EncryptionPolicy::_get_AllowNoEncryption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::EncryptionPolicy::_get_AllowNoEncryption");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::EncryptionPolicy>("System.Net.Security", "EncryptionPolicy", "AllowNoEncryption"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.EncryptionPolicy AllowNoEncryption
void System::Net::Security::EncryptionPolicy::_set_AllowNoEncryption(::System::Net::Security::EncryptionPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::EncryptionPolicy::_set_AllowNoEncryption");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "EncryptionPolicy", "AllowNoEncryption", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.EncryptionPolicy NoEncryption
::System::Net::Security::EncryptionPolicy System::Net::Security::EncryptionPolicy::_get_NoEncryption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::EncryptionPolicy::_get_NoEncryption");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::EncryptionPolicy>("System.Net.Security", "EncryptionPolicy", "NoEncryption"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.EncryptionPolicy NoEncryption
void System::Net::Security::EncryptionPolicy::_set_NoEncryption(::System::Net::Security::EncryptionPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::EncryptionPolicy::_set_NoEncryption");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "EncryptionPolicy", "NoEncryption", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Security::EncryptionPolicy::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::EncryptionPolicy::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Security.LocalCertificateSelectionCallback
#include "System/Net/Security/LocalCertificateSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Security.LocalCertificateSelectionCallback.Invoke
::System::Security::Cryptography::X509Certificates::X509Certificate* System::Net::Security::LocalCertificateSelectionCallback::Invoke(::Il2CppObject* sender, ::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::ArrayW<::StringW> acceptableIssuers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::LocalCertificateSelectionCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::LocalCertificateSelectionCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, sender, targetHost, localCertificates, remoteCertificate, acceptableIssuers);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Security.RemoteCertificateValidationCallback.Invoke
bool System::Net::Security::RemoteCertificateValidationCallback::Invoke(::Il2CppObject* sender, ::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::System::Security::Cryptography::X509Certificates::X509Chain* chain, ::System::Net::Security::SslPolicyErrors sslPolicyErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::RemoteCertificateValidationCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::RemoteCertificateValidationCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sender, certificate, chain, sslPolicyErrors);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SslPolicyErrors None
::System::Net::Security::SslPolicyErrors System::Net::Security::SslPolicyErrors::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SslPolicyErrors>("System.Net.Security", "SslPolicyErrors", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SslPolicyErrors None
void System::Net::Security::SslPolicyErrors::_set_None(::System::Net::Security::SslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SslPolicyErrors", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateNotAvailable
::System::Net::Security::SslPolicyErrors System::Net::Security::SslPolicyErrors::_get_RemoteCertificateNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_get_RemoteCertificateNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SslPolicyErrors>("System.Net.Security", "SslPolicyErrors", "RemoteCertificateNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateNotAvailable
void System::Net::Security::SslPolicyErrors::_set_RemoteCertificateNotAvailable(::System::Net::Security::SslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_set_RemoteCertificateNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SslPolicyErrors", "RemoteCertificateNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateNameMismatch
::System::Net::Security::SslPolicyErrors System::Net::Security::SslPolicyErrors::_get_RemoteCertificateNameMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_get_RemoteCertificateNameMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SslPolicyErrors>("System.Net.Security", "SslPolicyErrors", "RemoteCertificateNameMismatch"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateNameMismatch
void System::Net::Security::SslPolicyErrors::_set_RemoteCertificateNameMismatch(::System::Net::Security::SslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_set_RemoteCertificateNameMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SslPolicyErrors", "RemoteCertificateNameMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateChainErrors
::System::Net::Security::SslPolicyErrors System::Net::Security::SslPolicyErrors::_get_RemoteCertificateChainErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_get_RemoteCertificateChainErrors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SslPolicyErrors>("System.Net.Security", "SslPolicyErrors", "RemoteCertificateChainErrors"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateChainErrors
void System::Net::Security::SslPolicyErrors::_set_RemoteCertificateChainErrors(::System::Net::Security::SslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_set_RemoteCertificateChainErrors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SslPolicyErrors", "RemoteCertificateChainErrors", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Security::SslPolicyErrors::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Security.LocalCertSelectionCallback
#include "System/Net/Security/LocalCertSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Security.LocalCertSelectionCallback.Invoke
::System::Security::Cryptography::X509Certificates::X509Certificate* System::Net::Security::LocalCertSelectionCallback::Invoke(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::ArrayW<::StringW> acceptableIssuers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::LocalCertSelectionCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::LocalCertSelectionCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Security.ServerCertSelectionCallback
#include "System/Net/Security/ServerCertSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Security.ServerCertSelectionCallback.Invoke
::System::Security::Cryptography::X509Certificates::X509Certificate* System::Net::Security::ServerCertSelectionCallback::Invoke(::StringW hostName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::ServerCertSelectionCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::ServerCertSelectionCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, hostName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: System.Net.Security.SslStream/<>c__DisplayClass21_0
#include "System/Net/Security/SslStream_--c__DisplayClass21_0.hpp"
// Including type: Mono.Net.Security.MobileTlsProvider
#include "Mono/Net/Security/MobileTlsProvider.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: System.Net.Security.LocalCertificateSelectionCallback
#include "System/Net/Security/LocalCertificateSelectionCallback.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.MobileTlsProvider provider
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileTlsProvider*& System::Net::Security::SslStream::dyn_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::dyn_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provider"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileTlsProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.MonoTlsSettings settings
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsSettings*& System::Net::Security::SslStream::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Security.RemoteCertificateValidationCallback validationCallback
[[deprecated("Use field access instead!")]] ::System::Net::Security::RemoteCertificateValidationCallback*& System::Net::Security::SslStream::dyn_validationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::dyn_validationCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validationCallback"))->offset;
  return *reinterpret_cast<::System::Net::Security::RemoteCertificateValidationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Security.LocalCertificateSelectionCallback selectionCallback
[[deprecated("Use field access instead!")]] ::System::Net::Security::LocalCertificateSelectionCallback*& System::Net::Security::SslStream::dyn_selectionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::dyn_selectionCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionCallback"))->offset;
  return *reinterpret_cast<::System::Net::Security::LocalCertificateSelectionCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.MobileAuthenticatedStream impl
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileAuthenticatedStream*& System::Net::Security::SslStream::dyn_impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::dyn_impl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "impl"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean explicitSettings
[[deprecated("Use field access instead!")]] bool& System::Net::Security::SslStream::dyn_explicitSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::dyn_explicitSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "explicitSettings"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Security.SslStream.get_Impl
::Mono::Net::Security::MobileAuthenticatedStream* System::Net::Security::SslStream::get_Impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_Impl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::MobileAuthenticatedStream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_InternalTargetHost
::StringW System::Net::Security::SslStream::get_InternalTargetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_InternalTargetHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalTargetHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.GetProvider
::Mono::Net::Security::MobileTlsProvider* System::Net::Security::SslStream::GetProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::GetProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "SslStream", "GetProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::MobileTlsProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.SetAndVerifyValidationCallback
void System::Net::Security::SslStream::SetAndVerifyValidationCallback(::System::Net::Security::RemoteCertificateValidationCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::SetAndVerifyValidationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAndVerifyValidationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: System.Net.Security.SslStream.SetAndVerifySelectionCallback
void System::Net::Security::SslStream::SetAndVerifySelectionCallback(::System::Net::Security::LocalCertificateSelectionCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::SetAndVerifySelectionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAndVerifySelectionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: System.Net.Security.SslStream.AuthenticateAsClient
void System::Net::Security::SslStream::AuthenticateAsClient(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, ::System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::AuthenticateAsClient");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::SslStream*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation);
}
// Autogenerated method: System.Net.Security.SslStream.BeginAuthenticateAsClient
::System::IAsyncResult* System::Net::Security::SslStream::BeginAuthenticateAsClient(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, ::System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation, ::System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::BeginAuthenticateAsClient");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::SslStream*), 41));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation, asyncCallback, asyncState);
}
// Autogenerated method: System.Net.Security.SslStream.EndAuthenticateAsClient
void System::Net::Security::SslStream::EndAuthenticateAsClient(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::EndAuthenticateAsClient");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::SslStream*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Security.SslStream.AuthenticateAsServer
void System::Net::Security::SslStream::AuthenticateAsServer(::System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, bool clientCertificateRequired, ::System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::AuthenticateAsServer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::SslStream*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation);
}
// Autogenerated method: System.Net.Security.SslStream.AuthenticateAsClientAsync
::System::Threading::Tasks::Task* System::Net::Security::SslStream::AuthenticateAsClientAsync(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, ::System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::AuthenticateAsClientAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::SslStream*), 44));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation);
}
// Autogenerated method: System.Net.Security.SslStream.get_LocalCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate* System::Net::Security::SslStream::get_LocalCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_LocalCertificate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::SslStream*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.CheckDisposed
void System::Net::Security::SslStream::CheckDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::CheckDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_IsAuthenticated
bool System::Net::Security::SslStream::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_IsAuthenticated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::AuthenticatedStream*), 39));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_CanSeek
bool System::Net::Security::SslStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_CanRead
bool System::Net::Security::SslStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_CanTimeout
bool System::Net::Security::SslStream::get_CanTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_CanTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_CanWrite
bool System::Net::Security::SslStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_ReadTimeout
int System::Net::Security::SslStream::get_ReadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.set_ReadTimeout
void System::Net::Security::SslStream::set_ReadTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::set_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslStream.get_WriteTimeout
int System::Net::Security::SslStream::get_WriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_WriteTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.set_WriteTimeout
void System::Net::Security::SslStream::set_WriteTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::set_WriteTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslStream.get_Length
int64_t System::Net::Security::SslStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_Position
int64_t System::Net::Security::SslStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.set_Position
void System::Net::Security::SslStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslStream.SetLength
void System::Net::Security::SslStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslStream.Seek
int64_t System::Net::Security::SslStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 31));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.Net.Security.SslStream.FlushAsync
::System::Threading::Tasks::Task* System::Net::Security::SslStream::FlushAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::FlushAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: System.Net.Security.SslStream.Flush
void System::Net::Security::SslStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.Dispose
void System::Net::Security::SslStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::AuthenticatedStream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Security.SslStream.Read
int System::Net::Security::SslStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 33));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Net.Security.SslStream.Write
void System::Net::Security::SslStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Net.Security.SslStream.ReadAsync
::System::Threading::Tasks::Task_1<int>* System::Net::Security::SslStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.Net.Security.SslStream.WriteAsync
::System::Threading::Tasks::Task* System::Net::Security::SslStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.Net.Security.SslStream.BeginRead
::System::IAsyncResult* System::Net::Security::SslStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.Net.Security.SslStream.EndRead
int System::Net::Security::SslStream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::EndRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Security.SslStream.BeginWrite
::System::IAsyncResult* System::Net::Security::SslStream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.Net.Security.SslStream.EndWrite
void System::Net::Security::SslStream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Security.SslStream/<>c__DisplayClass21_0
#include "System/Net/Security/SslStream_--c__DisplayClass21_0.hpp"
// Including type: System.Net.Security.LocalCertificateSelectionCallback
#include "System/Net/Security/LocalCertificateSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Net.Security.LocalCertificateSelectionCallback callback
[[deprecated("Use field access instead!")]] ::System::Net::Security::LocalCertificateSelectionCallback*& System::Net::Security::SslStream::$$c__DisplayClass21_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::$$c__DisplayClass21_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Net::Security::LocalCertificateSelectionCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Security.SslStream <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::Security::SslStream*& System::Net::Security::SslStream::$$c__DisplayClass21_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::$$c__DisplayClass21_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::Security::SslStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Security.SslStream/<>c__DisplayClass21_0.<SetAndVerifySelectionCallback>b__0
::System::Security::Cryptography::X509Certificates::X509Certificate* System::Net::Security::SslStream::$$c__DisplayClass21_0::$SetAndVerifySelectionCallback$b__0(::StringW t, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* lc, ::System::Security::Cryptography::X509Certificates::X509Certificate* rc, ::ArrayW<::StringW> ai) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::$$c__DisplayClass21_0::<SetAndVerifySelectionCallback>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetAndVerifySelectionCallback>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(lc), ::il2cpp_utils::ExtractType(rc), ::il2cpp_utils::ExtractType(ai)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, t, lc, rc, ai);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Mime.Base64WriteStateInfo
#include "System/Net/Mime/Base64WriteStateInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Padding>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Net::Mime::Base64WriteStateInfo::dyn_$Padding$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::Base64WriteStateInfo::dyn_$Padding$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Padding>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte <LastBits>k__BackingField
[[deprecated("Use field access instead!")]] uint8_t& System::Net::Mime::Base64WriteStateInfo::dyn_$LastBits$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::Base64WriteStateInfo::dyn_$LastBits$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LastBits>k__BackingField"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Mime.Base64WriteStateInfo.get_Padding
int System::Net::Mime::Base64WriteStateInfo::get_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::Base64WriteStateInfo::get_Padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Mime.Base64WriteStateInfo.set_Padding
void System::Net::Mime::Base64WriteStateInfo::set_Padding(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::Base64WriteStateInfo::set_Padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Mime.Base64WriteStateInfo.get_LastBits
uint8_t System::Net::Mime::Base64WriteStateInfo::get_LastBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::Base64WriteStateInfo::get_LastBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Mime.Base64WriteStateInfo.set_LastBits
void System::Net::Mime::Base64WriteStateInfo::set_LastBits(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::Base64WriteStateInfo::set_LastBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Mime.WriteStateInfoBase
#include "System/Net/Mime/WriteStateInfoBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected readonly System.Byte[] _header
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::Mime::WriteStateInfoBase::dyn__header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::dyn__header");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_header"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.Byte[] _footer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::Mime::WriteStateInfoBase::dyn__footer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::dyn__footer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_footer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.Int32 _maxLineLength
[[deprecated("Use field access instead!")]] int& System::Net::Mime::WriteStateInfoBase::dyn__maxLineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::dyn__maxLineLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxLineLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Byte[] _buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::Mime::WriteStateInfoBase::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _currentLineLength
[[deprecated("Use field access instead!")]] int& System::Net::Mime::WriteStateInfoBase::dyn__currentLineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::dyn__currentLineLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentLineLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _currentBufferUsed
[[deprecated("Use field access instead!")]] int& System::Net::Mime::WriteStateInfoBase::dyn__currentBufferUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::dyn__currentBufferUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentBufferUsed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Mime.WriteStateInfoBase.get_FooterLength
int System::Net::Mime::WriteStateInfoBase::get_FooterLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::get_FooterLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FooterLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Mime.WriteStateInfoBase.get_Footer
::ArrayW<uint8_t> System::Net::Mime::WriteStateInfoBase::get_Footer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::get_Footer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Footer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Mime.WriteStateInfoBase.get_Header
::ArrayW<uint8_t> System::Net::Mime::WriteStateInfoBase::get_Header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::get_Header");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Header", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Mime.WriteStateInfoBase.get_Buffer
::ArrayW<uint8_t> System::Net::Mime::WriteStateInfoBase::get_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::get_Buffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Buffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Mime.WriteStateInfoBase.get_Length
int System::Net::Mime::WriteStateInfoBase::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Mime.WriteStateInfoBase.get_CurrentLineLength
int System::Net::Mime::WriteStateInfoBase::get_CurrentLineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::get_CurrentLineLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentLineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Mime.WriteStateInfoBase.EnsureSpaceInBuffer
void System::Net::Mime::WriteStateInfoBase::EnsureSpaceInBuffer(int moreBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::EnsureSpaceInBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureSpaceInBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moreBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, moreBytes);
}
// Autogenerated method: System.Net.Mime.WriteStateInfoBase.Append
void System::Net::Mime::WriteStateInfoBase::Append(uint8_t aByte) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aByte)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aByte);
}
// Autogenerated method: System.Net.Mime.WriteStateInfoBase.Append
void System::Net::Mime::WriteStateInfoBase::Append(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes);
}
// Autogenerated method: System.Net.Mime.WriteStateInfoBase.AppendCRLF
void System::Net::Mime::WriteStateInfoBase::AppendCRLF(bool includeSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::AppendCRLF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendCRLF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includeSpace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, includeSpace);
}
// Autogenerated method: System.Net.Mime.WriteStateInfoBase.AppendHeader
void System::Net::Mime::WriteStateInfoBase::AppendHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::AppendHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Mime.WriteStateInfoBase.AppendFooter
void System::Net::Mime::WriteStateInfoBase::AppendFooter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::AppendFooter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendFooter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Mime.WriteStateInfoBase.get_MaxLineLength
int System::Net::Mime::WriteStateInfoBase::get_MaxLineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::get_MaxLineLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxLineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Mime.WriteStateInfoBase.Reset
void System::Net::Mime::WriteStateInfoBase::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mime::WriteStateInfoBase::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Mail.SmtpDeliveryFormat
#include "System/Net/Mail/SmtpDeliveryFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Mail.SmtpDeliveryFormat SevenBit
::System::Net::Mail::SmtpDeliveryFormat System::Net::Mail::SmtpDeliveryFormat::_get_SevenBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mail::SmtpDeliveryFormat::_get_SevenBit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Mail::SmtpDeliveryFormat>("System.Net.Mail", "SmtpDeliveryFormat", "SevenBit"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Mail.SmtpDeliveryFormat SevenBit
void System::Net::Mail::SmtpDeliveryFormat::_set_SevenBit(::System::Net::Mail::SmtpDeliveryFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mail::SmtpDeliveryFormat::_set_SevenBit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Mail", "SmtpDeliveryFormat", "SevenBit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Mail.SmtpDeliveryFormat International
::System::Net::Mail::SmtpDeliveryFormat System::Net::Mail::SmtpDeliveryFormat::_get_International() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mail::SmtpDeliveryFormat::_get_International");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Mail::SmtpDeliveryFormat>("System.Net.Mail", "SmtpDeliveryFormat", "International"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Mail.SmtpDeliveryFormat International
void System::Net::Mail::SmtpDeliveryFormat::_set_International(::System::Net::Mail::SmtpDeliveryFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mail::SmtpDeliveryFormat::_set_International");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Mail", "SmtpDeliveryFormat", "International", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Mail::SmtpDeliveryFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mail::SmtpDeliveryFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Mail.SmtpDeliveryMethod
#include "System/Net/Mail/SmtpDeliveryMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Mail.SmtpDeliveryMethod Network
::System::Net::Mail::SmtpDeliveryMethod System::Net::Mail::SmtpDeliveryMethod::_get_Network() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mail::SmtpDeliveryMethod::_get_Network");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Mail::SmtpDeliveryMethod>("System.Net.Mail", "SmtpDeliveryMethod", "Network"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Mail.SmtpDeliveryMethod Network
void System::Net::Mail::SmtpDeliveryMethod::_set_Network(::System::Net::Mail::SmtpDeliveryMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mail::SmtpDeliveryMethod::_set_Network");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Mail", "SmtpDeliveryMethod", "Network", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Mail.SmtpDeliveryMethod SpecifiedPickupDirectory
::System::Net::Mail::SmtpDeliveryMethod System::Net::Mail::SmtpDeliveryMethod::_get_SpecifiedPickupDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mail::SmtpDeliveryMethod::_get_SpecifiedPickupDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Mail::SmtpDeliveryMethod>("System.Net.Mail", "SmtpDeliveryMethod", "SpecifiedPickupDirectory"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Mail.SmtpDeliveryMethod SpecifiedPickupDirectory
void System::Net::Mail::SmtpDeliveryMethod::_set_SpecifiedPickupDirectory(::System::Net::Mail::SmtpDeliveryMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mail::SmtpDeliveryMethod::_set_SpecifiedPickupDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Mail", "SmtpDeliveryMethod", "SpecifiedPickupDirectory", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Mail.SmtpDeliveryMethod PickupDirectoryFromIis
::System::Net::Mail::SmtpDeliveryMethod System::Net::Mail::SmtpDeliveryMethod::_get_PickupDirectoryFromIis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mail::SmtpDeliveryMethod::_get_PickupDirectoryFromIis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Mail::SmtpDeliveryMethod>("System.Net.Mail", "SmtpDeliveryMethod", "PickupDirectoryFromIis"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Mail.SmtpDeliveryMethod PickupDirectoryFromIis
void System::Net::Mail::SmtpDeliveryMethod::_set_PickupDirectoryFromIis(::System::Net::Mail::SmtpDeliveryMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mail::SmtpDeliveryMethod::_set_PickupDirectoryFromIis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Mail", "SmtpDeliveryMethod", "PickupDirectoryFromIis", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Mail::SmtpDeliveryMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Mail::SmtpDeliveryMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.DelegatingStream
#include "System/Net/Http/DelegatingStream.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.ValueTask`1
#include "System/Threading/Tasks/ValueTask_1.hpp"
// Including type: System.Memory`1
#include "System/Memory_1.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Threading.Tasks.ValueTask
#include "System/Threading/Tasks/ValueTask.hpp"
// Including type: System.ReadOnlyMemory`1
#include "System/ReadOnlyMemory_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream _innerStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::Http::DelegatingStream::dyn__innerStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::dyn__innerStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.DelegatingStream.get_CanRead
bool System::Net::Http::DelegatingStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.DelegatingStream.get_CanSeek
bool System::Net::Http::DelegatingStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.DelegatingStream.get_CanWrite
bool System::Net::Http::DelegatingStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.DelegatingStream.get_Length
int64_t System::Net::Http::DelegatingStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.DelegatingStream.get_Position
int64_t System::Net::Http::DelegatingStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.DelegatingStream.set_Position
void System::Net::Http::DelegatingStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.DelegatingStream.get_ReadTimeout
int System::Net::Http::DelegatingStream::get_ReadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::get_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.DelegatingStream.set_ReadTimeout
void System::Net::Http::DelegatingStream::set_ReadTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::set_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.DelegatingStream.get_CanTimeout
bool System::Net::Http::DelegatingStream::get_CanTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::get_CanTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.DelegatingStream.get_WriteTimeout
int System::Net::Http::DelegatingStream::get_WriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::get_WriteTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.DelegatingStream.set_WriteTimeout
void System::Net::Http::DelegatingStream::set_WriteTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::set_WriteTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.DelegatingStream.Dispose
void System::Net::Http::DelegatingStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.DelegatingStream.Seek
int64_t System::Net::Http::DelegatingStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 31));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.Net.Http.DelegatingStream.Read
int System::Net::Http::DelegatingStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 33));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Net.Http.DelegatingStream.Read
int System::Net::Http::DelegatingStream::Read(::System::Span_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 34));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.Net.Http.DelegatingStream.ReadByte
int System::Net::Http::DelegatingStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 35));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.DelegatingStream.ReadAsync
::System::Threading::Tasks::Task_1<int>* System::Net::Http::DelegatingStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.Net.Http.DelegatingStream.ReadAsync
::System::Threading::Tasks::ValueTask_1<int> System::Net::Http::DelegatingStream::ReadAsync(::System::Memory_1<uint8_t> buffer, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::ValueTask_1<int>, false>(this, ___internal__method, buffer, cancellationToken);
}
// Autogenerated method: System.Net.Http.DelegatingStream.BeginRead
::System::IAsyncResult* System::Net::Http::DelegatingStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.Net.Http.DelegatingStream.EndRead
int System::Net::Http::DelegatingStream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::EndRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Http.DelegatingStream.Flush
void System::Net::Http::DelegatingStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.DelegatingStream.FlushAsync
::System::Threading::Tasks::Task* System::Net::Http::DelegatingStream::FlushAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::FlushAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: System.Net.Http.DelegatingStream.SetLength
void System::Net::Http::DelegatingStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.DelegatingStream.Write
void System::Net::Http::DelegatingStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Net.Http.DelegatingStream.Write
void System::Net::Http::DelegatingStream::Write(::System::ReadOnlySpan_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.Net.Http.DelegatingStream.WriteByte
void System::Net::Http::DelegatingStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.DelegatingStream.WriteAsync
::System::Threading::Tasks::Task* System::Net::Http::DelegatingStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.Net.Http.DelegatingStream.WriteAsync
::System::Threading::Tasks::ValueTask System::Net::Http::DelegatingStream::WriteAsync(::System::ReadOnlyMemory_1<uint8_t> buffer, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::ValueTask, false>(this, ___internal__method, buffer, cancellationToken);
}
// Autogenerated method: System.Net.Http.DelegatingStream.BeginWrite
::System::IAsyncResult* System::Net::Http::DelegatingStream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.Net.Http.DelegatingStream.EndWrite
void System::Net::Http::DelegatingStream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::DelegatingStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DefaultValueAttribute
#include "System/ComponentModel/DefaultValueAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object s_convertFromInvariantString
::Il2CppObject* System::ComponentModel::DefaultValueAttribute::_get_s_convertFromInvariantString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::_get_s_convertFromInvariantString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "DefaultValueAttribute", "s_convertFromInvariantString"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_convertFromInvariantString
void System::ComponentModel::DefaultValueAttribute::_set_s_convertFromInvariantString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::_set_s_convertFromInvariantString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DefaultValueAttribute", "s_convertFromInvariantString", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object _value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::DefaultValueAttribute::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DefaultValueAttribute.get_Value
::Il2CppObject* System::ComponentModel::DefaultValueAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::DefaultValueAttribute*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultValueAttribute.SetValue
void System::ComponentModel::DefaultValueAttribute::SetValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.DefaultValueAttribute.<.ctor>g__TryConvertFromInvariantString|2_0
bool System::ComponentModel::DefaultValueAttribute::$_ctor$g__TryConvertFromInvariantString_2_0(::System::Type* typeToConvert, ::StringW stringValue, ByRef<::Il2CppObject*> conversionResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::<.ctor>g__TryConvertFromInvariantString|2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DefaultValueAttribute", "<.ctor>g__TryConvertFromInvariantString|2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeToConvert), ::il2cpp_utils::ExtractType(stringValue), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeToConvert, stringValue, byref(conversionResult));
}
// Autogenerated method: System.ComponentModel.DefaultValueAttribute.Equals
bool System::ComponentModel::DefaultValueAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DefaultValueAttribute.GetHashCode
int System::ComponentModel::DefaultValueAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EditorBrowsableAttribute
#include "System/ComponentModel/EditorBrowsableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EditorBrowsableState browsableState
[[deprecated("Use field access instead!")]] ::System::ComponentModel::EditorBrowsableState& System::ComponentModel::EditorBrowsableAttribute::dyn_browsableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableAttribute::dyn_browsableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "browsableState"))->offset;
  return *reinterpret_cast<::System::ComponentModel::EditorBrowsableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EditorBrowsableAttribute.get_State
::System::ComponentModel::EditorBrowsableState System::ComponentModel::EditorBrowsableAttribute::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableAttribute::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EditorBrowsableState, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EditorBrowsableAttribute.Equals
bool System::ComponentModel::EditorBrowsableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.EditorBrowsableAttribute.GetHashCode
int System::ComponentModel::EditorBrowsableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.EditorBrowsableState
#include "System/ComponentModel/EditorBrowsableState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.EditorBrowsableState Always
::System::ComponentModel::EditorBrowsableState System::ComponentModel::EditorBrowsableState::_get_Always() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_get_Always");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EditorBrowsableState>("System.ComponentModel", "EditorBrowsableState", "Always"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.EditorBrowsableState Always
void System::ComponentModel::EditorBrowsableState::_set_Always(::System::ComponentModel::EditorBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_set_Always");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EditorBrowsableState", "Always", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.EditorBrowsableState Never
::System::ComponentModel::EditorBrowsableState System::ComponentModel::EditorBrowsableState::_get_Never() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_get_Never");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EditorBrowsableState>("System.ComponentModel", "EditorBrowsableState", "Never"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.EditorBrowsableState Never
void System::ComponentModel::EditorBrowsableState::_set_Never(::System::ComponentModel::EditorBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_set_Never");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EditorBrowsableState", "Never", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.EditorBrowsableState Advanced
::System::ComponentModel::EditorBrowsableState System::ComponentModel::EditorBrowsableState::_get_Advanced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_get_Advanced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EditorBrowsableState>("System.ComponentModel", "EditorBrowsableState", "Advanced"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.EditorBrowsableState Advanced
void System::ComponentModel::EditorBrowsableState::_set_Advanced(::System::ComponentModel::EditorBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_set_Advanced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EditorBrowsableState", "Advanced", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::EditorBrowsableState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.AsyncOperation
#include "System/ComponentModel/AsyncOperation.hpp"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.SynchronizationContext _syncContext
[[deprecated("Use field access instead!")]] ::System::Threading::SynchronizationContext*& System::ComponentModel::AsyncOperation::dyn__syncContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperation::dyn__syncContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncContext"))->offset;
  return *reinterpret_cast<::System::Threading::SynchronizationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _userSuppliedState
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::AsyncOperation::dyn__userSuppliedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperation::dyn__userSuppliedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userSuppliedState"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _alreadyCompleted
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::AsyncOperation::dyn__alreadyCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperation::dyn__alreadyCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alreadyCompleted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.AsyncOperation.get_UserSuppliedState
::Il2CppObject* System::ComponentModel::AsyncOperation::get_UserSuppliedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperation::get_UserSuppliedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserSuppliedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AsyncOperation.get_SynchronizationContext
::System::Threading::SynchronizationContext* System::ComponentModel::AsyncOperation::get_SynchronizationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperation::get_SynchronizationContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SynchronizationContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AsyncOperation.Post
void System::ComponentModel::AsyncOperation::Post(::System::Threading::SendOrPostCallback* d, ::Il2CppObject* arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperation::Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, d, arg);
}
// Autogenerated method: System.ComponentModel.AsyncOperation.PostOperationCompleted
void System::ComponentModel::AsyncOperation::PostOperationCompleted(::System::Threading::SendOrPostCallback* d, ::Il2CppObject* arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperation::PostOperationCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostOperationCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, d, arg);
}
// Autogenerated method: System.ComponentModel.AsyncOperation.OperationCompleted
void System::ComponentModel::AsyncOperation::OperationCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperation::OperationCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OperationCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AsyncOperation.PostCore
void System::ComponentModel::AsyncOperation::PostCore(::System::Threading::SendOrPostCallback* d, ::Il2CppObject* arg, bool markCompleted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperation::PostCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(markCompleted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, d, arg, markCompleted);
}
// Autogenerated method: System.ComponentModel.AsyncOperation.OperationCompletedCore
void System::ComponentModel::AsyncOperation::OperationCompletedCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperation::OperationCompletedCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OperationCompletedCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AsyncOperation.VerifyNotCompleted
void System::ComponentModel::AsyncOperation::VerifyNotCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperation::VerifyNotCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyNotCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AsyncOperation.VerifyDelegateNotNull
void System::ComponentModel::AsyncOperation::VerifyDelegateNotNull(::System::Threading::SendOrPostCallback* d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperation::VerifyDelegateNotNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyDelegateNotNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, d);
}
// Autogenerated method: System.ComponentModel.AsyncOperation.CreateOperation
::System::ComponentModel::AsyncOperation* System::ComponentModel::AsyncOperation::CreateOperation(::Il2CppObject* userSuppliedState, ::System::Threading::SynchronizationContext* syncContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperation::CreateOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "AsyncOperation", "CreateOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userSuppliedState), ::il2cpp_utils::ExtractType(syncContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AsyncOperation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userSuppliedState, syncContext);
}
// Autogenerated method: System.ComponentModel.AsyncOperation.Finalize
void System::ComponentModel::AsyncOperation::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperation::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.AsyncOperationManager
#include "System/ComponentModel/AsyncOperationManager.hpp"
// Including type: System.ComponentModel.AsyncOperation
#include "System/ComponentModel/AsyncOperation.hpp"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.AsyncOperationManager.CreateOperation
::System::ComponentModel::AsyncOperation* System::ComponentModel::AsyncOperationManager::CreateOperation(::Il2CppObject* userSuppliedState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperationManager::CreateOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "AsyncOperationManager", "CreateOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userSuppliedState)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AsyncOperation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userSuppliedState);
}
// Autogenerated method: System.ComponentModel.AsyncOperationManager.get_SynchronizationContext
::System::Threading::SynchronizationContext* System::ComponentModel::AsyncOperationManager::get_SynchronizationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperationManager::get_SynchronizationContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "AsyncOperationManager", "get_SynchronizationContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.AsyncOperationManager.set_SynchronizationContext
void System::ComponentModel::AsyncOperationManager::set_SynchronizationContext(::System::Threading::SynchronizationContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperationManager::set_SynchronizationContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "AsyncOperationManager", "set_SynchronizationContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.BackgroundWorker
#include "System/ComponentModel/BackgroundWorker.hpp"
// Including type: System.ComponentModel.AsyncOperation
#include "System/ComponentModel/AsyncOperation.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
// Including type: System.ComponentModel.DoWorkEventHandler
#include "System/ComponentModel/DoWorkEventHandler.hpp"
// Including type: System.ComponentModel.ProgressChangedEventHandler
#include "System/ComponentModel/ProgressChangedEventHandler.hpp"
// Including type: System.ComponentModel.RunWorkerCompletedEventHandler
#include "System/ComponentModel/RunWorkerCompletedEventHandler.hpp"
// Including type: System.ComponentModel.DoWorkEventArgs
#include "System/ComponentModel/DoWorkEventArgs.hpp"
// Including type: System.ComponentModel.RunWorkerCompletedEventArgs
#include "System/ComponentModel/RunWorkerCompletedEventArgs.hpp"
// Including type: System.ComponentModel.ProgressChangedEventArgs
#include "System/ComponentModel/ProgressChangedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canCancelWorker
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::BackgroundWorker::dyn__canCancelWorker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::dyn__canCancelWorker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canCancelWorker"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _workerReportsProgress
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::BackgroundWorker::dyn__workerReportsProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::dyn__workerReportsProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_workerReportsProgress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _cancellationPending
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::BackgroundWorker::dyn__cancellationPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::dyn__cancellationPending");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationPending"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isRunning
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::BackgroundWorker::dyn__isRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::dyn__isRunning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isRunning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.AsyncOperation _asyncOperation
[[deprecated("Use field access instead!")]] ::System::ComponentModel::AsyncOperation*& System::ComponentModel::BackgroundWorker::dyn__asyncOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::dyn__asyncOperation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncOperation"))->offset;
  return *reinterpret_cast<::System::ComponentModel::AsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.SendOrPostCallback _operationCompleted
[[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& System::ComponentModel::BackgroundWorker::dyn__operationCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::dyn__operationCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_operationCompleted"))->offset;
  return *reinterpret_cast<::System::Threading::SendOrPostCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.SendOrPostCallback _progressReporter
[[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& System::ComponentModel::BackgroundWorker::dyn__progressReporter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::dyn__progressReporter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progressReporter"))->offset;
  return *reinterpret_cast<::System::Threading::SendOrPostCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.DoWorkEventHandler DoWork
[[deprecated("Use field access instead!")]] ::System::ComponentModel::DoWorkEventHandler*& System::ComponentModel::BackgroundWorker::dyn_DoWork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::dyn_DoWork");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DoWork"))->offset;
  return *reinterpret_cast<::System::ComponentModel::DoWorkEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ProgressChangedEventHandler ProgressChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ProgressChangedEventHandler*& System::ComponentModel::BackgroundWorker::dyn_ProgressChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::dyn_ProgressChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProgressChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ProgressChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.RunWorkerCompletedEventHandler RunWorkerCompleted
[[deprecated("Use field access instead!")]] ::System::ComponentModel::RunWorkerCompletedEventHandler*& System::ComponentModel::BackgroundWorker::dyn_RunWorkerCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::dyn_RunWorkerCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RunWorkerCompleted"))->offset;
  return *reinterpret_cast<::System::ComponentModel::RunWorkerCompletedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.AsyncOperationCompleted
void System::ComponentModel::BackgroundWorker::AsyncOperationCompleted(::Il2CppObject* arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::AsyncOperationCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncOperationCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.get_CancellationPending
bool System::ComponentModel::BackgroundWorker::get_CancellationPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::get_CancellationPending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CancellationPending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.CancelAsync
void System::ComponentModel::BackgroundWorker::CancelAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::CancelAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.add_DoWork
void System::ComponentModel::BackgroundWorker::add_DoWork(::System::ComponentModel::DoWorkEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::add_DoWork");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_DoWork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.remove_DoWork
void System::ComponentModel::BackgroundWorker::remove_DoWork(::System::ComponentModel::DoWorkEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::remove_DoWork");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_DoWork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.get_IsBusy
bool System::ComponentModel::BackgroundWorker::get_IsBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::get_IsBusy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsBusy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.OnDoWork
void System::ComponentModel::BackgroundWorker::OnDoWork(::System::ComponentModel::DoWorkEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::OnDoWork");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BackgroundWorker*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted
void System::ComponentModel::BackgroundWorker::OnRunWorkerCompleted(::System::ComponentModel::RunWorkerCompletedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::OnRunWorkerCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BackgroundWorker*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.OnProgressChanged
void System::ComponentModel::BackgroundWorker::OnProgressChanged(::System::ComponentModel::ProgressChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::OnProgressChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BackgroundWorker*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.add_ProgressChanged
void System::ComponentModel::BackgroundWorker::add_ProgressChanged(::System::ComponentModel::ProgressChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::add_ProgressChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ProgressChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.remove_ProgressChanged
void System::ComponentModel::BackgroundWorker::remove_ProgressChanged(::System::ComponentModel::ProgressChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::remove_ProgressChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ProgressChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.ProgressReporter
void System::ComponentModel::BackgroundWorker::ProgressReporter(::Il2CppObject* arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::ProgressReporter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProgressReporter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.ReportProgress
void System::ComponentModel::BackgroundWorker::ReportProgress(int percentProgress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::ReportProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(percentProgress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, percentProgress);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.ReportProgress
void System::ComponentModel::BackgroundWorker::ReportProgress(int percentProgress, ::Il2CppObject* userState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::ReportProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(percentProgress), ::il2cpp_utils::ExtractType(userState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, percentProgress, userState);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.RunWorkerAsync
void System::ComponentModel::BackgroundWorker::RunWorkerAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::RunWorkerAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunWorkerAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.RunWorkerAsync
void System::ComponentModel::BackgroundWorker::RunWorkerAsync(::Il2CppObject* argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::RunWorkerAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunWorkerAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argument)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, argument);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.add_RunWorkerCompleted
void System::ComponentModel::BackgroundWorker::add_RunWorkerCompleted(::System::ComponentModel::RunWorkerCompletedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::add_RunWorkerCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_RunWorkerCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.remove_RunWorkerCompleted
void System::ComponentModel::BackgroundWorker::remove_RunWorkerCompleted(::System::ComponentModel::RunWorkerCompletedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::remove_RunWorkerCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_RunWorkerCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.get_WorkerReportsProgress
bool System::ComponentModel::BackgroundWorker::get_WorkerReportsProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::get_WorkerReportsProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WorkerReportsProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.set_WorkerReportsProgress
void System::ComponentModel::BackgroundWorker::set_WorkerReportsProgress(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::set_WorkerReportsProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WorkerReportsProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.get_WorkerSupportsCancellation
bool System::ComponentModel::BackgroundWorker::get_WorkerSupportsCancellation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::get_WorkerSupportsCancellation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WorkerSupportsCancellation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.set_WorkerSupportsCancellation
void System::ComponentModel::BackgroundWorker::set_WorkerSupportsCancellation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::set_WorkerSupportsCancellation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WorkerSupportsCancellation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.WorkerThreadStart
void System::ComponentModel::BackgroundWorker::WorkerThreadStart(::Il2CppObject* argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::WorkerThreadStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorkerThreadStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argument)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, argument);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.<RunWorkerAsync>b__27_0
void System::ComponentModel::BackgroundWorker::$RunWorkerAsync$b__27_0(::Il2CppObject* arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::<RunWorkerAsync>b__27_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RunWorkerAsync>b__27_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg);
}
// Autogenerated method: System.ComponentModel.BackgroundWorker.Dispose
void System::ComponentModel::BackgroundWorker::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BackgroundWorker::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::Component*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.BrowsableAttribute
#include "System/ComponentModel/BrowsableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.BrowsableAttribute Yes
::System::ComponentModel::BrowsableAttribute* System::ComponentModel::BrowsableAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::BrowsableAttribute*>("System.ComponentModel", "BrowsableAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.BrowsableAttribute Yes
void System::ComponentModel::BrowsableAttribute::_set_Yes(::System::ComponentModel::BrowsableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BrowsableAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.BrowsableAttribute No
::System::ComponentModel::BrowsableAttribute* System::ComponentModel::BrowsableAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::BrowsableAttribute*>("System.ComponentModel", "BrowsableAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.BrowsableAttribute No
void System::ComponentModel::BrowsableAttribute::_set_No(::System::ComponentModel::BrowsableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BrowsableAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.BrowsableAttribute Default
::System::ComponentModel::BrowsableAttribute* System::ComponentModel::BrowsableAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::BrowsableAttribute*>("System.ComponentModel", "BrowsableAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.BrowsableAttribute Default
void System::ComponentModel::BrowsableAttribute::_set_Default(::System::ComponentModel::BrowsableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BrowsableAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <Browsable>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::BrowsableAttribute::dyn_$Browsable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::dyn_$Browsable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Browsable>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute.get_Browsable
bool System::ComponentModel::BrowsableAttribute::get_Browsable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::get_Browsable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Browsable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute..cctor
void System::ComponentModel::BrowsableAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "BrowsableAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute.Equals
bool System::ComponentModel::BrowsableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute.GetHashCode
int System::ComponentModel::BrowsableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute.IsDefaultAttribute
bool System::ComponentModel::BrowsableAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ComponentCollection
#include "System/ComponentModel/ComponentCollection.hpp"
// Including type: System.ComponentModel.IComponent
#include "System/ComponentModel/IComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ComponentCollection.get_Item
::System::ComponentModel::IComponent* System::ComponentModel::ComponentCollection::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComponentCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ComponentCollection*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IComponent*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.ComponentModel.ComponentCollection.get_Item
::System::ComponentModel::IComponent* System::ComponentModel::ComponentCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComponentCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ComponentCollection*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IComponent*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.ComponentCollection.CopyTo
void System::ComponentModel::ComponentCollection::CopyTo(::ArrayW<::System::ComponentModel::IComponent*> array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComponentCollection::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DescriptionAttribute
#include "System/ComponentModel/DescriptionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DescriptionAttribute Default
::System::ComponentModel::DescriptionAttribute* System::ComponentModel::DescriptionAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DescriptionAttribute*>("System.ComponentModel", "DescriptionAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DescriptionAttribute Default
void System::ComponentModel::DescriptionAttribute::_set_Default(::System::ComponentModel::DescriptionAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DescriptionAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <DescriptionValue>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DescriptionAttribute::dyn_$DescriptionValue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::dyn_$DescriptionValue$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DescriptionValue>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.get_Description
::StringW System::ComponentModel::DescriptionAttribute::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::get_Description");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::DescriptionAttribute*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.get_DescriptionValue
::StringW System::ComponentModel::DescriptionAttribute::get_DescriptionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::get_DescriptionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DescriptionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.set_DescriptionValue
void System::ComponentModel::DescriptionAttribute::set_DescriptionValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::set_DescriptionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DescriptionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute..cctor
void System::ComponentModel::DescriptionAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DescriptionAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.Equals
bool System::ComponentModel::DescriptionAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.GetHashCode
int System::ComponentModel::DescriptionAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.IsDefaultAttribute
bool System::ComponentModel::DescriptionAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DesignOnlyAttribute
#include "System/ComponentModel/DesignOnlyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignOnlyAttribute Yes
::System::ComponentModel::DesignOnlyAttribute* System::ComponentModel::DesignOnlyAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignOnlyAttribute*>("System.ComponentModel", "DesignOnlyAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignOnlyAttribute Yes
void System::ComponentModel::DesignOnlyAttribute::_set_Yes(::System::ComponentModel::DesignOnlyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignOnlyAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignOnlyAttribute No
::System::ComponentModel::DesignOnlyAttribute* System::ComponentModel::DesignOnlyAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignOnlyAttribute*>("System.ComponentModel", "DesignOnlyAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignOnlyAttribute No
void System::ComponentModel::DesignOnlyAttribute::_set_No(::System::ComponentModel::DesignOnlyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignOnlyAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignOnlyAttribute Default
::System::ComponentModel::DesignOnlyAttribute* System::ComponentModel::DesignOnlyAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignOnlyAttribute*>("System.ComponentModel", "DesignOnlyAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignOnlyAttribute Default
void System::ComponentModel::DesignOnlyAttribute::_set_Default(::System::ComponentModel::DesignOnlyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignOnlyAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <IsDesignOnly>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::DesignOnlyAttribute::dyn_$IsDesignOnly$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::dyn_$IsDesignOnly$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsDesignOnly>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DesignOnlyAttribute.get_IsDesignOnly
bool System::ComponentModel::DesignOnlyAttribute::get_IsDesignOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::get_IsDesignOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDesignOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignOnlyAttribute..cctor
void System::ComponentModel::DesignOnlyAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DesignOnlyAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignOnlyAttribute.Equals
bool System::ComponentModel::DesignOnlyAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DesignOnlyAttribute.GetHashCode
int System::ComponentModel::DesignOnlyAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute
bool System::ComponentModel::DesignOnlyAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DesignerCategoryAttribute
#include "System/ComponentModel/DesignerCategoryAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Component
::System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_get_Component");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Component"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Component
void System::ComponentModel::DesignerCategoryAttribute::_set_Component(::System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_set_Component");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Component", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Default
::System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Default
void System::ComponentModel::DesignerCategoryAttribute::_set_Default(::System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Form
::System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_get_Form");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Form"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Form
void System::ComponentModel::DesignerCategoryAttribute::_set_Form(::System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_set_Form");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Form", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Generic
::System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Generic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_get_Generic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Generic"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Generic
void System::ComponentModel::DesignerCategoryAttribute::_set_Generic(::System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_set_Generic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Generic", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Category>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DesignerCategoryAttribute::dyn_$Category$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::dyn_$Category$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Category>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.get_Category
::StringW System::ComponentModel::DesignerCategoryAttribute::get_Category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::get_Category");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Category", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute..cctor
void System::ComponentModel::DesignerCategoryAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DesignerCategoryAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.Equals
bool System::ComponentModel::DesignerCategoryAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.GetHashCode
int System::ComponentModel::DesignerCategoryAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.IsDefaultAttribute
bool System::ComponentModel::DesignerCategoryAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.get_TypeId
::Il2CppObject* System::ComponentModel::DesignerCategoryAttribute::get_TypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::get_TypeId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.DesignerSerializationVisibility
#include "System/ComponentModel/DesignerSerializationVisibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DesignerSerializationVisibility Hidden
::System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibility::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibility>("System.ComponentModel", "DesignerSerializationVisibility", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DesignerSerializationVisibility Hidden
void System::ComponentModel::DesignerSerializationVisibility::_set_Hidden(::System::ComponentModel::DesignerSerializationVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibility", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DesignerSerializationVisibility Visible
::System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibility::_get_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_get_Visible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibility>("System.ComponentModel", "DesignerSerializationVisibility", "Visible"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DesignerSerializationVisibility Visible
void System::ComponentModel::DesignerSerializationVisibility::_set_Visible(::System::ComponentModel::DesignerSerializationVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_set_Visible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibility", "Visible", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DesignerSerializationVisibility Content
::System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibility::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibility>("System.ComponentModel", "DesignerSerializationVisibility", "Content"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DesignerSerializationVisibility Content
void System::ComponentModel::DesignerSerializationVisibility::_set_Content(::System::ComponentModel::DesignerSerializationVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibility", "Content", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::DesignerSerializationVisibility::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DesignerSerializationVisibilityAttribute
#include "System/ComponentModel/DesignerSerializationVisibilityAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Content
::System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Content"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Content
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Content(::System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Content", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Hidden
::System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Hidden
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Hidden(::System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Visible
::System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Visible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Visible"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Visible
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Visible(::System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Visible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Visible", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Default
::System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Default
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Default(::System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.ComponentModel.DesignerSerializationVisibility <Visibility>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ComponentModel::DesignerSerializationVisibility& System::ComponentModel::DesignerSerializationVisibilityAttribute::dyn_$Visibility$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::dyn_$Visibility$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Visibility>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ComponentModel::DesignerSerializationVisibility*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.get_Visibility
::System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibilityAttribute::get_Visibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::get_Visibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Visibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::DesignerSerializationVisibility, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute..cctor
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DesignerSerializationVisibilityAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals
bool System::ComponentModel::DesignerSerializationVisibilityAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode
int System::ComponentModel::DesignerSerializationVisibilityAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute
bool System::ComponentModel::DesignerSerializationVisibilityAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DisplayNameAttribute
#include "System/ComponentModel/DisplayNameAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DisplayNameAttribute Default
::System::ComponentModel::DisplayNameAttribute* System::ComponentModel::DisplayNameAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DisplayNameAttribute*>("System.ComponentModel", "DisplayNameAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DisplayNameAttribute Default
void System::ComponentModel::DisplayNameAttribute::_set_Default(::System::ComponentModel::DisplayNameAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DisplayNameAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <DisplayNameValue>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DisplayNameAttribute::dyn_$DisplayNameValue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::dyn_$DisplayNameValue$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DisplayNameValue>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.get_DisplayName
::StringW System::ComponentModel::DisplayNameAttribute::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::get_DisplayName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::DisplayNameAttribute*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.get_DisplayNameValue
::StringW System::ComponentModel::DisplayNameAttribute::get_DisplayNameValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::get_DisplayNameValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisplayNameValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.set_DisplayNameValue
void System::ComponentModel::DisplayNameAttribute::set_DisplayNameValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::set_DisplayNameValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DisplayNameValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute..cctor
void System::ComponentModel::DisplayNameAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DisplayNameAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.Equals
bool System::ComponentModel::DisplayNameAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.GetHashCode
int System::ComponentModel::DisplayNameAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute
bool System::ComponentModel::DisplayNameAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EventHandlerList
#include "System/ComponentModel/EventHandlerList.hpp"
// Including type: System.ComponentModel.EventHandlerList/ListEntry
#include "System/ComponentModel/EventHandlerList_ListEntry.hpp"
// Including type: System.ComponentModel.Component
#include "System/ComponentModel/Component.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EventHandlerList/ListEntry _head
[[deprecated("Use field access instead!")]] ::System::ComponentModel::EventHandlerList::ListEntry*& System::ComponentModel::EventHandlerList::dyn__head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::dyn__head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_head"))->offset;
  return *reinterpret_cast<::System::ComponentModel::EventHandlerList::ListEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.Component _parent
[[deprecated("Use field access instead!")]] ::System::ComponentModel::Component*& System::ComponentModel::EventHandlerList::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::System::ComponentModel::Component**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EventHandlerList.get_Item
::System::Delegate* System::ComponentModel::EventHandlerList::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.ComponentModel.EventHandlerList.set_Item
void System::ComponentModel::EventHandlerList::set_Item(::Il2CppObject* key, ::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.ComponentModel.EventHandlerList.AddHandler
void System::ComponentModel::EventHandlerList::AddHandler(::Il2CppObject* key, ::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::AddHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.ComponentModel.EventHandlerList.AddHandlers
void System::ComponentModel::EventHandlerList::AddHandlers(::System::ComponentModel::EventHandlerList* listToAddFrom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::AddHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listToAddFrom)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listToAddFrom);
}
// Autogenerated method: System.ComponentModel.EventHandlerList.Dispose
void System::ComponentModel::EventHandlerList::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventHandlerList*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventHandlerList.Find
::System::ComponentModel::EventHandlerList::ListEntry* System::ComponentModel::EventHandlerList::Find(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventHandlerList::ListEntry*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.ComponentModel.EventHandlerList.RemoveHandler
void System::ComponentModel::EventHandlerList::RemoveHandler(::Il2CppObject* key, ::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::RemoveHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EventHandlerList/ListEntry
#include "System/ComponentModel/EventHandlerList_ListEntry.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.ComponentModel.EventHandlerList/ListEntry _next
[[deprecated("Use field access instead!")]] ::System::ComponentModel::EventHandlerList::ListEntry*& System::ComponentModel::EventHandlerList::ListEntry::dyn__next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::ListEntry::dyn__next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_next"))->offset;
  return *reinterpret_cast<::System::ComponentModel::EventHandlerList::ListEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object _key
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::EventHandlerList::ListEntry::dyn__key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::ListEntry::dyn__key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_key"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Delegate _handler
[[deprecated("Use field access instead!")]] ::System::Delegate*& System::ComponentModel::EventHandlerList::ListEntry::dyn__handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::ListEntry::dyn__handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handler"))->offset;
  return *reinterpret_cast<::System::Delegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IContainer
#include "System/ComponentModel/IContainer.hpp"
// Including type: System.ComponentModel.IComponent
#include "System/ComponentModel/IComponent.hpp"
// Including type: System.ComponentModel.ComponentCollection
#include "System/ComponentModel/ComponentCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IContainer.Add
void System::ComponentModel::IContainer::Add(::System::ComponentModel::IComponent* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IContainer::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IContainer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.IContainer.Add
void System::ComponentModel::IContainer::Add(::System::ComponentModel::IComponent* component, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IContainer::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IContainer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, name);
}
// Autogenerated method: System.ComponentModel.IContainer.get_Components
::System::ComponentModel::ComponentCollection* System::ComponentModel::IContainer::get_Components() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IContainer::get_Components");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IContainer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ComponentCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IContainer.Remove
void System::ComponentModel::IContainer::Remove(::System::ComponentModel::IComponent* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IContainer::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IContainer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ISite
#include "System/ComponentModel/ISite.hpp"
// Including type: System.ComponentModel.IComponent
#include "System/ComponentModel/IComponent.hpp"
// Including type: System.ComponentModel.IContainer
#include "System/ComponentModel/IContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ISite.get_Component
::System::ComponentModel::IComponent* System::ComponentModel::ISite::get_Component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISite::get_Component");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISite*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IComponent*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISite.get_Container
::System::ComponentModel::IContainer* System::ComponentModel::ISite::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISite::get_Container");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISite*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IContainer*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISite.get_DesignMode
bool System::ComponentModel::ISite::get_DesignMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISite::get_DesignMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISite*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISite.get_Name
::StringW System::ComponentModel::ISite::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISite::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISite*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISite.set_Name
void System::ComponentModel::ISite::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISite::set_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISite*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ISupportInitialize
#include "System/ComponentModel/ISupportInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ISupportInitialize.BeginInit
void System::ComponentModel::ISupportInitialize::BeginInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISupportInitialize::BeginInit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISupportInitialize*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISupportInitialize.EndInit
void System::ComponentModel::ISupportInitialize::EndInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISupportInitialize::EndInit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISupportInitialize*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ISynchronizeInvoke
#include "System/ComponentModel/ISynchronizeInvoke.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ISynchronizeInvoke.get_InvokeRequired
bool System::ComponentModel::ISynchronizeInvoke::get_InvokeRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISynchronizeInvoke::get_InvokeRequired");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISynchronizeInvoke*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISynchronizeInvoke.BeginInvoke
::System::IAsyncResult* System::ComponentModel::ISynchronizeInvoke::BeginInvoke(::System::Delegate* method, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISynchronizeInvoke::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISynchronizeInvoke*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, method, args);
}
// Autogenerated method: System.ComponentModel.ISynchronizeInvoke.EndInvoke
::Il2CppObject* System::ComponentModel::ISynchronizeInvoke::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISynchronizeInvoke::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISynchronizeInvoke*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, result);
}
// Autogenerated method: System.ComponentModel.ISynchronizeInvoke.Invoke
::Il2CppObject* System::ComponentModel::ISynchronizeInvoke::Invoke(::System::Delegate* method, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISynchronizeInvoke::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISynchronizeInvoke*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, method, args);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ImmutableObjectAttribute
#include "System/ComponentModel/ImmutableObjectAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.ImmutableObjectAttribute Yes
::System::ComponentModel::ImmutableObjectAttribute* System::ComponentModel::ImmutableObjectAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ImmutableObjectAttribute*>("System.ComponentModel", "ImmutableObjectAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.ImmutableObjectAttribute Yes
void System::ComponentModel::ImmutableObjectAttribute::_set_Yes(::System::ComponentModel::ImmutableObjectAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ImmutableObjectAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.ImmutableObjectAttribute No
::System::ComponentModel::ImmutableObjectAttribute* System::ComponentModel::ImmutableObjectAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ImmutableObjectAttribute*>("System.ComponentModel", "ImmutableObjectAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.ImmutableObjectAttribute No
void System::ComponentModel::ImmutableObjectAttribute::_set_No(::System::ComponentModel::ImmutableObjectAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ImmutableObjectAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.ImmutableObjectAttribute Default
::System::ComponentModel::ImmutableObjectAttribute* System::ComponentModel::ImmutableObjectAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ImmutableObjectAttribute*>("System.ComponentModel", "ImmutableObjectAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.ImmutableObjectAttribute Default
void System::ComponentModel::ImmutableObjectAttribute::_set_Default(::System::ComponentModel::ImmutableObjectAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ImmutableObjectAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <Immutable>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::ImmutableObjectAttribute::dyn_$Immutable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::dyn_$Immutable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Immutable>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ImmutableObjectAttribute.get_Immutable
bool System::ComponentModel::ImmutableObjectAttribute::get_Immutable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::get_Immutable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Immutable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ImmutableObjectAttribute..cctor
void System::ComponentModel::ImmutableObjectAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ImmutableObjectAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.ImmutableObjectAttribute.Equals
bool System::ComponentModel::ImmutableObjectAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.ImmutableObjectAttribute.GetHashCode
int System::ComponentModel::ImmutableObjectAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute
bool System::ComponentModel::ImmutableObjectAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.InitializationEventAttribute
#include "System/ComponentModel/InitializationEventAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <EventName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::InitializationEventAttribute::dyn_$EventName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InitializationEventAttribute::dyn_$EventName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EventName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.InitializationEventAttribute.get_EventName
::StringW System::ComponentModel::InitializationEventAttribute::get_EventName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InitializationEventAttribute::get_EventName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EventName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.InvalidEnumArgumentException
#include "System/ComponentModel/InvalidEnumArgumentException.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.LocalizableAttribute
#include "System/ComponentModel/LocalizableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.LocalizableAttribute Yes
::System::ComponentModel::LocalizableAttribute* System::ComponentModel::LocalizableAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::LocalizableAttribute*>("System.ComponentModel", "LocalizableAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.LocalizableAttribute Yes
void System::ComponentModel::LocalizableAttribute::_set_Yes(::System::ComponentModel::LocalizableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LocalizableAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.LocalizableAttribute No
::System::ComponentModel::LocalizableAttribute* System::ComponentModel::LocalizableAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::LocalizableAttribute*>("System.ComponentModel", "LocalizableAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.LocalizableAttribute No
void System::ComponentModel::LocalizableAttribute::_set_No(::System::ComponentModel::LocalizableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LocalizableAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.LocalizableAttribute Default
::System::ComponentModel::LocalizableAttribute* System::ComponentModel::LocalizableAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::LocalizableAttribute*>("System.ComponentModel", "LocalizableAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.LocalizableAttribute Default
void System::ComponentModel::LocalizableAttribute::_set_Default(::System::ComponentModel::LocalizableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LocalizableAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <IsLocalizable>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::LocalizableAttribute::dyn_$IsLocalizable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::dyn_$IsLocalizable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsLocalizable>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.LocalizableAttribute.get_IsLocalizable
bool System::ComponentModel::LocalizableAttribute::get_IsLocalizable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::get_IsLocalizable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLocalizable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LocalizableAttribute..cctor
void System::ComponentModel::LocalizableAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LocalizableAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.LocalizableAttribute.Equals
bool System::ComponentModel::LocalizableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.LocalizableAttribute.GetHashCode
int System::ComponentModel::LocalizableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LocalizableAttribute.IsDefaultAttribute
bool System::ComponentModel::LocalizableAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.MergablePropertyAttribute
#include "System/ComponentModel/MergablePropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.MergablePropertyAttribute Yes
::System::ComponentModel::MergablePropertyAttribute* System::ComponentModel::MergablePropertyAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MergablePropertyAttribute*>("System.ComponentModel", "MergablePropertyAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.MergablePropertyAttribute Yes
void System::ComponentModel::MergablePropertyAttribute::_set_Yes(::System::ComponentModel::MergablePropertyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MergablePropertyAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.MergablePropertyAttribute No
::System::ComponentModel::MergablePropertyAttribute* System::ComponentModel::MergablePropertyAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MergablePropertyAttribute*>("System.ComponentModel", "MergablePropertyAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.MergablePropertyAttribute No
void System::ComponentModel::MergablePropertyAttribute::_set_No(::System::ComponentModel::MergablePropertyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MergablePropertyAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.MergablePropertyAttribute Default
::System::ComponentModel::MergablePropertyAttribute* System::ComponentModel::MergablePropertyAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MergablePropertyAttribute*>("System.ComponentModel", "MergablePropertyAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.MergablePropertyAttribute Default
void System::ComponentModel::MergablePropertyAttribute::_set_Default(::System::ComponentModel::MergablePropertyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MergablePropertyAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <AllowMerge>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::MergablePropertyAttribute::dyn_$AllowMerge$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::dyn_$AllowMerge$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AllowMerge>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.MergablePropertyAttribute.get_AllowMerge
bool System::ComponentModel::MergablePropertyAttribute::get_AllowMerge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::get_AllowMerge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowMerge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MergablePropertyAttribute..cctor
void System::ComponentModel::MergablePropertyAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MergablePropertyAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.MergablePropertyAttribute.Equals
bool System::ComponentModel::MergablePropertyAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.MergablePropertyAttribute.GetHashCode
int System::ComponentModel::MergablePropertyAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute
bool System::ComponentModel::MergablePropertyAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ReadOnlyAttribute
#include "System/ComponentModel/ReadOnlyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.ReadOnlyAttribute Yes
::System::ComponentModel::ReadOnlyAttribute* System::ComponentModel::ReadOnlyAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReadOnlyAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ReadOnlyAttribute*>("System.ComponentModel", "ReadOnlyAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.ReadOnlyAttribute Yes
void System::ComponentModel::ReadOnlyAttribute::_set_Yes(::System::ComponentModel::ReadOnlyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReadOnlyAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReadOnlyAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.ReadOnlyAttribute No
::System::ComponentModel::ReadOnlyAttribute* System::ComponentModel::ReadOnlyAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReadOnlyAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ReadOnlyAttribute*>("System.ComponentModel", "ReadOnlyAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.ReadOnlyAttribute No
void System::ComponentModel::ReadOnlyAttribute::_set_No(::System::ComponentModel::ReadOnlyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReadOnlyAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReadOnlyAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.ReadOnlyAttribute Default
::System::ComponentModel::ReadOnlyAttribute* System::ComponentModel::ReadOnlyAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReadOnlyAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ReadOnlyAttribute*>("System.ComponentModel", "ReadOnlyAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.ReadOnlyAttribute Default
void System::ComponentModel::ReadOnlyAttribute::_set_Default(::System::ComponentModel::ReadOnlyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReadOnlyAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReadOnlyAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <IsReadOnly>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::ReadOnlyAttribute::dyn_$IsReadOnly$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReadOnlyAttribute::dyn_$IsReadOnly$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsReadOnly>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ReadOnlyAttribute.get_IsReadOnly
bool System::ComponentModel::ReadOnlyAttribute::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReadOnlyAttribute::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ReadOnlyAttribute..cctor
void System::ComponentModel::ReadOnlyAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReadOnlyAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ReadOnlyAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.ReadOnlyAttribute.Equals
bool System::ComponentModel::ReadOnlyAttribute::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReadOnlyAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.ReadOnlyAttribute.GetHashCode
int System::ComponentModel::ReadOnlyAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReadOnlyAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute
bool System::ComponentModel::ReadOnlyAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReadOnlyAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.AddingNewEventArgs
#include "System/ComponentModel/AddingNewEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object <NewObject>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::AddingNewEventArgs::dyn_$NewObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AddingNewEventArgs::dyn_$NewObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NewObject>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.AddingNewEventArgs.get_NewObject
::Il2CppObject* System::ComponentModel::AddingNewEventArgs::get_NewObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AddingNewEventArgs::get_NewObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NewObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AddingNewEventArgs.set_NewObject
void System::ComponentModel::AddingNewEventArgs::set_NewObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AddingNewEventArgs::set_NewObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NewObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.AddingNewEventHandler
#include "System/ComponentModel/AddingNewEventHandler.hpp"
// Including type: System.ComponentModel.AddingNewEventArgs
#include "System/ComponentModel/AddingNewEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.AddingNewEventHandler.Invoke
void System::ComponentModel::AddingNewEventHandler::Invoke(::Il2CppObject* sender, ::System::ComponentModel::AddingNewEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AddingNewEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::AddingNewEventHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.AddingNewEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::AddingNewEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::ComponentModel::AddingNewEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AddingNewEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::AddingNewEventHandler*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ComponentModel.AddingNewEventHandler.EndInvoke
void System::ComponentModel::AddingNewEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AddingNewEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::AddingNewEventHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.AmbientValueAttribute
#include "System/ComponentModel/AmbientValueAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object <Value>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::AmbientValueAttribute::dyn_$Value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AmbientValueAttribute::dyn_$Value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Value>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.AmbientValueAttribute.get_Value
::Il2CppObject* System::ComponentModel::AmbientValueAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AmbientValueAttribute::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AmbientValueAttribute.Equals
bool System::ComponentModel::AmbientValueAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AmbientValueAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.AmbientValueAttribute.GetHashCode
int System::ComponentModel::AmbientValueAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AmbientValueAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ArrayConverter/ArrayPropertyDescriptor
#include "System/ComponentModel/ArrayConverter_ArrayPropertyDescriptor.hpp"
// Including type: System.ComponentModel.ArrayConverter
#include "System/ComponentModel/ArrayConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ArrayConverter.ConvertTo
::Il2CppObject* System::ComponentModel::ArrayConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArrayConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CollectionConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.ArrayConverter.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::ArrayConverter::GetProperties(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value, ::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArrayConverter::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CollectionConverter*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, context, value, attributes);
}
// Autogenerated method: System.ComponentModel.ArrayConverter.GetPropertiesSupported
bool System::ComponentModel::ArrayConverter::GetPropertiesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArrayConverter::GetPropertiesSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CollectionConverter*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ArrayConverter/ArrayPropertyDescriptor
#include "System/ComponentModel/ArrayConverter_ArrayPropertyDescriptor.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _index
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ArrayConverter::ArrayPropertyDescriptor::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArrayConverter::ArrayPropertyDescriptor::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ArrayConverter/ArrayPropertyDescriptor.GetValue
::Il2CppObject* System::ComponentModel::ArrayConverter::ArrayPropertyDescriptor::GetValue(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArrayConverter::ArrayPropertyDescriptor::GetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.ArrayConverter/ArrayPropertyDescriptor.SetValue
void System::ComponentModel::ArrayConverter::ArrayPropertyDescriptor::SetValue(::Il2CppObject* instance, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArrayConverter::ArrayPropertyDescriptor::SetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instance, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.AttributeCollection Empty
::System::ComponentModel::AttributeCollection* System::ComponentModel::AttributeCollection::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::AttributeCollection*>("System.ComponentModel", "AttributeCollection", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.AttributeCollection Empty
void System::ComponentModel::AttributeCollection::_set_Empty(::System::ComponentModel::AttributeCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "AttributeCollection", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable s_defaultAttributes
::System::Collections::Hashtable* System::ComponentModel::AttributeCollection::_get_s_defaultAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_get_s_defaultAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.ComponentModel", "AttributeCollection", "s_defaultAttributes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable s_defaultAttributes
void System::ComponentModel::AttributeCollection::_set_s_defaultAttributes(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_set_s_defaultAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "AttributeCollection", "s_defaultAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object s_internalSyncObject
::Il2CppObject* System::ComponentModel::AttributeCollection::_get_s_internalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_get_s_internalSyncObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "AttributeCollection", "s_internalSyncObject"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object s_internalSyncObject
void System::ComponentModel::AttributeCollection::_set_s_internalSyncObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_set_s_internalSyncObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "AttributeCollection", "s_internalSyncObject", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 FOUND_TYPES_LIMIT
int System::ComponentModel::AttributeCollection::_get_FOUND_TYPES_LIMIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_get_FOUND_TYPES_LIMIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "AttributeCollection", "FOUND_TYPES_LIMIT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 FOUND_TYPES_LIMIT
void System::ComponentModel::AttributeCollection::_set_FOUND_TYPES_LIMIT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_set_FOUND_TYPES_LIMIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "AttributeCollection", "FOUND_TYPES_LIMIT", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Attribute[] _attributes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Attribute*>& System::ComponentModel::AttributeCollection::dyn__attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::dyn__attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Attribute*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.AttributeCollection/AttributeEntry[] _foundAttributeTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::ComponentModel::AttributeCollection::AttributeEntry>& System::ComponentModel::AttributeCollection::dyn__foundAttributeTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::dyn__foundAttributeTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_foundAttributeTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::ComponentModel::AttributeCollection::AttributeEntry>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& System::ComponentModel::AttributeCollection::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.FromExisting
::System::ComponentModel::AttributeCollection* System::ComponentModel::AttributeCollection::FromExisting(::System::ComponentModel::AttributeCollection* existing, ::ArrayW<::System::Attribute*> newAttributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::FromExisting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "AttributeCollection", "FromExisting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(existing), ::il2cpp_utils::ExtractType(newAttributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, existing, newAttributes);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.get_Attributes
::ArrayW<::System::Attribute*> System::ComponentModel::AttributeCollection::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::get_Attributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::AttributeCollection*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.get_Count
int System::ComponentModel::AttributeCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.get_Item
::System::Attribute* System::ComponentModel::AttributeCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::AttributeCollection*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Attribute*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.get_Item
::System::Attribute* System::ComponentModel::AttributeCollection::get_Item(::System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::AttributeCollection*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Attribute*, false>(this, ___internal__method, attributeType);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.Contains
bool System::ComponentModel::AttributeCollection::Contains(::System::Attribute* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attribute);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.Contains
bool System::ComponentModel::AttributeCollection::Contains(::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributes);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.GetDefaultAttribute
::System::Attribute* System::ComponentModel::AttributeCollection::GetDefaultAttribute(::System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::GetDefaultAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Attribute*, false>(this, ___internal__method, attributeType);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::AttributeCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.Matches
bool System::ComponentModel::AttributeCollection::Matches(::System::Attribute* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::Matches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Matches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attribute);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.Matches
bool System::ComponentModel::AttributeCollection::Matches(::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::Matches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Matches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributes);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.System.Collections.ICollection.get_IsSynchronized
bool System::ComponentModel::AttributeCollection::System_Collections_ICollection_get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::System.Collections.ICollection.get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::AttributeCollection*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::ComponentModel::AttributeCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::AttributeCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.System.Collections.ICollection.get_Count
int System::ComponentModel::AttributeCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::AttributeCollection*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::AttributeCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::AttributeCollection*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.CopyTo
void System::ComponentModel::AttributeCollection::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::AttributeCollection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.ComponentModel.AttributeCollection..cctor
void System::ComponentModel::AttributeCollection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "AttributeCollection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.AttributeProviderAttribute
#include "System/ComponentModel/AttributeProviderAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <TypeName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::AttributeProviderAttribute::dyn_$TypeName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeProviderAttribute::dyn_$TypeName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TypeName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <PropertyName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::AttributeProviderAttribute::dyn_$PropertyName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeProviderAttribute::dyn_$PropertyName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PropertyName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.AttributeProviderAttribute.get_TypeName
::StringW System::ComponentModel::AttributeProviderAttribute::get_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeProviderAttribute::get_TypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeProviderAttribute.get_PropertyName
::StringW System::ComponentModel::AttributeProviderAttribute::get_PropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeProviderAttribute::get_PropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ComponentEditor
#include "System/ComponentModel/ComponentEditor.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ComponentEditor.EditComponent
bool System::ComponentModel::ComponentEditor::EditComponent(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComponentEditor::EditComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EditComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.ComponentEditor.EditComponent
bool System::ComponentModel::ComponentEditor::EditComponent(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComponentEditor::EditComponent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ComponentEditor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, component);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.BaseNumberConverter
#include "System/ComponentModel/BaseNumberConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.BaseNumberConverter.get_AllowHex
bool System::ComponentModel::BaseNumberConverter::get_AllowHex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::get_AllowHex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BaseNumberConverter.get_TargetType
::System::Type* System::ComponentModel::BaseNumberConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BaseNumberConverter.FromString
::Il2CppObject* System::ComponentModel::BaseNumberConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.BaseNumberConverter.FromString
::Il2CppObject* System::ComponentModel::BaseNumberConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.BaseNumberConverter.ToString
::StringW System::ComponentModel::BaseNumberConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.BaseNumberConverter.CanConvertFrom
bool System::ComponentModel::BaseNumberConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.BaseNumberConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::BaseNumberConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.BaseNumberConverter.ConvertTo
::Il2CppObject* System::ComponentModel::BaseNumberConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.BaseNumberConverter.CanConvertTo
bool System::ComponentModel::BaseNumberConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.BindableAttribute
#include "System/ComponentModel/BindableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.BindableAttribute Yes
::System::ComponentModel::BindableAttribute* System::ComponentModel::BindableAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::BindableAttribute*>("System.ComponentModel", "BindableAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.BindableAttribute Yes
void System::ComponentModel::BindableAttribute::_set_Yes(::System::ComponentModel::BindableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BindableAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.BindableAttribute No
::System::ComponentModel::BindableAttribute* System::ComponentModel::BindableAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::BindableAttribute*>("System.ComponentModel", "BindableAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.BindableAttribute No
void System::ComponentModel::BindableAttribute::_set_No(::System::ComponentModel::BindableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BindableAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.BindableAttribute Default
::System::ComponentModel::BindableAttribute* System::ComponentModel::BindableAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::BindableAttribute*>("System.ComponentModel", "BindableAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.BindableAttribute Default
void System::ComponentModel::BindableAttribute::_set_Default(::System::ComponentModel::BindableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BindableAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDefault
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::BindableAttribute::dyn__isDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableAttribute::dyn__isDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDefault"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <Bindable>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::BindableAttribute::dyn_$Bindable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableAttribute::dyn_$Bindable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Bindable>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.ComponentModel.BindingDirection <Direction>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ComponentModel::BindingDirection& System::ComponentModel::BindableAttribute::dyn_$Direction$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableAttribute::dyn_$Direction$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Direction>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ComponentModel::BindingDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.BindableAttribute.get_Bindable
bool System::ComponentModel::BindableAttribute::get_Bindable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableAttribute::get_Bindable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Bindable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BindableAttribute.get_Direction
::System::ComponentModel::BindingDirection System::ComponentModel::BindableAttribute::get_Direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableAttribute::get_Direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::BindingDirection, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BindableAttribute..cctor
void System::ComponentModel::BindableAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "BindableAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.BindableAttribute.Equals
bool System::ComponentModel::BindableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.BindableAttribute.GetHashCode
int System::ComponentModel::BindableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BindableAttribute.IsDefaultAttribute
bool System::ComponentModel::BindableAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.BindableSupport
#include "System/ComponentModel/BindableSupport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.BindableSupport No
::System::ComponentModel::BindableSupport System::ComponentModel::BindableSupport::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableSupport::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::BindableSupport>("System.ComponentModel", "BindableSupport", "No"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.BindableSupport No
void System::ComponentModel::BindableSupport::_set_No(::System::ComponentModel::BindableSupport value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableSupport::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BindableSupport", "No", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.BindableSupport Yes
::System::ComponentModel::BindableSupport System::ComponentModel::BindableSupport::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableSupport::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::BindableSupport>("System.ComponentModel", "BindableSupport", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.BindableSupport Yes
void System::ComponentModel::BindableSupport::_set_Yes(::System::ComponentModel::BindableSupport value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableSupport::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BindableSupport", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.BindableSupport Default
::System::ComponentModel::BindableSupport System::ComponentModel::BindableSupport::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableSupport::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::BindableSupport>("System.ComponentModel", "BindableSupport", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.BindableSupport Default
void System::ComponentModel::BindableSupport::_set_Default(::System::ComponentModel::BindableSupport value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableSupport::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BindableSupport", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::BindableSupport::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindableSupport::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.BindingDirection
#include "System/ComponentModel/BindingDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.BindingDirection OneWay
::System::ComponentModel::BindingDirection System::ComponentModel::BindingDirection::_get_OneWay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingDirection::_get_OneWay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::BindingDirection>("System.ComponentModel", "BindingDirection", "OneWay"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.BindingDirection OneWay
void System::ComponentModel::BindingDirection::_set_OneWay(::System::ComponentModel::BindingDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingDirection::_set_OneWay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BindingDirection", "OneWay", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.BindingDirection TwoWay
::System::ComponentModel::BindingDirection System::ComponentModel::BindingDirection::_get_TwoWay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingDirection::_get_TwoWay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::BindingDirection>("System.ComponentModel", "BindingDirection", "TwoWay"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.BindingDirection TwoWay
void System::ComponentModel::BindingDirection::_set_TwoWay(::System::ComponentModel::BindingDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingDirection::_set_TwoWay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BindingDirection", "TwoWay", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::BindingDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.BooleanConverter
#include "System/ComponentModel/BooleanConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.ComponentModel.TypeConverter/StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.ComponentModel.TypeConverter/StandardValuesCollection s_values
::System::ComponentModel::TypeConverter::StandardValuesCollection* System::ComponentModel::BooleanConverter::_get_s_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::_get_s_values");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::TypeConverter::StandardValuesCollection*>("System.ComponentModel", "BooleanConverter", "s_values"));
}
// Autogenerated static field setter
// Set static field: static private System.ComponentModel.TypeConverter/StandardValuesCollection s_values
void System::ComponentModel::BooleanConverter::_set_s_values(::System::ComponentModel::TypeConverter::StandardValuesCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::_set_s_values");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BooleanConverter", "s_values", value));
}
// Autogenerated method: System.ComponentModel.BooleanConverter.CanConvertFrom
bool System::ComponentModel::BooleanConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.BooleanConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::BooleanConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.BooleanConverter.GetStandardValues
::System::ComponentModel::TypeConverter::StandardValuesCollection* System::ComponentModel::BooleanConverter::GetStandardValues(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::GetStandardValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter::StandardValuesCollection*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.BooleanConverter.GetStandardValuesExclusive
bool System::ComponentModel::BooleanConverter::GetStandardValuesExclusive(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::GetStandardValuesExclusive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.BooleanConverter.GetStandardValuesSupported
bool System::ComponentModel::BooleanConverter::GetStandardValuesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::GetStandardValuesSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ByteConverter
#include "System/ComponentModel/ByteConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ByteConverter.get_TargetType
::System::Type* System::ComponentModel::ByteConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ByteConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ByteConverter.FromString
::Il2CppObject* System::ComponentModel::ByteConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ByteConverter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.ByteConverter.FromString
::Il2CppObject* System::ComponentModel::ByteConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ByteConverter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.ByteConverter.ToString
::StringW System::ComponentModel::ByteConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ByteConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.CancelEventHandler
#include "System/ComponentModel/CancelEventHandler.hpp"
// Including type: System.ComponentModel.CancelEventArgs
#include "System/ComponentModel/CancelEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.CancelEventHandler.Invoke
void System::ComponentModel::CancelEventHandler::Invoke(::Il2CppObject* sender, ::System::ComponentModel::CancelEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CancelEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CancelEventHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.CancelEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::CancelEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::ComponentModel::CancelEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CancelEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CancelEventHandler*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ComponentModel.CancelEventHandler.EndInvoke
void System::ComponentModel::CancelEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CancelEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CancelEventHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.CharConverter
#include "System/ComponentModel/CharConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.CharConverter.CanConvertFrom
bool System::ComponentModel::CharConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CharConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.CharConverter.ConvertTo
::Il2CppObject* System::ComponentModel::CharConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CharConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.CharConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::CharConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CharConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.CollectionChangeAction
#include "System/ComponentModel/CollectionChangeAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.CollectionChangeAction Add
::System::ComponentModel::CollectionChangeAction System::ComponentModel::CollectionChangeAction::_get_Add() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionChangeAction::_get_Add");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::CollectionChangeAction>("System.ComponentModel", "CollectionChangeAction", "Add"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.CollectionChangeAction Add
void System::ComponentModel::CollectionChangeAction::_set_Add(::System::ComponentModel::CollectionChangeAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionChangeAction::_set_Add");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "CollectionChangeAction", "Add", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.CollectionChangeAction Remove
::System::ComponentModel::CollectionChangeAction System::ComponentModel::CollectionChangeAction::_get_Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionChangeAction::_get_Remove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::CollectionChangeAction>("System.ComponentModel", "CollectionChangeAction", "Remove"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.CollectionChangeAction Remove
void System::ComponentModel::CollectionChangeAction::_set_Remove(::System::ComponentModel::CollectionChangeAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionChangeAction::_set_Remove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "CollectionChangeAction", "Remove", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.CollectionChangeAction Refresh
::System::ComponentModel::CollectionChangeAction System::ComponentModel::CollectionChangeAction::_get_Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionChangeAction::_get_Refresh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::CollectionChangeAction>("System.ComponentModel", "CollectionChangeAction", "Refresh"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.CollectionChangeAction Refresh
void System::ComponentModel::CollectionChangeAction::_set_Refresh(::System::ComponentModel::CollectionChangeAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionChangeAction::_set_Refresh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "CollectionChangeAction", "Refresh", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::CollectionChangeAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionChangeAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.CollectionChangeEventArgs
#include "System/ComponentModel/CollectionChangeEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.ComponentModel.CollectionChangeAction <Action>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ComponentModel::CollectionChangeAction& System::ComponentModel::CollectionChangeEventArgs::dyn_$Action$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionChangeEventArgs::dyn_$Action$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Action>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ComponentModel::CollectionChangeAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object <Element>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::CollectionChangeEventArgs::dyn_$Element$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionChangeEventArgs::dyn_$Element$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Element>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.CollectionChangeEventArgs.get_Action
::System::ComponentModel::CollectionChangeAction System::ComponentModel::CollectionChangeEventArgs::get_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionChangeEventArgs::get_Action");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CollectionChangeEventArgs*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::CollectionChangeAction, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.CollectionChangeEventArgs.get_Element
::Il2CppObject* System::ComponentModel::CollectionChangeEventArgs::get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionChangeEventArgs::get_Element");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CollectionChangeEventArgs*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.CollectionChangeEventHandler
#include "System/ComponentModel/CollectionChangeEventHandler.hpp"
// Including type: System.ComponentModel.CollectionChangeEventArgs
#include "System/ComponentModel/CollectionChangeEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.CollectionChangeEventHandler.Invoke
void System::ComponentModel::CollectionChangeEventHandler::Invoke(::Il2CppObject* sender, ::System::ComponentModel::CollectionChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionChangeEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CollectionChangeEventHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.CollectionChangeEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::CollectionChangeEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::ComponentModel::CollectionChangeEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionChangeEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CollectionChangeEventHandler*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ComponentModel.CollectionChangeEventHandler.EndInvoke
void System::ComponentModel::CollectionChangeEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionChangeEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CollectionChangeEventHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ComplexBindingPropertiesAttribute
#include "System/ComponentModel/ComplexBindingPropertiesAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.ComplexBindingPropertiesAttribute Default
::System::ComponentModel::ComplexBindingPropertiesAttribute* System::ComponentModel::ComplexBindingPropertiesAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComplexBindingPropertiesAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ComplexBindingPropertiesAttribute*>("System.ComponentModel", "ComplexBindingPropertiesAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.ComplexBindingPropertiesAttribute Default
void System::ComponentModel::ComplexBindingPropertiesAttribute::_set_Default(::System::ComponentModel::ComplexBindingPropertiesAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComplexBindingPropertiesAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ComplexBindingPropertiesAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <DataSource>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::ComplexBindingPropertiesAttribute::dyn_$DataSource$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComplexBindingPropertiesAttribute::dyn_$DataSource$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DataSource>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <DataMember>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::ComplexBindingPropertiesAttribute::dyn_$DataMember$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComplexBindingPropertiesAttribute::dyn_$DataMember$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DataMember>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ComplexBindingPropertiesAttribute.get_DataSource
::StringW System::ComponentModel::ComplexBindingPropertiesAttribute::get_DataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComplexBindingPropertiesAttribute::get_DataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ComplexBindingPropertiesAttribute.get_DataMember
::StringW System::ComponentModel::ComplexBindingPropertiesAttribute::get_DataMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComplexBindingPropertiesAttribute::get_DataMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ComplexBindingPropertiesAttribute..cctor
void System::ComponentModel::ComplexBindingPropertiesAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComplexBindingPropertiesAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ComplexBindingPropertiesAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.ComplexBindingPropertiesAttribute.Equals
bool System::ComponentModel::ComplexBindingPropertiesAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComplexBindingPropertiesAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.ComplexBindingPropertiesAttribute.GetHashCode
int System::ComponentModel::ComplexBindingPropertiesAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComplexBindingPropertiesAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ComponentResourceManager
#include "System/ComponentModel/ComponentResourceManager.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.SortedList`2
#include "System/Collections/Generic/SortedList_2.hpp"
// Including type: System.Resources.ResourceSet
#include "System/Resources/ResourceSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _resourceSets
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::ComponentModel::ComponentResourceManager::dyn__resourceSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComponentResourceManager::dyn__resourceSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resourceSets"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo _neutralResourcesCulture
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& System::ComponentModel::ComponentResourceManager::dyn__neutralResourcesCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComponentResourceManager::dyn__neutralResourcesCulture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_neutralResourcesCulture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ComponentResourceManager.get_NeutralResourcesCulture
::System::Globalization::CultureInfo* System::ComponentModel::ComponentResourceManager::get_NeutralResourcesCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComponentResourceManager::get_NeutralResourcesCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NeutralResourcesCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ComponentResourceManager.ApplyResources
void System::ComponentModel::ComponentResourceManager::ApplyResources(::Il2CppObject* value, ::StringW objectName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComponentResourceManager::ApplyResources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyResources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(objectName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, objectName);
}
// Autogenerated method: System.ComponentModel.ComponentResourceManager.ApplyResources
void System::ComponentModel::ComponentResourceManager::ApplyResources(::Il2CppObject* value, ::StringW objectName, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComponentResourceManager::ApplyResources");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ComponentResourceManager*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, objectName, culture);
}
// Autogenerated method: System.ComponentModel.ComponentResourceManager.FillResources
::System::Collections::Generic::SortedList_2<::StringW, ::Il2CppObject*>* System::ComponentModel::ComponentResourceManager::FillResources(::System::Globalization::CultureInfo* culture, ByRef<::System::Resources::ResourceSet*> resourceSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComponentResourceManager::FillResources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillResources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractIndependentType<::System::Resources::ResourceSet*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::SortedList_2<::StringW, ::Il2CppObject*>*, false>(this, ___internal__method, culture, byref(resourceSet));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ContainerFilterService
#include "System/ComponentModel/ContainerFilterService.hpp"
// Including type: System.ComponentModel.ComponentCollection
#include "System/ComponentModel/ComponentCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ContainerFilterService.FilterComponents
::System::ComponentModel::ComponentCollection* System::ComponentModel::ContainerFilterService::FilterComponents(::System::ComponentModel::ComponentCollection* components) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ContainerFilterService::FilterComponents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ContainerFilterService*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ComponentCollection*, false>(this, ___internal__method, components);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.CultureInfoConverter
#include "System/ComponentModel/CultureInfoConverter.hpp"
// Including type: System.ComponentModel.CultureInfoConverter/CultureComparer
#include "System/ComponentModel/CultureInfoConverter_CultureComparer.hpp"
// Including type: System.ComponentModel.CultureInfoConverter/CultureInfoMapper
#include "System/ComponentModel/CultureInfoConverter_CultureInfoMapper.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.TypeConverter/StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String DefaultInvariantCultureString
::StringW System::ComponentModel::CultureInfoConverter::_get_DefaultInvariantCultureString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::_get_DefaultInvariantCultureString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.ComponentModel", "CultureInfoConverter", "DefaultInvariantCultureString"));
}
// Autogenerated static field setter
// Set static field: static private System.String DefaultInvariantCultureString
void System::ComponentModel::CultureInfoConverter::_set_DefaultInvariantCultureString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::_set_DefaultInvariantCultureString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "CultureInfoConverter", "DefaultInvariantCultureString", value));
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.TypeConverter/StandardValuesCollection _values
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeConverter::StandardValuesCollection*& System::ComponentModel::CultureInfoConverter::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeConverter::StandardValuesCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.CultureInfoConverter.get_DefaultCultureString
::StringW System::ComponentModel::CultureInfoConverter::get_DefaultCultureString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::get_DefaultCultureString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultCultureString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.CultureInfoConverter.GetCultureName
::StringW System::ComponentModel::CultureInfoConverter::GetCultureName(::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::GetCultureName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CultureInfoConverter*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, culture);
}
// Autogenerated method: System.ComponentModel.CultureInfoConverter.CanConvertFrom
bool System::ComponentModel::CultureInfoConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.CultureInfoConverter.CanConvertTo
bool System::ComponentModel::CultureInfoConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.CultureInfoConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::CultureInfoConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.CultureInfoConverter.ConvertTo
::Il2CppObject* System::ComponentModel::CultureInfoConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.CultureInfoConverter.GetStandardValues
::System::ComponentModel::TypeConverter::StandardValuesCollection* System::ComponentModel::CultureInfoConverter::GetStandardValues(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::GetStandardValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter::StandardValuesCollection*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive
bool System::ComponentModel::CultureInfoConverter::GetStandardValuesExclusive(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::GetStandardValuesExclusive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported
bool System::ComponentModel::CultureInfoConverter::GetStandardValuesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::GetStandardValuesSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.CultureInfoConverter/CultureComparer
#include "System/ComponentModel/CultureInfoConverter_CultureComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.CultureInfoConverter _converter
[[deprecated("Use field access instead!")]] ::System::ComponentModel::CultureInfoConverter*& System::ComponentModel::CultureInfoConverter::CultureComparer::dyn__converter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::CultureComparer::dyn__converter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_converter"))->offset;
  return *reinterpret_cast<::System::ComponentModel::CultureInfoConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.CultureInfoConverter/CultureComparer.Compare
int System::ComponentModel::CultureInfoConverter::CultureComparer::Compare(::Il2CppObject* item1, ::Il2CppObject* item2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::CultureComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CultureInfoConverter::CultureComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, item1, item2);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.CultureInfoConverter/CultureInfoMapper
#include "System/ComponentModel/CultureInfoConverter_CultureInfoMapper.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> s_cultureInfoNameMap
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* System::ComponentModel::CultureInfoConverter::CultureInfoMapper::_get_s_cultureInfoNameMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::CultureInfoMapper::_get_s_cultureInfoNameMap");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>("System.ComponentModel", "CultureInfoConverter/CultureInfoMapper", "s_cultureInfoNameMap")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> s_cultureInfoNameMap
void System::ComponentModel::CultureInfoConverter::CultureInfoMapper::_set_s_cultureInfoNameMap(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::CultureInfoMapper::_set_s_cultureInfoNameMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "CultureInfoConverter/CultureInfoMapper", "s_cultureInfoNameMap", value));
}
// Autogenerated method: System.ComponentModel.CultureInfoConverter/CultureInfoMapper.CreateMap
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* System::ComponentModel::CultureInfoConverter::CultureInfoMapper::CreateMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::CultureInfoMapper::CreateMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "CultureInfoConverter/CultureInfoMapper", "CreateMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.CultureInfoConverter/CultureInfoMapper.GetCultureInfoName
::StringW System::ComponentModel::CultureInfoConverter::CultureInfoMapper::GetCultureInfoName(::StringW cultureInfoDisplayName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::CultureInfoMapper::GetCultureInfoName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "CultureInfoConverter/CultureInfoMapper", "GetCultureInfoName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cultureInfoDisplayName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cultureInfoDisplayName);
}
// Autogenerated method: System.ComponentModel.CultureInfoConverter/CultureInfoMapper..cctor
void System::ComponentModel::CultureInfoConverter::CultureInfoMapper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CultureInfoConverter::CultureInfoMapper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "CultureInfoConverter/CultureInfoMapper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.CustomTypeDescriptor
#include "System/ComponentModel/CustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.EventDescriptor
#include "System/ComponentModel/EventDescriptor.hpp"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.EventDescriptorCollection
#include "System/ComponentModel/EventDescriptorCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.ComponentModel.ICustomTypeDescriptor _parent
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ICustomTypeDescriptor*& System::ComponentModel::CustomTypeDescriptor::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ICustomTypeDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.CustomTypeDescriptor.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::CustomTypeDescriptor::GetAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::GetAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CustomTypeDescriptor*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.CustomTypeDescriptor.GetClassName
::StringW System::ComponentModel::CustomTypeDescriptor::GetClassName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::GetClassName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CustomTypeDescriptor*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.CustomTypeDescriptor.GetComponentName
::StringW System::ComponentModel::CustomTypeDescriptor::GetComponentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::GetComponentName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CustomTypeDescriptor*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.CustomTypeDescriptor.GetConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::CustomTypeDescriptor::GetConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::GetConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CustomTypeDescriptor*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
::System::ComponentModel::EventDescriptor* System::ComponentModel::CustomTypeDescriptor::GetDefaultEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::GetDefaultEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CustomTypeDescriptor*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptor*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::CustomTypeDescriptor::GetDefaultProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::GetDefaultProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CustomTypeDescriptor*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.CustomTypeDescriptor.GetEditor
::Il2CppObject* System::ComponentModel::CustomTypeDescriptor::GetEditor(::System::Type* editorBaseType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::GetEditor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CustomTypeDescriptor*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, editorBaseType);
}
// Autogenerated method: System.ComponentModel.CustomTypeDescriptor.GetEvents
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::CustomTypeDescriptor::GetEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::GetEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CustomTypeDescriptor*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptorCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.CustomTypeDescriptor.GetEvents
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::CustomTypeDescriptor::GetEvents(::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::GetEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CustomTypeDescriptor*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptorCollection*, false>(this, ___internal__method, attributes);
}
// Autogenerated method: System.ComponentModel.CustomTypeDescriptor.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::CustomTypeDescriptor::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CustomTypeDescriptor*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.CustomTypeDescriptor.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::CustomTypeDescriptor::GetProperties(::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CustomTypeDescriptor*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, attributes);
}
// Autogenerated method: System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner
::Il2CppObject* System::ComponentModel::CustomTypeDescriptor::GetPropertyOwner(::System::ComponentModel::PropertyDescriptor* pd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::GetPropertyOwner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::CustomTypeDescriptor*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, pd);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DataObjectAttribute
#include "System/ComponentModel/DataObjectAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DataObjectAttribute DataObject
::System::ComponentModel::DataObjectAttribute* System::ComponentModel::DataObjectAttribute::_get_DataObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectAttribute::_get_DataObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DataObjectAttribute*>("System.ComponentModel", "DataObjectAttribute", "DataObject"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DataObjectAttribute DataObject
void System::ComponentModel::DataObjectAttribute::_set_DataObject(::System::ComponentModel::DataObjectAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectAttribute::_set_DataObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DataObjectAttribute", "DataObject", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DataObjectAttribute NonDataObject
::System::ComponentModel::DataObjectAttribute* System::ComponentModel::DataObjectAttribute::_get_NonDataObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectAttribute::_get_NonDataObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DataObjectAttribute*>("System.ComponentModel", "DataObjectAttribute", "NonDataObject"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DataObjectAttribute NonDataObject
void System::ComponentModel::DataObjectAttribute::_set_NonDataObject(::System::ComponentModel::DataObjectAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectAttribute::_set_NonDataObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DataObjectAttribute", "NonDataObject", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DataObjectAttribute Default
::System::ComponentModel::DataObjectAttribute* System::ComponentModel::DataObjectAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DataObjectAttribute*>("System.ComponentModel", "DataObjectAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DataObjectAttribute Default
void System::ComponentModel::DataObjectAttribute::_set_Default(::System::ComponentModel::DataObjectAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DataObjectAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <IsDataObject>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::DataObjectAttribute::dyn_$IsDataObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectAttribute::dyn_$IsDataObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsDataObject>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DataObjectAttribute.get_IsDataObject
bool System::ComponentModel::DataObjectAttribute::get_IsDataObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectAttribute::get_IsDataObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDataObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DataObjectAttribute..cctor
void System::ComponentModel::DataObjectAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DataObjectAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DataObjectAttribute.Equals
bool System::ComponentModel::DataObjectAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DataObjectAttribute.GetHashCode
int System::ComponentModel::DataObjectAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DataObjectAttribute.IsDefaultAttribute
bool System::ComponentModel::DataObjectAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DataObjectFieldAttribute
#include "System/ComponentModel/DataObjectFieldAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <IsIdentity>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::DataObjectFieldAttribute::dyn_$IsIdentity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectFieldAttribute::dyn_$IsIdentity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsIdentity>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <IsNullable>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::DataObjectFieldAttribute::dyn_$IsNullable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectFieldAttribute::dyn_$IsNullable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsNullable>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <Length>k__BackingField
[[deprecated("Use field access instead!")]] int& System::ComponentModel::DataObjectFieldAttribute::dyn_$Length$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectFieldAttribute::dyn_$Length$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Length>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <PrimaryKey>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::DataObjectFieldAttribute::dyn_$PrimaryKey$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectFieldAttribute::dyn_$PrimaryKey$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PrimaryKey>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DataObjectFieldAttribute.get_IsIdentity
bool System::ComponentModel::DataObjectFieldAttribute::get_IsIdentity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectFieldAttribute::get_IsIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DataObjectFieldAttribute.get_IsNullable
bool System::ComponentModel::DataObjectFieldAttribute::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectFieldAttribute::get_IsNullable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DataObjectFieldAttribute.get_Length
int System::ComponentModel::DataObjectFieldAttribute::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectFieldAttribute::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DataObjectFieldAttribute.get_PrimaryKey
bool System::ComponentModel::DataObjectFieldAttribute::get_PrimaryKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectFieldAttribute::get_PrimaryKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrimaryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DataObjectFieldAttribute.Equals
bool System::ComponentModel::DataObjectFieldAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectFieldAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DataObjectFieldAttribute.GetHashCode
int System::ComponentModel::DataObjectFieldAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectFieldAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DataObjectMethodAttribute
#include "System/ComponentModel/DataObjectMethodAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <IsDefault>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::DataObjectMethodAttribute::dyn_$IsDefault$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodAttribute::dyn_$IsDefault$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsDefault>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.ComponentModel.DataObjectMethodType <MethodType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ComponentModel::DataObjectMethodType& System::ComponentModel::DataObjectMethodAttribute::dyn_$MethodType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodAttribute::dyn_$MethodType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MethodType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ComponentModel::DataObjectMethodType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DataObjectMethodAttribute.get_IsDefault
bool System::ComponentModel::DataObjectMethodAttribute::get_IsDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodAttribute::get_IsDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DataObjectMethodAttribute.get_MethodType
::System::ComponentModel::DataObjectMethodType System::ComponentModel::DataObjectMethodAttribute::get_MethodType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodAttribute::get_MethodType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::DataObjectMethodType, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DataObjectMethodAttribute.Equals
bool System::ComponentModel::DataObjectMethodAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DataObjectMethodAttribute.GetHashCode
int System::ComponentModel::DataObjectMethodAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DataObjectMethodAttribute.Match
bool System::ComponentModel::DataObjectMethodAttribute::Match(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodAttribute::Match");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.DataObjectMethodType
#include "System/ComponentModel/DataObjectMethodType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DataObjectMethodType Fill
::System::ComponentModel::DataObjectMethodType System::ComponentModel::DataObjectMethodType::_get_Fill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_get_Fill");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DataObjectMethodType>("System.ComponentModel", "DataObjectMethodType", "Fill"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DataObjectMethodType Fill
void System::ComponentModel::DataObjectMethodType::_set_Fill(::System::ComponentModel::DataObjectMethodType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_set_Fill");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DataObjectMethodType", "Fill", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DataObjectMethodType Select
::System::ComponentModel::DataObjectMethodType System::ComponentModel::DataObjectMethodType::_get_Select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_get_Select");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DataObjectMethodType>("System.ComponentModel", "DataObjectMethodType", "Select"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DataObjectMethodType Select
void System::ComponentModel::DataObjectMethodType::_set_Select(::System::ComponentModel::DataObjectMethodType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_set_Select");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DataObjectMethodType", "Select", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DataObjectMethodType Update
::System::ComponentModel::DataObjectMethodType System::ComponentModel::DataObjectMethodType::_get_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_get_Update");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DataObjectMethodType>("System.ComponentModel", "DataObjectMethodType", "Update"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DataObjectMethodType Update
void System::ComponentModel::DataObjectMethodType::_set_Update(::System::ComponentModel::DataObjectMethodType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_set_Update");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DataObjectMethodType", "Update", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DataObjectMethodType Insert
::System::ComponentModel::DataObjectMethodType System::ComponentModel::DataObjectMethodType::_get_Insert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_get_Insert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DataObjectMethodType>("System.ComponentModel", "DataObjectMethodType", "Insert"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DataObjectMethodType Insert
void System::ComponentModel::DataObjectMethodType::_set_Insert(::System::ComponentModel::DataObjectMethodType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_set_Insert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DataObjectMethodType", "Insert", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DataObjectMethodType Delete
::System::ComponentModel::DataObjectMethodType System::ComponentModel::DataObjectMethodType::_get_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_get_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DataObjectMethodType>("System.ComponentModel", "DataObjectMethodType", "Delete"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DataObjectMethodType Delete
void System::ComponentModel::DataObjectMethodType::_set_Delete(::System::ComponentModel::DataObjectMethodType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_set_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DataObjectMethodType", "Delete", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::DataObjectMethodType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DateTimeConverter
#include "System/ComponentModel/DateTimeConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.DateTimeConverter.CanConvertFrom
bool System::ComponentModel::DateTimeConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DateTimeConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.DateTimeConverter.CanConvertTo
bool System::ComponentModel::DateTimeConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DateTimeConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.DateTimeConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::DateTimeConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DateTimeConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.DateTimeConverter.ConvertTo
::Il2CppObject* System::ComponentModel::DateTimeConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DateTimeConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DecimalConverter
#include "System/ComponentModel/DecimalConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.DecimalConverter.get_AllowHex
bool System::ComponentModel::DecimalConverter::get_AllowHex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::get_AllowHex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.get_TargetType
::System::Type* System::ComponentModel::DecimalConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.CanConvertTo
bool System::ComponentModel::DecimalConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.ConvertTo
::Il2CppObject* System::ComponentModel::DecimalConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.FromString
::Il2CppObject* System::ComponentModel::DecimalConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.FromString
::Il2CppObject* System::ComponentModel::DecimalConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.ToString
::StringW System::ComponentModel::DecimalConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DefaultBindingPropertyAttribute
#include "System/ComponentModel/DefaultBindingPropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DefaultBindingPropertyAttribute Default
::System::ComponentModel::DefaultBindingPropertyAttribute* System::ComponentModel::DefaultBindingPropertyAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultBindingPropertyAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DefaultBindingPropertyAttribute*>("System.ComponentModel", "DefaultBindingPropertyAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DefaultBindingPropertyAttribute Default
void System::ComponentModel::DefaultBindingPropertyAttribute::_set_Default(::System::ComponentModel::DefaultBindingPropertyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultBindingPropertyAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DefaultBindingPropertyAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DefaultBindingPropertyAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultBindingPropertyAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DefaultBindingPropertyAttribute.get_Name
::StringW System::ComponentModel::DefaultBindingPropertyAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultBindingPropertyAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultBindingPropertyAttribute..cctor
void System::ComponentModel::DefaultBindingPropertyAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultBindingPropertyAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DefaultBindingPropertyAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultBindingPropertyAttribute.Equals
bool System::ComponentModel::DefaultBindingPropertyAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultBindingPropertyAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DefaultBindingPropertyAttribute.GetHashCode
int System::ComponentModel::DefaultBindingPropertyAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultBindingPropertyAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
