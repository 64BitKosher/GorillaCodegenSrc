// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_31_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_31_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_31_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_31_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_31_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_31_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_31_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_31_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_31_0.ovrp_GetTimeInSeconds
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_31_0::ovrp_GetTimeInSeconds(ByRef<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_31_0::ovrp_GetTimeInSeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_31_0", "ovrp_GetTimeInSeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value));
}
// Autogenerated method: OVRPlugin/OVRP_1_31_0.ovrp_SetColorScaleAndOffset
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_31_0::ovrp_SetColorScaleAndOffset(::UnityEngine::Vector4 colorScale, ::UnityEngine::Vector4 colorOffset, ::GlobalNamespace::OVRPlugin::Bool applyToAllLayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_31_0::ovrp_SetColorScaleAndOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_31_0", "ovrp_SetColorScaleAndOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScale), ::il2cpp_utils::ExtractType(colorOffset), ::il2cpp_utils::ExtractType(applyToAllLayers)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorScale, colorOffset, applyToAllLayers);
}
// Autogenerated method: OVRPlugin/OVRP_1_31_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_31_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_31_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_31_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_32_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_32_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_32_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_32_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_32_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_32_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_32_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_32_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_32_0.ovrp_AddCustomMetadata
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_32_0::ovrp_AddCustomMetadata(::StringW name, ::StringW param) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_32_0::ovrp_AddCustomMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_32_0", "ovrp_AddCustomMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(param)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, param);
}
// Autogenerated method: OVRPlugin/OVRP_1_32_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_32_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_32_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_32_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_34_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_34_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Vector3f
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/Bool
// Already included the same include: GlobalNamespace/OVRPlugin.hpp
// Including type: OVRPlugin/TextureRectMatrixf
#include "GlobalNamespace/OVRPlugin_TextureRectMatrixf.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_34_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_34_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_34_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_34_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_34_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_34_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_34_0.ovrp_EnqueueSubmitLayer2
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_34_0::ovrp_EnqueueSubmitLayer2(uint flags, ::System::IntPtr textureLeft, ::System::IntPtr textureRight, int layerId, int frameIndex, ByRef<::GlobalNamespace::OVRPlugin::Posef> pose, ByRef<::GlobalNamespace::OVRPlugin::Vector3f> scale, int layerIndex, ::GlobalNamespace::OVRPlugin::Bool overrideTextureRectMatrix, ByRef<::GlobalNamespace::OVRPlugin::TextureRectMatrixf> textureRectMatrix, ::GlobalNamespace::OVRPlugin::Bool overridePerLayerColorScaleAndOffset, ByRef<::UnityEngine::Vector4> colorScale, ByRef<::UnityEngine::Vector4> colorOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_34_0::ovrp_EnqueueSubmitLayer2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_34_0", "ovrp_EnqueueSubmitLayer2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(textureLeft), ::il2cpp_utils::ExtractType(textureRight), ::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(frameIndex), ::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(overrideTextureRectMatrix), ::il2cpp_utils::ExtractType(textureRectMatrix), ::il2cpp_utils::ExtractType(overridePerLayerColorScaleAndOffset), ::il2cpp_utils::ExtractType(colorScale), ::il2cpp_utils::ExtractType(colorOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flags, textureLeft, textureRight, layerId, frameIndex, byref(pose), byref(scale), layerIndex, overrideTextureRectMatrix, byref(textureRectMatrix), overridePerLayerColorScaleAndOffset, byref(colorScale), byref(colorOffset));
}
// Autogenerated method: OVRPlugin/OVRP_1_34_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_34_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_34_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_34_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_35_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_35_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_35_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_35_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_35_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_35_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_35_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_35_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_35_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_35_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_35_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_35_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_36_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_36_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_36_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_36_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_36_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_36_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_36_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_36_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_36_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_36_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_36_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_36_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_37_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_37_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_37_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_37_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_37_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_37_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_37_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_37_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_37_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_37_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_37_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_37_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_38_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_38_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/TrackingOrigin
#include "GlobalNamespace/OVRPlugin_TrackingOrigin.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/Media/MrcActivationMode
#include "GlobalNamespace/OVRPlugin_Media_MrcActivationMode.hpp"
// Including type: OVRPlugin/Media/InputVideoBufferType
#include "GlobalNamespace/OVRPlugin_Media_InputVideoBufferType.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_38_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_38_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_38_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_38_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_GetTrackingTransformRelativePose
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetTrackingTransformRelativePose(ByRef<::GlobalNamespace::OVRPlugin::Posef> trackingTransformRelativePose, ::GlobalNamespace::OVRPlugin::TrackingOrigin trackingOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetTrackingTransformRelativePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_GetTrackingTransformRelativePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingTransformRelativePose), ::il2cpp_utils::ExtractType(trackingOrigin)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(trackingTransformRelativePose), trackingOrigin);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_Initialize
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_Shutdown
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_GetInitialized
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetInitialized(ByRef<::GlobalNamespace::OVRPlugin::Bool> initialized) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_GetInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(initialized));
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_Update
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_GetMrcActivationMode
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcActivationMode(ByRef<::GlobalNamespace::OVRPlugin::Media::MrcActivationMode> activationMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcActivationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_GetMrcActivationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Media::MrcActivationMode&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(activationMode));
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_SetMrcActivationMode
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcActivationMode(::GlobalNamespace::OVRPlugin::Media::MrcActivationMode activationMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcActivationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_SetMrcActivationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activationMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, activationMode);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_IsMrcEnabled
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_IsMrcEnabled(ByRef<::GlobalNamespace::OVRPlugin::Bool> mrcEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_IsMrcEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_IsMrcEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(mrcEnabled));
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_IsMrcActivated
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_IsMrcActivated(ByRef<::GlobalNamespace::OVRPlugin::Bool> mrcActivated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_IsMrcActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_IsMrcActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(mrcActivated));
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_UseMrcDebugCamera
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_UseMrcDebugCamera(ByRef<::GlobalNamespace::OVRPlugin::Bool> useMrcDebugCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_UseMrcDebugCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_UseMrcDebugCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(useMrcDebugCamera));
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_SetMrcInputVideoBufferType
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcInputVideoBufferType(::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType inputVideoBufferType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcInputVideoBufferType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_SetMrcInputVideoBufferType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputVideoBufferType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inputVideoBufferType);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_GetMrcInputVideoBufferType
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcInputVideoBufferType(ByRef<::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType> inputVideoBufferType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcInputVideoBufferType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_GetMrcInputVideoBufferType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputVideoBufferType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(inputVideoBufferType));
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_SetMrcFrameSize
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcFrameSize(int frameWidth, int frameHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcFrameSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_SetMrcFrameSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameWidth), ::il2cpp_utils::ExtractType(frameHeight)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frameWidth, frameHeight);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_GetMrcFrameSize
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcFrameSize(ByRef<int> frameWidth, ByRef<int> frameHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcFrameSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_GetMrcFrameSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameWidth), ::il2cpp_utils::ExtractType(frameHeight)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(frameWidth), byref(frameHeight));
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_SetMrcAudioSampleRate
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcAudioSampleRate(int sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcAudioSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_SetMrcAudioSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleRate)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sampleRate);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_GetMrcAudioSampleRate
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcAudioSampleRate(ByRef<int> sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcAudioSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_GetMrcAudioSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleRate)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sampleRate));
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_SetMrcFrameImageFlipped
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcFrameImageFlipped(::GlobalNamespace::OVRPlugin::Bool flipped) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcFrameImageFlipped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_SetMrcFrameImageFlipped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flipped)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flipped);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_GetMrcFrameImageFlipped
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcFrameImageFlipped(ByRef<::GlobalNamespace::OVRPlugin::Bool> flipped) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcFrameImageFlipped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_GetMrcFrameImageFlipped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flipped)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(flipped));
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_EncodeMrcFrame
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_EncodeMrcFrame(::System::IntPtr rawBuffer, ::System::IntPtr audioDataPtr, int audioDataLen, int audioChannels, double timestamp, ByRef<int> outSyncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_EncodeMrcFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_EncodeMrcFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawBuffer), ::il2cpp_utils::ExtractType(audioDataPtr), ::il2cpp_utils::ExtractType(audioDataLen), ::il2cpp_utils::ExtractType(audioChannels), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(outSyncId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawBuffer, audioDataPtr, audioDataLen, audioChannels, timestamp, byref(outSyncId));
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_EncodeMrcFrameWithDualTextures
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_EncodeMrcFrameWithDualTextures(::System::IntPtr backgroundTextureHandle, ::System::IntPtr foregroundTextureHandle, ::System::IntPtr audioData, int audioDataLen, int audioChannels, double timestamp, ByRef<int> outSyncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_EncodeMrcFrameWithDualTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_EncodeMrcFrameWithDualTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(backgroundTextureHandle), ::il2cpp_utils::ExtractType(foregroundTextureHandle), ::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(audioDataLen), ::il2cpp_utils::ExtractType(audioChannels), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(outSyncId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, backgroundTextureHandle, foregroundTextureHandle, audioData, audioDataLen, audioChannels, timestamp, byref(outSyncId));
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_SyncMrcFrame
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SyncMrcFrame(int syncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SyncMrcFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_SyncMrcFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syncId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, syncId);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_SetDeveloperMode
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_SetDeveloperMode(::GlobalNamespace::OVRPlugin::Bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_SetDeveloperMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_SetDeveloperMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, active);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_GetNodeOrientationValid
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetNodeOrientationValid(::GlobalNamespace::OVRPlugin::Node nodeId, ByRef<::GlobalNamespace::OVRPlugin::Bool> nodeOrientationValid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetNodeOrientationValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_GetNodeOrientationValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(nodeOrientationValid)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, byref(nodeOrientationValid));
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_GetNodePositionValid
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetNodePositionValid(::GlobalNamespace::OVRPlugin::Node nodeId, ByRef<::GlobalNamespace::OVRPlugin::Bool> nodePositionValid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetNodePositionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_GetNodePositionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(nodePositionValid)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, byref(nodePositionValid));
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_38_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_38_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_39_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_39_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_39_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_39_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_39_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_39_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_39_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_39_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_39_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_39_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_39_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_39_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_40_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_40_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_40_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_40_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_40_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_40_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_40_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_40_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_40_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_40_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_40_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_40_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_41_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_41_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_41_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_41_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_41_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_41_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_41_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_41_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_41_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_41_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_41_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_41_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_42_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_42_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_42_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_42_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_42_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_42_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_42_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_42_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_42_0.ovrp_GetAdaptiveGpuPerformanceScale2
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_42_0::ovrp_GetAdaptiveGpuPerformanceScale2(ByRef<float> adaptiveGpuPerformanceScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_42_0::ovrp_GetAdaptiveGpuPerformanceScale2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_42_0", "ovrp_GetAdaptiveGpuPerformanceScale2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(adaptiveGpuPerformanceScale)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(adaptiveGpuPerformanceScale));
}
// Autogenerated method: OVRPlugin/OVRP_1_42_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_42_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_42_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_42_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_43_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_43_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_43_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_43_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_43_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_43_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_43_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_43_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_43_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_43_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_43_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_43_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_44_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_44_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
// Including type: OVRPlugin/Hand
#include "GlobalNamespace/OVRPlugin_Hand.hpp"
// Including type: OVRPlugin/MeshType
#include "GlobalNamespace/OVRPlugin_MeshType.hpp"
// Including type: OVRPlugin/Fovf
#include "GlobalNamespace/OVRPlugin_Fovf.hpp"
// Including type: OVRPlugin/CameraIntrinsics
#include "GlobalNamespace/OVRPlugin_CameraIntrinsics.hpp"
// Including type: OVRPlugin/CameraExtrinsics
#include "GlobalNamespace/OVRPlugin_CameraExtrinsics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_44_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_44_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_44_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_44_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_44_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_44_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetHandTrackingEnabled
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetHandTrackingEnabled(ByRef<::GlobalNamespace::OVRPlugin::Bool> handTrackingEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetHandTrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetHandTrackingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handTrackingEnabled)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handTrackingEnabled));
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetHandState
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetHandState(::GlobalNamespace::OVRPlugin::Step stepId, ::GlobalNamespace::OVRPlugin::Hand hand, ByRef<::GlobalNamespace::OVRPlugin::HandStateInternal> handState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetHandState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetHandState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::HandStateInternal&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, hand, byref(handState));
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetSkeleton
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetSkeleton(::GlobalNamespace::OVRPlugin::SkeletonType skeletonType, ByRef<::GlobalNamespace::OVRPlugin::Skeleton> skeleton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skeletonType), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Skeleton&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skeletonType, byref(skeleton));
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetMesh
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetMesh(::GlobalNamespace::OVRPlugin::MeshType meshType, ::System::IntPtr meshPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshType), ::il2cpp_utils::ExtractType(meshPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, meshType, meshPtr);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_OverrideExternalCameraFov
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_OverrideExternalCameraFov(int cameraId, ::GlobalNamespace::OVRPlugin::Bool useOverriddenFov, ByRef<::GlobalNamespace::OVRPlugin::Fovf> fov) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_OverrideExternalCameraFov");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_OverrideExternalCameraFov", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId), ::il2cpp_utils::ExtractType(useOverriddenFov), ::il2cpp_utils::ExtractType(fov)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraId, useOverriddenFov, byref(fov));
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetUseOverriddenExternalCameraFov
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraFov(int cameraId, ByRef<::GlobalNamespace::OVRPlugin::Bool> useOverriddenFov) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraFov");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetUseOverriddenExternalCameraFov", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraId, byref(useOverriddenFov));
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_OverrideExternalCameraStaticPose
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_OverrideExternalCameraStaticPose(int cameraId, ::GlobalNamespace::OVRPlugin::Bool useOverriddenPose, ByRef<::GlobalNamespace::OVRPlugin::Posef> poseInStageOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_OverrideExternalCameraStaticPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_OverrideExternalCameraStaticPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId), ::il2cpp_utils::ExtractType(useOverriddenPose), ::il2cpp_utils::ExtractType(poseInStageOrigin)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraId, useOverriddenPose, byref(poseInStageOrigin));
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetUseOverriddenExternalCameraStaticPose
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraStaticPose(int cameraId, ByRef<::GlobalNamespace::OVRPlugin::Bool> useOverriddenStaticPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraStaticPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetUseOverriddenExternalCameraStaticPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraId, byref(useOverriddenStaticPose));
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_ResetDefaultExternalCamera
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_ResetDefaultExternalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_ResetDefaultExternalCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_ResetDefaultExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_SetDefaultExternalCamera
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_SetDefaultExternalCamera(::StringW cameraName, ByRef<::GlobalNamespace::OVRPlugin::CameraIntrinsics> cameraIntrinsics, ByRef<::GlobalNamespace::OVRPlugin::CameraExtrinsics> cameraExtrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_SetDefaultExternalCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_SetDefaultExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraName), ::il2cpp_utils::ExtractType(cameraIntrinsics), ::il2cpp_utils::ExtractType(cameraExtrinsics)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraName, byref(cameraIntrinsics), byref(cameraExtrinsics));
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetLocalTrackingSpaceRecenterCount
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetLocalTrackingSpaceRecenterCount(ByRef<int> recenterCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetLocalTrackingSpaceRecenterCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetLocalTrackingSpaceRecenterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recenterCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(recenterCount));
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_44_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_44_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_45_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_45_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_45_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_45_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_45_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_45_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_45_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_45_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_45_0.ovrp_GetSystemHmd3DofModeEnabled
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_45_0::ovrp_GetSystemHmd3DofModeEnabled(ByRef<::GlobalNamespace::OVRPlugin::Bool> enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_45_0::ovrp_GetSystemHmd3DofModeEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_45_0", "ovrp_GetSystemHmd3DofModeEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(enabled));
}
// Autogenerated method: OVRPlugin/OVRP_1_45_0.ovrp_Media_SetAvailableQueueIndexVulkan
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_45_0::ovrp_Media_SetAvailableQueueIndexVulkan(uint queueIndexVk) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_45_0::ovrp_Media_SetAvailableQueueIndexVulkan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_45_0", "ovrp_Media_SetAvailableQueueIndexVulkan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(queueIndexVk)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, queueIndexVk);
}
// Autogenerated method: OVRPlugin/OVRP_1_45_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_45_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_45_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_45_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_46_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_46_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_46_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_46_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_46_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_46_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_46_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_46_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_46_0.ovrp_GetTiledMultiResDynamic
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_46_0::ovrp_GetTiledMultiResDynamic(ByRef<::GlobalNamespace::OVRPlugin::Bool> isDynamic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_46_0::ovrp_GetTiledMultiResDynamic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_46_0", "ovrp_GetTiledMultiResDynamic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(isDynamic));
}
// Autogenerated method: OVRPlugin/OVRP_1_46_0.ovrp_SetTiledMultiResDynamic
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_46_0::ovrp_SetTiledMultiResDynamic(::GlobalNamespace::OVRPlugin::Bool isDynamic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_46_0::ovrp_SetTiledMultiResDynamic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_46_0", "ovrp_SetTiledMultiResDynamic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isDynamic)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isDynamic);
}
// Autogenerated method: OVRPlugin/OVRP_1_46_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_46_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_46_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_46_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_47_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_47_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_47_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_47_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_47_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_47_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_47_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_47_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_47_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_47_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_47_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_47_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_48_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_48_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/CameraIntrinsics
#include "GlobalNamespace/OVRPlugin_CameraIntrinsics.hpp"
// Including type: OVRPlugin/CameraExtrinsics
#include "GlobalNamespace/OVRPlugin_CameraExtrinsics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_48_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_48_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_48_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_48_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_48_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_48_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_48_0.ovrp_SetExternalCameraProperties
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_48_0::ovrp_SetExternalCameraProperties(::StringW cameraName, ByRef<::GlobalNamespace::OVRPlugin::CameraIntrinsics> cameraIntrinsics, ByRef<::GlobalNamespace::OVRPlugin::CameraExtrinsics> cameraExtrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_48_0::ovrp_SetExternalCameraProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_48_0", "ovrp_SetExternalCameraProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraName), ::il2cpp_utils::ExtractType(cameraIntrinsics), ::il2cpp_utils::ExtractType(cameraExtrinsics)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraName, byref(cameraIntrinsics), byref(cameraExtrinsics));
}
// Autogenerated method: OVRPlugin/OVRP_1_48_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_48_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_48_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_48_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_49_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_49_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/ColorSpace
#include "GlobalNamespace/OVRPlugin_ColorSpace.hpp"
// Including type: OVRPlugin/CameraAnchorType
#include "GlobalNamespace/OVRPlugin_CameraAnchorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_49_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_49_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_49_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_49_0", "version", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 OVRP_ANCHOR_NAME_SIZE
int GlobalNamespace::OVRPlugin::OVRP_1_49_0::_get_OVRP_ANCHOR_NAME_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::_get_OVRP_ANCHOR_NAME_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin/OVRP_1_49_0", "OVRP_ANCHOR_NAME_SIZE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OVRP_ANCHOR_NAME_SIZE
void GlobalNamespace::OVRPlugin::OVRP_1_49_0::_set_OVRP_ANCHOR_NAME_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::_set_OVRP_ANCHOR_NAME_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_49_0", "OVRP_ANCHOR_NAME_SIZE", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_SetClientColorDesc
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_SetClientColorDesc(::GlobalNamespace::OVRPlugin::ColorSpace colorSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_SetClientColorDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_SetClientColorDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorSpace);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_GetHmdColorDesc
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_GetHmdColorDesc(ByRef<::GlobalNamespace::OVRPlugin::ColorSpace> colorSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_GetHmdColorDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_GetHmdColorDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(colorSpace));
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_EncodeMrcFrameWithPoseTime
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_EncodeMrcFrameWithPoseTime(::System::IntPtr rawBuffer, ::System::IntPtr audioDataPtr, int audioDataLen, int audioChannels, double timestamp, double poseTime, ByRef<int> outSyncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_EncodeMrcFrameWithPoseTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_EncodeMrcFrameWithPoseTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawBuffer), ::il2cpp_utils::ExtractType(audioDataPtr), ::il2cpp_utils::ExtractType(audioDataLen), ::il2cpp_utils::ExtractType(audioChannels), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(poseTime), ::il2cpp_utils::ExtractType(outSyncId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawBuffer, audioDataPtr, audioDataLen, audioChannels, timestamp, poseTime, byref(outSyncId));
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_EncodeMrcFrameDualTexturesWithPoseTime
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_EncodeMrcFrameDualTexturesWithPoseTime(::System::IntPtr backgroundTextureHandle, ::System::IntPtr foregroundTextureHandle, ::System::IntPtr audioData, int audioDataLen, int audioChannels, double timestamp, double poseTime, ByRef<int> outSyncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_EncodeMrcFrameDualTexturesWithPoseTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_EncodeMrcFrameDualTexturesWithPoseTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(backgroundTextureHandle), ::il2cpp_utils::ExtractType(foregroundTextureHandle), ::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(audioDataLen), ::il2cpp_utils::ExtractType(audioChannels), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(poseTime), ::il2cpp_utils::ExtractType(outSyncId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, backgroundTextureHandle, foregroundTextureHandle, audioData, audioDataLen, audioChannels, timestamp, poseTime, byref(outSyncId));
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_SetHeadsetControllerPose
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_SetHeadsetControllerPose(::GlobalNamespace::OVRPlugin::Posef headsetPose, ::GlobalNamespace::OVRPlugin::Posef leftControllerPose, ::GlobalNamespace::OVRPlugin::Posef rightControllerPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_SetHeadsetControllerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_SetHeadsetControllerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headsetPose), ::il2cpp_utils::ExtractType(leftControllerPose), ::il2cpp_utils::ExtractType(rightControllerPose)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, headsetPose, leftControllerPose, rightControllerPose);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_EnumerateCameraAnchorHandles
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_EnumerateCameraAnchorHandles(ByRef<int> anchorCount, ByRef<::System::IntPtr> CameraAnchorHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_EnumerateCameraAnchorHandles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_EnumerateCameraAnchorHandles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorCount), ::il2cpp_utils::ExtractType(CameraAnchorHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(anchorCount), byref(CameraAnchorHandle));
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_GetCurrentCameraAnchorHandle
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCurrentCameraAnchorHandle(ByRef<::System::IntPtr> anchorHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCurrentCameraAnchorHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_GetCurrentCameraAnchorHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(anchorHandle));
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_GetCameraAnchorName
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCameraAnchorName(::System::IntPtr anchorHandle, ::ArrayW<::Il2CppChar> cameraName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCameraAnchorName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_GetCameraAnchorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorHandle), ::il2cpp_utils::ExtractType(cameraName)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, anchorHandle, cameraName);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_GetCameraAnchorHandle
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCameraAnchorHandle(::System::IntPtr anchorName, ByRef<::System::IntPtr> anchorHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCameraAnchorHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_GetCameraAnchorHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorName), ::il2cpp_utils::ExtractType(anchorHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, anchorName, byref(anchorHandle));
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_GetCameraAnchorType
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCameraAnchorType(::System::IntPtr anchorHandle, ByRef<::GlobalNamespace::OVRPlugin::CameraAnchorType> anchorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCameraAnchorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_GetCameraAnchorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorHandle), ::il2cpp_utils::ExtractType(anchorType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, anchorHandle, byref(anchorType));
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_CreateCustomCameraAnchor
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_CreateCustomCameraAnchor(::System::IntPtr anchorName, ByRef<::System::IntPtr> anchorHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_CreateCustomCameraAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_CreateCustomCameraAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorName), ::il2cpp_utils::ExtractType(anchorHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, anchorName, byref(anchorHandle));
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_DestroyCustomCameraAnchor
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_DestroyCustomCameraAnchor(::System::IntPtr anchorHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_DestroyCustomCameraAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_DestroyCustomCameraAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, anchorHandle);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_GetCustomCameraAnchorPose
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCustomCameraAnchorPose(::System::IntPtr anchorHandle, ByRef<::GlobalNamespace::OVRPlugin::Posef> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCustomCameraAnchorPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_GetCustomCameraAnchorPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorHandle), ::il2cpp_utils::ExtractType(pose)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, anchorHandle, byref(pose));
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_SetCustomCameraAnchorPose
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_SetCustomCameraAnchorPose(::System::IntPtr anchorHandle, ::GlobalNamespace::OVRPlugin::Posef pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_SetCustomCameraAnchorPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_SetCustomCameraAnchorPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorHandle), ::il2cpp_utils::ExtractType(pose)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, anchorHandle, pose);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_GetCameraMinMaxDistance
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCameraMinMaxDistance(::System::IntPtr anchorHandle, ByRef<double> minDistance, ByRef<double> maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_GetCameraMinMaxDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_GetCameraMinMaxDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorHandle), ::il2cpp_utils::ExtractType(minDistance), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, anchorHandle, byref(minDistance), byref(maxDistance));
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0.ovrp_Media_SetCameraMinMaxDistance
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_SetCameraMinMaxDistance(::System::IntPtr anchorHandle, double minDistance, double maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::ovrp_Media_SetCameraMinMaxDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", "ovrp_Media_SetCameraMinMaxDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorHandle), ::il2cpp_utils::ExtractType(minDistance), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, anchorHandle, minDistance, maxDistance);
}
// Autogenerated method: OVRPlugin/OVRP_1_49_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_49_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_49_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_49_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_50_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_50_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_50_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_50_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_50_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_50_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_50_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_50_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_50_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_50_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_50_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_50_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_51_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_51_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_51_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_51_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_51_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_51_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_51_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_51_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_51_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_51_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_51_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_51_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_52_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_52_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_52_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_52_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_52_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_52_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_52_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_52_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_52_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_52_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_52_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_52_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_53_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_53_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_53_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_53_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_53_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_53_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_53_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_53_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_53_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_53_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_53_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_53_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_54_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_54_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_54_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_54_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_54_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_54_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_54_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_54_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_54_0.ovrp_Media_SetPlatformInitialized
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_54_0::ovrp_Media_SetPlatformInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_54_0::ovrp_Media_SetPlatformInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_54_0", "ovrp_Media_SetPlatformInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_54_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_54_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_54_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_54_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_55_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_55_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/EventDataBuffer
#include "GlobalNamespace/OVRPlugin_EventDataBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_55_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_55_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_55_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_55_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_55_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_55_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_55_0.ovrp_GetSkeleton2
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_55_0::ovrp_GetSkeleton2(::GlobalNamespace::OVRPlugin::SkeletonType skeletonType, ByRef<::GlobalNamespace::OVRPlugin::Skeleton2Internal> skeleton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_55_0::ovrp_GetSkeleton2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_55_0", "ovrp_GetSkeleton2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skeletonType), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Skeleton2Internal&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skeletonType, byref(skeleton));
}
// Autogenerated method: OVRPlugin/OVRP_1_55_0.ovrp_PollEvent
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_55_0::ovrp_PollEvent(ByRef<::GlobalNamespace::OVRPlugin::EventDataBuffer> eventDataBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_55_0::ovrp_PollEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_55_0", "ovrp_PollEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventDataBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(eventDataBuffer));
}
// Autogenerated method: OVRPlugin/OVRP_1_55_0.ovrp_GetNativeXrApiType
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_55_0::ovrp_GetNativeXrApiType(ByRef<::GlobalNamespace::OVRPlugin::XrApi> xrApi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_55_0::ovrp_GetNativeXrApiType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_55_0", "ovrp_GetNativeXrApiType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::XrApi&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(xrApi));
}
// Autogenerated method: OVRPlugin/OVRP_1_55_0.ovrp_GetNativeOpenXRHandles
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_55_0::ovrp_GetNativeOpenXRHandles(ByRef<uint64_t> xrInstance, ByRef<uint64_t> xrSession) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_55_0::ovrp_GetNativeOpenXRHandles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_55_0", "ovrp_GetNativeOpenXRHandles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t&>(), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(xrInstance), byref(xrSession));
}
// Autogenerated method: OVRPlugin/OVRP_1_55_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_55_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_55_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_55_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_55_1
#include "GlobalNamespace/OVRPlugin_OVRP_1_55_1.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/EventType
#include "GlobalNamespace/OVRPlugin_EventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_55_1::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_55_1::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_55_1", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_55_1::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_55_1::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_55_1", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_55_1.ovrp_PollEvent2
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_55_1::ovrp_PollEvent2(ByRef<::GlobalNamespace::OVRPlugin::EventType> eventType, ByRef<::System::IntPtr> eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_55_1::ovrp_PollEvent2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_55_1", "ovrp_PollEvent2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(eventType), byref(eventData));
}
// Autogenerated method: OVRPlugin/OVRP_1_55_1..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_55_1::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_55_1::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_55_1", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_56_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_56_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_56_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_56_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_56_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_56_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_56_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_56_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_56_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_56_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_56_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_56_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_57_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_57_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Media/PlatformCameraMode
#include "GlobalNamespace/OVRPlugin_Media_PlatformCameraMode.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/Vector2f
#include "GlobalNamespace/OVRPlugin_Vector2f.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_57_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_57_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_57_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_57_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_57_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_57_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_57_0.ovrp_Media_GetPlatformCameraMode
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_Media_GetPlatformCameraMode(ByRef<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode> platformCameraMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_Media_GetPlatformCameraMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_57_0", "ovrp_Media_GetPlatformCameraMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(platformCameraMode));
}
// Autogenerated method: OVRPlugin/OVRP_1_57_0.ovrp_Media_SetPlatformCameraMode
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_Media_SetPlatformCameraMode(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode platformCameraMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_Media_SetPlatformCameraMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_57_0", "ovrp_Media_SetPlatformCameraMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platformCameraMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, platformCameraMode);
}
// Autogenerated method: OVRPlugin/OVRP_1_57_0.ovrp_SetEyeFovPremultipliedAlphaMode
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_SetEyeFovPremultipliedAlphaMode(::GlobalNamespace::OVRPlugin::Bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_SetEyeFovPremultipliedAlphaMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_57_0", "ovrp_SetEyeFovPremultipliedAlphaMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enabled);
}
// Autogenerated method: OVRPlugin/OVRP_1_57_0.ovrp_GetEyeFovPremultipliedAlphaMode
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_GetEyeFovPremultipliedAlphaMode(ByRef<::GlobalNamespace::OVRPlugin::Bool> enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_GetEyeFovPremultipliedAlphaMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_57_0", "ovrp_GetEyeFovPremultipliedAlphaMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(enabled));
}
// Autogenerated method: OVRPlugin/OVRP_1_57_0.ovrp_SetKeyboardOverlayUV
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_SetKeyboardOverlayUV(::GlobalNamespace::OVRPlugin::Vector2f uv) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_57_0::ovrp_SetKeyboardOverlayUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_57_0", "ovrp_SetKeyboardOverlayUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uv)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uv);
}
// Autogenerated method: OVRPlugin/OVRP_1_57_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_57_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_57_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_57_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_58_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_58_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_58_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_58_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_58_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_58_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_58_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_58_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_58_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_58_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_58_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_58_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_59_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_59_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_59_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_59_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_59_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_59_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_59_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_59_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_59_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_59_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_59_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_59_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_60_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_60_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_60_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_60_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_60_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_60_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_60_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_60_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_60_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_60_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_60_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_60_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_61_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_61_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_61_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_61_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_61_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_61_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_61_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_61_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_61_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_61_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_61_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_61_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_62_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_62_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_62_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_62_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_62_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_62_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_62_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_62_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_62_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_62_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_62_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_62_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_63_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_63_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/InsightPassthroughStyle
#include "GlobalNamespace/OVRPlugin_InsightPassthroughStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_63_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_63_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_63_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_63_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_63_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_63_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_63_0.ovrp_InitializeInsightPassthrough
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_63_0::ovrp_InitializeInsightPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_63_0::ovrp_InitializeInsightPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_63_0", "ovrp_InitializeInsightPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_63_0.ovrp_ShutdownInsightPassthrough
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_63_0::ovrp_ShutdownInsightPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_63_0::ovrp_ShutdownInsightPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_63_0", "ovrp_ShutdownInsightPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_63_0.ovrp_GetInsightPassthroughInitialized
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_63_0::ovrp_GetInsightPassthroughInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_63_0::ovrp_GetInsightPassthroughInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_63_0", "ovrp_GetInsightPassthroughInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_63_0.ovrp_SetInsightPassthroughStyle
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_63_0::ovrp_SetInsightPassthroughStyle(int layerId, ::GlobalNamespace::OVRPlugin::InsightPassthroughStyle style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_63_0::ovrp_SetInsightPassthroughStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_63_0", "ovrp_SetInsightPassthroughStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, style);
}
// Autogenerated method: OVRPlugin/OVRP_1_63_0.ovrp_CreateInsightTriangleMesh
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_63_0::ovrp_CreateInsightTriangleMesh(int layerId, ::System::IntPtr vertices, int vertexCount, ::System::IntPtr triangles, int triangleCount, ByRef<uint64_t> meshHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_63_0::ovrp_CreateInsightTriangleMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_63_0", "ovrp_CreateInsightTriangleMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(vertexCount), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(triangleCount), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, vertices, vertexCount, triangles, triangleCount, byref(meshHandle));
}
// Autogenerated method: OVRPlugin/OVRP_1_63_0.ovrp_DestroyInsightTriangleMesh
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_63_0::ovrp_DestroyInsightTriangleMesh(uint64_t meshHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_63_0::ovrp_DestroyInsightTriangleMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_63_0", "ovrp_DestroyInsightTriangleMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, meshHandle);
}
// Autogenerated method: OVRPlugin/OVRP_1_63_0.ovrp_AddInsightPassthroughSurfaceGeometry
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_63_0::ovrp_AddInsightPassthroughSurfaceGeometry(int layerId, uint64_t meshHandle, ::UnityEngine::Matrix4x4 T_world_model, ByRef<uint64_t> geometryInstanceHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_63_0::ovrp_AddInsightPassthroughSurfaceGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_63_0", "ovrp_AddInsightPassthroughSurfaceGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(meshHandle), ::il2cpp_utils::ExtractType(T_world_model), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, meshHandle, T_world_model, byref(geometryInstanceHandle));
}
// Autogenerated method: OVRPlugin/OVRP_1_63_0.ovrp_DestroyInsightPassthroughGeometryInstance
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_63_0::ovrp_DestroyInsightPassthroughGeometryInstance(uint64_t geometryInstanceHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_63_0::ovrp_DestroyInsightPassthroughGeometryInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_63_0", "ovrp_DestroyInsightPassthroughGeometryInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometryInstanceHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometryInstanceHandle);
}
// Autogenerated method: OVRPlugin/OVRP_1_63_0.ovrp_UpdateInsightPassthroughGeometryTransform
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_63_0::ovrp_UpdateInsightPassthroughGeometryTransform(uint64_t geometryInstanceHandle, ::UnityEngine::Matrix4x4 T_world_model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_63_0::ovrp_UpdateInsightPassthroughGeometryTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_63_0", "ovrp_UpdateInsightPassthroughGeometryTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometryInstanceHandle), ::il2cpp_utils::ExtractType(T_world_model)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometryInstanceHandle, T_world_model);
}
// Autogenerated method: OVRPlugin/OVRP_1_63_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_63_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_63_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_63_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_64_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_64_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/TrackingOrigin
#include "GlobalNamespace/OVRPlugin_TrackingOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_64_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_64_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_64_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_64_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_64_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_64_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_64_0.ovrp_LocateSpace
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_64_0::ovrp_LocateSpace(ByRef<::GlobalNamespace::OVRPlugin::Posef> location, ByRef<uint64_t> space, ::GlobalNamespace::OVRPlugin::TrackingOrigin trackingOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_64_0::ovrp_LocateSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_64_0", "ovrp_LocateSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(trackingOrigin)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location), byref(space), trackingOrigin);
}
// Autogenerated method: OVRPlugin/OVRP_1_64_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_64_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_64_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_64_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_65_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_65_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_65_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_65_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_65_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_65_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_65_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_65_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_65_0.ovrp_KtxLoadFromMemory
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_65_0::ovrp_KtxLoadFromMemory(ByRef<::System::IntPtr> data, uint length, ByRef<::System::IntPtr> texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_65_0::ovrp_KtxLoadFromMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_65_0", "ovrp_KtxLoadFromMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(texture)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(data), length, byref(texture));
}
// Autogenerated method: OVRPlugin/OVRP_1_65_0.ovrp_KtxTextureWidth
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_65_0::ovrp_KtxTextureWidth(::System::IntPtr texture, ByRef<uint> width) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_65_0::ovrp_KtxTextureWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_65_0", "ovrp_KtxTextureWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(width)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, byref(width));
}
// Autogenerated method: OVRPlugin/OVRP_1_65_0.ovrp_KtxTextureHeight
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_65_0::ovrp_KtxTextureHeight(::System::IntPtr texture, ByRef<uint> height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_65_0::ovrp_KtxTextureHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_65_0", "ovrp_KtxTextureHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, byref(height));
}
// Autogenerated method: OVRPlugin/OVRP_1_65_0.ovrp_KtxTranscode
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_65_0::ovrp_KtxTranscode(::System::IntPtr texture, uint format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_65_0::ovrp_KtxTranscode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_65_0", "ovrp_KtxTranscode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, format);
}
// Autogenerated method: OVRPlugin/OVRP_1_65_0.ovrp_KtxGetTextureData
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_65_0::ovrp_KtxGetTextureData(::System::IntPtr texture, ::System::IntPtr data, uint bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_65_0::ovrp_KtxGetTextureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_65_0", "ovrp_KtxGetTextureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, data, bufferSize);
}
// Autogenerated method: OVRPlugin/OVRP_1_65_0.ovrp_KtxTextureSize
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_65_0::ovrp_KtxTextureSize(::System::IntPtr texture, ByRef<uint> size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_65_0::ovrp_KtxTextureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_65_0", "ovrp_KtxTextureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, byref(size));
}
// Autogenerated method: OVRPlugin/OVRP_1_65_0.ovrp_KtxDestroy
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_65_0::ovrp_KtxDestroy(::System::IntPtr texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_65_0::ovrp_KtxDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_65_0", "ovrp_KtxDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture);
}
// Autogenerated method: OVRPlugin/OVRP_1_65_0.ovrp_DestroySpace
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_65_0::ovrp_DestroySpace(ByRef<uint64_t> space) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_65_0::ovrp_DestroySpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_65_0", "ovrp_DestroySpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(space));
}
// Autogenerated method: OVRPlugin/OVRP_1_65_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_65_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_65_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_65_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_66_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_66_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_66_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_66_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_66_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_66_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_66_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_66_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_66_0.ovrp_GetInsightPassthroughInitializationState
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_66_0::ovrp_GetInsightPassthroughInitializationState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_66_0::ovrp_GetInsightPassthroughInitializationState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_66_0", "ovrp_GetInsightPassthroughInitializationState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_66_0.ovrp_Media_IsCastingToRemoteClient
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_66_0::ovrp_Media_IsCastingToRemoteClient(ByRef<::GlobalNamespace::OVRPlugin::Bool> isCasting) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_66_0::ovrp_Media_IsCastingToRemoteClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_66_0", "ovrp_Media_IsCastingToRemoteClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(isCasting));
}
// Autogenerated method: OVRPlugin/OVRP_1_66_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_66_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_66_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_66_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_67_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_67_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_67_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_67_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_67_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_67_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_67_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_67_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_67_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_67_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_67_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_67_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_68_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_68_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/RenderModelPropertiesInternal
#include "GlobalNamespace/OVRPlugin_RenderModelPropertiesInternal.hpp"
// Including type: OVRPlugin/InsightPassthroughKeyboardHandsIntensity
#include "GlobalNamespace/OVRPlugin_InsightPassthroughKeyboardHandsIntensity.hpp"
// Including type: OVRPlugin/TrackedKeyboardQueryFlags
#include "GlobalNamespace/OVRPlugin_TrackedKeyboardQueryFlags.hpp"
// Including type: OVRPlugin/KeyboardDescription
#include "GlobalNamespace/OVRPlugin_KeyboardDescription.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
// Including type: OVRPlugin/KeyboardState
#include "GlobalNamespace/OVRPlugin_KeyboardState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_68_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_68_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_68_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_68_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_68_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_68_0", "version", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 OVRP_RENDER_MODEL_MAX_PATH_LENGTH
int GlobalNamespace::OVRPlugin::OVRP_1_68_0::_get_OVRP_RENDER_MODEL_MAX_PATH_LENGTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_68_0::_get_OVRP_RENDER_MODEL_MAX_PATH_LENGTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin/OVRP_1_68_0", "OVRP_RENDER_MODEL_MAX_PATH_LENGTH"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OVRP_RENDER_MODEL_MAX_PATH_LENGTH
void GlobalNamespace::OVRPlugin::OVRP_1_68_0::_set_OVRP_RENDER_MODEL_MAX_PATH_LENGTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_68_0::_set_OVRP_RENDER_MODEL_MAX_PATH_LENGTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_68_0", "OVRP_RENDER_MODEL_MAX_PATH_LENGTH", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 OVRP_RENDER_MODEL_MAX_NAME_LENGTH
int GlobalNamespace::OVRPlugin::OVRP_1_68_0::_get_OVRP_RENDER_MODEL_MAX_NAME_LENGTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_68_0::_get_OVRP_RENDER_MODEL_MAX_NAME_LENGTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin/OVRP_1_68_0", "OVRP_RENDER_MODEL_MAX_NAME_LENGTH"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OVRP_RENDER_MODEL_MAX_NAME_LENGTH
void GlobalNamespace::OVRPlugin::OVRP_1_68_0::_set_OVRP_RENDER_MODEL_MAX_NAME_LENGTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_68_0::_set_OVRP_RENDER_MODEL_MAX_NAME_LENGTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_68_0", "OVRP_RENDER_MODEL_MAX_NAME_LENGTH", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_68_0.ovrp_LoadRenderModel
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_68_0::ovrp_LoadRenderModel(uint64_t modelKey, uint bufferInputCapacity, ByRef<uint> bufferCountOutput, ::System::IntPtr buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_68_0::ovrp_LoadRenderModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_68_0", "ovrp_LoadRenderModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modelKey), ::il2cpp_utils::ExtractType(bufferInputCapacity), ::il2cpp_utils::ExtractType(bufferCountOutput), ::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, modelKey, bufferInputCapacity, byref(bufferCountOutput), buffer);
}
// Autogenerated method: OVRPlugin/OVRP_1_68_0.ovrp_GetRenderModelPaths
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_68_0::ovrp_GetRenderModelPaths(uint index, ::System::IntPtr path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_68_0::ovrp_GetRenderModelPaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_68_0", "ovrp_GetRenderModelPaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index, path);
}
// Autogenerated method: OVRPlugin/OVRP_1_68_0.ovrp_GetRenderModelProperties
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_68_0::ovrp_GetRenderModelProperties(::StringW path, ByRef<::GlobalNamespace::OVRPlugin::RenderModelPropertiesInternal> properties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_68_0::ovrp_GetRenderModelProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_68_0", "ovrp_GetRenderModelProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::RenderModelPropertiesInternal&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(properties));
}
// Autogenerated method: OVRPlugin/OVRP_1_68_0.ovrp_SetInsightPassthroughKeyboardHandsIntensity
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_68_0::ovrp_SetInsightPassthroughKeyboardHandsIntensity(int layerId, ::GlobalNamespace::OVRPlugin::InsightPassthroughKeyboardHandsIntensity intensity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_68_0::ovrp_SetInsightPassthroughKeyboardHandsIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_68_0", "ovrp_SetInsightPassthroughKeyboardHandsIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(intensity)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, intensity);
}
// Autogenerated method: OVRPlugin/OVRP_1_68_0.ovrp_StartKeyboardTracking
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_68_0::ovrp_StartKeyboardTracking(uint64_t trackedKeyboardId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_68_0::ovrp_StartKeyboardTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_68_0", "ovrp_StartKeyboardTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackedKeyboardId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackedKeyboardId);
}
// Autogenerated method: OVRPlugin/OVRP_1_68_0.ovrp_StopKeyboardTracking
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_68_0::ovrp_StopKeyboardTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_68_0::ovrp_StopKeyboardTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_68_0", "ovrp_StopKeyboardTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_68_0.ovrp_GetSystemKeyboardDescription
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_68_0::ovrp_GetSystemKeyboardDescription(::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags keyboardQueryFlags, ByRef<::GlobalNamespace::OVRPlugin::KeyboardDescription> keyboardDescription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_68_0::ovrp_GetSystemKeyboardDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_68_0", "ovrp_GetSystemKeyboardDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyboardQueryFlags), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::KeyboardDescription&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyboardQueryFlags, byref(keyboardDescription));
}
// Autogenerated method: OVRPlugin/OVRP_1_68_0.ovrp_GetKeyboardState
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_68_0::ovrp_GetKeyboardState(::GlobalNamespace::OVRPlugin::Step stepId, int frameIndex, ByRef<::GlobalNamespace::OVRPlugin::KeyboardState> keyboardState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_68_0::ovrp_GetKeyboardState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_68_0", "ovrp_GetKeyboardState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(frameIndex), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::KeyboardState&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, frameIndex, byref(keyboardState));
}
// Autogenerated method: OVRPlugin/OVRP_1_68_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_68_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_68_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_68_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_69_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_69_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/PoseStatef
#include "GlobalNamespace/OVRPlugin_PoseStatef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_69_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_69_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_69_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_69_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_69_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_69_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_69_0.ovrp_GetNodePoseStateImmediate
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_69_0::ovrp_GetNodePoseStateImmediate(::GlobalNamespace::OVRPlugin::Node nodeId, ByRef<::GlobalNamespace::OVRPlugin::PoseStatef> nodePoseState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_69_0::ovrp_GetNodePoseStateImmediate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_69_0", "ovrp_GetNodePoseStateImmediate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::PoseStatef&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, byref(nodePoseState));
}
// Autogenerated method: OVRPlugin/OVRP_1_69_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_69_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_69_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_69_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_70_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_70_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/LogCallback2DelegateType
#include "GlobalNamespace/OVRPlugin_LogCallback2DelegateType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_70_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_70_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_70_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_70_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_70_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_70_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_70_0.ovrp_SetLogCallback2
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_70_0::ovrp_SetLogCallback2(::GlobalNamespace::OVRPlugin::LogCallback2DelegateType* logCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_70_0::ovrp_SetLogCallback2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_70_0", "ovrp_SetLogCallback2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logCallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logCallback);
}
// Autogenerated method: OVRPlugin/OVRP_1_70_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_70_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_70_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_70_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_71_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_71_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/ProcessorPerformanceLevel
#include "GlobalNamespace/OVRPlugin_ProcessorPerformanceLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_71_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_71_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_71_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_71_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_71_0.ovrp_IsInsightPassthroughSupported
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_IsInsightPassthroughSupported(ByRef<::GlobalNamespace::OVRPlugin::Bool> supported) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_IsInsightPassthroughSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_71_0", "ovrp_IsInsightPassthroughSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(supported)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(supported));
}
// Autogenerated method: OVRPlugin/OVRP_1_71_0.ovrp_UnityOpenXR_SetClientVersion
void GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_SetClientVersion(int majorVersion, int minorVersion, int patchVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_SetClientVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_71_0", "ovrp_UnityOpenXR_SetClientVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(majorVersion), ::il2cpp_utils::ExtractType(minorVersion), ::il2cpp_utils::ExtractType(patchVersion)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, majorVersion, minorVersion, patchVersion);
}
// Autogenerated method: OVRPlugin/OVRP_1_71_0.ovrp_UnityOpenXR_HookGetInstanceProcAddr
::System::IntPtr GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_HookGetInstanceProcAddr(::System::IntPtr func) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_HookGetInstanceProcAddr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_71_0", "ovrp_UnityOpenXR_HookGetInstanceProcAddr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(func)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, func);
}
// Autogenerated method: OVRPlugin/OVRP_1_71_0.ovrp_UnityOpenXR_OnInstanceCreate
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnInstanceCreate(uint64_t xrInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnInstanceCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_71_0", "ovrp_UnityOpenXR_OnInstanceCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrInstance)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrInstance);
}
// Autogenerated method: OVRPlugin/OVRP_1_71_0.ovrp_UnityOpenXR_OnInstanceDestroy
void GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnInstanceDestroy(uint64_t xrInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnInstanceDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_71_0", "ovrp_UnityOpenXR_OnInstanceDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrInstance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrInstance);
}
// Autogenerated method: OVRPlugin/OVRP_1_71_0.ovrp_UnityOpenXR_OnSessionCreate
void GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionCreate(uint64_t xrSession) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_71_0", "ovrp_UnityOpenXR_OnSessionCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrSession)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrSession);
}
// Autogenerated method: OVRPlugin/OVRP_1_71_0.ovrp_UnityOpenXR_OnAppSpaceChange
void GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnAppSpaceChange(uint64_t xrSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnAppSpaceChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_71_0", "ovrp_UnityOpenXR_OnAppSpaceChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrSpace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrSpace);
}
// Autogenerated method: OVRPlugin/OVRP_1_71_0.ovrp_UnityOpenXR_OnSessionStateChange
void GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionStateChange(int oldState, int newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionStateChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_71_0", "ovrp_UnityOpenXR_OnSessionStateChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldState), ::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oldState, newState);
}
// Autogenerated method: OVRPlugin/OVRP_1_71_0.ovrp_UnityOpenXR_OnSessionBegin
void GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionBegin(uint64_t xrSession) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionBegin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_71_0", "ovrp_UnityOpenXR_OnSessionBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrSession)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrSession);
}
// Autogenerated method: OVRPlugin/OVRP_1_71_0.ovrp_UnityOpenXR_OnSessionEnd
void GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionEnd(uint64_t xrSession) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_71_0", "ovrp_UnityOpenXR_OnSessionEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrSession)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrSession);
}
// Autogenerated method: OVRPlugin/OVRP_1_71_0.ovrp_UnityOpenXR_OnSessionExiting
void GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionExiting(uint64_t xrSession) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionExiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_71_0", "ovrp_UnityOpenXR_OnSessionExiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrSession)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrSession);
}
// Autogenerated method: OVRPlugin/OVRP_1_71_0.ovrp_UnityOpenXR_OnSessionDestroy
void GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionDestroy(uint64_t xrSession) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_71_0", "ovrp_UnityOpenXR_OnSessionDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrSession)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrSession);
}
// Autogenerated method: OVRPlugin/OVRP_1_71_0.ovrp_SetSuggestedCpuPerformanceLevel
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_SetSuggestedCpuPerformanceLevel(::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel perfLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_SetSuggestedCpuPerformanceLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_71_0", "ovrp_SetSuggestedCpuPerformanceLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perfLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, perfLevel);
}
// Autogenerated method: OVRPlugin/OVRP_1_71_0.ovrp_GetSuggestedCpuPerformanceLevel
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_GetSuggestedCpuPerformanceLevel(ByRef<::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel> perfLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_GetSuggestedCpuPerformanceLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_71_0", "ovrp_GetSuggestedCpuPerformanceLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(perfLevel));
}
// Autogenerated method: OVRPlugin/OVRP_1_71_0.ovrp_SetSuggestedGpuPerformanceLevel
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_SetSuggestedGpuPerformanceLevel(::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel perfLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_SetSuggestedGpuPerformanceLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_71_0", "ovrp_SetSuggestedGpuPerformanceLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perfLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, perfLevel);
}
// Autogenerated method: OVRPlugin/OVRP_1_71_0.ovrp_GetSuggestedGpuPerformanceLevel
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_GetSuggestedGpuPerformanceLevel(ByRef<::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel> perfLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::ovrp_GetSuggestedGpuPerformanceLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_71_0", "ovrp_GetSuggestedGpuPerformanceLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::ProcessorPerformanceLevel&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(perfLevel));
}
// Autogenerated method: OVRPlugin/OVRP_1_71_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_71_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_71_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_71_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_72_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_72_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/SpatialAnchorCreateInfo
#include "GlobalNamespace/OVRPlugin_SpatialAnchorCreateInfo.hpp"
// Including type: OVRPlugin/SpaceStorageLocation
#include "GlobalNamespace/OVRPlugin_SpaceStorageLocation.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/SpaceStoragePersistenceMode
#include "GlobalNamespace/OVRPlugin_SpaceStoragePersistenceMode.hpp"
// Including type: OVRPlugin/SpaceQueryInfo
#include "GlobalNamespace/OVRPlugin_SpaceQueryInfo.hpp"
// Including type: OVRPlugin/SpaceContainerInternal
#include "GlobalNamespace/OVRPlugin_SpaceContainerInternal.hpp"
// Including type: OVRPlugin/Rectf
#include "GlobalNamespace/OVRPlugin_Rectf.hpp"
// Including type: OVRPlugin/Boundsf
#include "GlobalNamespace/OVRPlugin_Boundsf.hpp"
// Including type: OVRPlugin/SpaceSemanticLabelInternal
#include "GlobalNamespace/OVRPlugin_SpaceSemanticLabelInternal.hpp"
// Including type: OVRPlugin/RoomLayoutInternal
#include "GlobalNamespace/OVRPlugin_RoomLayoutInternal.hpp"
// Including type: OVRPlugin/PolygonalBoundary2DInternal
#include "GlobalNamespace/OVRPlugin_PolygonalBoundary2DInternal.hpp"
// Including type: OVRPlugin/SceneCaptureRequestInternal
#include "GlobalNamespace/OVRPlugin_SceneCaptureRequestInternal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_72_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_72_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_72_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_72_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_72_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_72_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_72_0.ovrp_CreateSpatialAnchor
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_CreateSpatialAnchor(ByRef<::GlobalNamespace::OVRPlugin::SpatialAnchorCreateInfo> createInfo, ByRef<uint64_t> requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_CreateSpatialAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_72_0", "ovrp_CreateSpatialAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(createInfo), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(createInfo), byref(requestId));
}
// Autogenerated method: OVRPlugin/OVRP_1_72_0.ovrp_SetSpaceComponentStatus
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_SetSpaceComponentStatus(ByRef<uint64_t> space, ::GlobalNamespace::OVRPlugin::SpaceComponentType componentType, ::GlobalNamespace::OVRPlugin::Bool enable, double timeout, ByRef<uint64_t> requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_SetSpaceComponentStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_72_0", "ovrp_SetSpaceComponentStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(componentType), ::il2cpp_utils::ExtractType(enable), ::il2cpp_utils::ExtractType(timeout), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(space), componentType, enable, timeout, byref(requestId));
}
// Autogenerated method: OVRPlugin/OVRP_1_72_0.ovrp_GetSpaceComponentStatus
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceComponentStatus(ByRef<uint64_t> space, ::GlobalNamespace::OVRPlugin::SpaceComponentType componentType, ByRef<::GlobalNamespace::OVRPlugin::Bool> enabled, ByRef<::GlobalNamespace::OVRPlugin::Bool> changePending) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceComponentStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_72_0", "ovrp_GetSpaceComponentStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(componentType), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>(), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(space), componentType, byref(enabled), byref(changePending));
}
// Autogenerated method: OVRPlugin/OVRP_1_72_0.ovrp_EnumerateSpaceSupportedComponents
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_EnumerateSpaceSupportedComponents(ByRef<uint64_t> space, uint componentTypesCapacityInput, ByRef<uint> componentTypesCountOutput, ByRef<::ArrayW<::GlobalNamespace::OVRPlugin::SpaceComponentType>> componentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_EnumerateSpaceSupportedComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_72_0", "ovrp_EnumerateSpaceSupportedComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(componentTypesCapacityInput), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractType(componentTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(space), componentTypesCapacityInput, byref(componentTypesCountOutput), byref(componentTypes));
}
// Autogenerated method: OVRPlugin/OVRP_1_72_0.ovrp_SaveSpace
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_SaveSpace(ByRef<uint64_t> space, ::GlobalNamespace::OVRPlugin::SpaceStorageLocation location, ::GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode mode, ByRef<uint64_t> requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_SaveSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_72_0", "ovrp_SaveSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(space), location, mode, byref(requestId));
}
// Autogenerated method: OVRPlugin/OVRP_1_72_0.ovrp_QuerySpaces
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_QuerySpaces(ByRef<::GlobalNamespace::OVRPlugin::SpaceQueryInfo> queryInfo, ByRef<uint64_t> requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_QuerySpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_72_0", "ovrp_QuerySpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(queryInfo), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(queryInfo), byref(requestId));
}
// Autogenerated method: OVRPlugin/OVRP_1_72_0.ovrp_RetrieveSpaceQueryResults
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_RetrieveSpaceQueryResults(ByRef<uint64_t> requestId, uint resultCapacityInput, ByRef<uint> resultCountOutput, ::System::IntPtr results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_RetrieveSpaceQueryResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_72_0", "ovrp_RetrieveSpaceQueryResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(resultCapacityInput), ::il2cpp_utils::ExtractType(resultCountOutput), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(requestId), resultCapacityInput, byref(resultCountOutput), results);
}
// Autogenerated method: OVRPlugin/OVRP_1_72_0.ovrp_EraseSpace
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_EraseSpace(ByRef<uint64_t> space, ::GlobalNamespace::OVRPlugin::SpaceStorageLocation location, ByRef<uint64_t> requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_EraseSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_72_0", "ovrp_EraseSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(space), location, byref(requestId));
}
// Autogenerated method: OVRPlugin/OVRP_1_72_0.ovrp_GetSpaceContainer
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceContainer(ByRef<uint64_t> space, ByRef<::GlobalNamespace::OVRPlugin::SpaceContainerInternal> containerInternal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_72_0", "ovrp_GetSpaceContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(containerInternal)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(space), byref(containerInternal));
}
// Autogenerated method: OVRPlugin/OVRP_1_72_0.ovrp_GetSpaceBoundingBox2D
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceBoundingBox2D(ByRef<uint64_t> space, ByRef<::GlobalNamespace::OVRPlugin::Rectf> rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceBoundingBox2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_72_0", "ovrp_GetSpaceBoundingBox2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Rectf&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(space), byref(rect));
}
// Autogenerated method: OVRPlugin/OVRP_1_72_0.ovrp_GetSpaceBoundingBox3D
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceBoundingBox3D(ByRef<uint64_t> space, ByRef<::GlobalNamespace::OVRPlugin::Boundsf> bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceBoundingBox3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_72_0", "ovrp_GetSpaceBoundingBox3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Boundsf&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(space), byref(bounds));
}
// Autogenerated method: OVRPlugin/OVRP_1_72_0.ovrp_GetSpaceSemanticLabels
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceSemanticLabels(ByRef<uint64_t> space, ByRef<::GlobalNamespace::OVRPlugin::SpaceSemanticLabelInternal> labelsInternal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceSemanticLabels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_72_0", "ovrp_GetSpaceSemanticLabels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(labelsInternal)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(space), byref(labelsInternal));
}
// Autogenerated method: OVRPlugin/OVRP_1_72_0.ovrp_GetSpaceRoomLayout
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceRoomLayout(ByRef<uint64_t> space, ByRef<::GlobalNamespace::OVRPlugin::RoomLayoutInternal> roomLayoutInternal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceRoomLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_72_0", "ovrp_GetSpaceRoomLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(roomLayoutInternal)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(space), byref(roomLayoutInternal));
}
// Autogenerated method: OVRPlugin/OVRP_1_72_0.ovrp_GetSpaceBoundary2D
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceBoundary2D(ByRef<uint64_t> space, ByRef<::GlobalNamespace::OVRPlugin::PolygonalBoundary2DInternal> boundaryInternal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_GetSpaceBoundary2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_72_0", "ovrp_GetSpaceBoundary2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(boundaryInternal)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(space), byref(boundaryInternal));
}
// Autogenerated method: OVRPlugin/OVRP_1_72_0.ovrp_RequestSceneCapture
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_RequestSceneCapture(ByRef<::GlobalNamespace::OVRPlugin::SceneCaptureRequestInternal> request, ByRef<uint64_t> requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_72_0::ovrp_RequestSceneCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_72_0", "ovrp_RequestSceneCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(request), byref(requestId));
}
// Autogenerated method: OVRPlugin/OVRP_1_72_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_72_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_72_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_72_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_73_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_73_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_73_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_73_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_73_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_73_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_73_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_73_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_73_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_73_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_73_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_73_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_74_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_74_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/VirtualKeyboardCreateInfo
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardCreateInfo.hpp"
// Including type: OVRPlugin/VirtualKeyboardInputInfo
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardInputInfo.hpp"
// Including type: OVRPlugin/VirtualKeyboardSpaceCreateInfo
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardSpaceCreateInfo.hpp"
// Including type: OVRPlugin/VirtualKeyboardLocationInfo
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardLocationInfo.hpp"
// Including type: OVRPlugin/RenderModelFlags
#include "GlobalNamespace/OVRPlugin_RenderModelFlags.hpp"
// Including type: OVRPlugin/RenderModelPropertiesInternal
#include "GlobalNamespace/OVRPlugin_RenderModelPropertiesInternal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_74_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_74_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_74_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_74_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_74_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_74_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_74_0.ovrp_GetSpaceUuid
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_74_0::ovrp_GetSpaceUuid(ByRef<uint64_t> space, ByRef<::System::Guid> uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_74_0::ovrp_GetSpaceUuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_74_0", "ovrp_GetSpaceUuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(space), byref(uuid));
}
// Autogenerated method: OVRPlugin/OVRP_1_74_0.ovrp_CreateVirtualKeyboard
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_74_0::ovrp_CreateVirtualKeyboard(::GlobalNamespace::OVRPlugin::VirtualKeyboardCreateInfo createInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_74_0::ovrp_CreateVirtualKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_74_0", "ovrp_CreateVirtualKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(createInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, createInfo);
}
// Autogenerated method: OVRPlugin/OVRP_1_74_0.ovrp_DestroyVirtualKeyboard
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_74_0::ovrp_DestroyVirtualKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_74_0::ovrp_DestroyVirtualKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_74_0", "ovrp_DestroyVirtualKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_74_0.ovrp_SendVirtualKeyboardInput
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_74_0::ovrp_SendVirtualKeyboardInput(::GlobalNamespace::OVRPlugin::VirtualKeyboardInputInfo inputInfo, ByRef<::GlobalNamespace::OVRPlugin::Posef> interactorRootPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_74_0::ovrp_SendVirtualKeyboardInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_74_0", "ovrp_SendVirtualKeyboardInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputInfo), ::il2cpp_utils::ExtractType(interactorRootPose)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inputInfo, byref(interactorRootPose));
}
// Autogenerated method: OVRPlugin/OVRP_1_74_0.ovrp_ChangeVirtualKeyboardTextContext
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_74_0::ovrp_ChangeVirtualKeyboardTextContext(::StringW textContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_74_0::ovrp_ChangeVirtualKeyboardTextContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_74_0", "ovrp_ChangeVirtualKeyboardTextContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, textContext);
}
// Autogenerated method: OVRPlugin/OVRP_1_74_0.ovrp_CreateVirtualKeyboardSpace
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_74_0::ovrp_CreateVirtualKeyboardSpace(::GlobalNamespace::OVRPlugin::VirtualKeyboardSpaceCreateInfo createInfo, ByRef<uint64_t> keyboardSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_74_0::ovrp_CreateVirtualKeyboardSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_74_0", "ovrp_CreateVirtualKeyboardSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(createInfo), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, createInfo, byref(keyboardSpace));
}
// Autogenerated method: OVRPlugin/OVRP_1_74_0.ovrp_SuggestVirtualKeyboardLocation
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_74_0::ovrp_SuggestVirtualKeyboardLocation(::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationInfo locationInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_74_0::ovrp_SuggestVirtualKeyboardLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_74_0", "ovrp_SuggestVirtualKeyboardLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locationInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, locationInfo);
}
// Autogenerated method: OVRPlugin/OVRP_1_74_0.ovrp_GetVirtualKeyboardScale
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_74_0::ovrp_GetVirtualKeyboardScale(ByRef<float> location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_74_0::ovrp_GetVirtualKeyboardScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_74_0", "ovrp_GetVirtualKeyboardScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location));
}
// Autogenerated method: OVRPlugin/OVRP_1_74_0.ovrp_GetRenderModelProperties2
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_74_0::ovrp_GetRenderModelProperties2(::StringW path, ::GlobalNamespace::OVRPlugin::RenderModelFlags flags, ByRef<::GlobalNamespace::OVRPlugin::RenderModelPropertiesInternal> properties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_74_0::ovrp_GetRenderModelProperties2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_74_0", "ovrp_GetRenderModelProperties2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::RenderModelPropertiesInternal&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, flags, byref(properties));
}
// Autogenerated method: OVRPlugin/OVRP_1_74_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_74_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_74_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_74_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_75_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_75_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_75_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_75_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_75_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_75_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_75_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_75_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_75_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_75_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_75_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_75_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_76_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_76_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/PoseStatef
#include "GlobalNamespace/OVRPlugin_PoseStatef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_76_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_76_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_76_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_76_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_76_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_76_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_76_0.ovrp_GetNodePoseStateAtTime
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_76_0::ovrp_GetNodePoseStateAtTime(double time, ::GlobalNamespace::OVRPlugin::Node nodeId, ByRef<::GlobalNamespace::OVRPlugin::PoseStatef> nodePoseState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_76_0::ovrp_GetNodePoseStateAtTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_76_0", "ovrp_GetNodePoseStateAtTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::PoseStatef&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, nodeId, byref(nodePoseState));
}
// Autogenerated method: OVRPlugin/OVRP_1_76_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_76_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_76_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_76_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_78_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_78_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/PassthroughCapabilityFlags
#include "GlobalNamespace/OVRPlugin_PassthroughCapabilityFlags.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
// Including type: OVRPlugin/BodyStateInternal
#include "GlobalNamespace/OVRPlugin_BodyStateInternal.hpp"
// Including type: OVRPlugin/ControllerState5
#include "GlobalNamespace/OVRPlugin_ControllerState5.hpp"
// Including type: OVRPlugin/Controller
#include "GlobalNamespace/OVRPlugin_Controller.hpp"
// Including type: OVRPlugin/HapticsLocation
#include "GlobalNamespace/OVRPlugin_HapticsLocation.hpp"
// Including type: OVRPlugin/Hand
#include "GlobalNamespace/OVRPlugin_Hand.hpp"
// Including type: OVRPlugin/InteractionProfile
#include "GlobalNamespace/OVRPlugin_InteractionProfile.hpp"
// Including type: OVRPlugin/HapticsAmplitudeEnvelopeVibration
#include "GlobalNamespace/OVRPlugin_HapticsAmplitudeEnvelopeVibration.hpp"
// Including type: OVRPlugin/HapticsPcmVibration
#include "GlobalNamespace/OVRPlugin_HapticsPcmVibration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_78_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_78_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_78_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_78_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_GetPassthroughCapabilityFlags
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetPassthroughCapabilityFlags(ByRef<::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags> capabilityFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetPassthroughCapabilityFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_GetPassthroughCapabilityFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capabilityFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(capabilityFlags));
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_GetFoveationEyeTrackedSupported
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetFoveationEyeTrackedSupported(ByRef<::GlobalNamespace::OVRPlugin::Bool> foveationSupported) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetFoveationEyeTrackedSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_GetFoveationEyeTrackedSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(foveationSupported));
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_GetFoveationEyeTracked
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetFoveationEyeTracked(ByRef<::GlobalNamespace::OVRPlugin::Bool> isEyeTrackedFoveation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetFoveationEyeTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_GetFoveationEyeTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(isEyeTrackedFoveation));
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_SetFoveationEyeTracked
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_SetFoveationEyeTracked(::GlobalNamespace::OVRPlugin::Bool isEyeTrackedFoveation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_SetFoveationEyeTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_SetFoveationEyeTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isEyeTrackedFoveation)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isEyeTrackedFoveation);
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_StartFaceTracking
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_StartFaceTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_StartFaceTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_StartFaceTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_StopFaceTracking
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_StopFaceTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_StopFaceTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_StopFaceTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_StartBodyTracking
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_StartBodyTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_StartBodyTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_StartBodyTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_StopBodyTracking
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_StopBodyTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_StopBodyTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_StopBodyTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_StartEyeTracking
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_StartEyeTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_StartEyeTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_StartEyeTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_StopEyeTracking
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_StopEyeTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_StopEyeTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_StopEyeTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_GetEyeTrackingSupported
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetEyeTrackingSupported(ByRef<::GlobalNamespace::OVRPlugin::Bool> eyeTrackingSupported) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetEyeTrackingSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_GetEyeTrackingSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(eyeTrackingSupported));
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_GetFaceTrackingSupported
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetFaceTrackingSupported(ByRef<::GlobalNamespace::OVRPlugin::Bool> faceTrackingSupported) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetFaceTrackingSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_GetFaceTrackingSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(faceTrackingSupported));
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_GetBodyTrackingEnabled
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetBodyTrackingEnabled(ByRef<::GlobalNamespace::OVRPlugin::Bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetBodyTrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_GetBodyTrackingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value));
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_GetBodyTrackingSupported
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetBodyTrackingSupported(ByRef<::GlobalNamespace::OVRPlugin::Bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetBodyTrackingSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_GetBodyTrackingSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value));
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_GetBodyState
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetBodyState(::GlobalNamespace::OVRPlugin::Step stepId, int frameIndex, ByRef<::GlobalNamespace::OVRPlugin::BodyStateInternal> bodyState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetBodyState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_GetBodyState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(frameIndex), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::BodyStateInternal&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, frameIndex, byref(bodyState));
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_GetFaceTrackingEnabled
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetFaceTrackingEnabled(ByRef<::GlobalNamespace::OVRPlugin::Bool> faceTrackingEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetFaceTrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_GetFaceTrackingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(faceTrackingEnabled));
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_GetFaceState
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetFaceState(::GlobalNamespace::OVRPlugin::Step stepId, int frameIndex, ByRef<::GlobalNamespace::OVRPlugin::FaceStateInternal> faceState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetFaceState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_GetFaceState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(frameIndex), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::FaceStateInternal&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, frameIndex, byref(faceState));
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_GetEyeTrackingEnabled
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetEyeTrackingEnabled(ByRef<::GlobalNamespace::OVRPlugin::Bool> eyeTrackingEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetEyeTrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_GetEyeTrackingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(eyeTrackingEnabled));
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_GetEyeGazesState
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetEyeGazesState(::GlobalNamespace::OVRPlugin::Step stepId, int frameIndex, ByRef<::GlobalNamespace::OVRPlugin::EyeGazesStateInternal> eyeGazesState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetEyeGazesState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_GetEyeGazesState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(frameIndex), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::EyeGazesStateInternal&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, frameIndex, byref(eyeGazesState));
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_GetControllerState5
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetControllerState5(uint controllerMask, ByRef<::GlobalNamespace::OVRPlugin::ControllerState5> controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetControllerState5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_GetControllerState5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask), ::il2cpp_utils::ExtractType(controllerState)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask, byref(controllerState));
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_SetControllerLocalizedVibration
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_SetControllerLocalizedVibration(::GlobalNamespace::OVRPlugin::Controller controllerMask, ::GlobalNamespace::OVRPlugin::HapticsLocation hapticsLocationMask, float frequency, float amplitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_SetControllerLocalizedVibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_SetControllerLocalizedVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask), ::il2cpp_utils::ExtractType(hapticsLocationMask), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(amplitude)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask, hapticsLocationMask, frequency, amplitude);
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_GetLocalDimmingSupported
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetLocalDimmingSupported(ByRef<::GlobalNamespace::OVRPlugin::Bool> localDimmingSupported) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetLocalDimmingSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_GetLocalDimmingSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(localDimmingSupported));
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_SetLocalDimming
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_SetLocalDimming(::GlobalNamespace::OVRPlugin::Bool localDimmingMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_SetLocalDimming");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_SetLocalDimming", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localDimmingMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, localDimmingMode);
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_GetLocalDimming
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetLocalDimming(ByRef<::GlobalNamespace::OVRPlugin::Bool> localDimmingMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetLocalDimming");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_GetLocalDimming", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(localDimmingMode));
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_GetCurrentInteractionProfile
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetCurrentInteractionProfile(::GlobalNamespace::OVRPlugin::Hand hand, ByRef<::GlobalNamespace::OVRPlugin::InteractionProfile> interactionProfile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetCurrentInteractionProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_GetCurrentInteractionProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::InteractionProfile&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hand, byref(interactionProfile));
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_SetControllerHapticsAmplitudeEnvelope
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_SetControllerHapticsAmplitudeEnvelope(::GlobalNamespace::OVRPlugin::Controller controllerMask, ::GlobalNamespace::OVRPlugin::HapticsAmplitudeEnvelopeVibration hapticsVibration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_SetControllerHapticsAmplitudeEnvelope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_SetControllerHapticsAmplitudeEnvelope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask), ::il2cpp_utils::ExtractType(hapticsVibration)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask, hapticsVibration);
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_SetControllerHapticsPcm
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_SetControllerHapticsPcm(::GlobalNamespace::OVRPlugin::Controller controllerMask, ::GlobalNamespace::OVRPlugin::HapticsPcmVibration hapticsVibration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_SetControllerHapticsPcm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_SetControllerHapticsPcm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask), ::il2cpp_utils::ExtractType(hapticsVibration)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask, hapticsVibration);
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0.ovrp_GetControllerSampleRateHz
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetControllerSampleRateHz(::GlobalNamespace::OVRPlugin::Controller controller, ByRef<float> sampleRateHz) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::ovrp_GetControllerSampleRateHz");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", "ovrp_GetControllerSampleRateHz", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controller, byref(sampleRateHz));
}
// Autogenerated method: OVRPlugin/OVRP_1_78_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_78_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_78_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_78_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_79_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_79_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/SpaceStorageLocation
#include "GlobalNamespace/OVRPlugin_SpaceStorageLocation.hpp"
// Including type: OVRPlugin/SpaceLocationf
#include "GlobalNamespace/OVRPlugin_SpaceLocationf.hpp"
// Including type: OVRPlugin/TrackingOrigin
#include "GlobalNamespace/OVRPlugin_TrackingOrigin.hpp"
// Including type: OVRPlugin/Qpl/ResultType
#include "GlobalNamespace/OVRPlugin_Qpl_ResultType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_79_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_79_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_79_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_79_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_79_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_79_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_79_0.ovrp_ShareSpaces
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_ShareSpaces(uint64_t* spaces, uint numSpaces, uint64_t* userHandles, uint numUsers, ByRef<uint64_t> requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_ShareSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_79_0", "ovrp_ShareSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spaces), ::il2cpp_utils::ExtractType(numSpaces), ::il2cpp_utils::ExtractType(userHandles), ::il2cpp_utils::ExtractType(numUsers), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, spaces, numSpaces, userHandles, numUsers, byref(requestId));
}
// Autogenerated method: OVRPlugin/OVRP_1_79_0.ovrp_SaveSpaceList
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_SaveSpaceList(uint64_t* spaces, uint numSpaces, ::GlobalNamespace::OVRPlugin::SpaceStorageLocation location, ByRef<uint64_t> requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_SaveSpaceList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_79_0", "ovrp_SaveSpaceList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spaces), ::il2cpp_utils::ExtractType(numSpaces), ::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, spaces, numSpaces, location, byref(requestId));
}
// Autogenerated method: OVRPlugin/OVRP_1_79_0.ovrp_GetSpaceUserId
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_GetSpaceUserId(ByRef<uint64_t> spaceUserHandle, ByRef<uint64_t> spaceUserId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_GetSpaceUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_79_0", "ovrp_GetSpaceUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spaceUserHandle), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(spaceUserHandle), byref(spaceUserId));
}
// Autogenerated method: OVRPlugin/OVRP_1_79_0.ovrp_CreateSpaceUser
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_CreateSpaceUser(ByRef<uint64_t> spaceUserId, ByRef<uint64_t> spaceUserHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_CreateSpaceUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_79_0", "ovrp_CreateSpaceUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spaceUserId), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(spaceUserId), byref(spaceUserHandle));
}
// Autogenerated method: OVRPlugin/OVRP_1_79_0.ovrp_DestroySpaceUser
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_DestroySpaceUser(ByRef<uint64_t> userHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_DestroySpaceUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_79_0", "ovrp_DestroySpaceUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(userHandle));
}
// Autogenerated method: OVRPlugin/OVRP_1_79_0.ovrp_LocateSpace2
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_LocateSpace2(ByRef<::GlobalNamespace::OVRPlugin::SpaceLocationf> location, ByRef<uint64_t> space, ::GlobalNamespace::OVRPlugin::TrackingOrigin trackingOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_LocateSpace2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_79_0", "ovrp_LocateSpace2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::SpaceLocationf&>(), ::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(trackingOrigin)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(location), byref(space), trackingOrigin);
}
// Autogenerated method: OVRPlugin/OVRP_1_79_0.ovrp_DeclareUser
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_DeclareUser(ByRef<uint64_t> userId, ByRef<uint64_t> userHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_DeclareUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_79_0", "ovrp_DeclareUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(userId), byref(userHandle));
}
// Autogenerated method: OVRPlugin/OVRP_1_79_0.ovrp_QplMarkerStart
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplMarkerStart(int markerId, int instanceKey, int64_t timestampMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplMarkerStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_79_0", "ovrp_QplMarkerStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markerId), ::il2cpp_utils::ExtractType(instanceKey), ::il2cpp_utils::ExtractType(timestampMs)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, markerId, instanceKey, timestampMs);
}
// Autogenerated method: OVRPlugin/OVRP_1_79_0.ovrp_QplMarkerEnd
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplMarkerEnd(int markerId, ::GlobalNamespace::OVRPlugin::Qpl::ResultType resultTypeId, int instanceKey, int64_t timestampMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplMarkerEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_79_0", "ovrp_QplMarkerEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markerId), ::il2cpp_utils::ExtractType(resultTypeId), ::il2cpp_utils::ExtractType(instanceKey), ::il2cpp_utils::ExtractType(timestampMs)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, markerId, resultTypeId, instanceKey, timestampMs);
}
// Autogenerated method: OVRPlugin/OVRP_1_79_0.ovrp_QplMarkerPointCached
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplMarkerPointCached(int markerId, int nameHandle, int instanceKey, int64_t timestampMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplMarkerPointCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_79_0", "ovrp_QplMarkerPointCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markerId), ::il2cpp_utils::ExtractType(nameHandle), ::il2cpp_utils::ExtractType(instanceKey), ::il2cpp_utils::ExtractType(timestampMs)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, markerId, nameHandle, instanceKey, timestampMs);
}
// Autogenerated method: OVRPlugin/OVRP_1_79_0.ovrp_QplMarkerAnnotation
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplMarkerAnnotation(int markerId, ::StringW annotationKey, ::StringW annotationValue, int instanceKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplMarkerAnnotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_79_0", "ovrp_QplMarkerAnnotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markerId), ::il2cpp_utils::ExtractType(annotationKey), ::il2cpp_utils::ExtractType(annotationValue), ::il2cpp_utils::ExtractType(instanceKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, markerId, annotationKey, annotationValue, instanceKey);
}
// Autogenerated method: OVRPlugin/OVRP_1_79_0.ovrp_QplCreateMarkerHandle
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplCreateMarkerHandle(::StringW name, ByRef<int> nameHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplCreateMarkerHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_79_0", "ovrp_QplCreateMarkerHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, byref(nameHandle));
}
// Autogenerated method: OVRPlugin/OVRP_1_79_0.ovrp_QplDestroyMarkerHandle
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplDestroyMarkerHandle(int nameHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_79_0::ovrp_QplDestroyMarkerHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_79_0", "ovrp_QplDestroyMarkerHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nameHandle);
}
// Autogenerated method: OVRPlugin/OVRP_1_79_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_79_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_79_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_79_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_81_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_81_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_81_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_81_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_81_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_81_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_81_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_81_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_81_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_81_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_81_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_81_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_82_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_82_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/TriangleMeshInternal
#include "GlobalNamespace/OVRPlugin_TriangleMeshInternal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_82_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_82_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_82_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_82_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_82_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_82_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_82_0.ovrp_GetSpaceTriangleMesh
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_82_0::ovrp_GetSpaceTriangleMesh(ByRef<uint64_t> space, ByRef<::GlobalNamespace::OVRPlugin::TriangleMeshInternal> triangleMeshInternal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_82_0::ovrp_GetSpaceTriangleMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_82_0", "ovrp_GetSpaceTriangleMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(triangleMeshInternal)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(space), byref(triangleMeshInternal));
}
// Autogenerated method: OVRPlugin/OVRP_1_82_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_82_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_82_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_82_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_83_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_83_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/ControllerState6
#include "GlobalNamespace/OVRPlugin_ControllerState6.hpp"
// Including type: OVRPlugin/VirtualKeyboardModelAnimationStatesInternal
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardModelAnimationStatesInternal.hpp"
// Including type: OVRPlugin/VirtualKeyboardTextureIdsInternal
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardTextureIdsInternal.hpp"
// Including type: OVRPlugin/VirtualKeyboardTextureData
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardTextureData.hpp"
// Including type: OVRPlugin/VirtualKeyboardModelVisibility
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardModelVisibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_83_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_83_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_83_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_83_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_83_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_83_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_83_0.ovrp_GetControllerState6
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_GetControllerState6(uint controllerMask, ByRef<::GlobalNamespace::OVRPlugin::ControllerState6> controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_GetControllerState6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_83_0", "ovrp_GetControllerState6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask), ::il2cpp_utils::ExtractType(controllerState)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask, byref(controllerState));
}
// Autogenerated method: OVRPlugin/OVRP_1_83_0.ovrp_GetVirtualKeyboardModelAnimationStates
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_GetVirtualKeyboardModelAnimationStates(ByRef<::GlobalNamespace::OVRPlugin::VirtualKeyboardModelAnimationStatesInternal> animationStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_GetVirtualKeyboardModelAnimationStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_83_0", "ovrp_GetVirtualKeyboardModelAnimationStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animationStates)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(animationStates));
}
// Autogenerated method: OVRPlugin/OVRP_1_83_0.ovrp_GetVirtualKeyboardDirtyTextures
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_GetVirtualKeyboardDirtyTextures(ByRef<::GlobalNamespace::OVRPlugin::VirtualKeyboardTextureIdsInternal> textureIds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_GetVirtualKeyboardDirtyTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_83_0", "ovrp_GetVirtualKeyboardDirtyTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureIds)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(textureIds));
}
// Autogenerated method: OVRPlugin/OVRP_1_83_0.ovrp_GetVirtualKeyboardTextureData
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_GetVirtualKeyboardTextureData(uint64_t textureId, ByRef<::GlobalNamespace::OVRPlugin::VirtualKeyboardTextureData> textureData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_GetVirtualKeyboardTextureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_83_0", "ovrp_GetVirtualKeyboardTextureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureId), ::il2cpp_utils::ExtractType(textureData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, textureId, byref(textureData));
}
// Autogenerated method: OVRPlugin/OVRP_1_83_0.ovrp_SetVirtualKeyboardModelVisibility
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_SetVirtualKeyboardModelVisibility(ByRef<::GlobalNamespace::OVRPlugin::VirtualKeyboardModelVisibility> visibility) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_83_0::ovrp_SetVirtualKeyboardModelVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_83_0", "ovrp_SetVirtualKeyboardModelVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visibility)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(visibility));
}
// Autogenerated method: OVRPlugin/OVRP_1_83_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_83_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_83_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_83_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_84_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_84_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/PassthroughColorLutChannels
#include "GlobalNamespace/OVRPlugin_PassthroughColorLutChannels.hpp"
// Including type: OVRPlugin/PassthroughColorLutData
#include "GlobalNamespace/OVRPlugin_PassthroughColorLutData.hpp"
// Including type: OVRPlugin/InsightPassthroughStyle2
#include "GlobalNamespace/OVRPlugin_InsightPassthroughStyle2.hpp"
// Including type: OVRPlugin/Sizei
#include "GlobalNamespace/OVRPlugin_Sizei.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_84_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_84_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_84_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_84_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_84_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_84_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_84_0.ovrp_CreatePassthroughColorLut
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_84_0::ovrp_CreatePassthroughColorLut(::GlobalNamespace::OVRPlugin::PassthroughColorLutChannels channels, uint resolution, ::GlobalNamespace::OVRPlugin::PassthroughColorLutData data, ByRef<uint64_t> colorLut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_84_0::ovrp_CreatePassthroughColorLut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_84_0", "ovrp_CreatePassthroughColorLut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(resolution), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channels, resolution, data, byref(colorLut));
}
// Autogenerated method: OVRPlugin/OVRP_1_84_0.ovrp_DestroyPassthroughColorLut
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_84_0::ovrp_DestroyPassthroughColorLut(uint64_t colorLut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_84_0::ovrp_DestroyPassthroughColorLut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_84_0", "ovrp_DestroyPassthroughColorLut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorLut)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorLut);
}
// Autogenerated method: OVRPlugin/OVRP_1_84_0.ovrp_UpdatePassthroughColorLut
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_84_0::ovrp_UpdatePassthroughColorLut(uint64_t colorLut, ::GlobalNamespace::OVRPlugin::PassthroughColorLutData data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_84_0::ovrp_UpdatePassthroughColorLut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_84_0", "ovrp_UpdatePassthroughColorLut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorLut), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorLut, data);
}
// Autogenerated method: OVRPlugin/OVRP_1_84_0.ovrp_SetInsightPassthroughStyle2
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_84_0::ovrp_SetInsightPassthroughStyle2(int layerId, ByRef<::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2> style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_84_0::ovrp_SetInsightPassthroughStyle2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_84_0", "ovrp_SetInsightPassthroughStyle2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, byref(style));
}
// Autogenerated method: OVRPlugin/OVRP_1_84_0.ovrp_GetLayerRecommendedResolution
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_84_0::ovrp_GetLayerRecommendedResolution(int layerId, ByRef<::GlobalNamespace::OVRPlugin::Sizei> recommendedDimensions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_84_0::ovrp_GetLayerRecommendedResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_84_0", "ovrp_GetLayerRecommendedResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Sizei&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, byref(recommendedDimensions));
}
// Autogenerated method: OVRPlugin/OVRP_1_84_0.ovrp_GetEyeLayerRecommendedResolution
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_84_0::ovrp_GetEyeLayerRecommendedResolution(ByRef<::GlobalNamespace::OVRPlugin::Sizei> recommendedDimensions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_84_0::ovrp_GetEyeLayerRecommendedResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_84_0", "ovrp_GetEyeLayerRecommendedResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Sizei&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(recommendedDimensions));
}
// Autogenerated method: OVRPlugin/OVRP_1_84_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_84_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_84_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_84_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_85_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_85_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/PassthroughCapabilities
#include "GlobalNamespace/OVRPlugin_PassthroughCapabilities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_85_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_85_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_85_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_85_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_85_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_85_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_85_0.ovrp_OnEditorShutdown
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_85_0::ovrp_OnEditorShutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_85_0::ovrp_OnEditorShutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_85_0", "ovrp_OnEditorShutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_85_0.ovrp_GetPassthroughCapabilities
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_85_0::ovrp_GetPassthroughCapabilities(ByRef<::GlobalNamespace::OVRPlugin::PassthroughCapabilities> capabilityFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_85_0::ovrp_GetPassthroughCapabilities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_85_0", "ovrp_GetPassthroughCapabilities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capabilityFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(capabilityFlags));
}
// Autogenerated method: OVRPlugin/OVRP_1_85_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_85_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_85_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_85_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_86_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_86_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/Hand
#include "GlobalNamespace/OVRPlugin_Hand.hpp"
// Including type: OVRPlugin/InteractionProfile
#include "GlobalNamespace/OVRPlugin_InteractionProfile.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_86_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_86_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_86_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_86_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_86_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_86_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_86_0.ovrp_SetControllerDrivenHandPoses
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_86_0::ovrp_SetControllerDrivenHandPoses(::GlobalNamespace::OVRPlugin::Bool controllerDrivenHandPoses) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_86_0::ovrp_SetControllerDrivenHandPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_86_0", "ovrp_SetControllerDrivenHandPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerDrivenHandPoses)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerDrivenHandPoses);
}
// Autogenerated method: OVRPlugin/OVRP_1_86_0.ovrp_IsControllerDrivenHandPosesEnabled
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_86_0::ovrp_IsControllerDrivenHandPosesEnabled(ByRef<::GlobalNamespace::OVRPlugin::Bool> enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_86_0::ovrp_IsControllerDrivenHandPosesEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_86_0", "ovrp_IsControllerDrivenHandPosesEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(enabled));
}
// Autogenerated method: OVRPlugin/OVRP_1_86_0.ovrp_AreHandPosesGeneratedByControllerData
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_86_0::ovrp_AreHandPosesGeneratedByControllerData(::GlobalNamespace::OVRPlugin::Step stepId, ::GlobalNamespace::OVRPlugin::Node nodeId, ByRef<::GlobalNamespace::OVRPlugin::Bool> isGeneratedByControllerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_86_0::ovrp_AreHandPosesGeneratedByControllerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_86_0", "ovrp_AreHandPosesGeneratedByControllerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(isGeneratedByControllerData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, nodeId, byref(isGeneratedByControllerData));
}
// Autogenerated method: OVRPlugin/OVRP_1_86_0.ovrp_SetMultimodalHandsControllersSupported
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_86_0::ovrp_SetMultimodalHandsControllersSupported(::GlobalNamespace::OVRPlugin::Bool supported) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_86_0::ovrp_SetMultimodalHandsControllersSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_86_0", "ovrp_SetMultimodalHandsControllersSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(supported)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, supported);
}
// Autogenerated method: OVRPlugin/OVRP_1_86_0.ovrp_IsMultimodalHandsControllersSupported
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_86_0::ovrp_IsMultimodalHandsControllersSupported(ByRef<::GlobalNamespace::OVRPlugin::Bool> supported) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_86_0::ovrp_IsMultimodalHandsControllersSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_86_0", "ovrp_IsMultimodalHandsControllersSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(supported)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(supported));
}
// Autogenerated method: OVRPlugin/OVRP_1_86_0.ovrp_GetCurrentDetachedInteractionProfile
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_86_0::ovrp_GetCurrentDetachedInteractionProfile(::GlobalNamespace::OVRPlugin::Hand hand, ByRef<::GlobalNamespace::OVRPlugin::InteractionProfile> interactionProfile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_86_0::ovrp_GetCurrentDetachedInteractionProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_86_0", "ovrp_GetCurrentDetachedInteractionProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::InteractionProfile&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hand, byref(interactionProfile));
}
// Autogenerated method: OVRPlugin/OVRP_1_86_0.ovrp_GetControllerIsInHand
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_86_0::ovrp_GetControllerIsInHand(::GlobalNamespace::OVRPlugin::Step stepId, ::GlobalNamespace::OVRPlugin::Node nodeId, ByRef<::GlobalNamespace::OVRPlugin::Bool> isInHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_86_0::ovrp_GetControllerIsInHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_86_0", "ovrp_GetControllerIsInHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(isInHand)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, nodeId, byref(isInHand));
}
// Autogenerated method: OVRPlugin/OVRP_1_86_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_86_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_86_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_86_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_87_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_87_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/PassthroughPreferences
#include "GlobalNamespace/OVRPlugin_PassthroughPreferences.hpp"
// Including type: OVRPlugin/LayerSharpenType
#include "GlobalNamespace/OVRPlugin_LayerSharpenType.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_87_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_87_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_87_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_87_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_87_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_87_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_87_0.ovrp_GetPassthroughPreferences
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_87_0::ovrp_GetPassthroughPreferences(ByRef<::GlobalNamespace::OVRPlugin::PassthroughPreferences> preferences) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_87_0::ovrp_GetPassthroughPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_87_0", "ovrp_GetPassthroughPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::PassthroughPreferences&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(preferences));
}
// Autogenerated method: OVRPlugin/OVRP_1_87_0.ovrp_SetEyeBufferSharpenType
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_87_0::ovrp_SetEyeBufferSharpenType(::GlobalNamespace::OVRPlugin::LayerSharpenType sharpenType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_87_0::ovrp_SetEyeBufferSharpenType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_87_0", "ovrp_SetEyeBufferSharpenType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sharpenType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sharpenType);
}
// Autogenerated method: OVRPlugin/OVRP_1_87_0.ovrp_SetControllerDrivenHandPosesAreNatural
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_87_0::ovrp_SetControllerDrivenHandPosesAreNatural(::GlobalNamespace::OVRPlugin::Bool controllerDrivenHandPosesAreNatural) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_87_0::ovrp_SetControllerDrivenHandPosesAreNatural");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_87_0", "ovrp_SetControllerDrivenHandPosesAreNatural", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerDrivenHandPosesAreNatural)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerDrivenHandPosesAreNatural);
}
// Autogenerated method: OVRPlugin/OVRP_1_87_0.ovrp_AreControllerDrivenHandPosesNatural
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_87_0::ovrp_AreControllerDrivenHandPosesNatural(ByRef<::GlobalNamespace::OVRPlugin::Bool> natural) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_87_0::ovrp_AreControllerDrivenHandPosesNatural");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_87_0", "ovrp_AreControllerDrivenHandPosesNatural", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(natural)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(natural));
}
// Autogenerated method: OVRPlugin/OVRP_1_87_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_87_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_87_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_87_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_88_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_88_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_88_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_88_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_88_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_88_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_88_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_88_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_88_0.ovrp_SetSimultaneousHandsAndControllersEnabled
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_88_0::ovrp_SetSimultaneousHandsAndControllersEnabled(::GlobalNamespace::OVRPlugin::Bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_88_0::ovrp_SetSimultaneousHandsAndControllersEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_88_0", "ovrp_SetSimultaneousHandsAndControllersEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enabled);
}
// Autogenerated method: OVRPlugin/OVRP_1_88_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_88_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_88_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_88_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_89_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_89_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_89_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_89_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_89_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_89_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_89_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_89_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_89_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_89_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_89_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_89_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/<>c
#include "GlobalNamespace/OVRPlugin_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRPlugin/<>c <>9
::GlobalNamespace::OVRPlugin::$$c* GlobalNamespace::OVRPlugin::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::$$c*>("", "OVRPlugin/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRPlugin/<>c <>9
void GlobalNamespace::OVRPlugin::$$c::_set_$$9(::GlobalNamespace::OVRPlugin::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRPlugin/<>c", "<>9", value)));
}
// Autogenerated method: OVRPlugin/<>c..cctor
void GlobalNamespace::OVRPlugin::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_0
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_1
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_2
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_3
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_4
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_5
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_6
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_7
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_8
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_9
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_10
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_11
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_12
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_13
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_13");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_13", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_14
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_14");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_14", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_15
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_16
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_17
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_17() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_17");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_17", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_18
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_18() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_18");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_18", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_19
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_19() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_19");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_19", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_20
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_20");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_20", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_21
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_21");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_21", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_22
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_22() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_22");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_22", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_23
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_23() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_23");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_23", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_24
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_24");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_24", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_25
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_25() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_25");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_25", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_26
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_26() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_26");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_26", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_27
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_27() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_27");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_27", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_28
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_28() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_28");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_28", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_29
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_29() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_29");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_29", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_30
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_30() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_30");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_30", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_31
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_31() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_31");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_31", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_32
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_33
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_33() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_33");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_33", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_34
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_34() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_34");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_34", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_35
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_35() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_35");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_35", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_36
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_36() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_36");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_36", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_37
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_37() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_37");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_37", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_38
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_38() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_38");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_38", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_39
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_39() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_39");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_39", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_40
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_40() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_40");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_40", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_41
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_41() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_41");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_41", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_42
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_42() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_42");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_42", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_43
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_43() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_43");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_43", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_44
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_44() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_44");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_44", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_45
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_45() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_45");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_45", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_46
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_46() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_46");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_46", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_47
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_47() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_47");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_47", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_48
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_48() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_48");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_48", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_49
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_49() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_49");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_49", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_50
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_50() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_50");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_50", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_51
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_51() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_51");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_51", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_52
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_52() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_52");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_52", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_53
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_53() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_53");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_53", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_54
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_54() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_54");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_54", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_55
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_55() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_55");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_55", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_56
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_56() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_56");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_56", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_57
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_57() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_57");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_57", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_58
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_58() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_58");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_58", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_59
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_59() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_59");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_59", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_60
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_60() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_60");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_60", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_61
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_61() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_61");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_61", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_62
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_62() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_62");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_62", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_63
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_63() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_63");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_63", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_64
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_65
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_65() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_65");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_65", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_66
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_66() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_66");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_66", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_67
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_67() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_67");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_67", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_68
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_68() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_68");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_68", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/<>c.<.cctor>b__653_69
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::$$c::$_cctor$b__653_69() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::$$c::<.cctor>b__653_69");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__653_69", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPointerVisualizer
#include "GlobalNamespace/OVRPointerVisualizer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rayTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRPointerVisualizer::dyn_rayTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPointerVisualizer::dyn_rayTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rayTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LineRenderer linePointer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::OVRPointerVisualizer::dyn_linePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPointerVisualizer::dyn_linePointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePointer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rayDrawDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRPointerVisualizer::dyn_rayDrawDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPointerVisualizer::dyn_rayDrawDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rayDrawDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPointerVisualizer.Update
void GlobalNamespace::OVRPointerVisualizer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPointerVisualizer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRProfile
#include "GlobalNamespace/OVRProfile.hpp"
// Including type: OVRProfile/State
#include "GlobalNamespace/OVRProfile_State.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRProfile.get_id
::StringW GlobalNamespace::OVRProfile::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRProfile::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_userName
::StringW GlobalNamespace::OVRProfile::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRProfile::get_userName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_locale
::StringW GlobalNamespace::OVRProfile::get_locale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRProfile::get_locale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_locale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_ipd
float GlobalNamespace::OVRProfile::get_ipd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRProfile::get_ipd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ipd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_eyeHeight
float GlobalNamespace::OVRProfile::get_eyeHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRProfile::get_eyeHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eyeHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_eyeDepth
float GlobalNamespace::OVRProfile::get_eyeDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRProfile::get_eyeDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eyeDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_neckHeight
float GlobalNamespace::OVRProfile::get_neckHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRProfile::get_neckHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_neckHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_state
::GlobalNamespace::OVRProfile::State GlobalNamespace::OVRProfile::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRProfile::get_state");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRProfile::State, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRProfile/State
#include "GlobalNamespace/OVRProfile_State.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRProfile/State NOT_TRIGGERED
::GlobalNamespace::OVRProfile::State GlobalNamespace::OVRProfile::State::_get_NOT_TRIGGERED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRProfile::State::_get_NOT_TRIGGERED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRProfile::State>("", "OVRProfile/State", "NOT_TRIGGERED"));
}
// Autogenerated static field setter
// Set static field: static public OVRProfile/State NOT_TRIGGERED
void GlobalNamespace::OVRProfile::State::_set_NOT_TRIGGERED(::GlobalNamespace::OVRProfile::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRProfile::State::_set_NOT_TRIGGERED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRProfile/State", "NOT_TRIGGERED", value));
}
// Autogenerated static field getter
// Get static field: static public OVRProfile/State LOADING
::GlobalNamespace::OVRProfile::State GlobalNamespace::OVRProfile::State::_get_LOADING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRProfile::State::_get_LOADING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRProfile::State>("", "OVRProfile/State", "LOADING"));
}
// Autogenerated static field setter
// Set static field: static public OVRProfile/State LOADING
void GlobalNamespace::OVRProfile::State::_set_LOADING(::GlobalNamespace::OVRProfile::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRProfile::State::_set_LOADING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRProfile/State", "LOADING", value));
}
// Autogenerated static field getter
// Get static field: static public OVRProfile/State READY
::GlobalNamespace::OVRProfile::State GlobalNamespace::OVRProfile::State::_get_READY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRProfile::State::_get_READY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRProfile::State>("", "OVRProfile/State", "READY"));
}
// Autogenerated static field setter
// Set static field: static public OVRProfile/State READY
void GlobalNamespace::OVRProfile::State::_set_READY(::GlobalNamespace::OVRProfile::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRProfile::State::_set_READY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRProfile/State", "READY", value));
}
// Autogenerated static field getter
// Get static field: static public OVRProfile/State ERROR
::GlobalNamespace::OVRProfile::State GlobalNamespace::OVRProfile::State::_get_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRProfile::State::_get_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRProfile::State>("", "OVRProfile/State", "ERROR"));
}
// Autogenerated static field setter
// Set static field: static public OVRProfile/State ERROR
void GlobalNamespace::OVRProfile::State::_set_ERROR(::GlobalNamespace::OVRProfile::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRProfile::State::_set_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRProfile/State", "ERROR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRProfile::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRProfile::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRResources
#include "GlobalNamespace/OVRResources.hpp"
// Including type: OVRResources/<>c__DisplayClass2_0
#include "GlobalNamespace/OVRResources_--c__DisplayClass2_0.hpp"
// Including type: OVRResources/<>c__DisplayClass3_0`1
#include "GlobalNamespace/OVRResources_--c__DisplayClass3_0_1.hpp"
// Including type: UnityEngine.AssetBundle
#include "UnityEngine/AssetBundle.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.AssetBundle resourceBundle
::UnityEngine::AssetBundle* GlobalNamespace::OVRResources::_get_resourceBundle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRResources::_get_resourceBundle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AssetBundle*>("", "OVRResources", "resourceBundle"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AssetBundle resourceBundle
void GlobalNamespace::OVRResources::_set_resourceBundle(::UnityEngine::AssetBundle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRResources::_set_resourceBundle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRResources", "resourceBundle", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.String> assetNames
::System::Collections::Generic::List_1<::StringW>* GlobalNamespace::OVRResources::_get_assetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRResources::_get_assetNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::StringW>*>("", "OVRResources", "assetNames"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.String> assetNames
void GlobalNamespace::OVRResources::_set_assetNames(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRResources::_set_assetNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRResources", "assetNames", value));
}
// Autogenerated method: OVRResources.Load
::UnityEngine::Object* GlobalNamespace::OVRResources::Load(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRResources::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRResources", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: OVRResources.SetResourceBundle
void GlobalNamespace::OVRResources::SetResourceBundle(::UnityEngine::AssetBundle* bundle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRResources::SetResourceBundle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRResources", "SetResourceBundle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bundle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bundle);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRResources/<>c__DisplayClass2_0
#include "GlobalNamespace/OVRResources_--c__DisplayClass2_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String path
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRResources::$$c__DisplayClass2_0::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRResources::$$c__DisplayClass2_0::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRResources/<>c__DisplayClass2_0.<Load>b__0
bool GlobalNamespace::OVRResources::$$c__DisplayClass2_0::$Load$b__0(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRResources::$$c__DisplayClass2_0::<Load>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Load>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRRuntimeSettings
#include "GlobalNamespace/OVRRuntimeSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRRuntimeSettings _instance
::GlobalNamespace::OVRRuntimeSettings* GlobalNamespace::OVRRuntimeSettings::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRuntimeSettings::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRRuntimeSettings*>("", "OVRRuntimeSettings", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private OVRRuntimeSettings _instance
void GlobalNamespace::OVRRuntimeSettings::_set__instance(::GlobalNamespace::OVRRuntimeSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRuntimeSettings::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRRuntimeSettings", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRManager/ColorSpace colorSpace
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRManager_ColorSpace& GlobalNamespace::OVRRuntimeSettings::dyn_colorSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRuntimeSettings::dyn_colorSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorSpace"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRManager_ColorSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasSentConsentEvent
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRRuntimeSettings::dyn_hasSentConsentEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRuntimeSettings::dyn_hasSentConsentEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasSentConsentEvent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasSetTelemetryEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRRuntimeSettings::dyn_hasSetTelemetryEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRuntimeSettings::dyn_hasSetTelemetryEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasSetTelemetryEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean telemetryEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRRuntimeSettings::dyn_telemetryEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRuntimeSettings::dyn_telemetryEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "telemetryEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRRuntimeSettings.get_Instance
::GlobalNamespace::OVRRuntimeSettings* GlobalNamespace::OVRRuntimeSettings::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRuntimeSettings::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRRuntimeSettings", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRRuntimeSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRRuntimeSettings.OnEnable
void GlobalNamespace::OVRRuntimeSettings::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRuntimeSettings::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRRuntimeSettings.get_HasSetTelemetryEnabled
bool GlobalNamespace::OVRRuntimeSettings::get_HasSetTelemetryEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRuntimeSettings::get_HasSetTelemetryEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasSetTelemetryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRRuntimeSettings.get_TelemetryEnabled
bool GlobalNamespace::OVRRuntimeSettings::get_TelemetryEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRuntimeSettings::get_TelemetryEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TelemetryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRRuntimeSettings.GetRuntimeSettings
::GlobalNamespace::OVRRuntimeSettings* GlobalNamespace::OVRRuntimeSettings::GetRuntimeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRuntimeSettings::GetRuntimeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRRuntimeSettings", "GetRuntimeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRRuntimeSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneAnchor
#include "GlobalNamespace/OVRSceneAnchor.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: IOVRSceneComponent
#include "GlobalNamespace/IOVRSceneComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Quaternion RotateY180
::UnityEngine::Quaternion GlobalNamespace::OVRSceneAnchor::_get_RotateY180() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::_get_RotateY180");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Quaternion>("", "OVRSceneAnchor", "RotateY180"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Quaternion RotateY180
void GlobalNamespace::OVRSceneAnchor::_set_RotateY180(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::_set_RotateY180");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneAnchor", "RotateY180", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<OVRSpace,System.Int32> AnchorReferenceCountDictionary
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSpace, int>* GlobalNamespace::OVRSceneAnchor::_get_AnchorReferenceCountDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::_get_AnchorReferenceCountDictionary");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSpace, int>*>("", "OVRSceneAnchor", "AnchorReferenceCountDictionary")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<OVRSpace,System.Int32> AnchorReferenceCountDictionary
void GlobalNamespace::OVRSceneAnchor::_set_AnchorReferenceCountDictionary(::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRSpace, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::_set_AnchorReferenceCountDictionary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneAnchor", "AnchorReferenceCountDictionary", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.Dictionary`2<System.Guid,OVRSceneAnchor> SceneAnchors
::System::Collections::Generic::Dictionary_2<::System::Guid, ::GlobalNamespace::OVRSceneAnchor*>* GlobalNamespace::OVRSceneAnchor::_get_SceneAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::_get_SceneAnchors");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Guid, ::GlobalNamespace::OVRSceneAnchor*>*>("", "OVRSceneAnchor", "SceneAnchors")));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.Dictionary`2<System.Guid,OVRSceneAnchor> SceneAnchors
void GlobalNamespace::OVRSceneAnchor::_set_SceneAnchors(::System::Collections::Generic::Dictionary_2<::System::Guid, ::GlobalNamespace::OVRSceneAnchor*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::_set_SceneAnchors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneAnchor", "SceneAnchors", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.List`1<OVRSceneAnchor> SceneAnchorsList
::System::Collections::Generic::List_1<::GlobalNamespace::OVRSceneAnchor*>* GlobalNamespace::OVRSceneAnchor::_get_SceneAnchorsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::_get_SceneAnchorsList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GlobalNamespace::OVRSceneAnchor*>*>("", "OVRSceneAnchor", "SceneAnchorsList"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.List`1<OVRSceneAnchor> SceneAnchorsList
void GlobalNamespace::OVRSceneAnchor::_set_SceneAnchorsList(::System::Collections::Generic::List_1<::GlobalNamespace::OVRSceneAnchor*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::_set_SceneAnchorsList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneAnchor", "SceneAnchorsList", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRSpace <Space>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSpace& GlobalNamespace::OVRSceneAnchor::dyn_$Space$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::dyn_$Space$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Space>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Guid <Uuid>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Guid& GlobalNamespace::OVRSceneAnchor::dyn_$Uuid$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::dyn_$Uuid$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Uuid>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRAnchor <Anchor>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRAnchor& GlobalNamespace::OVRSceneAnchor::dyn_$Anchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::dyn_$Anchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Anchor>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRAnchor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsTracked>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRSceneAnchor::dyn_$IsTracked$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::dyn_$IsTracked$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsTracked>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<OVRPlugin/Posef> _pose
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::GlobalNamespace::OVRPlugin::Posef>& GlobalNamespace::OVRSceneAnchor::dyn__pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::dyn__pose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pose"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::GlobalNamespace::OVRPlugin::Posef>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isLocatable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRSceneAnchor::dyn__isLocatable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::dyn__isLocatable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isLocatable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<OVRPlugin/SpaceComponentType> _supportedComponents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRPlugin::SpaceComponentType>*& GlobalNamespace::OVRSceneAnchor::dyn__supportedComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::dyn__supportedComponents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_supportedComponents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRPlugin::SpaceComponentType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneAnchor.get_Space
::GlobalNamespace::OVRSpace GlobalNamespace::OVRSceneAnchor::get_Space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::get_Space");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Space", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSpace, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneAnchor.set_Space
void GlobalNamespace::OVRSceneAnchor::set_Space(::GlobalNamespace::OVRSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::set_Space");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Space", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSceneAnchor.get_Uuid
::System::Guid GlobalNamespace::OVRSceneAnchor::get_Uuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::get_Uuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Uuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneAnchor.set_Uuid
void GlobalNamespace::OVRSceneAnchor::set_Uuid(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::set_Uuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Uuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSceneAnchor.get_Anchor
::GlobalNamespace::OVRAnchor GlobalNamespace::OVRSceneAnchor::get_Anchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::get_Anchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Anchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRAnchor, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneAnchor.set_Anchor
void GlobalNamespace::OVRSceneAnchor::set_Anchor(::GlobalNamespace::OVRAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::set_Anchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Anchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSceneAnchor.get_IsTracked
bool GlobalNamespace::OVRSceneAnchor::get_IsTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::get_IsTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneAnchor.set_IsTracked
void GlobalNamespace::OVRSceneAnchor::set_IsTracked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::set_IsTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSceneAnchor.IsComponentSupported
bool GlobalNamespace::OVRSceneAnchor::IsComponentSupported(::GlobalNamespace::OVRPlugin::SpaceComponentType spaceComponentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::IsComponentSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsComponentSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spaceComponentType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, spaceComponentType);
}
// Autogenerated method: OVRSceneAnchor.IsComponentEnabled
bool GlobalNamespace::OVRSceneAnchor::IsComponentEnabled(::GlobalNamespace::OVRPlugin::SpaceComponentType spaceComponentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::IsComponentEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsComponentEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spaceComponentType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, spaceComponentType);
}
// Autogenerated method: OVRSceneAnchor.ClearPoseCache
void GlobalNamespace::OVRSceneAnchor::ClearPoseCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::ClearPoseCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPoseCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneAnchor.Initialize
void GlobalNamespace::OVRSceneAnchor::Initialize(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRSceneAnchor.InitializeFrom
void GlobalNamespace::OVRSceneAnchor::InitializeFrom(::GlobalNamespace::OVRSceneAnchor* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::InitializeFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: OVRSceneAnchor.GetSceneAnchors
void GlobalNamespace::OVRSceneAnchor::GetSceneAnchors(::System::Collections::Generic::List_1<::GlobalNamespace::OVRSceneAnchor*>* anchors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::GetSceneAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSceneAnchor", "GetSceneAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, anchors);
}
// Autogenerated method: OVRSceneAnchor.TryUpdateTransform
bool GlobalNamespace::OVRSceneAnchor::TryUpdateTransform(bool useCache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::TryUpdateTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryUpdateTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useCache)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, useCache);
}
// Autogenerated method: OVRSceneAnchor.OnDestroy
void GlobalNamespace::OVRSceneAnchor::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneAnchor..cctor
void GlobalNamespace::OVRSceneAnchor::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneAnchor::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSceneAnchor", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: IOVRSceneComponent
#include "GlobalNamespace/IOVRSceneComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IOVRSceneComponent.Initialize
void GlobalNamespace::IOVRSceneComponent::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IOVRSceneComponent::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::IOVRSceneComponent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneLoader
#include "GlobalNamespace/OVRSceneLoader.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OVRSceneLoader/<DelayCanvasPosUpdate>d__24
#include "GlobalNamespace/OVRSceneLoader_-DelayCanvasPosUpdate-d__24.hpp"
// Including type: OVRSceneLoader/<onCheckSceneCoroutine>d__25
#include "GlobalNamespace/OVRSceneLoader_-onCheckSceneCoroutine-d__25.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AssetBundle
#include "UnityEngine/AssetBundle.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String externalStoragePath
::StringW GlobalNamespace::OVRSceneLoader::_get_externalStoragePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::_get_externalStoragePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneLoader", "externalStoragePath"));
}
// Autogenerated static field setter
// Set static field: static public System.String externalStoragePath
void GlobalNamespace::OVRSceneLoader::_set_externalStoragePath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::_set_externalStoragePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneLoader", "externalStoragePath", value));
}
// Autogenerated static field getter
// Get static field: static public System.String sceneLoadDataName
::StringW GlobalNamespace::OVRSceneLoader::_get_sceneLoadDataName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::_get_sceneLoadDataName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneLoader", "sceneLoadDataName"));
}
// Autogenerated static field setter
// Set static field: static public System.String sceneLoadDataName
void GlobalNamespace::OVRSceneLoader::_set_sceneLoadDataName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::_set_sceneLoadDataName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneLoader", "sceneLoadDataName", value));
}
// Autogenerated static field getter
// Get static field: static public System.String resourceBundleName
::StringW GlobalNamespace::OVRSceneLoader::_get_resourceBundleName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::_get_resourceBundleName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneLoader", "resourceBundleName"));
}
// Autogenerated static field setter
// Set static field: static public System.String resourceBundleName
void GlobalNamespace::OVRSceneLoader::_set_resourceBundleName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::_set_resourceBundleName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneLoader", "resourceBundleName", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single sceneCheckIntervalSeconds
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRSceneLoader::dyn_sceneCheckIntervalSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::dyn_sceneCheckIntervalSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneCheckIntervalSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single logCloseTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRSceneLoader::dyn_logCloseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::dyn_logCloseTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logCloseTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Canvas mainCanvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& GlobalNamespace::OVRSceneLoader::dyn_mainCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::dyn_mainCanvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainCanvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text logTextBox
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::OVRSceneLoader::dyn_logTextBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::dyn_logTextBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logTextBox"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AsyncOperation loadSceneOperation
[[deprecated("Use field access instead!")]] ::UnityEngine::AsyncOperation*& GlobalNamespace::OVRSceneLoader::dyn_loadSceneOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::dyn_loadSceneOperation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadSceneOperation"))->offset;
  return *reinterpret_cast<::UnityEngine::AsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String formattedLogText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRSceneLoader::dyn_formattedLogText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::dyn_formattedLogText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "formattedLogText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single closeLogTimer
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRSceneLoader::dyn_closeLogTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::dyn_closeLogTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeLogTimer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean closeLogDialogue
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRSceneLoader::dyn_closeLogDialogue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::dyn_closeLogDialogue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeLogDialogue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canvasPosUpdated
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRSceneLoader::dyn_canvasPosUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::dyn_canvasPosUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canvasPosUpdated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String scenePath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRSceneLoader::dyn_scenePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::dyn_scenePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scenePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sceneLoadDataPath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRSceneLoader::dyn_sceneLoadDataPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::dyn_sceneLoadDataPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneLoadDataPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.AssetBundle> loadedAssetBundles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::AssetBundle*>*& GlobalNamespace::OVRSceneLoader::dyn_loadedAssetBundles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::dyn_loadedAssetBundles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadedAssetBundles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::AssetBundle*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSceneLoader/SceneInfo currentSceneInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneLoader::SceneInfo& GlobalNamespace::OVRSceneLoader::dyn_currentSceneInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::dyn_currentSceneInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSceneInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneLoader::SceneInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneLoader.Awake
void GlobalNamespace::OVRSceneLoader::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.Start
void GlobalNamespace::OVRSceneLoader::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.LoadScene
void GlobalNamespace::OVRSceneLoader::LoadScene(::GlobalNamespace::OVRSceneLoader::SceneInfo sceneInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sceneInfo);
}
// Autogenerated method: OVRSceneLoader.LoadSceneOperation_completed
void GlobalNamespace::OVRSceneLoader::LoadSceneOperation_completed(::UnityEngine::AsyncOperation* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::LoadSceneOperation_completed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneOperation_completed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSceneLoader.Update
void GlobalNamespace::OVRSceneLoader::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.UpdateCanvasPosition
void GlobalNamespace::OVRSceneLoader::UpdateCanvasPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::UpdateCanvasPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCanvasPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.GetSceneInfo
::GlobalNamespace::OVRSceneLoader::SceneInfo GlobalNamespace::OVRSceneLoader::GetSceneInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::GetSceneInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSceneInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSceneLoader::SceneInfo, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.DelayCanvasPosUpdate
::System::Collections::IEnumerator* GlobalNamespace::OVRSceneLoader::DelayCanvasPosUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::DelayCanvasPosUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayCanvasPosUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.onCheckSceneCoroutine
::System::Collections::IEnumerator* GlobalNamespace::OVRSceneLoader::onCheckSceneCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::onCheckSceneCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onCheckSceneCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.DestroyAllGameObjects
void GlobalNamespace::OVRSceneLoader::DestroyAllGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::DestroyAllGameObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyAllGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneLoader/SceneInfo
#include "GlobalNamespace/OVRSceneLoader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> scenes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::OVRSceneLoader::SceneInfo::dyn_scenes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::SceneInfo::dyn_scenes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scenes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 version
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::OVRSceneLoader::SceneInfo::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::SceneInfo::dyn_version");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneLoader/SceneInfo..ctor
// ABORTED elsewhere.  GlobalNamespace::OVRSceneLoader::SceneInfo::SceneInfo(::System::Collections::Generic::List_1<::StringW>* sceneList, int64_t currentSceneEpochVersion)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSceneLoader/<DelayCanvasPosUpdate>d__24
#include "GlobalNamespace/OVRSceneLoader_-DelayCanvasPosUpdate-d__24.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSceneLoader <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneLoader*& GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneLoader/<DelayCanvasPosUpdate>d__24.System.IDisposable.Dispose
void GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<DelayCanvasPosUpdate>d__24.MoveNext
bool GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<DelayCanvasPosUpdate>d__24.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<DelayCanvasPosUpdate>d__24.System.Collections.IEnumerator.Reset
void GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<DelayCanvasPosUpdate>d__24.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSceneLoader/<onCheckSceneCoroutine>d__25
#include "GlobalNamespace/OVRSceneLoader_-onCheckSceneCoroutine-d__25.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSceneLoader <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneLoader*& GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneLoader/<onCheckSceneCoroutine>d__25.System.IDisposable.Dispose
void GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<onCheckSceneCoroutine>d__25.MoveNext
bool GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<onCheckSceneCoroutine>d__25.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<onCheckSceneCoroutine>d__25.System.Collections.IEnumerator.Reset
void GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<onCheckSceneCoroutine>d__25.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneManager
#include "GlobalNamespace/OVRSceneManager.hpp"
// Including type: OVRSceneManager/Classification
#include "GlobalNamespace/OVRSceneManager_Classification.hpp"
// Including type: OVRSceneManager/RoomLayoutInformation
#include "GlobalNamespace/OVRSceneManager_RoomLayoutInformation.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: OVRSceneManager/Development
#include "GlobalNamespace/OVRSceneManager_Development.hpp"
// Including type: OVRSceneManager/<>c__DisplayClass48_0
#include "GlobalNamespace/OVRSceneManager_--c__DisplayClass48_0.hpp"
// Including type: OVRSceneManager/<>c__DisplayClass51_0
#include "GlobalNamespace/OVRSceneManager_--c__DisplayClass51_0.hpp"
// Including type: OVRSceneManager/<OnApplicationPause>d__35
#include "GlobalNamespace/OVRSceneManager_-OnApplicationPause-d__35.hpp"
// Including type: OVRSceneManager/<QueryForExistingAnchorsTransform>d__36
#include "GlobalNamespace/OVRSceneManager_-QueryForExistingAnchorsTransform-d__36.hpp"
// Including type: OVRSceneAnchor
#include "GlobalNamespace/OVRSceneAnchor.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRScenePrefabOverride
#include "GlobalNamespace/OVRScenePrefabOverride.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: OVRTask`1
#include "GlobalNamespace/OVRTask_1.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRSceneAnchor PlanePrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneAnchor*& GlobalNamespace::OVRSceneManager::dyn_PlanePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn_PlanePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlanePrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneAnchor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSceneAnchor VolumePrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneAnchor*& GlobalNamespace::OVRSceneManager::dyn_VolumePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn_VolumePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VolumePrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneAnchor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<OVRScenePrefabOverride> PrefabOverrides
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRScenePrefabOverride*>*& GlobalNamespace::OVRSceneManager::dyn_PrefabOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn_PrefabOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrefabOverrides"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRScenePrefabOverride*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ActiveRoomsOnly
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRSceneManager::dyn_ActiveRoomsOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn_ActiveRoomsOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActiveRoomsOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean VerboseLogging
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRSceneManager::dyn_VerboseLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn_VerboseLogging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VerboseLogging"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxSceneAnchorUpdatesPerFrame
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRSceneManager::dyn_MaxSceneAnchorUpdatesPerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn_MaxSceneAnchorUpdatesPerFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxSceneAnchorUpdatesPerFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Transform _initialAnchorParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRSceneManager::dyn__initialAnchorParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn__initialAnchorParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialAnchorParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action SceneModelLoadedSuccessfully
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::OVRSceneManager::dyn_SceneModelLoadedSuccessfully() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn_SceneModelLoadedSuccessfully");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SceneModelLoadedSuccessfully"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action NoSceneModelToLoad
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::OVRSceneManager::dyn_NoSceneModelToLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn_NoSceneModelToLoad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NoSceneModelToLoad"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action SceneCaptureReturnedWithoutError
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::OVRSceneManager::dyn_SceneCaptureReturnedWithoutError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn_SceneCaptureReturnedWithoutError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SceneCaptureReturnedWithoutError"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action UnexpectedErrorWithSceneCapture
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::OVRSceneManager::dyn_UnexpectedErrorWithSceneCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn_UnexpectedErrorWithSceneCapture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UnexpectedErrorWithSceneCapture"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action NewSceneModelAvailable
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::OVRSceneManager::dyn_NewSceneModelAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn_NewSceneModelAvailable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NewSceneModelAvailable"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSceneManager/RoomLayoutInformation RoomLayout
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneManager::RoomLayoutInformation*& GlobalNamespace::OVRSceneManager::dyn_RoomLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn_RoomLayout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomLayout"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneManager::RoomLayoutInformation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 _sceneCaptureRequestId
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRSceneManager::dyn__sceneCaptureRequestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn__sceneCaptureRequestId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneCaptureRequestId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRCameraRig _cameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::OVRSceneManager::dyn__cameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn__cameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _sceneAnchorUpdateIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRSceneManager::dyn__sceneAnchorUpdateIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn__sceneAnchorUpdateIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneAnchorUpdateIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _roomCounter
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRSceneManager::dyn__roomCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn__roomCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomCounter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.Boolean,System.Collections.Generic.List`1<OVRAnchor>> _onAnchorsFetchCompleted
[[deprecated("Use field access instead!")]] ::System::Action_2<bool, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*>*& GlobalNamespace::OVRSceneManager::dyn__onAnchorsFetchCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn__onAnchorsFetchCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onAnchorsFetchCompleted"))->offset;
  return *reinterpret_cast<::System::Action_2<bool, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasLoadedScene
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRSceneManager::dyn__hasLoadedScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn__hasLoadedScene");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasLoadedScene"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> _onFloorAnchorsFetchCompleted
[[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& GlobalNamespace::OVRSceneManager::dyn__onFloorAnchorsFetchCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn__onFloorAnchorsFetchCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onFloorAnchorsFetchCompleted"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.Boolean,OVRAnchor> _onFloorAnchorLocalizationCompleted
[[deprecated("Use field access instead!")]] ::System::Action_2<bool, ::GlobalNamespace::OVRAnchor>*& GlobalNamespace::OVRSceneManager::dyn__onFloorAnchorLocalizationCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn__onFloorAnchorLocalizationCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onFloorAnchorLocalizationCompleted"))->offset;
  return *reinterpret_cast<::System::Action_2<bool, ::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRAnchor> _floorAnchors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::OVRSceneManager::dyn__floorAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn__floorAnchors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_floorAnchors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.Guid> _pendingLocatable
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::System::Guid>*& GlobalNamespace::OVRSceneManager::dyn__pendingLocatable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn__pendingLocatable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pendingLocatable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::System::Guid>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Guid,OVRAnchor> _roomAndFloorPairs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Guid, ::GlobalNamespace::OVRAnchor>*& GlobalNamespace::OVRSceneManager::dyn__roomAndFloorPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn__roomAndFloorPairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomAndFloorPairs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Guid, ::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRAnchor> _roomLayoutAnchors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::OVRSceneManager::dyn__roomLayoutAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::dyn__roomLayoutAnchors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomLayoutAnchors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneManager.get_InitialAnchorParent
::UnityEngine::Transform* GlobalNamespace::OVRSceneManager::get_InitialAnchorParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::get_InitialAnchorParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InitialAnchorParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneManager.set_InitialAnchorParent
void GlobalNamespace::OVRSceneManager::set_InitialAnchorParent(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::set_InitialAnchorParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InitialAnchorParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSceneManager.get_Verbose
::System::Nullable_1<::GlobalNamespace::OVRSceneManager::LogForwarder> GlobalNamespace::OVRSceneManager::get_Verbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::get_Verbose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Verbose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::GlobalNamespace::OVRSceneManager::LogForwarder>, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneManager.Awake
void GlobalNamespace::OVRSceneManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneManager.OnApplicationPause
void GlobalNamespace::OVRSceneManager::OnApplicationPause(bool isPaused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPaused)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isPaused);
}
// Autogenerated method: OVRSceneManager.QueryForExistingAnchorsTransform
void GlobalNamespace::OVRSceneManager::QueryForExistingAnchorsTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::QueryForExistingAnchorsTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueryForExistingAnchorsTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneManager.LoadSceneModel
bool GlobalNamespace::OVRSceneManager::LoadSceneModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::LoadSceneModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneManager.OnAnchorsFetchCompleted
void GlobalNamespace::OVRSceneManager::OnAnchorsFetchCompleted(bool success, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* roomLayoutAnchors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::OnAnchorsFetchCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAnchorsFetchCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(roomLayoutAnchors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success, roomLayoutAnchors);
}
// Autogenerated method: OVRSceneManager.InstantiateActiveRooms
void GlobalNamespace::OVRSceneManager::InstantiateActiveRooms(::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* roomLayoutAnchors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::InstantiateActiveRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateActiveRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomLayoutAnchors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomLayoutAnchors);
}
// Autogenerated method: OVRSceneManager.OnFloorAnchorsFetchCompleted
void GlobalNamespace::OVRSceneManager::OnFloorAnchorsFetchCompleted(bool success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::OnFloorAnchorsFetchCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFloorAnchorsFetchCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success);
}
// Autogenerated method: OVRSceneManager.OnFloorAnchorLocalizationCompleted
void GlobalNamespace::OVRSceneManager::OnFloorAnchorLocalizationCompleted(bool success, ::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::OnFloorAnchorLocalizationCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFloorAnchorLocalizationCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(anchor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success, anchor);
}
// Autogenerated method: OVRSceneManager.LocateUserInRoom
void GlobalNamespace::OVRSceneManager::LocateUserInRoom(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::LocateUserInRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocateUserInRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRSceneManager.InstantiateSceneRooms
void GlobalNamespace::OVRSceneManager::InstantiateSceneRooms(::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* roomLayoutAnchors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::InstantiateSceneRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateSceneRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomLayoutAnchors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomLayoutAnchors);
}
// Autogenerated method: OVRSceneManager.OnSceneRoomLoadCompleted
void GlobalNamespace::OVRSceneManager::OnSceneRoomLoadCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::OnSceneRoomLoadCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSceneRoomLoadCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneManager.DestroyExistingAnchors
void GlobalNamespace::OVRSceneManager::DestroyExistingAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::DestroyExistingAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyExistingAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneManager.RequestSceneCapture
bool GlobalNamespace::OVRSceneManager::RequestSceneCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::RequestSceneCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestSceneCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneManager.RequestSceneCapture
bool GlobalNamespace::OVRSceneManager::RequestSceneCapture(::System::Collections::Generic::IEnumerable_1<::StringW>* requestedAnchorClassifications) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::RequestSceneCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestSceneCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestedAnchorClassifications)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, requestedAnchorClassifications);
}
// Autogenerated method: OVRSceneManager.DoesRoomSetupExist
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRSceneManager::DoesRoomSetupExist(::System::Collections::Generic::IEnumerable_1<::StringW>* requestedAnchorClassifications) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::DoesRoomSetupExist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoesRoomSetupExist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestedAnchorClassifications)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(this, ___internal__method, requestedAnchorClassifications);
}
// Autogenerated method: OVRSceneManager.CheckIfClassificationsAreValid
void GlobalNamespace::OVRSceneManager::CheckIfClassificationsAreValid(::System::Collections::Generic::IEnumerable_1<::StringW>* requestedAnchorClassifications) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::CheckIfClassificationsAreValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSceneManager", "CheckIfClassificationsAreValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestedAnchorClassifications)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestedAnchorClassifications);
}
// Autogenerated method: OVRSceneManager.GetUuidsToQuery
void GlobalNamespace::OVRSceneManager::GetUuidsToQuery(::GlobalNamespace::OVRAnchor anchor, ::System::Collections::Generic::HashSet_1<::System::Guid>* uuidsToQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::GetUuidsToQuery");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSceneManager", "GetUuidsToQuery", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor), ::il2cpp_utils::ExtractType(uuidsToQuery)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, anchor, uuidsToQuery);
}
// Autogenerated method: OVRSceneManager.CheckClassificationsInRooms
void GlobalNamespace::OVRSceneManager::CheckClassificationsInRooms(bool success, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* rooms, ::System::Collections::Generic::IEnumerable_1<::StringW>* requestedAnchorClassifications, ::GlobalNamespace::OVRTask_1<bool> task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::CheckClassificationsInRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSceneManager", "CheckClassificationsInRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(rooms), ::il2cpp_utils::ExtractType(requestedAnchorClassifications), ::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, success, rooms, requestedAnchorClassifications, task);
}
// Autogenerated method: OVRSceneManager.CheckIfAnchorsContainClassifications
void GlobalNamespace::OVRSceneManager::CheckIfAnchorsContainClassifications(bool success, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* roomAnchors, ::System::Collections::Generic::IEnumerable_1<::StringW>* requestedAnchorClassifications, ::GlobalNamespace::OVRTask_1<bool> task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::CheckIfAnchorsContainClassifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSceneManager", "CheckIfAnchorsContainClassifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(roomAnchors), ::il2cpp_utils::ExtractType(requestedAnchorClassifications), ::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, success, roomAnchors, requestedAnchorClassifications, task);
}
// Autogenerated method: OVRSceneManager.CollectLabelsFromAnchors
void GlobalNamespace::OVRSceneManager::CollectLabelsFromAnchors(::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* anchors, ::System::Collections::Generic::List_1<::StringW>* labels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::CollectLabelsFromAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSceneManager", "CollectLabelsFromAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchors), ::il2cpp_utils::ExtractType(labels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, anchors, labels);
}
// Autogenerated method: OVRSceneManager.OnTrackingSpaceChanged
void GlobalNamespace::OVRSceneManager::OnTrackingSpaceChanged(::UnityEngine::Transform* trackingSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::OnTrackingSpaceChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSceneManager", "OnTrackingSpaceChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingSpace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingSpace);
}
// Autogenerated method: OVRSceneManager.Update
void GlobalNamespace::OVRSceneManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneManager.UpdateAllSceneAnchors
void GlobalNamespace::OVRSceneManager::UpdateAllSceneAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::UpdateAllSceneAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSceneManager", "UpdateAllSceneAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSceneManager.UpdateSomeSceneAnchors
void GlobalNamespace::OVRSceneManager::UpdateSomeSceneAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::UpdateSomeSceneAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSomeSceneAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneManager.GetRoomLayoutInformation
::GlobalNamespace::OVRSceneManager::RoomLayoutInformation* GlobalNamespace::OVRSceneManager::GetRoomLayoutInformation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::GetRoomLayoutInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomLayoutInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSceneManager::RoomLayoutInformation*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneManager.RequestSceneCapture
bool GlobalNamespace::OVRSceneManager::RequestSceneCapture(::StringW requestString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::RequestSceneCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestSceneCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestString)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, requestString);
}
// Autogenerated method: OVRSceneManager.OnEnable
void GlobalNamespace::OVRSceneManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneManager.OnDisable
void GlobalNamespace::OVRSceneManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneManager.PointInPolygon2D
bool GlobalNamespace::OVRSceneManager::PointInPolygon2D(::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> boundaryVertices, ::UnityEngine::Vector2 target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::PointInPolygon2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSceneManager", "PointInPolygon2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryVertices), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, boundaryVertices, target);
}
// Autogenerated method: OVRSceneManager.OVRManager_SceneCaptureComplete
void GlobalNamespace::OVRSceneManager::OVRManager_SceneCaptureComplete(uint64_t requestId, bool result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::OVRManager_SceneCaptureComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OVRManager_SceneCaptureComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestId, result);
}
// Autogenerated method: OVRSceneManager.InstantiateSceneAnchor
::GlobalNamespace::OVRSceneAnchor* GlobalNamespace::OVRSceneManager::InstantiateSceneAnchor(::GlobalNamespace::OVRAnchor anchor, ::GlobalNamespace::OVRSceneAnchor* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::InstantiateSceneAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateSceneAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor), ::il2cpp_utils::ExtractType(prefab)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSceneAnchor*, false>(this, ___internal__method, anchor, prefab);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneManager/Classification
#include "GlobalNamespace/OVRSceneManager_Classification.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String Floor
::StringW GlobalNamespace::OVRSceneManager::Classification::_get_Floor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_get_Floor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneManager/Classification", "Floor"));
}
// Autogenerated static field setter
// Set static field: static public System.String Floor
void GlobalNamespace::OVRSceneManager::Classification::_set_Floor(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_set_Floor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneManager/Classification", "Floor", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Ceiling
::StringW GlobalNamespace::OVRSceneManager::Classification::_get_Ceiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_get_Ceiling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneManager/Classification", "Ceiling"));
}
// Autogenerated static field setter
// Set static field: static public System.String Ceiling
void GlobalNamespace::OVRSceneManager::Classification::_set_Ceiling(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_set_Ceiling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneManager/Classification", "Ceiling", value));
}
// Autogenerated static field getter
// Get static field: static public System.String WallFace
::StringW GlobalNamespace::OVRSceneManager::Classification::_get_WallFace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_get_WallFace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneManager/Classification", "WallFace"));
}
// Autogenerated static field setter
// Set static field: static public System.String WallFace
void GlobalNamespace::OVRSceneManager::Classification::_set_WallFace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_set_WallFace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneManager/Classification", "WallFace", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Desk
::StringW GlobalNamespace::OVRSceneManager::Classification::_get_Desk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_get_Desk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneManager/Classification", "Desk"));
}
// Autogenerated static field setter
// Set static field: static public System.String Desk
void GlobalNamespace::OVRSceneManager::Classification::_set_Desk(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_set_Desk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneManager/Classification", "Desk", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Couch
::StringW GlobalNamespace::OVRSceneManager::Classification::_get_Couch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_get_Couch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneManager/Classification", "Couch"));
}
// Autogenerated static field setter
// Set static field: static public System.String Couch
void GlobalNamespace::OVRSceneManager::Classification::_set_Couch(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_set_Couch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneManager/Classification", "Couch", value));
}
// Autogenerated static field getter
// Get static field: static public System.String DoorFrame
::StringW GlobalNamespace::OVRSceneManager::Classification::_get_DoorFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_get_DoorFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneManager/Classification", "DoorFrame"));
}
// Autogenerated static field setter
// Set static field: static public System.String DoorFrame
void GlobalNamespace::OVRSceneManager::Classification::_set_DoorFrame(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_set_DoorFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneManager/Classification", "DoorFrame", value));
}
// Autogenerated static field getter
// Get static field: static public System.String WindowFrame
::StringW GlobalNamespace::OVRSceneManager::Classification::_get_WindowFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_get_WindowFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneManager/Classification", "WindowFrame"));
}
// Autogenerated static field setter
// Set static field: static public System.String WindowFrame
void GlobalNamespace::OVRSceneManager::Classification::_set_WindowFrame(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_set_WindowFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneManager/Classification", "WindowFrame", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Other
::StringW GlobalNamespace::OVRSceneManager::Classification::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneManager/Classification", "Other"));
}
// Autogenerated static field setter
// Set static field: static public System.String Other
void GlobalNamespace::OVRSceneManager::Classification::_set_Other(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneManager/Classification", "Other", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Storage
::StringW GlobalNamespace::OVRSceneManager::Classification::_get_Storage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_get_Storage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneManager/Classification", "Storage"));
}
// Autogenerated static field setter
// Set static field: static public System.String Storage
void GlobalNamespace::OVRSceneManager::Classification::_set_Storage(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_set_Storage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneManager/Classification", "Storage", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Bed
::StringW GlobalNamespace::OVRSceneManager::Classification::_get_Bed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_get_Bed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneManager/Classification", "Bed"));
}
// Autogenerated static field setter
// Set static field: static public System.String Bed
void GlobalNamespace::OVRSceneManager::Classification::_set_Bed(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_set_Bed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneManager/Classification", "Bed", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Screen
::StringW GlobalNamespace::OVRSceneManager::Classification::_get_Screen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_get_Screen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneManager/Classification", "Screen"));
}
// Autogenerated static field setter
// Set static field: static public System.String Screen
void GlobalNamespace::OVRSceneManager::Classification::_set_Screen(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_set_Screen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneManager/Classification", "Screen", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Lamp
::StringW GlobalNamespace::OVRSceneManager::Classification::_get_Lamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_get_Lamp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneManager/Classification", "Lamp"));
}
// Autogenerated static field setter
// Set static field: static public System.String Lamp
void GlobalNamespace::OVRSceneManager::Classification::_set_Lamp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_set_Lamp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneManager/Classification", "Lamp", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Plant
::StringW GlobalNamespace::OVRSceneManager::Classification::_get_Plant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_get_Plant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneManager/Classification", "Plant"));
}
// Autogenerated static field setter
// Set static field: static public System.String Plant
void GlobalNamespace::OVRSceneManager::Classification::_set_Plant(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_set_Plant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneManager/Classification", "Plant", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Table
::StringW GlobalNamespace::OVRSceneManager::Classification::_get_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_get_Table");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneManager/Classification", "Table"));
}
// Autogenerated static field setter
// Set static field: static public System.String Table
void GlobalNamespace::OVRSceneManager::Classification::_set_Table(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_set_Table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneManager/Classification", "Table", value));
}
// Autogenerated static field getter
// Get static field: static public System.String WallArt
::StringW GlobalNamespace::OVRSceneManager::Classification::_get_WallArt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_get_WallArt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneManager/Classification", "WallArt"));
}
// Autogenerated static field setter
// Set static field: static public System.String WallArt
void GlobalNamespace::OVRSceneManager::Classification::_set_WallArt(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_set_WallArt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneManager/Classification", "WallArt", value));
}
// Autogenerated static field getter
// Get static field: static public System.String InvisibleWallFace
::StringW GlobalNamespace::OVRSceneManager::Classification::_get_InvisibleWallFace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_get_InvisibleWallFace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneManager/Classification", "InvisibleWallFace"));
}
// Autogenerated static field setter
// Set static field: static public System.String InvisibleWallFace
void GlobalNamespace::OVRSceneManager::Classification::_set_InvisibleWallFace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_set_InvisibleWallFace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneManager/Classification", "InvisibleWallFace", value));
}
// Autogenerated static field getter
// Get static field: static public System.String GlobalMesh
::StringW GlobalNamespace::OVRSceneManager::Classification::_get_GlobalMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_get_GlobalMesh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRSceneManager/Classification", "GlobalMesh"));
}
// Autogenerated static field setter
// Set static field: static public System.String GlobalMesh
void GlobalNamespace::OVRSceneManager::Classification::_set_GlobalMesh(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_set_GlobalMesh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneManager/Classification", "GlobalMesh", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.IReadOnlyList`1<System.String> <List>k__BackingField
::System::Collections::Generic::IReadOnlyList_1<::StringW>* GlobalNamespace::OVRSceneManager::Classification::_get_$List$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_get_$List$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::IReadOnlyList_1<::StringW>*>("", "OVRSceneManager/Classification", "<List>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.IReadOnlyList`1<System.String> <List>k__BackingField
void GlobalNamespace::OVRSceneManager::Classification::_set_$List$k__BackingField(::System::Collections::Generic::IReadOnlyList_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::_set_$List$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneManager/Classification", "<List>k__BackingField", value));
}
// Autogenerated method: OVRSceneManager/Classification.get_List
::System::Collections::Generic::IReadOnlyList_1<::StringW>* GlobalNamespace::OVRSceneManager::Classification::get_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::get_List");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSceneManager/Classification", "get_List", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSceneManager/Classification..cctor
void GlobalNamespace::OVRSceneManager::Classification::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Classification::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSceneManager/Classification", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneManager/RoomLayoutInformation
#include "GlobalNamespace/OVRSceneManager_RoomLayoutInformation.hpp"
// Including type: OVRScenePlane
#include "GlobalNamespace/OVRScenePlane.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRScenePlane Floor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRScenePlane*& GlobalNamespace::OVRSceneManager::RoomLayoutInformation::dyn_Floor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::RoomLayoutInformation::dyn_Floor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Floor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRScenePlane**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRScenePlane Ceiling
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRScenePlane*& GlobalNamespace::OVRSceneManager::RoomLayoutInformation::dyn_Ceiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::RoomLayoutInformation::dyn_Ceiling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ceiling"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRScenePlane**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<OVRScenePlane> Walls
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRScenePlane*>*& GlobalNamespace::OVRSceneManager::RoomLayoutInformation::dyn_Walls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::RoomLayoutInformation::dyn_Walls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Walls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRScenePlane*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneManager/LogForwarder
#include "GlobalNamespace/OVRSceneManager.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRSceneManager/LogForwarder.Log
void GlobalNamespace::OVRSceneManager::LogForwarder::Log(::StringW context, ::StringW message, ::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::LogForwarder::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, message, gameObject);
}
// Autogenerated method: OVRSceneManager/LogForwarder.LogWarning
void GlobalNamespace::OVRSceneManager::LogForwarder::LogWarning(::StringW context, ::StringW message, ::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::LogForwarder::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, message, gameObject);
}
// Autogenerated method: OVRSceneManager/LogForwarder.LogError
void GlobalNamespace::OVRSceneManager::LogForwarder::LogError(::StringW context, ::StringW message, ::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::LogForwarder::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, message, gameObject);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneManager/Development
#include "GlobalNamespace/OVRSceneManager_Development.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRSceneManager/Development.Log
void GlobalNamespace::OVRSceneManager::Development::Log(::StringW context, ::StringW message, ::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Development::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSceneManager/Development", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, message, gameObject);
}
// Autogenerated method: OVRSceneManager/Development.LogWarning
void GlobalNamespace::OVRSceneManager::Development::LogWarning(::StringW context, ::StringW message, ::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Development::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSceneManager/Development", "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, message, gameObject);
}
// Autogenerated method: OVRSceneManager/Development.LogError
void GlobalNamespace::OVRSceneManager::Development::LogError(::StringW context, ::StringW message, ::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::Development::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSceneManager/Development", "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, message, gameObject);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneManager/<>c__DisplayClass48_0
#include "GlobalNamespace/OVRSceneManager_--c__DisplayClass48_0.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.IEnumerable`1<System.String> requestedAnchorClassifications
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::StringW>*& GlobalNamespace::OVRSceneManager::$$c__DisplayClass48_0::dyn_requestedAnchorClassifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$$c__DisplayClass48_0::dyn_requestedAnchorClassifications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestedAnchorClassifications"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRTask`1<System.Boolean> task
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRTask_1<bool>& GlobalNamespace::OVRSceneManager::$$c__DisplayClass48_0::dyn_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$$c__DisplayClass48_0::dyn_task");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "task"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRTask_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneManager/<>c__DisplayClass48_0.<DoesRoomSetupExist>b__0
void GlobalNamespace::OVRSceneManager::$$c__DisplayClass48_0::$DoesRoomSetupExist$b__0(bool result, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* anchors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$$c__DisplayClass48_0::<DoesRoomSetupExist>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DoesRoomSetupExist>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(anchors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result, anchors);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneManager/<>c__DisplayClass51_0
#include "GlobalNamespace/OVRSceneManager_--c__DisplayClass51_0.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.IEnumerable`1<System.String> requestedAnchorClassifications
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::StringW>*& GlobalNamespace::OVRSceneManager::$$c__DisplayClass51_0::dyn_requestedAnchorClassifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$$c__DisplayClass51_0::dyn_requestedAnchorClassifications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestedAnchorClassifications"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRTask`1<System.Boolean> task
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRTask_1<bool>& GlobalNamespace::OVRSceneManager::$$c__DisplayClass51_0::dyn_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$$c__DisplayClass51_0::dyn_task");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "task"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRTask_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<OVRAnchor> roomAnchors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::OVRSceneManager::$$c__DisplayClass51_0::dyn_roomAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$$c__DisplayClass51_0::dyn_roomAnchors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomAnchors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneManager/<>c__DisplayClass51_0.<CheckClassificationsInRooms>b__0
void GlobalNamespace::OVRSceneManager::$$c__DisplayClass51_0::$CheckClassificationsInRooms$b__0(bool result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$$c__DisplayClass51_0::<CheckClassificationsInRooms>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CheckClassificationsInRooms>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneManager/<OnApplicationPause>d__35
#include "GlobalNamespace/OVRSceneManager_-OnApplicationPause-d__35.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isPaused
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35::dyn_isPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35::dyn_isPaused");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPaused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSceneManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneManager*& GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRAnchor> <anchors>5__2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35::dyn_$anchors$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35::dyn_$anchors$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<anchors>5__2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRObjectPool/ListScope`1<OVRAnchor> <>7__wrap2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRObjectPool::ListScope_1<::GlobalNamespace::OVRAnchor>& GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35::dyn_$$7__wrap2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRObjectPool::ListScope_1<::GlobalNamespace::OVRAnchor>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTask`1/Awaiter<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter& GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneManager/<OnApplicationPause>d__35.MoveNext
void GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneManager/<OnApplicationPause>d__35.SetStateMachine
void GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSceneManager::$OnApplicationPause$d__35), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneManager/<QueryForExistingAnchorsTransform>d__36
#include "GlobalNamespace/OVRSceneManager_-QueryForExistingAnchorsTransform-d__36.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRSceneManager::$QueryForExistingAnchorsTransform$d__36::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$QueryForExistingAnchorsTransform$d__36::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::OVRSceneManager::$QueryForExistingAnchorsTransform$d__36::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$QueryForExistingAnchorsTransform$d__36::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRObjectPool/ListScope`1<OVRAnchor> <>7__wrap1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRObjectPool::ListScope_1<::GlobalNamespace::OVRAnchor>& GlobalNamespace::OVRSceneManager::$QueryForExistingAnchorsTransform$d__36::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$QueryForExistingAnchorsTransform$d__36::dyn_$$7__wrap1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRObjectPool::ListScope_1<::GlobalNamespace::OVRAnchor>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRObjectPool/ListScope`1<System.Guid> <>7__wrap2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRObjectPool::ListScope_1<::System::Guid>& GlobalNamespace::OVRSceneManager::$QueryForExistingAnchorsTransform$d__36::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$QueryForExistingAnchorsTransform$d__36::dyn_$$7__wrap2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRObjectPool::ListScope_1<::System::Guid>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTask`1/Awaiter<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter& GlobalNamespace::OVRSceneManager::$QueryForExistingAnchorsTransform$d__36::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$QueryForExistingAnchorsTransform$d__36::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneManager/<QueryForExistingAnchorsTransform>d__36.MoveNext
void GlobalNamespace::OVRSceneManager::$QueryForExistingAnchorsTransform$d__36::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$QueryForExistingAnchorsTransform$d__36::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSceneManager::$QueryForExistingAnchorsTransform$d__36), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneManager/<QueryForExistingAnchorsTransform>d__36.SetStateMachine
void GlobalNamespace::OVRSceneManager::$QueryForExistingAnchorsTransform$d__36::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneManager::$QueryForExistingAnchorsTransform$d__36::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSceneManager::$QueryForExistingAnchorsTransform$d__36), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneModelLoader
#include "GlobalNamespace/OVRSceneModelLoader.hpp"
// Including type: OVRSceneModelLoader/<AttemptToLoadSceneModel>d__7
#include "GlobalNamespace/OVRSceneModelLoader_-AttemptToLoadSceneModel-d__7.hpp"
// Including type: OVRSceneManager
#include "GlobalNamespace/OVRSceneManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single RetryingReminderDelay
float GlobalNamespace::OVRSceneModelLoader::_get_RetryingReminderDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::_get_RetryingReminderDelay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRSceneModelLoader", "RetryingReminderDelay"));
}
// Autogenerated static field setter
// Set static field: static private System.Single RetryingReminderDelay
void GlobalNamespace::OVRSceneModelLoader::_set_RetryingReminderDelay(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::_set_RetryingReminderDelay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneModelLoader", "RetryingReminderDelay", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRSceneManager <SceneManager>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneManager*& GlobalNamespace::OVRSceneModelLoader::dyn_$SceneManager$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::dyn_$SceneManager$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SceneManager>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sceneCaptureRequested
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRSceneModelLoader::dyn__sceneCaptureRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::dyn__sceneCaptureRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneCaptureRequested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneModelLoader.get_SceneManager
::GlobalNamespace::OVRSceneManager* GlobalNamespace::OVRSceneModelLoader::get_SceneManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::get_SceneManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SceneManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSceneManager*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneModelLoader.set_SceneManager
void GlobalNamespace::OVRSceneModelLoader::set_SceneManager(::GlobalNamespace::OVRSceneManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::set_SceneManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SceneManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSceneModelLoader.Start
void GlobalNamespace::OVRSceneModelLoader::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneModelLoader.AttemptToLoadSceneModel
::System::Collections::IEnumerator* GlobalNamespace::OVRSceneModelLoader::AttemptToLoadSceneModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::AttemptToLoadSceneModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttemptToLoadSceneModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneModelLoader.OnStart
void GlobalNamespace::OVRSceneModelLoader::OnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::OnStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneModelLoader*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneModelLoader.LoadSceneModel
void GlobalNamespace::OVRSceneModelLoader::LoadSceneModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::LoadSceneModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneModelLoader.OnSceneModelLoadedSuccessfully
void GlobalNamespace::OVRSceneModelLoader::OnSceneModelLoadedSuccessfully() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::OnSceneModelLoadedSuccessfully");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneModelLoader*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneModelLoader.OnNoSceneModelToLoad
void GlobalNamespace::OVRSceneModelLoader::OnNoSceneModelToLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::OnNoSceneModelToLoad");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneModelLoader*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneModelLoader.OnNewSceneModelAvailable
void GlobalNamespace::OVRSceneModelLoader::OnNewSceneModelAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::OnNewSceneModelAvailable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneModelLoader*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneModelLoader.OnSceneCaptureReturnedWithoutError
void GlobalNamespace::OVRSceneModelLoader::OnSceneCaptureReturnedWithoutError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::OnSceneCaptureReturnedWithoutError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneModelLoader*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneModelLoader.OnUnexpectedErrorWithSceneCapture
void GlobalNamespace::OVRSceneModelLoader::OnUnexpectedErrorWithSceneCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::OnUnexpectedErrorWithSceneCapture");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneModelLoader*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSceneModelLoader/<AttemptToLoadSceneModel>d__7
#include "GlobalNamespace/OVRSceneModelLoader_-AttemptToLoadSceneModel-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSceneModelLoader <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneModelLoader*& GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneModelLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <timeSinceReminder>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7::dyn_$timeSinceReminder$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7::dyn_$timeSinceReminder$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timeSinceReminder>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneModelLoader/<AttemptToLoadSceneModel>d__7.System.IDisposable.Dispose
void GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneModelLoader/<AttemptToLoadSceneModel>d__7.MoveNext
bool GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneModelLoader/<AttemptToLoadSceneModel>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneModelLoader/<AttemptToLoadSceneModel>d__7.System.Collections.IEnumerator.Reset
void GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneModelLoader/<AttemptToLoadSceneModel>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneModelLoader::$AttemptToLoadSceneModel$d__7*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneObjectTransformType
#include "GlobalNamespace/OVRSceneObjectTransformType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRSceneObjectTransformType/Transformation TransformType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneObjectTransformType::Transformation& GlobalNamespace::OVRSceneObjectTransformType::dyn_TransformType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneObjectTransformType::dyn_TransformType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TransformType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneObjectTransformType::Transformation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneObjectTransformType/Transformation
#include "GlobalNamespace/OVRSceneObjectTransformType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRSceneObjectTransformType/Transformation Volume
::GlobalNamespace::OVRSceneObjectTransformType::Transformation GlobalNamespace::OVRSceneObjectTransformType::Transformation::_get_Volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneObjectTransformType::Transformation::_get_Volume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRSceneObjectTransformType::Transformation>("", "OVRSceneObjectTransformType/Transformation", "Volume"));
}
// Autogenerated static field setter
// Set static field: static public OVRSceneObjectTransformType/Transformation Volume
void GlobalNamespace::OVRSceneObjectTransformType::Transformation::_set_Volume(::GlobalNamespace::OVRSceneObjectTransformType::Transformation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneObjectTransformType::Transformation::_set_Volume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneObjectTransformType/Transformation", "Volume", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSceneObjectTransformType/Transformation Plane
::GlobalNamespace::OVRSceneObjectTransformType::Transformation GlobalNamespace::OVRSceneObjectTransformType::Transformation::_get_Plane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneObjectTransformType::Transformation::_get_Plane");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRSceneObjectTransformType::Transformation>("", "OVRSceneObjectTransformType/Transformation", "Plane"));
}
// Autogenerated static field setter
// Set static field: static public OVRSceneObjectTransformType/Transformation Plane
void GlobalNamespace::OVRSceneObjectTransformType::Transformation::_set_Plane(::GlobalNamespace::OVRSceneObjectTransformType::Transformation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneObjectTransformType::Transformation::_set_Plane");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneObjectTransformType/Transformation", "Plane", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSceneObjectTransformType/Transformation None
::GlobalNamespace::OVRSceneObjectTransformType::Transformation GlobalNamespace::OVRSceneObjectTransformType::Transformation::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneObjectTransformType::Transformation::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRSceneObjectTransformType::Transformation>("", "OVRSceneObjectTransformType/Transformation", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRSceneObjectTransformType/Transformation None
void GlobalNamespace::OVRSceneObjectTransformType::Transformation::_set_None(::GlobalNamespace::OVRSceneObjectTransformType::Transformation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneObjectTransformType::Transformation::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneObjectTransformType/Transformation", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRSceneObjectTransformType::Transformation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneObjectTransformType::Transformation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRScenePlane
#include "GlobalNamespace/OVRScenePlane.hpp"
// Including type: OVRScenePlane/GetBoundaryLengthJob
#include "GlobalNamespace/OVRScenePlane_GetBoundaryLengthJob.hpp"
// Including type: OVRScenePlane/GetBoundaryJob
#include "GlobalNamespace/OVRScenePlane_GetBoundaryJob.hpp"
// Including type: OVRSceneAnchor
#include "GlobalNamespace/OVRSceneAnchor.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <Width>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRScenePlane::dyn_$Width$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::dyn_$Width$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Width>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <Height>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRScenePlane::dyn_$Height$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::dyn_$Height$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Height>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 <Offset>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::OVRScenePlane::dyn_$Offset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::dyn_$Offset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Offset>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _scaleChildren
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRScenePlane::dyn__scaleChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::dyn__scaleChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scaleChildren"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _offsetChildren
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRScenePlane::dyn__offsetChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::dyn__offsetChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offsetChildren"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Unity.Jobs.JobHandle> _jobHandle
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Unity::Jobs::JobHandle>& GlobalNamespace::OVRScenePlane::dyn__jobHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::dyn__jobHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jobHandle"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Unity::Jobs::JobHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.Collections.NativeArray`1<UnityEngine.Vector2> _previousBoundary
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>& GlobalNamespace::OVRScenePlane::dyn__previousBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::dyn__previousBoundary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousBoundary"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.Collections.NativeArray`1<System.Int32> _boundaryLength
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& GlobalNamespace::OVRScenePlane::dyn__boundaryLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::dyn__boundaryLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boundaryLength"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.Collections.NativeArray`1<UnityEngine.Vector2> _boundaryBuffer
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>& GlobalNamespace::OVRScenePlane::dyn__boundaryBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::dyn__boundaryBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boundaryBuffer"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _boundaryRequested
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRScenePlane::dyn__boundaryRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::dyn__boundaryRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boundaryRequested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSceneAnchor _sceneAnchor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneAnchor*& GlobalNamespace::OVRScenePlane::dyn__sceneAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::dyn__sceneAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneAnchor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneAnchor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Vector2> _boundary
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector2>*& GlobalNamespace::OVRScenePlane::dyn__boundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::dyn__boundary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boundary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector2>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRScenePlane.get_Width
float GlobalNamespace::OVRScenePlane::get_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::get_Width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlane.set_Width
void GlobalNamespace::OVRScenePlane::set_Width(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::set_Width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRScenePlane.get_Height
float GlobalNamespace::OVRScenePlane::get_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::get_Height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlane.set_Height
void GlobalNamespace::OVRScenePlane::set_Height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::set_Height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRScenePlane.get_Offset
::UnityEngine::Vector2 GlobalNamespace::OVRScenePlane::get_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::get_Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlane.set_Offset
void GlobalNamespace::OVRScenePlane::set_Offset(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::set_Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRScenePlane.get_Dimensions
::UnityEngine::Vector2 GlobalNamespace::OVRScenePlane::get_Dimensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::get_Dimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Dimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlane.get_Boundary
::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector2>* GlobalNamespace::OVRScenePlane::get_Boundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::get_Boundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Boundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector2>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlane.get_ScaleChildren
bool GlobalNamespace::OVRScenePlane::get_ScaleChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::get_ScaleChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ScaleChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlane.set_ScaleChildren
void GlobalNamespace::OVRScenePlane::set_ScaleChildren(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::set_ScaleChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ScaleChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRScenePlane.get_OffsetChildren
bool GlobalNamespace::OVRScenePlane::get_OffsetChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::get_OffsetChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OffsetChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlane.set_OffsetChildren
void GlobalNamespace::OVRScenePlane::set_OffsetChildren(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::set_OffsetChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OffsetChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRScenePlane.SetChildScale
void GlobalNamespace::OVRScenePlane::SetChildScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::SetChildScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlane.SetChildOffset
void GlobalNamespace::OVRScenePlane::SetChildOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::SetChildOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlane.UpdateTransform
void GlobalNamespace::OVRScenePlane::UpdateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::UpdateTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlane.Awake
void GlobalNamespace::OVRScenePlane::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlane.Start
void GlobalNamespace::OVRScenePlane::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlane.IOVRSceneComponent.Initialize
void GlobalNamespace::OVRScenePlane::IOVRSceneComponent_Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::IOVRSceneComponent.Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRScenePlane*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlane.ScheduleGetLengthJob
void GlobalNamespace::OVRScenePlane::ScheduleGetLengthJob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::ScheduleGetLengthJob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScheduleGetLengthJob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlane.RequestBoundary
void GlobalNamespace::OVRScenePlane::RequestBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::RequestBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlane.Update
void GlobalNamespace::OVRScenePlane::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlane.OnDisable
void GlobalNamespace::OVRScenePlane::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRScenePlane/GetBoundaryLengthJob
#include "GlobalNamespace/OVRScenePlane_GetBoundaryLengthJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRSpace Space
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSpace& GlobalNamespace::OVRScenePlane::GetBoundaryLengthJob::dyn_Space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::GetBoundaryLengthJob::dyn_Space");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Space"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Int32> Length
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& GlobalNamespace::OVRScenePlane::GetBoundaryLengthJob::dyn_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::GetBoundaryLengthJob::dyn_Length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Length"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRScenePlane/GetBoundaryLengthJob.Execute
void GlobalNamespace::OVRScenePlane::GetBoundaryLengthJob::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::GetBoundaryLengthJob::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRScenePlane::GetBoundaryLengthJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRScenePlane/GetBoundaryJob
#include "GlobalNamespace/OVRScenePlane_GetBoundaryJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRSpace Space
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSpace& GlobalNamespace::OVRScenePlane::GetBoundaryJob::dyn_Space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::GetBoundaryJob::dyn_Space");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Space"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Vector2> Boundary
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>& GlobalNamespace::OVRScenePlane::GetBoundaryJob::dyn_Boundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::GetBoundaryJob::dyn_Boundary");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Boundary"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Vector2> PreviousBoundary
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>& GlobalNamespace::OVRScenePlane::GetBoundaryJob::dyn_PreviousBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::GetBoundaryJob::dyn_PreviousBoundary");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreviousBoundary"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRScenePlane/GetBoundaryJob.HasBoundaryChanged
bool GlobalNamespace::OVRScenePlane::GetBoundaryJob::HasBoundaryChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::GetBoundaryJob::HasBoundaryChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "HasBoundaryChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlane/GetBoundaryJob.SetNaN
void GlobalNamespace::OVRScenePlane::GetBoundaryJob::SetNaN(::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::GetBoundaryJob::SetNaN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRScenePlane/GetBoundaryJob", "SetNaN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: OVRScenePlane/GetBoundaryJob.Execute
void GlobalNamespace::OVRScenePlane::GetBoundaryJob::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlane::GetBoundaryJob::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRScenePlane::GetBoundaryJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRScenePlaneMeshFilter
#include "GlobalNamespace/OVRScenePlaneMeshFilter.hpp"
// Including type: OVRScenePlaneMeshFilter/TriangulateBoundaryJob
#include "GlobalNamespace/OVRScenePlaneMeshFilter_TriangulateBoundaryJob.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _meshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::OVRScenePlaneMeshFilter::dyn__meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::dyn__meshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::OVRScenePlaneMeshFilter::dyn__mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::dyn__mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<Unity.Jobs.JobHandle> _jobHandle
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Unity::Jobs::JobHandle>& GlobalNamespace::OVRScenePlaneMeshFilter::dyn__jobHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::dyn__jobHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jobHandle"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Unity::Jobs::JobHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _meshRequested
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRScenePlaneMeshFilter::dyn__meshRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::dyn__meshRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshRequested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.Collections.NativeArray`1<UnityEngine.Vector2> _boundary
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>& GlobalNamespace::OVRScenePlaneMeshFilter::dyn__boundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::dyn__boundary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boundary"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.Collections.NativeArray`1<System.Int32> _triangles
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& GlobalNamespace::OVRScenePlaneMeshFilter::dyn__triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::dyn__triangles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_triangles"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRScenePlaneMeshFilter.Start
void GlobalNamespace::OVRScenePlaneMeshFilter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlaneMeshFilter.ScheduleMeshGeneration
void GlobalNamespace::OVRScenePlaneMeshFilter::ScheduleMeshGeneration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::ScheduleMeshGeneration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScheduleMeshGeneration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlaneMeshFilter.Update
void GlobalNamespace::OVRScenePlaneMeshFilter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlaneMeshFilter.RequestMeshGeneration
void GlobalNamespace::OVRScenePlaneMeshFilter::RequestMeshGeneration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::RequestMeshGeneration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestMeshGeneration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlaneMeshFilter.OnDisable
void GlobalNamespace::OVRScenePlaneMeshFilter::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRScenePlaneMeshFilter/TriangulateBoundaryJob
#include "GlobalNamespace/OVRScenePlaneMeshFilter_TriangulateBoundaryJob.hpp"
// Including type: OVRScenePlaneMeshFilter/TriangulateBoundaryJob/NList
#include "GlobalNamespace/OVRScenePlaneMeshFilter_TriangulateBoundaryJob_NList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Vector2> Boundary
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>& GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::dyn_Boundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::dyn_Boundary");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Boundary"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Int32> Triangles
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::dyn_Triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::dyn_Triangles");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Triangles"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRScenePlaneMeshFilter/TriangulateBoundaryJob.Execute
void GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlaneMeshFilter/TriangulateBoundaryJob.Cross
float GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::Cross(::UnityEngine::Vector2 a, ::UnityEngine::Vector2 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::Cross");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRScenePlaneMeshFilter/TriangulateBoundaryJob", "Cross", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: OVRScenePlaneMeshFilter/TriangulateBoundaryJob.PointInTriangle
bool GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::PointInTriangle(::UnityEngine::Vector2 p, ::UnityEngine::Vector2 a, ::UnityEngine::Vector2 b, ::UnityEngine::Vector2 c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::PointInTriangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRScenePlaneMeshFilter/TriangulateBoundaryJob", "PointInTriangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, a, b, c);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRScenePlaneMeshFilter/TriangulateBoundaryJob/NList
#include "GlobalNamespace/OVRScenePlaneMeshFilter_TriangulateBoundaryJob_NList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Count>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::dyn_$Count$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::dyn_$Count$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Count>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.Collections.NativeArray`1<System.Int32> _data
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::dyn__data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRScenePlaneMeshFilter/TriangulateBoundaryJob/NList.get_Count
int GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePlaneMeshFilter/TriangulateBoundaryJob/NList.set_Count
void GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::set_Count(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::set_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRScenePlaneMeshFilter/TriangulateBoundaryJob/NList..ctor
GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::NList(int capacity, ::Unity::Collections::Allocator allocator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity), ::il2cpp_utils::ExtractType(allocator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity, allocator);
}
// Autogenerated method: OVRScenePlaneMeshFilter/TriangulateBoundaryJob/NList.RemoveAt
void GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: OVRScenePlaneMeshFilter/TriangulateBoundaryJob/NList.GetAt
int GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::GetAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::GetAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, index);
}
// Autogenerated method: OVRScenePlaneMeshFilter/TriangulateBoundaryJob/NList.get_Item
int GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, index);
}
// Autogenerated method: OVRScenePlaneMeshFilter/TriangulateBoundaryJob/NList.Dispose
void GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRScenePlaneMeshFilter::TriangulateBoundaryJob::NList), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRScenePrefabOverride
#include "GlobalNamespace/OVRScenePrefabOverride.hpp"
// Including type: OVRSceneAnchor
#include "GlobalNamespace/OVRSceneAnchor.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRSceneAnchor Prefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneAnchor*& GlobalNamespace::OVRScenePrefabOverride::dyn_Prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePrefabOverride::dyn_Prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Prefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneAnchor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ClassificationLabel
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRScenePrefabOverride::dyn_ClassificationLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePrefabOverride::dyn_ClassificationLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ClassificationLabel"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _editorClassificationIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRScenePrefabOverride::dyn__editorClassificationIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePrefabOverride::dyn__editorClassificationIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editorClassificationIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRScenePrefabOverride.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void GlobalNamespace::OVRScenePrefabOverride::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePrefabOverride::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRScenePrefabOverride*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePrefabOverride.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void GlobalNamespace::OVRScenePrefabOverride::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePrefabOverride::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRScenePrefabOverride*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScenePrefabOverride.<UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize>g__IndexOf|4_0
int GlobalNamespace::OVRScenePrefabOverride::$UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize$g__IndexOf_4_0(::StringW label, ::System::Collections::Generic::IEnumerable_1<::StringW>* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRScenePrefabOverride::<UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize>g__IndexOf|4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRScenePrefabOverride", "<UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize>g__IndexOf|4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(collection)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, label, collection);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneRoom
#include "GlobalNamespace/OVRSceneRoom.hpp"
// Including type: OVRScenePlane
#include "GlobalNamespace/OVRScenePlane.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: OVRSceneAnchor
#include "GlobalNamespace/OVRSceneAnchor.hpp"
// Including type: OVRSceneManager
#include "GlobalNamespace/OVRSceneManager.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.Dictionary`2<System.Guid,OVRSceneRoom> SceneRooms
::System::Collections::Generic::Dictionary_2<::System::Guid, ::GlobalNamespace::OVRSceneRoom*>* GlobalNamespace::OVRSceneRoom::_get_SceneRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::_get_SceneRooms");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Guid, ::GlobalNamespace::OVRSceneRoom*>*>("", "OVRSceneRoom", "SceneRooms")));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.Dictionary`2<System.Guid,OVRSceneRoom> SceneRooms
void GlobalNamespace::OVRSceneRoom::_set_SceneRooms(::System::Collections::Generic::Dictionary_2<::System::Guid, ::GlobalNamespace::OVRSceneRoom*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::_set_SceneRooms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneRoom", "SceneRooms", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.List`1<OVRSceneRoom> SceneRoomsList
::System::Collections::Generic::List_1<::GlobalNamespace::OVRSceneRoom*>* GlobalNamespace::OVRSceneRoom::_get_SceneRoomsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::_get_SceneRoomsList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GlobalNamespace::OVRSceneRoom*>*>("", "OVRSceneRoom", "SceneRoomsList"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.List`1<OVRSceneRoom> SceneRoomsList
void GlobalNamespace::OVRSceneRoom::_set_SceneRoomsList(::System::Collections::Generic::List_1<::GlobalNamespace::OVRSceneRoom*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::_set_SceneRoomsList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneRoom", "SceneRoomsList", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRScenePlane <Floor>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRScenePlane*& GlobalNamespace::OVRSceneRoom::dyn_$Floor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::dyn_$Floor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Floor>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRScenePlane**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRScenePlane <Ceiling>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRScenePlane*& GlobalNamespace::OVRSceneRoom::dyn_$Ceiling$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::dyn_$Ceiling$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Ceiling>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRScenePlane**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRScenePlane[] <Walls>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRScenePlane*>& GlobalNamespace::OVRSceneRoom::dyn_$Walls$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::dyn_$Walls$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Walls>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRScenePlane*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<OVRScenePlane> _walls
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRScenePlane*>*& GlobalNamespace::OVRSceneRoom::dyn__walls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::dyn__walls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_walls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRScenePlane*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Guid,System.Int32> _orderedRoomGuids
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Guid, int>*& GlobalNamespace::OVRSceneRoom::dyn__orderedRoomGuids() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::dyn__orderedRoomGuids");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_orderedRoomGuids"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Guid, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Comparison`1<OVRScenePlane> _wallOrderComparer
[[deprecated("Use field access instead!")]] ::System::Comparison_1<::GlobalNamespace::OVRScenePlane*>*& GlobalNamespace::OVRSceneRoom::dyn__wallOrderComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::dyn__wallOrderComparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wallOrderComparer"))->offset;
  return *reinterpret_cast<::System::Comparison_1<::GlobalNamespace::OVRScenePlane*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSceneAnchor _sceneAnchor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneAnchor*& GlobalNamespace::OVRSceneRoom::dyn__sceneAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::dyn__sceneAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneAnchor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneAnchor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSceneManager _sceneManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneManager*& GlobalNamespace::OVRSceneRoom::dyn__sceneManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::dyn__sceneManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.HashSet`1<System.Guid> _uuidToQuery
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::System::Guid>*& GlobalNamespace::OVRSceneRoom::dyn__uuidToQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::dyn__uuidToQuery");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uuidToQuery"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::System::Guid>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRAnchor> _roomAnchors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::OVRSceneRoom::dyn__roomAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::dyn__roomAnchors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomAnchors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _taskCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRSceneRoom::dyn__taskCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::dyn__taskCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_taskCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> _onFetchAnchorsCompleted
[[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& GlobalNamespace::OVRSceneRoom::dyn__onFetchAnchorsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::dyn__onFetchAnchorsCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onFetchAnchorsCompleted"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.Boolean,OVRAnchor> _onAnchorLocalizationCompleted
[[deprecated("Use field access instead!")]] ::System::Action_2<bool, ::GlobalNamespace::OVRAnchor>*& GlobalNamespace::OVRSceneRoom::dyn__onAnchorLocalizationCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::dyn__onAnchorLocalizationCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onAnchorLocalizationCompleted"))->offset;
  return *reinterpret_cast<::System::Action_2<bool, ::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneRoom.get_Floor
::GlobalNamespace::OVRScenePlane* GlobalNamespace::OVRSceneRoom::get_Floor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::get_Floor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Floor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRScenePlane*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneRoom.set_Floor
void GlobalNamespace::OVRSceneRoom::set_Floor(::GlobalNamespace::OVRScenePlane* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::set_Floor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Floor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSceneRoom.get_Ceiling
::GlobalNamespace::OVRScenePlane* GlobalNamespace::OVRSceneRoom::get_Ceiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::get_Ceiling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Ceiling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRScenePlane*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneRoom.set_Ceiling
void GlobalNamespace::OVRSceneRoom::set_Ceiling(::GlobalNamespace::OVRScenePlane* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::set_Ceiling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Ceiling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSceneRoom.get_Walls
::ArrayW<::GlobalNamespace::OVRScenePlane*> GlobalNamespace::OVRSceneRoom::get_Walls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::get_Walls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Walls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::OVRScenePlane*>, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneRoom.set_Walls
void GlobalNamespace::OVRSceneRoom::set_Walls(::ArrayW<::GlobalNamespace::OVRScenePlane*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::set_Walls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Walls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSceneRoom.Awake
void GlobalNamespace::OVRSceneRoom::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneRoom.IOVRSceneComponent.Initialize
void GlobalNamespace::OVRSceneRoom::IOVRSceneComponent_Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::IOVRSceneComponent.Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneRoom*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneRoom.LoadRoom
void GlobalNamespace::OVRSceneRoom::LoadRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::LoadRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneRoom.OnFetchAnchorsCompleted
void GlobalNamespace::OVRSceneRoom::OnFetchAnchorsCompleted(bool success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::OnFetchAnchorsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFetchAnchorsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success);
}
// Autogenerated method: OVRSceneRoom.OnLocalizationCompleted
void GlobalNamespace::OVRSceneRoom::OnLocalizationCompleted(bool success, ::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::OnLocalizationCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLocalizationCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(anchor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success, anchor);
}
// Autogenerated method: OVRSceneRoom.UpdateRoomInformation
void GlobalNamespace::OVRSceneRoom::UpdateRoomInformation(::GlobalNamespace::OVRScenePlane* plane) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::UpdateRoomInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRoomInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plane)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, plane);
}
// Autogenerated method: OVRSceneRoom.GetUuidsToQuery
void GlobalNamespace::OVRSceneRoom::GetUuidsToQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::GetUuidsToQuery");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUuidsToQuery", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneRoom.OnDestroy
void GlobalNamespace::OVRSceneRoom::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneRoom..cctor
void GlobalNamespace::OVRSceneRoom::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSceneRoom", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSceneRoom.<Awake>b__24_0
int GlobalNamespace::OVRSceneRoom::$Awake$b__24_0(::GlobalNamespace::OVRScenePlane* planeA, ::GlobalNamespace::OVRScenePlane* planeB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::<Awake>b__24_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__24_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(planeA), ::il2cpp_utils::ExtractType(planeB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, planeA, planeB);
}
// Autogenerated method: OVRSceneRoom.<Awake>g__TryGetUuid|24_1
bool GlobalNamespace::OVRSceneRoom::$Awake$g__TryGetUuid_24_1(::GlobalNamespace::OVRScenePlane* plane, ByRef<int> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneRoom::<Awake>g__TryGetUuid|24_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>g__TryGetUuid|24_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plane), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, plane, byref(index));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneVolume
#include "GlobalNamespace/OVRSceneVolume.hpp"
// Including type: OVRSceneAnchor
#include "GlobalNamespace/OVRSceneAnchor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <Width>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRSceneVolume::dyn_$Width$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::dyn_$Width$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Width>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <Height>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRSceneVolume::dyn_$Height$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::dyn_$Height$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Height>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <Depth>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRSceneVolume::dyn_$Depth$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::dyn_$Depth$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Depth>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <Offset>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVRSceneVolume::dyn_$Offset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::dyn_$Offset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Offset>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _scaleChildren
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRSceneVolume::dyn__scaleChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::dyn__scaleChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scaleChildren"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _offsetChildren
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRSceneVolume::dyn__offsetChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::dyn__offsetChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offsetChildren"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSceneAnchor _sceneAnchor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneAnchor*& GlobalNamespace::OVRSceneVolume::dyn__sceneAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::dyn__sceneAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneAnchor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneAnchor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneVolume.get_Width
float GlobalNamespace::OVRSceneVolume::get_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::get_Width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolume.set_Width
void GlobalNamespace::OVRSceneVolume::set_Width(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::set_Width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSceneVolume.get_Height
float GlobalNamespace::OVRSceneVolume::get_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::get_Height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolume.set_Height
void GlobalNamespace::OVRSceneVolume::set_Height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::set_Height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSceneVolume.get_Depth
float GlobalNamespace::OVRSceneVolume::get_Depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::get_Depth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolume.set_Depth
void GlobalNamespace::OVRSceneVolume::set_Depth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::set_Depth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSceneVolume.get_Dimensions
::UnityEngine::Vector3 GlobalNamespace::OVRSceneVolume::get_Dimensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::get_Dimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Dimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolume.get_Offset
::UnityEngine::Vector3 GlobalNamespace::OVRSceneVolume::get_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::get_Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolume.set_Offset
void GlobalNamespace::OVRSceneVolume::set_Offset(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::set_Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSceneVolume.get_ScaleChildren
bool GlobalNamespace::OVRSceneVolume::get_ScaleChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::get_ScaleChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ScaleChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolume.set_ScaleChildren
void GlobalNamespace::OVRSceneVolume::set_ScaleChildren(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::set_ScaleChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ScaleChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSceneVolume.get_OffsetChildren
bool GlobalNamespace::OVRSceneVolume::get_OffsetChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::get_OffsetChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OffsetChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolume.set_OffsetChildren
void GlobalNamespace::OVRSceneVolume::set_OffsetChildren(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::set_OffsetChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OffsetChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSceneVolume.Awake
void GlobalNamespace::OVRSceneVolume::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolume.IOVRSceneComponent.Initialize
void GlobalNamespace::OVRSceneVolume::IOVRSceneComponent_Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::IOVRSceneComponent.Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneVolume*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolume.SetChildScale
void GlobalNamespace::OVRSceneVolume::SetChildScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::SetChildScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolume.SetChildOffset
void GlobalNamespace::OVRSceneVolume::SetChildOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::SetChildOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolume.UpdateTransform
void GlobalNamespace::OVRSceneVolume::UpdateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolume::UpdateTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneVolumeMeshFilter
#include "GlobalNamespace/OVRSceneVolumeMeshFilter.hpp"
// Including type: OVRSceneVolumeMeshFilter/GetTriangleMeshCountsJob
#include "GlobalNamespace/OVRSceneVolumeMeshFilter_GetTriangleMeshCountsJob.hpp"
// Including type: OVRSceneVolumeMeshFilter/GetTriangleMeshJob
#include "GlobalNamespace/OVRSceneVolumeMeshFilter_GetTriangleMeshJob.hpp"
// Including type: OVRSceneVolumeMeshFilter/PopulateMeshDataJob
#include "GlobalNamespace/OVRSceneVolumeMeshFilter_PopulateMeshDataJob.hpp"
// Including type: OVRSceneVolumeMeshFilter/BakeMeshJob
#include "GlobalNamespace/OVRSceneVolumeMeshFilter_BakeMeshJob.hpp"
// Including type: OVRSceneVolumeMeshFilter/<CreateVolumeMesh>d__7
#include "GlobalNamespace/OVRSceneVolumeMeshFilter_-CreateVolumeMesh-d__7.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Unity.Jobs.JobHandle
#include "Unity/Jobs/JobHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsCompleted>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRSceneVolumeMeshFilter::dyn_$IsCompleted$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::dyn_$IsCompleted$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsCompleted>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::OVRSceneVolumeMeshFilter::dyn__mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::dyn__mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _meshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::OVRSceneVolumeMeshFilter::dyn__meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::dyn__meshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneVolumeMeshFilter.get_IsCompleted
bool GlobalNamespace::OVRSceneVolumeMeshFilter::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::get_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolumeMeshFilter.set_IsCompleted
void GlobalNamespace::OVRSceneVolumeMeshFilter::set_IsCompleted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::set_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSceneVolumeMeshFilter.Start
void GlobalNamespace::OVRSceneVolumeMeshFilter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolumeMeshFilter.CreateVolumeMesh
::System::Collections::IEnumerator* GlobalNamespace::OVRSceneVolumeMeshFilter::CreateVolumeMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::CreateVolumeMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateVolumeMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolumeMeshFilter.IsJobDone
bool GlobalNamespace::OVRSceneVolumeMeshFilter::IsJobDone(::Unity::Jobs::JobHandle job) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::IsJobDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSceneVolumeMeshFilter", "IsJobDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(job)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, job);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneVolumeMeshFilter/GetTriangleMeshCountsJob
#include "GlobalNamespace/OVRSceneVolumeMeshFilter_GetTriangleMeshCountsJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRSpace Space
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSpace& GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshCountsJob::dyn_Space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshCountsJob::dyn_Space");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Space"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Int32> Results
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshCountsJob::dyn_Results() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshCountsJob::dyn_Results");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Results"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneVolumeMeshFilter/GetTriangleMeshCountsJob.Execute
void GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshCountsJob::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshCountsJob::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshCountsJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneVolumeMeshFilter/GetTriangleMeshJob
#include "GlobalNamespace/OVRSceneVolumeMeshFilter_GetTriangleMeshJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRSpace Space
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSpace& GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshJob::dyn_Space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshJob::dyn_Space");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Space"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Vector3> Vertices
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>& GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshJob::dyn_Vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshJob::dyn_Vertices");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Vertices"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Int32> Triangles
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshJob::dyn_Triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshJob::dyn_Triangles");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Triangles"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneVolumeMeshFilter/GetTriangleMeshJob.Execute
void GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshJob::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshJob::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSceneVolumeMeshFilter::GetTriangleMeshJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneVolumeMeshFilter/PopulateMeshDataJob
#include "GlobalNamespace/OVRSceneVolumeMeshFilter_PopulateMeshDataJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Vector3> Vertices
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>& GlobalNamespace::OVRSceneVolumeMeshFilter::PopulateMeshDataJob::dyn_Vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::PopulateMeshDataJob::dyn_Vertices");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Vertices"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Int32> Triangles
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& GlobalNamespace::OVRSceneVolumeMeshFilter::PopulateMeshDataJob::dyn_Triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::PopulateMeshDataJob::dyn_Triangles");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Triangles"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Mesh/MeshData MeshData
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh::MeshData& GlobalNamespace::OVRSceneVolumeMeshFilter::PopulateMeshDataJob::dyn_MeshData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::PopulateMeshDataJob::dyn_MeshData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MeshData"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh::MeshData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneVolumeMeshFilter/PopulateMeshDataJob.Execute
void GlobalNamespace::OVRSceneVolumeMeshFilter::PopulateMeshDataJob::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::PopulateMeshDataJob::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSceneVolumeMeshFilter::PopulateMeshDataJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSceneVolumeMeshFilter/BakeMeshJob
#include "GlobalNamespace/OVRSceneVolumeMeshFilter_BakeMeshJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 MeshID
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRSceneVolumeMeshFilter::BakeMeshJob::dyn_MeshID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::BakeMeshJob::dyn_MeshID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MeshID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Convex
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRSceneVolumeMeshFilter::BakeMeshJob::dyn_Convex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::BakeMeshJob::dyn_Convex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Convex"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneVolumeMeshFilter/BakeMeshJob.Execute
void GlobalNamespace::OVRSceneVolumeMeshFilter::BakeMeshJob::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::BakeMeshJob::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSceneVolumeMeshFilter::BakeMeshJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSceneVolumeMeshFilter/<CreateVolumeMesh>d__7
#include "GlobalNamespace/OVRSceneVolumeMeshFilter_-CreateVolumeMesh-d__7.hpp"
// Including type: OVRSceneAnchor
#include "GlobalNamespace/OVRSceneAnchor.hpp"
// Including type: UnityEngine.MeshCollider
#include "UnityEngine/MeshCollider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSceneVolumeMeshFilter <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneVolumeMeshFilter*& GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneVolumeMeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSceneAnchor <sceneAnchor>5__2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneAnchor*& GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::dyn_$sceneAnchor$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::dyn_$sceneAnchor$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sceneAnchor>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneAnchor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh/MeshDataArray <meshDataArray>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh::MeshDataArray& GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::dyn_$meshDataArray$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::dyn_$meshDataArray$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<meshDataArray>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh::MeshDataArray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.Jobs.JobHandle <disposeVerticesJob>5__4
[[deprecated("Use field access instead!")]] ::Unity::Jobs::JobHandle& GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::dyn_$disposeVerticesJob$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::dyn_$disposeVerticesJob$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<disposeVerticesJob>5__4"))->offset;
  return *reinterpret_cast<::Unity::Jobs::JobHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshCollider <collider>5__5
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshCollider*& GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::dyn_$collider$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::dyn_$collider$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<collider>5__5"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.Collections.NativeArray`1<System.Int32> <meshCountResults>5__6
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::dyn_$meshCountResults$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::dyn_$meshCountResults$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<meshCountResults>5__6"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Unity.Jobs.JobHandle <job>5__7
[[deprecated("Use field access instead!")]] ::Unity::Jobs::JobHandle& GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::dyn_$job$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::dyn_$job$5__7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<job>5__7"))->offset;
  return *reinterpret_cast<::Unity::Jobs::JobHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSceneVolumeMeshFilter/<CreateVolumeMesh>d__7.System.IDisposable.Dispose
void GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolumeMeshFilter/<CreateVolumeMesh>d__7.MoveNext
bool GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolumeMeshFilter/<CreateVolumeMesh>d__7.<>m__Finally1
void GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolumeMeshFilter/<CreateVolumeMesh>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolumeMeshFilter/<CreateVolumeMesh>d__7.System.Collections.IEnumerator.Reset
void GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneVolumeMeshFilter/<CreateVolumeMesh>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneVolumeMeshFilter::$CreateVolumeMesh$d__7*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSemanticClassification
#include "GlobalNamespace/OVRSemanticClassification.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Char LabelSeparator
::Il2CppChar GlobalNamespace::OVRSemanticClassification::_get_LabelSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticClassification::_get_LabelSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("", "OVRSemanticClassification", "LabelSeparator"));
}
// Autogenerated static field setter
// Set static field: static public System.Char LabelSeparator
void GlobalNamespace::OVRSemanticClassification::_set_LabelSeparator(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticClassification::_set_LabelSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSemanticClassification", "LabelSeparator", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.String> _labels
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::OVRSemanticClassification::dyn__labels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticClassification::dyn__labels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_labels"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSemanticClassification.get_Labels
::System::Collections::Generic::IReadOnlyList_1<::StringW>* GlobalNamespace::OVRSemanticClassification::get_Labels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticClassification::get_Labels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Labels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSemanticClassification.Contains
bool GlobalNamespace::OVRSemanticClassification::Contains(::StringW label) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticClassification::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, label);
}
// Autogenerated method: OVRSemanticClassification.Awake
void GlobalNamespace::OVRSemanticClassification::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticClassification::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSemanticClassification.IOVRSceneComponent.Initialize
void GlobalNamespace::OVRSemanticClassification::IOVRSceneComponent_Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticClassification::IOVRSceneComponent.Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSemanticClassification*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSemanticClassification.ValidateAndUpgradeLabels
::StringW GlobalNamespace::OVRSemanticClassification::ValidateAndUpgradeLabels(::StringW labels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticClassification::ValidateAndUpgradeLabels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSemanticClassification", "ValidateAndUpgradeLabels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(labels)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, labels);
}
