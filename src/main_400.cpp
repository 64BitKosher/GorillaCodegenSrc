// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<AimStateCoroutine>d__64
#include "GlobalNamespace/LocomotionTeleport_-AimStateCoroutine-d__64.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.MoveNext
bool GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<CancelAimStateCoroutine>d__68
#include "GlobalNamespace/LocomotionTeleport_-CancelAimStateCoroutine-d__68.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.MoveNext
bool GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76
#include "GlobalNamespace/LocomotionTeleport_-CancelTeleportStateCoroutine-d__76.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.MoveNext
bool GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<PostTeleportStateCoroutine>d__84
#include "GlobalNamespace/LocomotionTeleport_-PostTeleportStateCoroutine-d__84.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.MoveNext
bool GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<PreTeleportStateCoroutine>d__72
#include "GlobalNamespace/LocomotionTeleport_-PreTeleportStateCoroutine-d__72.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.MoveNext
bool GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<ReadyStateCoroutine>d__52
#include "GlobalNamespace/LocomotionTeleport_-ReadyStateCoroutine-d__52.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.MoveNext
bool GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<TeleportingStateCoroutine>d__80
#include "GlobalNamespace/LocomotionTeleport_-TeleportingStateCoroutine-d__80.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.MoveNext
bool GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SimpleCapsuleWithStickMovement
#include "GlobalNamespace/SimpleCapsuleWithStickMovement.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableLinearMovement
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_EnableLinearMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_EnableLinearMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableLinearMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRotation
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_EnableRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_EnableRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HMDRotatesPlayer
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_HMDRotatesPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_HMDRotatesPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HMDRotatesPlayer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RotationEitherThumbstick
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_RotationEitherThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_RotationEitherThumbstick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationEitherThumbstick"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RotationAngle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_RotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_RotationAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Speed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_Speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_Speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig CameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_CameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ReadyToSnapTurn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_ReadyToSnapTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_ReadyToSnapTurn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReadyToSnapTurn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action CameraUpdated
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_CameraUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_CameraUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraUpdated"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action PreCharacterMove
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_PreCharacterMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_PreCharacterMove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreCharacterMove"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.add_CameraUpdated
void GlobalNamespace::SimpleCapsuleWithStickMovement::add_CameraUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::add_CameraUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_CameraUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.remove_CameraUpdated
void GlobalNamespace::SimpleCapsuleWithStickMovement::remove_CameraUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::remove_CameraUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_CameraUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.add_PreCharacterMove
void GlobalNamespace::SimpleCapsuleWithStickMovement::add_PreCharacterMove(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::add_PreCharacterMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PreCharacterMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.remove_PreCharacterMove
void GlobalNamespace::SimpleCapsuleWithStickMovement::remove_PreCharacterMove(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::remove_PreCharacterMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PreCharacterMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.Awake
void GlobalNamespace::SimpleCapsuleWithStickMovement::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.Start
void GlobalNamespace::SimpleCapsuleWithStickMovement::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.FixedUpdate
void GlobalNamespace::SimpleCapsuleWithStickMovement::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.RotatePlayerToHMD
void GlobalNamespace::SimpleCapsuleWithStickMovement::RotatePlayerToHMD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::RotatePlayerToHMD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotatePlayerToHMD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.StickMovement
void GlobalNamespace::SimpleCapsuleWithStickMovement::StickMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::StickMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StickMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.SnapTurn
void GlobalNamespace::SimpleCapsuleWithStickMovement::SnapTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::SnapTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SnapTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportAimHandler
#include "GlobalNamespace/TeleportAimHandler.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportAimHandler.GetPoints
void GlobalNamespace::TeleportAimHandler::GetPoints(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandler::GetPoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportAimHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points);
}
// Autogenerated method: TeleportAimHandler.OnEnable
void GlobalNamespace::TeleportAimHandler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandler::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimHandler.OnDisable
void GlobalNamespace::TeleportAimHandler::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandler::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportAimHandlerLaser
#include "GlobalNamespace/TeleportAimHandlerLaser.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Range
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportAimHandlerLaser::dyn_Range() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerLaser::dyn_Range");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Range"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportAimHandlerLaser.GetPoints
void GlobalNamespace::TeleportAimHandlerLaser::GetPoints(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerLaser::GetPoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportAimHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportAimHandlerParabolic
#include "GlobalNamespace/TeleportAimHandlerParabolic.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Range
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_Range() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_Range");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Range"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MinimumElevation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_MinimumElevation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_MinimumElevation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinimumElevation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Gravity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_Gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_Gravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Gravity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimVelocity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_AimVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_AimVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimStep
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_AimStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_AimStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportAimHandlerParabolic.GetPoints
void GlobalNamespace::TeleportAimHandlerParabolic::GetPoints(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::GetPoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportAimHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportAimVisualLaser
#include "GlobalNamespace/TeleportAimVisualLaser.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: LocomotionTeleport/AimData
#include "GlobalNamespace/LocomotionTeleport_AimData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LineRenderer LaserPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::TeleportAimVisualLaser::dyn_LaserPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn_LaserPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LaserPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _enterAimStateAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TeleportAimVisualLaser::dyn__enterAimStateAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__enterAimStateAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enterAimStateAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _exitAimStateAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TeleportAimVisualLaser::dyn__exitAimStateAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__exitAimStateAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exitAimStateAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`1<LocomotionTeleport/AimData> _updateAimDataAction
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>*& GlobalNamespace::TeleportAimVisualLaser::dyn__updateAimDataAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__updateAimDataAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateAimDataAction"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer _lineRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::TeleportAimVisualLaser::dyn__lineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__lineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _linePoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::TeleportAimVisualLaser::dyn__linePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__linePoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_linePoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportAimVisualLaser.EnterAimState
void GlobalNamespace::TeleportAimVisualLaser::EnterAimState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::EnterAimState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterAimState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimVisualLaser.ExitAimState
void GlobalNamespace::TeleportAimVisualLaser::ExitAimState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::ExitAimState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitAimState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimVisualLaser.Awake
void GlobalNamespace::TeleportAimVisualLaser::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimVisualLaser.UpdateAimData
void GlobalNamespace::TeleportAimVisualLaser::UpdateAimData(::GlobalNamespace::LocomotionTeleport::AimData* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::UpdateAimData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: TeleportAimVisualLaser.AddEventHandlers
void GlobalNamespace::TeleportAimVisualLaser::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimVisualLaser.RemoveEventHandlers
void GlobalNamespace::TeleportAimVisualLaser::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportDestination
#include "GlobalNamespace/TeleportDestination.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: LocomotionTeleport
#include "GlobalNamespace/LocomotionTeleport.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsValidDestination>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TeleportDestination::dyn_$IsValidDestination$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_$IsValidDestination$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsValidDestination>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform PositionIndicator
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TeleportDestination::dyn_PositionIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_PositionIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionIndicator"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform OrientationIndicator
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TeleportDestination::dyn_OrientationIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_OrientationIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OrientationIndicator"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion LandingRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::TeleportDestination::dyn_LandingRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_LandingRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LandingRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport LocomotionTeleport
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::TeleportDestination::dyn_LocomotionTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_LocomotionTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LocomotionTeleport"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport/States TeleportState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport::States& GlobalNamespace::TeleportDestination::dyn_TeleportState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_TeleportState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::States*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`4<System.Boolean,System.Nullable`1<UnityEngine.Vector3>,System.Nullable`1<UnityEngine.Quaternion>,System.Nullable`1<UnityEngine.Quaternion>> _updateTeleportDestinationAction
[[deprecated("Use field access instead!")]] ::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>*& GlobalNamespace::TeleportDestination::dyn__updateTeleportDestinationAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn__updateTeleportDestinationAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateTeleportDestinationAction"))->offset;
  return *reinterpret_cast<::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _eventsActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TeleportDestination::dyn__eventsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn__eventsActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventsActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<TeleportDestination> Deactivated
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::TeleportDestination*>*& GlobalNamespace::TeleportDestination::dyn_Deactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_Deactivated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Deactivated"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::TeleportDestination*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportDestination.get_IsValidDestination
bool GlobalNamespace::TeleportDestination::get_IsValidDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::get_IsValidDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValidDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.set_IsValidDestination
void GlobalNamespace::TeleportDestination::set_IsValidDestination(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::set_IsValidDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsValidDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportDestination.OnEnable
void GlobalNamespace::TeleportDestination::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.TryDisableEventHandlers
void GlobalNamespace::TeleportDestination::TryDisableEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::TryDisableEventHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDisableEventHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.OnDisable
void GlobalNamespace::TeleportDestination::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.add_Deactivated
void GlobalNamespace::TeleportDestination::add_Deactivated(::System::Action_1<::GlobalNamespace::TeleportDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::add_Deactivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Deactivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportDestination.remove_Deactivated
void GlobalNamespace::TeleportDestination::remove_Deactivated(::System::Action_1<::GlobalNamespace::TeleportDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::remove_Deactivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Deactivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportDestination.OnDeactivated
void GlobalNamespace::TeleportDestination::OnDeactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::OnDeactivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeactivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.Recycle
void GlobalNamespace::TeleportDestination::Recycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::Recycle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Recycle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.UpdateTeleportDestination
void GlobalNamespace::TeleportDestination::UpdateTeleportDestination(bool isValidDestination, ::System::Nullable_1<::UnityEngine::Vector3> position, ::System::Nullable_1<::UnityEngine::Quaternion> rotation, ::System::Nullable_1<::UnityEngine::Quaternion> landingRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportDestination*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isValidDestination, position, rotation, landingRotation);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportInputHandler
#include "GlobalNamespace/TeleportInputHandler.hpp"
// Including type: TeleportInputHandler/<TeleportAimCoroutine>d__6
#include "GlobalNamespace/TeleportInputHandler_-TeleportAimCoroutine-d__6.hpp"
// Including type: TeleportInputHandler/<TeleportReadyCoroutine>d__5
#include "GlobalNamespace/TeleportInputHandler_-TeleportReadyCoroutine-d__5.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: LocomotionTeleport/TeleportIntentions
#include "GlobalNamespace/LocomotionTeleport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _startReadyAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TeleportInputHandler::dyn__startReadyAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::dyn__startReadyAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startReadyAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _startAimAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TeleportInputHandler::dyn__startAimAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::dyn__startAimAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startAimAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandler.TeleportReadyCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportInputHandler::TeleportReadyCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::TeleportReadyCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TeleportReadyCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.TeleportAimCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportInputHandler::TeleportAimCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::TeleportAimCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TeleportAimCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.GetIntention
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::TeleportInputHandler::GetIntention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::GetIntention");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport::TeleportIntentions, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.GetAimData
void GlobalNamespace::TeleportInputHandler::GetAimData(ByRef<::UnityEngine::Ray> aimRay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::GetAimData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(aimRay));
}
// Autogenerated method: TeleportInputHandler.<.ctor>b__2_0
void GlobalNamespace::TeleportInputHandler::$_ctor$b__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::<.ctor>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.<.ctor>b__2_1
void GlobalNamespace::TeleportInputHandler::$_ctor$b__2_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::<.ctor>b__2_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.AddEventHandlers
void GlobalNamespace::TeleportInputHandler::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.RemoveEventHandlers
void GlobalNamespace::TeleportInputHandler::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportInputHandler/<TeleportAimCoroutine>d__6
#include "GlobalNamespace/TeleportInputHandler_-TeleportAimCoroutine-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportInputHandler*& GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.System.IDisposable.Dispose
void GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.MoveNext
bool GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportInputHandler/<TeleportReadyCoroutine>d__5
#include "GlobalNamespace/TeleportInputHandler_-TeleportReadyCoroutine-d__5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportInputHandler*& GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.System.IDisposable.Dispose
void GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.MoveNext
bool GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportInputHandlerHMD
#include "GlobalNamespace/TeleportInputHandlerHMD.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <Pointer>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TeleportInputHandlerHMD::dyn_$Pointer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::dyn_$Pointer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Pointer>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton AimButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::TeleportInputHandlerHMD::dyn_AimButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::dyn_AimButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton TeleportButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::TeleportInputHandlerHMD::dyn_TeleportButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::dyn_TeleportButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean FastTeleport
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TeleportInputHandlerHMD::dyn_FastTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::dyn_FastTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FastTeleport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandlerHMD.get_Pointer
::UnityEngine::Transform* GlobalNamespace::TeleportInputHandlerHMD::get_Pointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::get_Pointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandlerHMD.set_Pointer
void GlobalNamespace::TeleportInputHandlerHMD::set_Pointer(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::set_Pointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportInputHandlerHMD.GetIntention
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::TeleportInputHandlerHMD::GetIntention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::GetIntention");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport::TeleportIntentions, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandlerHMD.GetAimData
void GlobalNamespace::TeleportInputHandlerHMD::GetAimData(ByRef<::UnityEngine::Ray> aimRay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::GetAimData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(aimRay));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportInputHandlerTouch
#include "GlobalNamespace/TeleportInputHandlerTouch.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform LeftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TeleportInputHandlerTouch::dyn_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_LeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform RightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TeleportInputHandlerTouch::dyn_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_RightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandlerTouch/InputModes InputMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportInputHandlerTouch::InputModes& GlobalNamespace::TeleportInputHandlerTouch::dyn_InputMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_InputMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InputMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandlerTouch::InputModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRInput/RawButton[] _rawButtons
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRInput::RawButton>& GlobalNamespace::TeleportInputHandlerTouch::dyn__rawButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn__rawButtons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rawButtons"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRInput::RawButton>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRInput/RawTouch[] _rawTouch
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRInput::RawTouch>& GlobalNamespace::TeleportInputHandlerTouch::dyn__rawTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn__rawTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rawTouch"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRInput::RawTouch>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/Controller AimingController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::TeleportInputHandlerTouch::dyn_AimingController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_AimingController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimingController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller InitiatingController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::TeleportInputHandlerTouch::dyn_InitiatingController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_InitiatingController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InitiatingController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandlerTouch/AimCapTouchButtons CapacitiveAimAndTeleportButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons& GlobalNamespace::TeleportInputHandlerTouch::dyn_CapacitiveAimAndTeleportButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_CapacitiveAimAndTeleportButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CapacitiveAimAndTeleportButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ThumbstickTeleportThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportInputHandlerTouch::dyn_ThumbstickTeleportThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_ThumbstickTeleportThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ThumbstickTeleportThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandlerTouch.Start
void GlobalNamespace::TeleportInputHandlerTouch::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandlerTouch.GetIntention
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::TeleportInputHandlerTouch::GetIntention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::GetIntention");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandlerHMD*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport::TeleportIntentions, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandlerTouch.GetAimData
void GlobalNamespace::TeleportInputHandlerTouch::GetAimData(ByRef<::UnityEngine::Ray> aimRay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::GetAimData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandlerHMD*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(aimRay));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportInputHandlerTouch/InputModes
#include "GlobalNamespace/TeleportInputHandlerTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/InputModes CapacitiveButtonForAimAndTeleport
::GlobalNamespace::TeleportInputHandlerTouch::InputModes GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_CapacitiveButtonForAimAndTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_CapacitiveButtonForAimAndTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::InputModes>("", "TeleportInputHandlerTouch/InputModes", "CapacitiveButtonForAimAndTeleport"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/InputModes CapacitiveButtonForAimAndTeleport
void GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_CapacitiveButtonForAimAndTeleport(::GlobalNamespace::TeleportInputHandlerTouch::InputModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_CapacitiveButtonForAimAndTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/InputModes", "CapacitiveButtonForAimAndTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/InputModes SeparateButtonsForAimAndTeleport
::GlobalNamespace::TeleportInputHandlerTouch::InputModes GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_SeparateButtonsForAimAndTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_SeparateButtonsForAimAndTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::InputModes>("", "TeleportInputHandlerTouch/InputModes", "SeparateButtonsForAimAndTeleport"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/InputModes SeparateButtonsForAimAndTeleport
void GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_SeparateButtonsForAimAndTeleport(::GlobalNamespace::TeleportInputHandlerTouch::InputModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_SeparateButtonsForAimAndTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/InputModes", "SeparateButtonsForAimAndTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/InputModes ThumbstickTeleport
::GlobalNamespace::TeleportInputHandlerTouch::InputModes GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_ThumbstickTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_ThumbstickTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::InputModes>("", "TeleportInputHandlerTouch/InputModes", "ThumbstickTeleport"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/InputModes ThumbstickTeleport
void GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_ThumbstickTeleport(::GlobalNamespace::TeleportInputHandlerTouch::InputModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_ThumbstickTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/InputModes", "ThumbstickTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/InputModes ThumbstickTeleportForwardBackOnly
::GlobalNamespace::TeleportInputHandlerTouch::InputModes GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_ThumbstickTeleportForwardBackOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_ThumbstickTeleportForwardBackOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::InputModes>("", "TeleportInputHandlerTouch/InputModes", "ThumbstickTeleportForwardBackOnly"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/InputModes ThumbstickTeleportForwardBackOnly
void GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_ThumbstickTeleportForwardBackOnly(::GlobalNamespace::TeleportInputHandlerTouch::InputModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_ThumbstickTeleportForwardBackOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/InputModes", "ThumbstickTeleportForwardBackOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportInputHandlerTouch::InputModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportInputHandlerTouch/AimCapTouchButtons
#include "GlobalNamespace/TeleportInputHandlerTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons A
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "A"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons A
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_A(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "A", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons B
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "B"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons B
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_B(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "B", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons LeftTrigger
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_LeftTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_LeftTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "LeftTrigger"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons LeftTrigger
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_LeftTrigger(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_LeftTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "LeftTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons LeftThumbstick
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_LeftThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_LeftThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "LeftThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons LeftThumbstick
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_LeftThumbstick(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_LeftThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "LeftThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons RightTrigger
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_RightTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_RightTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "RightTrigger"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons RightTrigger
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_RightTrigger(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_RightTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "RightTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons RightThumbstick
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_RightThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_RightThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "RightThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons RightThumbstick
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_RightThumbstick(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_RightThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "RightThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons X
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "X"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons X
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_X(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "X", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons Y
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "Y"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons Y
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_Y(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "Y", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandler
#include "GlobalNamespace/TeleportOrientationHandler.hpp"
// Including type: TeleportOrientationHandler/OrientationModes
#include "GlobalNamespace/TeleportOrientationHandler_OrientationModes.hpp"
// Including type: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7
#include "GlobalNamespace/TeleportOrientationHandler_-UpdateOrientationCoroutine-d__7.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: LocomotionTeleport/AimData
#include "GlobalNamespace/LocomotionTeleport_AimData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _updateOrientationAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TeleportOrientationHandler::dyn__updateOrientationAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::dyn__updateOrientationAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateOrientationAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`1<LocomotionTeleport/AimData> _updateAimDataAction
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>*& GlobalNamespace::TeleportOrientationHandler::dyn__updateAimDataAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::dyn__updateAimDataAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateAimDataAction"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected LocomotionTeleport/AimData AimData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport::AimData*& GlobalNamespace::TeleportOrientationHandler::dyn_AimData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::dyn_AimData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::AimData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportOrientationHandler.UpdateAimData
void GlobalNamespace::TeleportOrientationHandler::UpdateAimData(::GlobalNamespace::LocomotionTeleport::AimData* aimData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::UpdateAimData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aimData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aimData);
}
// Autogenerated method: TeleportOrientationHandler.UpdateOrientationCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportOrientationHandler::UpdateOrientationCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::UpdateOrientationCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateOrientationCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.InitializeTeleportDestination
void GlobalNamespace::TeleportOrientationHandler::InitializeTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::InitializeTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.UpdateTeleportDestination
void GlobalNamespace::TeleportOrientationHandler::UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.GetLandingOrientation
::UnityEngine::Quaternion GlobalNamespace::TeleportOrientationHandler::GetLandingOrientation(::GlobalNamespace::TeleportOrientationHandler::OrientationModes mode, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::GetLandingOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLandingOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, mode, rotation);
}
// Autogenerated method: TeleportOrientationHandler.<.ctor>b__3_0
void GlobalNamespace::TeleportOrientationHandler::$_ctor$b__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::<.ctor>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.AddEventHandlers
void GlobalNamespace::TeleportOrientationHandler::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.RemoveEventHandlers
void GlobalNamespace::TeleportOrientationHandler::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandler/OrientationModes
#include "GlobalNamespace/TeleportOrientationHandler_OrientationModes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TeleportOrientationHandler/OrientationModes HeadRelative
::GlobalNamespace::TeleportOrientationHandler::OrientationModes GlobalNamespace::TeleportOrientationHandler::OrientationModes::_get_HeadRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::_get_HeadRelative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportOrientationHandler::OrientationModes>("", "TeleportOrientationHandler/OrientationModes", "HeadRelative"));
}
// Autogenerated static field setter
// Set static field: static public TeleportOrientationHandler/OrientationModes HeadRelative
void GlobalNamespace::TeleportOrientationHandler::OrientationModes::_set_HeadRelative(::GlobalNamespace::TeleportOrientationHandler::OrientationModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::_set_HeadRelative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportOrientationHandler/OrientationModes", "HeadRelative", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportOrientationHandler/OrientationModes ForwardFacing
::GlobalNamespace::TeleportOrientationHandler::OrientationModes GlobalNamespace::TeleportOrientationHandler::OrientationModes::_get_ForwardFacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::_get_ForwardFacing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportOrientationHandler::OrientationModes>("", "TeleportOrientationHandler/OrientationModes", "ForwardFacing"));
}
// Autogenerated static field setter
// Set static field: static public TeleportOrientationHandler/OrientationModes ForwardFacing
void GlobalNamespace::TeleportOrientationHandler::OrientationModes::_set_ForwardFacing(::GlobalNamespace::TeleportOrientationHandler::OrientationModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::_set_ForwardFacing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportOrientationHandler/OrientationModes", "ForwardFacing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportOrientationHandler::OrientationModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7
#include "GlobalNamespace/TeleportOrientationHandler_-UpdateOrientationCoroutine-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportOrientationHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportOrientationHandler*& GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportOrientationHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.System.IDisposable.Dispose
void GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.MoveNext
bool GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandler360
#include "GlobalNamespace/TeleportOrientationHandler360.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportOrientationHandler360.InitializeTeleportDestination
void GlobalNamespace::TeleportOrientationHandler360::InitializeTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler360::InitializeTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler360.UpdateTeleportDestination
void GlobalNamespace::TeleportOrientationHandler360::UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler360::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandlerHMD
#include "GlobalNamespace/TeleportOrientationHandlerHMD.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TeleportOrientationHandler/OrientationModes OrientationMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportOrientationHandler::OrientationModes& GlobalNamespace::TeleportOrientationHandlerHMD::dyn_OrientationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn_OrientationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OrientationMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportOrientationHandler::OrientationModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UpdateOrientationDuringAim
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TeleportOrientationHandlerHMD::dyn_UpdateOrientationDuringAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn_UpdateOrientationDuringAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateOrientationDuringAim"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimDistanceThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportOrientationHandlerHMD::dyn_AimDistanceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn_AimDistanceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimDistanceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimDistanceMaxRange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportOrientationHandlerHMD::dyn_AimDistanceMaxRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn_AimDistanceMaxRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimDistanceMaxRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _initialRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::TeleportOrientationHandlerHMD::dyn__initialRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn__initialRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportOrientationHandlerHMD.InitializeTeleportDestination
void GlobalNamespace::TeleportOrientationHandlerHMD::InitializeTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::InitializeTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandlerHMD.UpdateTeleportDestination
void GlobalNamespace::TeleportOrientationHandlerHMD::UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandlerThumbstick
#include "GlobalNamespace/TeleportOrientationHandlerThumbstick.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TeleportOrientationHandler/OrientationModes OrientationMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportOrientationHandler::OrientationModes& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_OrientationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_OrientationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OrientationMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportOrientationHandler::OrientationModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/Controller Thumbstick
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_Thumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_Thumbstick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Thumbstick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RotateStickThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_RotateStickThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_RotateStickThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotateStickThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _initialRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__initialRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__initialRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _currentRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__currentRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__currentRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _lastValidDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__lastValidDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__lastValidDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastValidDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportOrientationHandlerThumbstick.InitializeTeleportDestination
void GlobalNamespace::TeleportOrientationHandlerThumbstick::InitializeTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::InitializeTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandlerThumbstick.UpdateTeleportDestination
void GlobalNamespace::TeleportOrientationHandlerThumbstick::UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportPoint
#include "GlobalNamespace/TeleportPoint.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single dimmingSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportPoint::dyn_dimmingSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_dimmingSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dimmingSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fullIntensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportPoint::dyn_fullIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_fullIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lowIntensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportPoint::dyn_lowIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_lowIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lowIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform destTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TeleportPoint::dyn_destTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_destTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastLookAtTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportPoint::dyn_lastLookAtTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_lastLookAtTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLookAtTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportPoint.Start
void GlobalNamespace::TeleportPoint::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportPoint.GetDestTransform
::UnityEngine::Transform* GlobalNamespace::TeleportPoint::GetDestTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::GetDestTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDestTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportPoint.Update
void GlobalNamespace::TeleportPoint::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportPoint.OnLookAt
void GlobalNamespace::TeleportPoint::OnLookAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::OnLookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportSupport
#include "GlobalNamespace/TeleportSupport.hpp"
// Including type: LocomotionTeleport
#include "GlobalNamespace/LocomotionTeleport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LocomotionTeleport <LocomotionTeleport>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::TeleportSupport::dyn_$LocomotionTeleport$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::dyn_$LocomotionTeleport$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LocomotionTeleport>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _eventsActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TeleportSupport::dyn__eventsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::dyn__eventsActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventsActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportSupport.get_LocomotionTeleport
::GlobalNamespace::LocomotionTeleport* GlobalNamespace::TeleportSupport::get_LocomotionTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::get_LocomotionTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocomotionTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportSupport.set_LocomotionTeleport
void GlobalNamespace::TeleportSupport::set_LocomotionTeleport(::GlobalNamespace::LocomotionTeleport* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::set_LocomotionTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LocomotionTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportSupport.OnEnable
void GlobalNamespace::TeleportSupport::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportSupport.OnDisable
void GlobalNamespace::TeleportSupport::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportSupport.LogEventHandler
void GlobalNamespace::TeleportSupport::LogEventHandler(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::LogEventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: TeleportSupport.AddEventHandlers
void GlobalNamespace::TeleportSupport::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportSupport.RemoveEventHandlers
void GlobalNamespace::TeleportSupport::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportTargetHandler
#include "GlobalNamespace/TeleportTargetHandler.hpp"
// Including type: TeleportTargetHandler/<TargetAimCoroutine>d__7
#include "GlobalNamespace/TeleportTargetHandler_-TargetAimCoroutine-d__7.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: LocomotionTeleport/AimData
#include "GlobalNamespace/LocomotionTeleport_AimData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single ERROR_MARGIN
float GlobalNamespace::TeleportTargetHandler::_get_ERROR_MARGIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::_get_ERROR_MARGIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "TeleportTargetHandler", "ERROR_MARGIN"));
}
// Autogenerated static field setter
// Set static field: static private System.Single ERROR_MARGIN
void GlobalNamespace::TeleportTargetHandler::_set_ERROR_MARGIN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::_set_ERROR_MARGIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportTargetHandler", "ERROR_MARGIN", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask AimCollisionLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::TeleportTargetHandler::dyn_AimCollisionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::dyn_AimCollisionLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimCollisionLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly LocomotionTeleport/AimData AimData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport::AimData*& GlobalNamespace::TeleportTargetHandler::dyn_AimData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::dyn_AimData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::AimData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _startAimAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TeleportTargetHandler::dyn__startAimAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::dyn__startAimAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startAimAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Vector3> _aimPoints
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::TeleportTargetHandler::dyn__aimPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::dyn__aimPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_aimPoints"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTargetHandler.TargetAimCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportTargetHandler::TargetAimCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::TargetAimCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TargetAimCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler.ResetAimData
void GlobalNamespace::TeleportTargetHandler::ResetAimData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::ResetAimData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler.ConsiderTeleport
bool GlobalNamespace::TeleportTargetHandler::ConsiderTeleport(::UnityEngine::Vector3 start, ByRef<::UnityEngine::Vector3> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::ConsiderTeleport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(end));
}
// Autogenerated method: TeleportTargetHandler.ConsiderDestination
::System::Nullable_1<::UnityEngine::Vector3> GlobalNamespace::TeleportTargetHandler::ConsiderDestination(::UnityEngine::Vector3 location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::ConsiderDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::Vector3>, false>(this, ___internal__method, location);
}
// Autogenerated method: TeleportTargetHandler.<.ctor>b__3_0
void GlobalNamespace::TeleportTargetHandler::$_ctor$b__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::<.ctor>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler.AddEventHandlers
void GlobalNamespace::TeleportTargetHandler::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler.RemoveEventHandlers
void GlobalNamespace::TeleportTargetHandler::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportTargetHandler/<TargetAimCoroutine>d__7
#include "GlobalNamespace/TeleportTargetHandler_-TargetAimCoroutine-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportTargetHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportTargetHandler*& GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportTargetHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.System.IDisposable.Dispose
void GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.MoveNext
bool GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportTargetHandlerNavMesh
#include "GlobalNamespace/TeleportTargetHandlerNavMesh.hpp"
// Including type: UnityEngine.AI.NavMeshPath
#include "UnityEngine/AI/NavMeshPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 NavMeshAreaMask
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportTargetHandlerNavMesh::dyn_NavMeshAreaMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::dyn_NavMeshAreaMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NavMeshAreaMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AI.NavMeshPath _path
[[deprecated("Use field access instead!")]] ::UnityEngine::AI::NavMeshPath*& GlobalNamespace::TeleportTargetHandlerNavMesh::dyn__path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::dyn__path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_path"))->offset;
  return *reinterpret_cast<::UnityEngine::AI::NavMeshPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTargetHandlerNavMesh.Awake
void GlobalNamespace::TeleportTargetHandlerNavMesh::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandlerNavMesh.OnDrawGizmos
void GlobalNamespace::TeleportTargetHandlerNavMesh::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandlerNavMesh.ConsiderTeleport
bool GlobalNamespace::TeleportTargetHandlerNavMesh::ConsiderTeleport(::UnityEngine::Vector3 start, ByRef<::UnityEngine::Vector3> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::ConsiderTeleport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(end));
}
// Autogenerated method: TeleportTargetHandlerNavMesh.ConsiderDestination
::System::Nullable_1<::UnityEngine::Vector3> GlobalNamespace::TeleportTargetHandlerNavMesh::ConsiderDestination(::UnityEngine::Vector3 location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::ConsiderDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::Vector3>, false>(this, ___internal__method, location);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportTargetHandlerNode
#include "GlobalNamespace/TeleportTargetHandlerNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single LOSOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTargetHandlerNode::dyn_LOSOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNode::dyn_LOSOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LOSOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask TeleportLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::TeleportTargetHandlerNode::dyn_TeleportLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNode::dyn_TeleportLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTargetHandlerNode.ConsiderTeleport
bool GlobalNamespace::TeleportTargetHandlerNode::ConsiderTeleport(::UnityEngine::Vector3 start, ByRef<::UnityEngine::Vector3> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNode::ConsiderTeleport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(end));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportTargetHandlerPhysical
#include "GlobalNamespace/TeleportTargetHandlerPhysical.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportTargetHandlerPhysical.ConsiderTeleport
bool GlobalNamespace::TeleportTargetHandlerPhysical::ConsiderTeleport(::UnityEngine::Vector3 start, ByRef<::UnityEngine::Vector3> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerPhysical::ConsiderTeleport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(end));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportTransition
#include "GlobalNamespace/TeleportTransition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportTransition.LocomotionTeleportOnEnterStateTeleporting
void GlobalNamespace::TeleportTransition::LocomotionTeleportOnEnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransition::LocomotionTeleportOnEnterStateTeleporting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransition*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransition.AddEventHandlers
void GlobalNamespace::TeleportTransition::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransition::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransition.RemoveEventHandlers
void GlobalNamespace::TeleportTransition::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransition::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportTransitionBlink
#include "GlobalNamespace/TeleportTransitionBlink.hpp"
// Including type: TeleportTransitionBlink/<BlinkCoroutine>d__4
#include "GlobalNamespace/TeleportTransitionBlink_-BlinkCoroutine-d__4.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single TransitionDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTransitionBlink::dyn_TransitionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::dyn_TransitionDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TransitionDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TeleportDelay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTransitionBlink::dyn_TeleportDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::dyn_TeleportDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve FadeLevels
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::TeleportTransitionBlink::dyn_FadeLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::dyn_FadeLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FadeLevels"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTransitionBlink.BlinkCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportTransitionBlink::BlinkCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::BlinkCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlinkCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink.LocomotionTeleportOnEnterStateTeleporting
void GlobalNamespace::TeleportTransitionBlink::LocomotionTeleportOnEnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::LocomotionTeleportOnEnterStateTeleporting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransition*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportTransitionBlink/<BlinkCoroutine>d__4
#include "GlobalNamespace/TeleportTransitionBlink_-BlinkCoroutine-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportTransitionBlink <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportTransitionBlink*& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportTransitionBlink**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$elapsedTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$elapsedTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <teleportTime>5__3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$teleportTime$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$teleportTime$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<teleportTime>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <teleported>5__4
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$teleported$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$teleported$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<teleported>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.System.IDisposable.Dispose
void GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.MoveNext
bool GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportTransitionInstant
#include "GlobalNamespace/TeleportTransitionInstant.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportTransitionInstant.LocomotionTeleportOnEnterStateTeleporting
void GlobalNamespace::TeleportTransitionInstant::LocomotionTeleportOnEnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionInstant::LocomotionTeleportOnEnterStateTeleporting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransition*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TeleportTransitionWarp
#include "GlobalNamespace/TeleportTransitionWarp.hpp"
// Including type: TeleportTransitionWarp/<DoWarp>d__3
#include "GlobalNamespace/TeleportTransitionWarp_-DoWarp-d__3.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single TransitionDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTransitionWarp::dyn_TransitionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::dyn_TransitionDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TransitionDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve PositionLerp
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::TeleportTransitionWarp::dyn_PositionLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::dyn_PositionLerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionLerp"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTransitionWarp.DoWarp
::System::Collections::IEnumerator* GlobalNamespace::TeleportTransitionWarp::DoWarp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::DoWarp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoWarp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp.LocomotionTeleportOnEnterStateTeleporting
void GlobalNamespace::TeleportTransitionWarp::LocomotionTeleportOnEnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::LocomotionTeleportOnEnterStateTeleporting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransition*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportTransitionWarp/<DoWarp>d__3
#include "GlobalNamespace/TeleportTransitionWarp_-DoWarp-d__3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportTransitionWarp <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportTransitionWarp*& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportTransitionWarp**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <startPosition>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$startPosition$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$startPosition$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startPosition>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$elapsedTime$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$elapsedTime$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.System.IDisposable.Dispose
void GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.MoveNext
bool GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: NativeVideoPlayer
#include "GlobalNamespace/NativeVideoPlayer.hpp"
// Including type: NativeVideoPlayer/PlabackState
#include "GlobalNamespace/NativeVideoPlayer_PlabackState.hpp"
// Including type: NativeVideoPlayer/StereoMode
#include "GlobalNamespace/NativeVideoPlayer_StereoMode.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Nullable`1<System.IntPtr> _Activity
::System::Nullable_1<::System::IntPtr> GlobalNamespace::NativeVideoPlayer::_get__Activity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get__Activity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Nullable_1<::System::IntPtr>>("", "NativeVideoPlayer", "_Activity"));
}
// Autogenerated static field setter
// Set static field: static private System.Nullable`1<System.IntPtr> _Activity
void GlobalNamespace::NativeVideoPlayer::_set__Activity(::System::Nullable_1<::System::IntPtr> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set__Activity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "_Activity", value));
}
// Autogenerated static field getter
// Get static field: static private System.Nullable`1<System.IntPtr> _VideoPlayerClass
::System::Nullable_1<::System::IntPtr> GlobalNamespace::NativeVideoPlayer::_get__VideoPlayerClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get__VideoPlayerClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Nullable_1<::System::IntPtr>>("", "NativeVideoPlayer", "_VideoPlayerClass"));
}
// Autogenerated static field setter
// Set static field: static private System.Nullable`1<System.IntPtr> _VideoPlayerClass
void GlobalNamespace::NativeVideoPlayer::_set__VideoPlayerClass(::System::Nullable_1<::System::IntPtr> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set__VideoPlayerClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "_VideoPlayerClass", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.jvalue[] EmptyParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_EmptyParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_EmptyParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "EmptyParams"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.jvalue[] EmptyParams
void GlobalNamespace::NativeVideoPlayer::_set_EmptyParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_EmptyParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "EmptyParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getIsPlayingMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getIsPlayingMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getIsPlayingMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getIsPlayingMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getIsPlayingMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getIsPlayingMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getIsPlayingMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getIsPlayingMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getCurrentPlaybackStateMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getCurrentPlaybackStateMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getCurrentPlaybackStateMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getCurrentPlaybackStateMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getCurrentPlaybackStateMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getCurrentPlaybackStateMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getCurrentPlaybackStateMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getCurrentPlaybackStateMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getDurationMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getDurationMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getDurationMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getDurationMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getDurationMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getDurationMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getDurationMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getDurationMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getStereoModeMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getStereoModeMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getStereoModeMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getStereoModeMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getStereoModeMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getStereoModeMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getStereoModeMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getStereoModeMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getWidthMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getWidthMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getWidthMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getWidthMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getWidthMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getWidthMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getWidthMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getWidthMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getHeightMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getHeightMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getHeightMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getHeightMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getHeightMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getHeightMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getHeightMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getHeightMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getPlaybackPositionMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getPlaybackPositionMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getPlaybackPositionMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getPlaybackPositionMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getPlaybackPositionMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getPlaybackPositionMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getPlaybackPositionMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getPlaybackPositionMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr setPlaybackPositionMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_setPlaybackPositionMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setPlaybackPositionMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "setPlaybackPositionMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr setPlaybackPositionMethodId
void GlobalNamespace::NativeVideoPlayer::_set_setPlaybackPositionMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setPlaybackPositionMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setPlaybackPositionMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] setPlaybackPositionParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_setPlaybackPositionParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setPlaybackPositionParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "setPlaybackPositionParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] setPlaybackPositionParams
void GlobalNamespace::NativeVideoPlayer::_set_setPlaybackPositionParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setPlaybackPositionParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setPlaybackPositionParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr playVideoMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_playVideoMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_playVideoMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "playVideoMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr playVideoMethodId
void GlobalNamespace::NativeVideoPlayer::_set_playVideoMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_playVideoMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "playVideoMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] playVideoParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_playVideoParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_playVideoParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "playVideoParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] playVideoParams
void GlobalNamespace::NativeVideoPlayer::_set_playVideoParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_playVideoParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "playVideoParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr stopMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_stopMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_stopMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "stopMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr stopMethodId
void GlobalNamespace::NativeVideoPlayer::_set_stopMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_stopMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "stopMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr resumeMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_resumeMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_resumeMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "resumeMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr resumeMethodId
void GlobalNamespace::NativeVideoPlayer::_set_resumeMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_resumeMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "resumeMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr pauseMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_pauseMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_pauseMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "pauseMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr pauseMethodId
void GlobalNamespace::NativeVideoPlayer::_set_pauseMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_pauseMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "pauseMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr setPlaybackSpeedMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_setPlaybackSpeedMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setPlaybackSpeedMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "setPlaybackSpeedMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr setPlaybackSpeedMethodId
void GlobalNamespace::NativeVideoPlayer::_set_setPlaybackSpeedMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setPlaybackSpeedMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setPlaybackSpeedMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] setPlaybackSpeedParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_setPlaybackSpeedParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setPlaybackSpeedParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "setPlaybackSpeedParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] setPlaybackSpeedParams
void GlobalNamespace::NativeVideoPlayer::_set_setPlaybackSpeedParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setPlaybackSpeedParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setPlaybackSpeedParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr setLoopingMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_setLoopingMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setLoopingMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "setLoopingMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr setLoopingMethodId
void GlobalNamespace::NativeVideoPlayer::_set_setLoopingMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setLoopingMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setLoopingMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] setLoopingParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_setLoopingParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setLoopingParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "setLoopingParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] setLoopingParams
void GlobalNamespace::NativeVideoPlayer::_set_setLoopingParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setLoopingParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setLoopingParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr setListenerRotationQuaternionMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_setListenerRotationQuaternionMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setListenerRotationQuaternionMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "setListenerRotationQuaternionMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr setListenerRotationQuaternionMethodId
void GlobalNamespace::NativeVideoPlayer::_set_setListenerRotationQuaternionMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setListenerRotationQuaternionMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setListenerRotationQuaternionMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] setListenerRotationQuaternionParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_setListenerRotationQuaternionParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setListenerRotationQuaternionParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "setListenerRotationQuaternionParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] setListenerRotationQuaternionParams
void GlobalNamespace::NativeVideoPlayer::_set_setListenerRotationQuaternionParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setListenerRotationQuaternionParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setListenerRotationQuaternionParams", value));
}
// Autogenerated method: NativeVideoPlayer.get_VideoPlayerClass
::System::IntPtr GlobalNamespace::NativeVideoPlayer::get_VideoPlayerClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_VideoPlayerClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_VideoPlayerClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_Activity
::System::IntPtr GlobalNamespace::NativeVideoPlayer::get_Activity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_Activity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_Activity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_IsAvailable
bool GlobalNamespace::NativeVideoPlayer::get_IsAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_IsAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_IsAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_IsPlaying
bool GlobalNamespace::NativeVideoPlayer::get_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_CurrentPlaybackState
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::get_CurrentPlaybackState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_CurrentPlaybackState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_CurrentPlaybackState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NativeVideoPlayer::PlabackState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_Duration
int64_t GlobalNamespace::NativeVideoPlayer::get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_VideoStereoMode
::GlobalNamespace::NativeVideoPlayer::StereoMode GlobalNamespace::NativeVideoPlayer::get_VideoStereoMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_VideoStereoMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_VideoStereoMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NativeVideoPlayer::StereoMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_VideoWidth
int GlobalNamespace::NativeVideoPlayer::get_VideoWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_VideoWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_VideoWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_VideoHeight
int GlobalNamespace::NativeVideoPlayer::get_VideoHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_VideoHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_VideoHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_PlaybackPosition
int64_t GlobalNamespace::NativeVideoPlayer::get_PlaybackPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_PlaybackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_PlaybackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.set_PlaybackPosition
void GlobalNamespace::NativeVideoPlayer::set_PlaybackPosition(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::set_PlaybackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "set_PlaybackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: NativeVideoPlayer.PlayVideo
void GlobalNamespace::NativeVideoPlayer::PlayVideo(::StringW path, ::StringW drmLicenseUrl, ::System::IntPtr surfaceObj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlayVideo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "PlayVideo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(drmLicenseUrl), ::il2cpp_utils::ExtractType(surfaceObj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, drmLicenseUrl, surfaceObj);
}
// Autogenerated method: NativeVideoPlayer.Stop
void GlobalNamespace::NativeVideoPlayer::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.Play
void GlobalNamespace::NativeVideoPlayer::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.Pause
void GlobalNamespace::NativeVideoPlayer::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.SetPlaybackSpeed
void GlobalNamespace::NativeVideoPlayer::SetPlaybackSpeed(float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::SetPlaybackSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "SetPlaybackSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, speed);
}
// Autogenerated method: NativeVideoPlayer.SetLooping
void GlobalNamespace::NativeVideoPlayer::SetLooping(bool looping) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::SetLooping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "SetLooping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(looping)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, looping);
}
// Autogenerated method: NativeVideoPlayer.SetListenerRotation
void GlobalNamespace::NativeVideoPlayer::SetListenerRotation(::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::SetListenerRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "SetListenerRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rotation);
}
// Autogenerated method: NativeVideoPlayer..cctor
void GlobalNamespace::NativeVideoPlayer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: NativeVideoPlayer/PlabackState
#include "GlobalNamespace/NativeVideoPlayer_PlabackState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Idle
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Idle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Idle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Idle"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Idle
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Idle(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Idle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Idle", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Preparing
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Preparing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Preparing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Preparing"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Preparing
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Preparing(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Preparing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Preparing", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Buffering
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Buffering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Buffering");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Buffering"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Buffering
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Buffering(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Buffering");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Buffering", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Ready
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Ready
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Ready(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Ready", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Ended
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Ended() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Ended");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Ended"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Ended
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Ended(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Ended");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Ended", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NativeVideoPlayer::PlabackState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: NativeVideoPlayer/StereoMode
#include "GlobalNamespace/NativeVideoPlayer_StereoMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/StereoMode Unknown
::GlobalNamespace::NativeVideoPlayer::StereoMode GlobalNamespace::NativeVideoPlayer::StereoMode::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::StereoMode::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::StereoMode>("", "NativeVideoPlayer/StereoMode", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/StereoMode Unknown
void GlobalNamespace::NativeVideoPlayer::StereoMode::_set_Unknown(::GlobalNamespace::NativeVideoPlayer::StereoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::StereoMode::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/StereoMode", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/StereoMode Mono
::GlobalNamespace::NativeVideoPlayer::StereoMode GlobalNamespace::NativeVideoPlayer::StereoMode::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::StereoMode::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::StereoMode>("", "NativeVideoPlayer/StereoMode", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/StereoMode Mono
void GlobalNamespace::NativeVideoPlayer::StereoMode::_set_Mono(::GlobalNamespace::NativeVideoPlayer::StereoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::StereoMode::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/StereoMode", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/StereoMode TopBottom
::GlobalNamespace::NativeVideoPlayer::StereoMode GlobalNamespace::NativeVideoPlayer::StereoMode::_get_TopBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::StereoMode::_get_TopBottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::StereoMode>("", "NativeVideoPlayer/StereoMode", "TopBottom"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/StereoMode TopBottom
void GlobalNamespace::NativeVideoPlayer::StereoMode::_set_TopBottom(::GlobalNamespace::NativeVideoPlayer::StereoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::StereoMode::_set_TopBottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/StereoMode", "TopBottom", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/StereoMode LeftRight
::GlobalNamespace::NativeVideoPlayer::StereoMode GlobalNamespace::NativeVideoPlayer::StereoMode::_get_LeftRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::StereoMode::_get_LeftRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::StereoMode>("", "NativeVideoPlayer/StereoMode", "LeftRight"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/StereoMode LeftRight
void GlobalNamespace::NativeVideoPlayer::StereoMode::_set_LeftRight(::GlobalNamespace::NativeVideoPlayer::StereoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::StereoMode::_set_LeftRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/StereoMode", "LeftRight", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/StereoMode Mesh
::GlobalNamespace::NativeVideoPlayer::StereoMode GlobalNamespace::NativeVideoPlayer::StereoMode::_get_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::StereoMode::_get_Mesh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::StereoMode>("", "NativeVideoPlayer/StereoMode", "Mesh"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/StereoMode Mesh
void GlobalNamespace::NativeVideoPlayer::StereoMode::_set_Mesh(::GlobalNamespace::NativeVideoPlayer::StereoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::StereoMode::_set_Mesh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/StereoMode", "Mesh", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NativeVideoPlayer::StereoMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::StereoMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ButtonDownListener
#include "GlobalNamespace/ButtonDownListener.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action onButtonDown
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::ButtonDownListener::dyn_onButtonDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ButtonDownListener::dyn_onButtonDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onButtonDown"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ButtonDownListener.add_onButtonDown
void GlobalNamespace::ButtonDownListener::add_onButtonDown(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ButtonDownListener::add_onButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ButtonDownListener.remove_onButtonDown
void GlobalNamespace::ButtonDownListener::remove_onButtonDown(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ButtonDownListener::remove_onButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ButtonDownListener.OnPointerDown
void GlobalNamespace::ButtonDownListener::OnPointerDown(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ButtonDownListener::OnPointerDown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ButtonDownListener*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MediaPlayerImage
#include "GlobalNamespace/MediaPlayerImage.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MediaPlayerImage/ButtonType m_ButtonType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MediaPlayerImage::ButtonType& GlobalNamespace::MediaPlayerImage::dyn_m_ButtonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::dyn_m_ButtonType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ButtonType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MediaPlayerImage::ButtonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MediaPlayerImage.get_buttonType
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::get_buttonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::get_buttonType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buttonType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MediaPlayerImage::ButtonType, false>(this, ___internal__method);
}
// Autogenerated method: MediaPlayerImage.set_buttonType
void GlobalNamespace::MediaPlayerImage::set_buttonType(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::set_buttonType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_buttonType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MediaPlayerImage.OnPopulateMesh
void GlobalNamespace::MediaPlayerImage::OnPopulateMesh(::UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::OnPopulateMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Image*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toFill);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MediaPlayerImage/ButtonType
#include "GlobalNamespace/MediaPlayerImage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType Play
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_Play");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "Play"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType Play
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_Play(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_Play");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "Play", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType Pause
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_Pause");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "Pause"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType Pause
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_Pause(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_Pause");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "Pause", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType FastForward
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_FastForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_FastForward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "FastForward"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType FastForward
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_FastForward(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_FastForward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "FastForward", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType Rewind
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_Rewind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_Rewind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "Rewind"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType Rewind
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_Rewind(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_Rewind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "Rewind", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType SkipForward
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_SkipForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_SkipForward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "SkipForward"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType SkipForward
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_SkipForward(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_SkipForward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "SkipForward", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType SkipBack
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_SkipBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_SkipBack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "SkipBack"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType SkipBack
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_SkipBack(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_SkipBack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "SkipBack", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType Stop
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_Stop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "Stop"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType Stop
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_Stop(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_Stop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "Stop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MediaPlayerImage::ButtonType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MoviePlayerSample
#include "GlobalNamespace/MoviePlayerSample.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: MoviePlayerSample/<>c__DisplayClass34_0
#include "GlobalNamespace/MoviePlayerSample_--c__DisplayClass34_0.hpp"
// Including type: MoviePlayerSample/<Start>d__33
#include "GlobalNamespace/MoviePlayerSample_-Start-d__33.hpp"
// Including type: UnityEngine.Video.VideoPlayer
#include "UnityEngine/Video/VideoPlayer.hpp"
// Including type: OVROverlay
#include "GlobalNamespace/OVROverlay.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean videoPausedBeforeAppPause
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSample::dyn_videoPausedBeforeAppPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_videoPausedBeforeAppPause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "videoPausedBeforeAppPause"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer videoPlayer
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer*& GlobalNamespace::MoviePlayerSample::dyn_videoPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_videoPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "videoPlayer"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVROverlay overlay
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay*& GlobalNamespace::MoviePlayerSample::dyn_overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_overlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overlay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer mediaRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& GlobalNamespace::MoviePlayerSample::dyn_mediaRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_mediaRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mediaRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsPlaying>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSample::dyn_$IsPlaying$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_$IsPlaying$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsPlaying>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <Duration>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::MoviePlayerSample::dyn_$Duration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_$Duration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Duration>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <PlaybackPosition>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::MoviePlayerSample::dyn_$PlaybackPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_$PlaybackPosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlaybackPosition>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture copyTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::MoviePlayerSample::dyn_copyTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_copyTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "copyTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material externalTex2DMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::MoviePlayerSample::dyn_externalTex2DMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_externalTex2DMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalTex2DMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MovieName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MoviePlayerSample::dyn_MovieName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_MovieName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MovieName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String DrmLicenseUrl
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MoviePlayerSample::dyn_DrmLicenseUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_DrmLicenseUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DrmLicenseUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean LoopVideo
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSample::dyn_LoopVideo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_LoopVideo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoopVideo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample/VideoShape Shape
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample::VideoShape& GlobalNamespace::MoviePlayerSample::dyn_Shape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_Shape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Shape"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample::VideoShape*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample/VideoStereo Stereo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample::VideoStereo& GlobalNamespace::MoviePlayerSample::dyn_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_Stereo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Stereo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample::VideoStereo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AutoDetectStereoLayout
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSample::dyn_AutoDetectStereoLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_AutoDetectStereoLayout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoDetectStereoLayout"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DisplayMono
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSample::dyn_DisplayMono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_DisplayMono");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisplayMono"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MoviePlayerSample/VideoShape _LastShape
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample::VideoShape& GlobalNamespace::MoviePlayerSample::dyn__LastShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn__LastShape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastShape"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample::VideoShape*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MoviePlayerSample/VideoStereo _LastStereo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample::VideoStereo& GlobalNamespace::MoviePlayerSample::dyn__LastStereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn__LastStereo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastStereo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample::VideoStereo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _LastDisplayMono
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSample::dyn__LastDisplayMono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn__LastDisplayMono");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastDisplayMono"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoviePlayerSample.get_IsPlaying
bool GlobalNamespace::MoviePlayerSample::get_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::get_IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.set_IsPlaying
void GlobalNamespace::MoviePlayerSample::set_IsPlaying(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::set_IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MoviePlayerSample.get_Duration
int64_t GlobalNamespace::MoviePlayerSample::get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::get_Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.set_Duration
void GlobalNamespace::MoviePlayerSample::set_Duration(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::set_Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MoviePlayerSample.get_PlaybackPosition
int64_t GlobalNamespace::MoviePlayerSample::get_PlaybackPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::get_PlaybackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlaybackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.set_PlaybackPosition
void GlobalNamespace::MoviePlayerSample::set_PlaybackPosition(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::set_PlaybackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlaybackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MoviePlayerSample.Awake
void GlobalNamespace::MoviePlayerSample::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.IsLocalVideo
bool GlobalNamespace::MoviePlayerSample::IsLocalVideo(::StringW movieName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::IsLocalVideo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLocalVideo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(movieName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, movieName);
}
// Autogenerated method: MoviePlayerSample.UpdateShapeAndStereo
void GlobalNamespace::MoviePlayerSample::UpdateShapeAndStereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::UpdateShapeAndStereo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateShapeAndStereo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.Start
::System::Collections::IEnumerator* GlobalNamespace::MoviePlayerSample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.Play
void GlobalNamespace::MoviePlayerSample::Play(::StringW moviePath, ::StringW drmLicencesUrl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moviePath), ::il2cpp_utils::ExtractType(drmLicencesUrl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, moviePath, drmLicencesUrl);
}
// Autogenerated method: MoviePlayerSample.Play
void GlobalNamespace::MoviePlayerSample::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.Pause
void GlobalNamespace::MoviePlayerSample::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.SeekTo
void GlobalNamespace::MoviePlayerSample::SeekTo(int64_t position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::SeekTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SeekTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: MoviePlayerSample.Update
void GlobalNamespace::MoviePlayerSample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.SetPlaybackSpeed
void GlobalNamespace::MoviePlayerSample::SetPlaybackSpeed(float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::SetPlaybackSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlaybackSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speed);
}
// Autogenerated method: MoviePlayerSample.Stop
void GlobalNamespace::MoviePlayerSample::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.OnApplicationPause
void GlobalNamespace::MoviePlayerSample::OnApplicationPause(bool appWasPaused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appWasPaused)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, appWasPaused);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MoviePlayerSample/VideoShape
#include "GlobalNamespace/MoviePlayerSample.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoShape _360
::GlobalNamespace::MoviePlayerSample::VideoShape GlobalNamespace::MoviePlayerSample::VideoShape::_get__360() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_get__360");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoShape>("", "MoviePlayerSample/VideoShape", "_360"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoShape _360
void GlobalNamespace::MoviePlayerSample::VideoShape::_set__360(::GlobalNamespace::MoviePlayerSample::VideoShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_set__360");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoShape", "_360", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoShape _180
::GlobalNamespace::MoviePlayerSample::VideoShape GlobalNamespace::MoviePlayerSample::VideoShape::_get__180() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_get__180");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoShape>("", "MoviePlayerSample/VideoShape", "_180"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoShape _180
void GlobalNamespace::MoviePlayerSample::VideoShape::_set__180(::GlobalNamespace::MoviePlayerSample::VideoShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_set__180");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoShape", "_180", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoShape Quad
::GlobalNamespace::MoviePlayerSample::VideoShape GlobalNamespace::MoviePlayerSample::VideoShape::_get_Quad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_get_Quad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoShape>("", "MoviePlayerSample/VideoShape", "Quad"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoShape Quad
void GlobalNamespace::MoviePlayerSample::VideoShape::_set_Quad(::GlobalNamespace::MoviePlayerSample::VideoShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_set_Quad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoShape", "Quad", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MoviePlayerSample::VideoShape::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MoviePlayerSample/VideoStereo
#include "GlobalNamespace/MoviePlayerSample.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoStereo Mono
::GlobalNamespace::MoviePlayerSample::VideoStereo GlobalNamespace::MoviePlayerSample::VideoStereo::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoStereo>("", "MoviePlayerSample/VideoStereo", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoStereo Mono
void GlobalNamespace::MoviePlayerSample::VideoStereo::_set_Mono(::GlobalNamespace::MoviePlayerSample::VideoStereo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoStereo", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoStereo TopBottom
::GlobalNamespace::MoviePlayerSample::VideoStereo GlobalNamespace::MoviePlayerSample::VideoStereo::_get_TopBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_get_TopBottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoStereo>("", "MoviePlayerSample/VideoStereo", "TopBottom"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoStereo TopBottom
void GlobalNamespace::MoviePlayerSample::VideoStereo::_set_TopBottom(::GlobalNamespace::MoviePlayerSample::VideoStereo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_set_TopBottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoStereo", "TopBottom", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoStereo LeftRight
::GlobalNamespace::MoviePlayerSample::VideoStereo GlobalNamespace::MoviePlayerSample::VideoStereo::_get_LeftRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_get_LeftRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoStereo>("", "MoviePlayerSample/VideoStereo", "LeftRight"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoStereo LeftRight
void GlobalNamespace::MoviePlayerSample::VideoStereo::_set_LeftRight(::GlobalNamespace::MoviePlayerSample::VideoStereo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_set_LeftRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoStereo", "LeftRight", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoStereo BottomTop
::GlobalNamespace::MoviePlayerSample::VideoStereo GlobalNamespace::MoviePlayerSample::VideoStereo::_get_BottomTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_get_BottomTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoStereo>("", "MoviePlayerSample/VideoStereo", "BottomTop"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoStereo BottomTop
void GlobalNamespace::MoviePlayerSample::VideoStereo::_set_BottomTop(::GlobalNamespace::MoviePlayerSample::VideoStereo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_set_BottomTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoStereo", "BottomTop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MoviePlayerSample::VideoStereo::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MoviePlayerSample/<>c__DisplayClass34_0
#include "GlobalNamespace/MoviePlayerSample_--c__DisplayClass34_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String moviePath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MoviePlayerSample::$$c__DisplayClass34_0::dyn_moviePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$$c__DisplayClass34_0::dyn_moviePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moviePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String drmLicencesUrl
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MoviePlayerSample::$$c__DisplayClass34_0::dyn_drmLicencesUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$$c__DisplayClass34_0::dyn_drmLicencesUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drmLicencesUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample*& GlobalNamespace::MoviePlayerSample::$$c__DisplayClass34_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$$c__DisplayClass34_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoviePlayerSample/<>c__DisplayClass34_0.<Play>b__0
void GlobalNamespace::MoviePlayerSample::$$c__DisplayClass34_0::$Play$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$$c__DisplayClass34_0::<Play>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Play>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MoviePlayerSample/<Start>d__33
#include "GlobalNamespace/MoviePlayerSample_-Start-d__33.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MoviePlayerSample::$Start$d__33::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__33::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MoviePlayerSample::$Start$d__33::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__33::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample*& GlobalNamespace::MoviePlayerSample::$Start$d__33::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__33::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoviePlayerSample/<Start>d__33.System.IDisposable.Dispose
void GlobalNamespace::MoviePlayerSample::$Start$d__33::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__33::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MoviePlayerSample::$Start$d__33*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample/<Start>d__33.MoveNext
bool GlobalNamespace::MoviePlayerSample::$Start$d__33::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__33::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MoviePlayerSample::$Start$d__33*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample/<Start>d__33.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MoviePlayerSample::$Start$d__33::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__33::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MoviePlayerSample::$Start$d__33*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample/<Start>d__33.System.Collections.IEnumerator.Reset
void GlobalNamespace::MoviePlayerSample::$Start$d__33::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__33::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MoviePlayerSample::$Start$d__33*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample/<Start>d__33.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MoviePlayerSample::$Start$d__33::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__33::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MoviePlayerSample::$Start$d__33*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MoviePlayerSampleControls
#include "GlobalNamespace/MoviePlayerSampleControls.hpp"
// Including type: MoviePlayerSample
#include "GlobalNamespace/MoviePlayerSample.hpp"
// Including type: UnityEngine.EventSystems.OVRInputModule
#include "UnityEngine/EventSystems/OVRInputModule.hpp"
// Including type: OVRGazePointer
#include "GlobalNamespace/OVRGazePointer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: ButtonDownListener
#include "GlobalNamespace/ButtonDownListener.hpp"
// Including type: MediaPlayerImage
#include "GlobalNamespace/MediaPlayerImage.hpp"
// Including type: UnityEngine.UI.Slider
#include "UnityEngine/UI/Slider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample Player
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample*& GlobalNamespace::MoviePlayerSampleControls::dyn_Player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_Player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Player"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.EventSystems.OVRInputModule InputModule
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::OVRInputModule*& GlobalNamespace::MoviePlayerSampleControls::dyn_InputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_InputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InputModule"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::OVRInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRGazePointer GazePointer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRGazePointer*& GlobalNamespace::MoviePlayerSampleControls::dyn_GazePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_GazePointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GazePointer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRGazePointer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject LeftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MoviePlayerSampleControls::dyn_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_LeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject RightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MoviePlayerSampleControls::dyn_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_RightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Canvas Canvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& GlobalNamespace::MoviePlayerSampleControls::dyn_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_Canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ButtonDownListener PlayPause
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ButtonDownListener*& GlobalNamespace::MoviePlayerSampleControls::dyn_PlayPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_PlayPause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayPause"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ButtonDownListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MediaPlayerImage PlayPauseImage
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MediaPlayerImage*& GlobalNamespace::MoviePlayerSampleControls::dyn_PlayPauseImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_PlayPauseImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayPauseImage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MediaPlayerImage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Slider ProgressBar
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Slider*& GlobalNamespace::MoviePlayerSampleControls::dyn_ProgressBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_ProgressBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProgressBar"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Slider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ButtonDownListener FastForward
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ButtonDownListener*& GlobalNamespace::MoviePlayerSampleControls::dyn_FastForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_FastForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FastForward"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ButtonDownListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MediaPlayerImage FastForwardImage
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MediaPlayerImage*& GlobalNamespace::MoviePlayerSampleControls::dyn_FastForwardImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_FastForwardImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FastForwardImage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MediaPlayerImage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ButtonDownListener Rewind
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ButtonDownListener*& GlobalNamespace::MoviePlayerSampleControls::dyn_Rewind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_Rewind");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rewind"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ButtonDownListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MediaPlayerImage RewindImage
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MediaPlayerImage*& GlobalNamespace::MoviePlayerSampleControls::dyn_RewindImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_RewindImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RewindImage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MediaPlayerImage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TimeoutTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MoviePlayerSampleControls::dyn_TimeoutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_TimeoutTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TimeoutTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isVisible
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSampleControls::dyn__isVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__isVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastButtonTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MoviePlayerSampleControls::dyn__lastButtonTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__lastButtonTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastButtonTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didSeek
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSampleControls::dyn__didSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__didSeek");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didSeek"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _seekPreviousPosition
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::MoviePlayerSampleControls::dyn__seekPreviousPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__seekPreviousPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_seekPreviousPosition"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _rewindStartPosition
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::MoviePlayerSampleControls::dyn__rewindStartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__rewindStartPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rewindStartPosition"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rewindStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MoviePlayerSampleControls::dyn__rewindStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__rewindStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rewindStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MoviePlayerSampleControls/PlaybackState _state
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSampleControls::PlaybackState& GlobalNamespace::MoviePlayerSampleControls::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoviePlayerSampleControls.Start
void GlobalNamespace::MoviePlayerSampleControls::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.OnPlayPauseClicked
void GlobalNamespace::MoviePlayerSampleControls::OnPlayPauseClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::OnPlayPauseClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayPauseClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.OnFastForwardClicked
void GlobalNamespace::MoviePlayerSampleControls::OnFastForwardClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::OnFastForwardClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFastForwardClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.OnRewindClicked
void GlobalNamespace::MoviePlayerSampleControls::OnRewindClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::OnRewindClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRewindClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.OnSeekBarMoved
void GlobalNamespace::MoviePlayerSampleControls::OnSeekBarMoved(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::OnSeekBarMoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSeekBarMoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MoviePlayerSampleControls.Seek
void GlobalNamespace::MoviePlayerSampleControls::Seek(int64_t pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::Seek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: MoviePlayerSampleControls.Update
void GlobalNamespace::MoviePlayerSampleControls::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.SetVisible
void GlobalNamespace::MoviePlayerSampleControls::SetVisible(bool visible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::SetVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, visible);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MoviePlayerSampleControls/PlaybackState
#include "GlobalNamespace/MoviePlayerSampleControls.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MoviePlayerSampleControls/PlaybackState Playing
::GlobalNamespace::MoviePlayerSampleControls::PlaybackState GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Playing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState>("", "MoviePlayerSampleControls/PlaybackState", "Playing"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSampleControls/PlaybackState Playing
void GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Playing(::GlobalNamespace::MoviePlayerSampleControls::PlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Playing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSampleControls/PlaybackState", "Playing", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSampleControls/PlaybackState Paused
::GlobalNamespace::MoviePlayerSampleControls::PlaybackState GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Paused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Paused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState>("", "MoviePlayerSampleControls/PlaybackState", "Paused"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSampleControls/PlaybackState Paused
void GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Paused(::GlobalNamespace::MoviePlayerSampleControls::PlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Paused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSampleControls/PlaybackState", "Paused", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSampleControls/PlaybackState Rewinding
::GlobalNamespace::MoviePlayerSampleControls::PlaybackState GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Rewinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Rewinding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState>("", "MoviePlayerSampleControls/PlaybackState", "Rewinding"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSampleControls/PlaybackState Rewinding
void GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Rewinding(::GlobalNamespace::MoviePlayerSampleControls::PlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Rewinding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSampleControls/PlaybackState", "Rewinding", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSampleControls/PlaybackState FastForwarding
::GlobalNamespace::MoviePlayerSampleControls::PlaybackState GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_FastForwarding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_FastForwarding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState>("", "MoviePlayerSampleControls/PlaybackState", "FastForwarding"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSampleControls/PlaybackState FastForwarding
void GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_FastForwarding(::GlobalNamespace::MoviePlayerSampleControls::PlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_FastForwarding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSampleControls/PlaybackState", "FastForwarding", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MoviePlayerSampleControls::PlaybackState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VectorUtil
#include "GlobalNamespace/VectorUtil.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VectorUtil.ToVector
::UnityEngine::Vector4 GlobalNamespace::VectorUtil::ToVector(::UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VectorUtil::ToVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VectorUtil", "ToVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AppDeeplinkUI
#include "GlobalNamespace/AppDeeplinkUI.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt64 UNITY_COMPANION_APP_ID
uint64_t GlobalNamespace::AppDeeplinkUI::_get_UNITY_COMPANION_APP_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppDeeplinkUI::_get_UNITY_COMPANION_APP_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("", "AppDeeplinkUI", "UNITY_COMPANION_APP_ID"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt64 UNITY_COMPANION_APP_ID
void GlobalNamespace::AppDeeplinkUI::_set_UNITY_COMPANION_APP_ID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppDeeplinkUI::_set_UNITY_COMPANION_APP_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppDeeplinkUI", "UNITY_COMPANION_APP_ID", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt64 UNREAL_COMPANION_APP_ID
uint64_t GlobalNamespace::AppDeeplinkUI::_get_UNREAL_COMPANION_APP_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppDeeplinkUI::_get_UNREAL_COMPANION_APP_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("", "AppDeeplinkUI", "UNREAL_COMPANION_APP_ID"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt64 UNREAL_COMPANION_APP_ID
void GlobalNamespace::AppDeeplinkUI::_set_UNREAL_COMPANION_APP_ID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppDeeplinkUI::_set_UNREAL_COMPANION_APP_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppDeeplinkUI", "UNREAL_COMPANION_APP_ID", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform deeplinkAppId
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::AppDeeplinkUI::dyn_deeplinkAppId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppDeeplinkUI::dyn_deeplinkAppId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deeplinkAppId"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform deeplinkMessage
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::AppDeeplinkUI::dyn_deeplinkMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppDeeplinkUI::dyn_deeplinkMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deeplinkMessage"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform uiLaunchType
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::AppDeeplinkUI::dyn_uiLaunchType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppDeeplinkUI::dyn_uiLaunchType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uiLaunchType"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform uiLaunchSource
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::AppDeeplinkUI::dyn_uiLaunchSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppDeeplinkUI::dyn_uiLaunchSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uiLaunchSource"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform uiDeepLinkMessage
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::AppDeeplinkUI::dyn_uiDeepLinkMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppDeeplinkUI::dyn_uiDeepLinkMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uiDeepLinkMessage"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inMenu
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AppDeeplinkUI::dyn_inMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppDeeplinkUI::dyn_inMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inMenu"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AppDeeplinkUI.Start
void GlobalNamespace::AppDeeplinkUI::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppDeeplinkUI::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppDeeplinkUI.Update
void GlobalNamespace::AppDeeplinkUI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppDeeplinkUI::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppDeeplinkUI.LaunchUnrealDeeplinkSample
void GlobalNamespace::AppDeeplinkUI::LaunchUnrealDeeplinkSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppDeeplinkUI::LaunchUnrealDeeplinkSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchUnrealDeeplinkSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppDeeplinkUI.LaunchSelf
void GlobalNamespace::AppDeeplinkUI::LaunchSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppDeeplinkUI::LaunchSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppDeeplinkUI.LaunchOtherApp
void GlobalNamespace::AppDeeplinkUI::LaunchOtherApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppDeeplinkUI::LaunchOtherApp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchOtherApp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: CustomDebugUI
#include "GlobalNamespace/CustomDebugUI.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public CustomDebugUI instance
::GlobalNamespace::CustomDebugUI* GlobalNamespace::CustomDebugUI::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDebugUI::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CustomDebugUI*>("", "CustomDebugUI", "instance"));
}
// Autogenerated static field setter
// Set static field: static public CustomDebugUI instance
void GlobalNamespace::CustomDebugUI::_set_instance(::GlobalNamespace::CustomDebugUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDebugUI::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CustomDebugUI", "instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags privateFlags
::System::Reflection::BindingFlags GlobalNamespace::CustomDebugUI::_get_privateFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDebugUI::_get_privateFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::BindingFlags>("", "CustomDebugUI", "privateFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags privateFlags
void GlobalNamespace::CustomDebugUI::_set_privateFlags(::System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDebugUI::_set_privateFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CustomDebugUI", "privateFlags", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform textPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::CustomDebugUI::dyn_textPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDebugUI::dyn_textPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomDebugUI.Awake
void GlobalNamespace::CustomDebugUI::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDebugUI::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CustomDebugUI.AddTextField
::UnityEngine::RectTransform* GlobalNamespace::CustomDebugUI::AddTextField(::StringW label, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDebugUI::AddTextField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTextField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, targetCanvas);
}
// Autogenerated method: CustomDebugUI.RemoveFromCanvas
void GlobalNamespace::CustomDebugUI::RemoveFromCanvas(::UnityEngine::RectTransform* element, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDebugUI::RemoveFromCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveFromCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(targetCanvas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element, targetCanvas);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DebugUISample
#include "GlobalNamespace/DebugUISample.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean inMenu
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DebugUISample::dyn_inMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::dyn_inMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inMenu"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text sliderText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::DebugUISample::dyn_sliderText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::dyn_sliderText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sliderText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUISample.Start
void GlobalNamespace::DebugUISample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUISample.TogglePressed
void GlobalNamespace::DebugUISample::TogglePressed(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::TogglePressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TogglePressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: DebugUISample.RadioPressed
void GlobalNamespace::DebugUISample::RadioPressed(::StringW radioLabel, ::StringW group, ::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::RadioPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RadioPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radioLabel), ::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, radioLabel, group, t);
}
// Autogenerated method: DebugUISample.SliderPressed
void GlobalNamespace::DebugUISample::SliderPressed(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::SliderPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SliderPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, f);
}
// Autogenerated method: DebugUISample.Update
void GlobalNamespace::DebugUISample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUISample.LogButtonPressed
void GlobalNamespace::DebugUISample::LogButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::LogButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUISample.<Start>b__2_0
void GlobalNamespace::DebugUISample::$Start$b__2_0(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::<Start>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: DebugUISample.<Start>b__2_1
void GlobalNamespace::DebugUISample::$Start$b__2_1(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::<Start>b__2_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__2_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: DebugUISample.<Start>b__2_2
void GlobalNamespace::DebugUISample::$Start$b__2_2(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::<Start>b__2_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__2_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: DebugUISample.<Start>b__2_3
void GlobalNamespace::DebugUISample::$Start$b__2_3(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::<Start>b__2_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__2_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AnalyticsUI
#include "GlobalNamespace/AnalyticsUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SampleUI
#include "GlobalNamespace/SampleUI.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform collectionButton
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::SampleUI::dyn_collectionButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SampleUI::dyn_collectionButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collectionButton"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform inputText
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::SampleUI::dyn_inputText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SampleUI::dyn_inputText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputText"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform valueText
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::SampleUI::dyn_valueText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SampleUI::dyn_valueText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueText"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inMenu
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SampleUI::dyn_inMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SampleUI::dyn_inMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inMenu"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SampleUI.Start
void GlobalNamespace::SampleUI::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SampleUI::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SampleUI.Update
void GlobalNamespace::SampleUI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SampleUI::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: StartCrashlytics
#include "GlobalNamespace/StartCrashlytics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: HandsActiveChecker
#include "GlobalNamespace/HandsActiveChecker.hpp"
// Including type: HandsActiveChecker/<GetCenterEye>d__6
#include "GlobalNamespace/HandsActiveChecker_-GetCenterEye-d__6.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _notificationPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::HandsActiveChecker::dyn__notificationPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::dyn__notificationPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notificationPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _notification
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::HandsActiveChecker::dyn__notification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::dyn__notification");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notification"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRCameraRig _cameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::HandsActiveChecker::dyn__cameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::dyn__cameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _centerEye
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::HandsActiveChecker::dyn__centerEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::dyn__centerEye");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerEye"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HandsActiveChecker.Awake
void GlobalNamespace::HandsActiveChecker::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandsActiveChecker.Update
void GlobalNamespace::HandsActiveChecker::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandsActiveChecker.GetCenterEye
::System::Collections::IEnumerator* GlobalNamespace::HandsActiveChecker::GetCenterEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::GetCenterEye");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCenterEye", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HandsActiveChecker/<GetCenterEye>d__6
#include "GlobalNamespace/HandsActiveChecker_-GetCenterEye-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HandsActiveChecker <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HandsActiveChecker*& GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HandsActiveChecker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HandsActiveChecker/<GetCenterEye>d__6.System.IDisposable.Dispose
void GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandsActiveChecker/<GetCenterEye>d__6.MoveNext
bool GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HandsActiveChecker/<GetCenterEye>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HandsActiveChecker/<GetCenterEye>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandsActiveChecker/<GetCenterEye>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: CharacterCapsule
#include "GlobalNamespace/CharacterCapsule.hpp"
// Including type: UnityEngine.CharacterController
#include "UnityEngine/CharacterController.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CharacterController _character
[[deprecated("Use field access instead!")]] ::UnityEngine::CharacterController*& GlobalNamespace::CharacterCapsule::dyn__character() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn__character");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_character"))->offset;
  return *reinterpret_cast<::UnityEngine::CharacterController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _meshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::CharacterCapsule::dyn__meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn__meshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _height
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CharacterCapsule::dyn__height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn__height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CharacterCapsule::dyn__radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn__radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SubdivisionsU
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CharacterCapsule::dyn_SubdivisionsU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn_SubdivisionsU");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SubdivisionsU"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SubdivisionsV
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CharacterCapsule::dyn_SubdivisionsV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn_SubdivisionsV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SubdivisionsV"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _subdivisionU
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CharacterCapsule::dyn__subdivisionU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn__subdivisionU");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subdivisionU"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _subdivisionV
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CharacterCapsule::dyn__subdivisionV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn__subdivisionV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subdivisionV"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _vertices
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::CharacterCapsule::dyn__vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn__vertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vertices"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _triangles
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::CharacterCapsule::dyn__triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn__triangles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_triangles"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CharacterCapsule.Update
void GlobalNamespace::CharacterCapsule::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: LocomotionSampleSupport
#include "GlobalNamespace/LocomotionSampleSupport.hpp"
// Including type: LocomotionController
#include "GlobalNamespace/LocomotionController.hpp"
// Including type: LocomotionTeleport
#include "GlobalNamespace/LocomotionTeleport.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TeleportInputHandler
#include "GlobalNamespace/TeleportInputHandler.hpp"
// Including type: TeleportAimHandler
#include "GlobalNamespace/TeleportAimHandler.hpp"
// Including type: TeleportTargetHandler
#include "GlobalNamespace/TeleportTargetHandler.hpp"
// Including type: TeleportOrientationHandler
#include "GlobalNamespace/TeleportOrientationHandler.hpp"
// Including type: TeleportTransition
#include "GlobalNamespace/TeleportTransition.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LocomotionController lc
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionController*& GlobalNamespace::LocomotionSampleSupport::dyn_lc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::dyn_lc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lc"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inMenu
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionSampleSupport::dyn_inMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::dyn_inMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inMenu"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionSampleSupport.get_TeleportController
::GlobalNamespace::LocomotionTeleport* GlobalNamespace::LocomotionSampleSupport::get_TeleportController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::get_TeleportController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TeleportController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionSampleSupport.Start
void GlobalNamespace::LocomotionSampleSupport::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionSampleSupport.Update
void GlobalNamespace::LocomotionSampleSupport::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionSampleSupport.Log
void GlobalNamespace::LocomotionSampleSupport::Log(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocomotionSampleSupport", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: LocomotionSampleSupport.UpdateToggle
void GlobalNamespace::LocomotionSampleSupport::UpdateToggle(::UnityEngine::UI::Toggle* toggle, bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::UpdateToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toggle), ::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toggle, enabled);
}
// Autogenerated method: LocomotionSampleSupport.SetupNonCap
void GlobalNamespace::LocomotionSampleSupport::SetupNonCap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::SetupNonCap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupNonCap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionSampleSupport.SetupTeleportDefaults
void GlobalNamespace::LocomotionSampleSupport::SetupTeleportDefaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::SetupTeleportDefaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupTeleportDefaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionSampleSupport.AddInstance
::UnityEngine::GameObject* GlobalNamespace::LocomotionSampleSupport::AddInstance(::UnityEngine::GameObject* _template, ::StringW label) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::AddInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_template), ::il2cpp_utils::ExtractType(label)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, _template, label);
}
// Autogenerated method: LocomotionSampleSupport.SetupNodeTeleport
void GlobalNamespace::LocomotionSampleSupport::SetupNodeTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::SetupNodeTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupNodeTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionSampleSupport.SetupTwoStickTeleport
void GlobalNamespace::LocomotionSampleSupport::SetupTwoStickTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::SetupTwoStickTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupTwoStickTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionSampleSupport.SetupWalkOnly
void GlobalNamespace::LocomotionSampleSupport::SetupWalkOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::SetupWalkOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupWalkOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionSampleSupport.SetupLeftStrafeRightTeleport
void GlobalNamespace::LocomotionSampleSupport::SetupLeftStrafeRightTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::SetupLeftStrafeRightTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupLeftStrafeRightTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVROverlayCanvas
#include "GlobalNamespace/OVROverlayCanvas.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: OVROverlay
#include "GlobalNamespace/OVROverlay.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Plane[] _FrustumPlanes
::ArrayW<::UnityEngine::Plane> GlobalNamespace::OVROverlayCanvas::_get__FrustumPlanes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::_get__FrustumPlanes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Plane>>("", "OVROverlayCanvas", "_FrustumPlanes"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Plane[] _FrustumPlanes
void GlobalNamespace::OVROverlayCanvas::_set__FrustumPlanes(::ArrayW<::UnityEngine::Plane> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::_set__FrustumPlanes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayCanvas", "_FrustumPlanes", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _transparentShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OVROverlayCanvas::dyn__transparentShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__transparentShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transparentShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _opaqueShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OVROverlayCanvas::dyn__opaqueShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__opaqueShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_opaqueShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::OVROverlayCanvas::dyn__rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Canvas _canvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& GlobalNamespace::OVROverlayCanvas::dyn__canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVROverlayCanvas::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVROverlay _overlay
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay*& GlobalNamespace::OVROverlayCanvas::dyn__overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__overlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overlay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _renderTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::OVROverlayCanvas::dyn__renderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__renderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _meshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::OVROverlayCanvas::dyn__meshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__meshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _quad
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::OVROverlayCanvas::dyn__quad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__quad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_quad"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _defaultMat
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::OVROverlayCanvas::dyn__defaultMat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__defaultMat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultMat"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxTextureSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlayCanvas::dyn_MaxTextureSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn_MaxTextureSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxTextureSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MinTextureSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlayCanvas::dyn_MinTextureSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn_MinTextureSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinTextureSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PixelsPerUnit
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVROverlayCanvas::dyn_PixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn_PixelsPerUnit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PixelsPerUnit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 DrawRate
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlayCanvas::dyn_DrawRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn_DrawRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DrawRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 DrawFrameOffset
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlayCanvas::dyn_DrawFrameOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn_DrawFrameOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DrawFrameOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Expensive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlayCanvas::dyn_Expensive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn_Expensive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Expensive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Layer
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlayCanvas::dyn_Layer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn_Layer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Layer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVROverlayCanvas/DrawMode Opacity
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlayCanvas::DrawMode& GlobalNamespace::OVROverlayCanvas::dyn_Opacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn_Opacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Opacity"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlayCanvas::DrawMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ScaleViewport
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlayCanvas::dyn_ScaleViewport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn_ScaleViewport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScaleViewport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVROverlayCanvas.Start
void GlobalNamespace::OVROverlayCanvas::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayCanvas.OnDestroy
void GlobalNamespace::OVROverlayCanvas::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayCanvas.OnEnable
void GlobalNamespace::OVROverlayCanvas::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayCanvas.OnDisable
void GlobalNamespace::OVROverlayCanvas::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayCanvas.ShouldRender
bool GlobalNamespace::OVROverlayCanvas::ShouldRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::ShouldRender");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVROverlayCanvas*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayCanvas.Update
void GlobalNamespace::OVROverlayCanvas::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayCanvas.get_overlayEnabled
bool GlobalNamespace::OVROverlayCanvas::get_overlayEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::get_overlayEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overlayEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayCanvas.set_overlayEnabled
void GlobalNamespace::OVROverlayCanvas::set_overlayEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::set_overlayEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overlayEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVROverlayCanvas..cctor
void GlobalNamespace::OVROverlayCanvas::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayCanvas", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVROverlayCanvas/DrawMode
#include "GlobalNamespace/OVROverlayCanvas.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVROverlayCanvas/DrawMode Opaque
::GlobalNamespace::OVROverlayCanvas::DrawMode GlobalNamespace::OVROverlayCanvas::DrawMode::_get_Opaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::DrawMode::_get_Opaque");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayCanvas::DrawMode>("", "OVROverlayCanvas/DrawMode", "Opaque"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayCanvas/DrawMode Opaque
void GlobalNamespace::OVROverlayCanvas::DrawMode::_set_Opaque(::GlobalNamespace::OVROverlayCanvas::DrawMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::DrawMode::_set_Opaque");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayCanvas/DrawMode", "Opaque", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayCanvas/DrawMode OpaqueWithClip
::GlobalNamespace::OVROverlayCanvas::DrawMode GlobalNamespace::OVROverlayCanvas::DrawMode::_get_OpaqueWithClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::DrawMode::_get_OpaqueWithClip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayCanvas::DrawMode>("", "OVROverlayCanvas/DrawMode", "OpaqueWithClip"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayCanvas/DrawMode OpaqueWithClip
void GlobalNamespace::OVROverlayCanvas::DrawMode::_set_OpaqueWithClip(::GlobalNamespace::OVROverlayCanvas::DrawMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::DrawMode::_set_OpaqueWithClip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayCanvas/DrawMode", "OpaqueWithClip", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayCanvas/DrawMode TransparentDefaultAlpha
::GlobalNamespace::OVROverlayCanvas::DrawMode GlobalNamespace::OVROverlayCanvas::DrawMode::_get_TransparentDefaultAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::DrawMode::_get_TransparentDefaultAlpha");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayCanvas::DrawMode>("", "OVROverlayCanvas/DrawMode", "TransparentDefaultAlpha"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayCanvas/DrawMode TransparentDefaultAlpha
void GlobalNamespace::OVROverlayCanvas::DrawMode::_set_TransparentDefaultAlpha(::GlobalNamespace::OVROverlayCanvas::DrawMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::DrawMode::_set_TransparentDefaultAlpha");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayCanvas/DrawMode", "TransparentDefaultAlpha", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayCanvas/DrawMode TransparentCorrectAlpha
::GlobalNamespace::OVROverlayCanvas::DrawMode GlobalNamespace::OVROverlayCanvas::DrawMode::_get_TransparentCorrectAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::DrawMode::_get_TransparentCorrectAlpha");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayCanvas::DrawMode>("", "OVROverlayCanvas/DrawMode", "TransparentCorrectAlpha"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayCanvas/DrawMode TransparentCorrectAlpha
void GlobalNamespace::OVROverlayCanvas::DrawMode::_set_TransparentCorrectAlpha(::GlobalNamespace::OVROverlayCanvas::DrawMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::DrawMode::_set_TransparentCorrectAlpha");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayCanvas/DrawMode", "TransparentCorrectAlpha", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlayCanvas::DrawMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::DrawMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AugmentedObject
#include "GlobalNamespace/AugmentedObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRInput/Controller controllerHand
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::AugmentedObject::dyn_controllerHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AugmentedObject::dyn_controllerHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerHand"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform shadow
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AugmentedObject::dyn_shadow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AugmentedObject::dyn_shadow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shadow"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean groundShadow
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AugmentedObject::dyn_groundShadow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AugmentedObject::dyn_groundShadow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groundShadow"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AugmentedObject.Start
void GlobalNamespace::AugmentedObject::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AugmentedObject::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AugmentedObject.Update
void GlobalNamespace::AugmentedObject::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AugmentedObject::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AugmentedObject.Grab
void GlobalNamespace::AugmentedObject::Grab(::GlobalNamespace::OVRInput::Controller grabHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AugmentedObject::Grab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Grab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabHand);
}
// Autogenerated method: AugmentedObject.Release
void GlobalNamespace::AugmentedObject::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AugmentedObject::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AugmentedObject.ToggleShadowType
void GlobalNamespace::AugmentedObject::ToggleShadowType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AugmentedObject::ToggleShadowType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleShadowType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BrushController
#include "GlobalNamespace/BrushController.hpp"
// Including type: BrushController/<FadeCameraClearColor>d__8
#include "GlobalNamespace/BrushController_-FadeCameraClearColor-d__8.hpp"
// Including type: BrushController/<FadeSphere>d__9
#include "GlobalNamespace/BrushController_-FadeSphere-d__9.hpp"
// Including type: PassthroughBrush
#include "GlobalNamespace/PassthroughBrush.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PassthroughBrush brush
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PassthroughBrush*& GlobalNamespace::BrushController::dyn_brush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::dyn_brush");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "brush"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PassthroughBrush**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer backgroundSphere
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::BrushController::dyn_backgroundSphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::dyn_backgroundSphere");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundSphere"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator grabRoutine
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& GlobalNamespace::BrushController::dyn_grabRoutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::dyn_grabRoutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabRoutine"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator releaseRoutine
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& GlobalNamespace::BrushController::dyn_releaseRoutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::dyn_releaseRoutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "releaseRoutine"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BrushController.Start
void GlobalNamespace::BrushController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BrushController.Update
void GlobalNamespace::BrushController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BrushController.Grab
void GlobalNamespace::BrushController::Grab(::GlobalNamespace::OVRInput::Controller grabHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::Grab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Grab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabHand);
}
// Autogenerated method: BrushController.Release
void GlobalNamespace::BrushController::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BrushController.FadeCameraClearColor
::System::Collections::IEnumerator* GlobalNamespace::BrushController::FadeCameraClearColor(::UnityEngine::Color newColor, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::FadeCameraClearColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeCameraClearColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newColor), ::il2cpp_utils::ExtractType(fadeTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, newColor, fadeTime);
}
// Autogenerated method: BrushController.FadeSphere
::System::Collections::IEnumerator* GlobalNamespace::BrushController::FadeSphere(::UnityEngine::Color newColor, float fadeTime, bool disableOnFinish) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::FadeSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newColor), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(disableOnFinish)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, newColor, fadeTime, disableOnFinish);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BrushController/<FadeCameraClearColor>d__8
#include "GlobalNamespace/BrushController_-FadeCameraClearColor-d__8.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color newColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::dyn_newColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::dyn_newColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <timer>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::dyn_$timer$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::dyn_$timer$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timer>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <currentColor>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::dyn_$currentColor$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::dyn_$currentColor$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentColor>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BrushController/<FadeCameraClearColor>d__8.System.IDisposable.Dispose
void GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BrushController::$FadeCameraClearColor$d__8*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BrushController/<FadeCameraClearColor>d__8.MoveNext
bool GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BrushController::$FadeCameraClearColor$d__8*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BrushController/<FadeCameraClearColor>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BrushController::$FadeCameraClearColor$d__8*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BrushController/<FadeCameraClearColor>d__8.System.Collections.IEnumerator.Reset
void GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BrushController::$FadeCameraClearColor$d__8*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BrushController/<FadeCameraClearColor>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeCameraClearColor$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BrushController::$FadeCameraClearColor$d__8*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BrushController/<FadeSphere>d__9
#include "GlobalNamespace/BrushController_-FadeSphere-d__9.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BrushController::$FadeSphere$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeSphere$d__9::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::BrushController::$FadeSphere$d__9::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeSphere$d__9::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BrushController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BrushController*& GlobalNamespace::BrushController::$FadeSphere$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeSphere$d__9::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BrushController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BrushController::$FadeSphere$d__9::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeSphere$d__9::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color newColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::BrushController::$FadeSphere$d__9::dyn_newColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeSphere$d__9::dyn_newColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableOnFinish
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BrushController::$FadeSphere$d__9::dyn_disableOnFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeSphere$d__9::dyn_disableOnFinish");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableOnFinish"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <timer>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BrushController::$FadeSphere$d__9::dyn_$timer$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeSphere$d__9::dyn_$timer$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timer>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <currentColor>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::BrushController::$FadeSphere$d__9::dyn_$currentColor$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeSphere$d__9::dyn_$currentColor$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentColor>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BrushController/<FadeSphere>d__9.System.IDisposable.Dispose
void GlobalNamespace::BrushController::$FadeSphere$d__9::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeSphere$d__9::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BrushController::$FadeSphere$d__9*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BrushController/<FadeSphere>d__9.MoveNext
bool GlobalNamespace::BrushController::$FadeSphere$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeSphere$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BrushController::$FadeSphere$d__9*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BrushController/<FadeSphere>d__9.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::BrushController::$FadeSphere$d__9::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeSphere$d__9::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BrushController::$FadeSphere$d__9*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BrushController/<FadeSphere>d__9.System.Collections.IEnumerator.Reset
void GlobalNamespace::BrushController::$FadeSphere$d__9::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeSphere$d__9::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BrushController::$FadeSphere$d__9*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BrushController/<FadeSphere>d__9.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BrushController::$FadeSphere$d__9::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrushController::$FadeSphere$d__9::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BrushController::$FadeSphere$d__9*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: EnableUnpremultipliedAlpha
#include "GlobalNamespace/EnableUnpremultipliedAlpha.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnableUnpremultipliedAlpha.Start
void GlobalNamespace::EnableUnpremultipliedAlpha::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableUnpremultipliedAlpha::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Flashlight
#include "GlobalNamespace/Flashlight.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Light
#include "UnityEngine/Light.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject lightVolume
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::Flashlight::dyn_lightVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flashlight::dyn_lightVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightVolume"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Light spotlight
[[deprecated("Use field access instead!")]] ::UnityEngine::Light*& GlobalNamespace::Flashlight::dyn_spotlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flashlight::dyn_spotlight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spotlight"))->offset;
  return *reinterpret_cast<::UnityEngine::Light**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject bulbGlow
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::Flashlight::dyn_bulbGlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flashlight::dyn_bulbGlow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bulbGlow"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Flashlight.LateUpdate
void GlobalNamespace::Flashlight::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flashlight::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Flashlight.ToggleFlashlight
void GlobalNamespace::Flashlight::ToggleFlashlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flashlight::ToggleFlashlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleFlashlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Flashlight.EnableFlashlight
void GlobalNamespace::Flashlight::EnableFlashlight(bool doEnable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flashlight::EnableFlashlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableFlashlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doEnable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, doEnable);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FlashlightController
#include "GlobalNamespace/FlashlightController.hpp"
// Including type: FlashlightController/<FadeLighting>d__17
#include "GlobalNamespace/FlashlightController_-FadeLighting-d__17.hpp"
// Including type: UnityEngine.Light
#include "UnityEngine/Light.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.TextMesh
#include "UnityEngine/TextMesh.hpp"
// Including type: GrabObject
#include "GlobalNamespace/GrabObject.hpp"
// Including type: OVRSkeleton
#include "GlobalNamespace/OVRSkeleton.hpp"
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Light sceneLight
[[deprecated("Use field access instead!")]] ::UnityEngine::Light*& GlobalNamespace::FlashlightController::dyn_sceneLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::dyn_sceneLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneLight"))->offset;
  return *reinterpret_cast<::UnityEngine::Light**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform flashlightRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::FlashlightController::dyn_flashlightRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::dyn_flashlightRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flashlightRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 localPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::FlashlightController::dyn_localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::dyn_localPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion localRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::FlashlightController::dyn_localRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::dyn_localRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextMesh infoText
[[deprecated("Use field access instead!")]] ::UnityEngine::TextMesh*& GlobalNamespace::FlashlightController::dyn_infoText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::dyn_infoText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "infoText"))->offset;
  return *reinterpret_cast<::UnityEngine::TextMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GrabObject externalController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GrabObject*& GlobalNamespace::FlashlightController::dyn_externalController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::dyn_externalController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GrabObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeleton[] skeletons
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRSkeleton*>& GlobalNamespace::FlashlightController::dyn_skeletons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::dyn_skeletons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skeletons"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRSkeleton*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHand[] hands
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRHand*>& GlobalNamespace::FlashlightController::dyn_hands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::dyn_hands");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hands"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRHand*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 handIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FlashlightController::dyn_handIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::dyn_handIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean pinching
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FlashlightController::dyn_pinching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::dyn_pinching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pinching"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FlashlightController.Start
void GlobalNamespace::FlashlightController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlashlightController.LateUpdate
void GlobalNamespace::FlashlightController::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlashlightController.FindHands
void GlobalNamespace::FlashlightController::FindHands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::FindHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlashlightController.AlignWithHand
void GlobalNamespace::FlashlightController::AlignWithHand(::GlobalNamespace::OVRHand* hand, ::GlobalNamespace::OVRSkeleton* skeleton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::AlignWithHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AlignWithHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(skeleton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, skeleton);
}
// Autogenerated method: FlashlightController.AlignWithController
void GlobalNamespace::FlashlightController::AlignWithController(::GlobalNamespace::OVRInput::Controller controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::AlignWithController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AlignWithController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated method: FlashlightController.Grab
void GlobalNamespace::FlashlightController::Grab(::GlobalNamespace::OVRInput::Controller grabHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::Grab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Grab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabHand);
}
// Autogenerated method: FlashlightController.Release
void GlobalNamespace::FlashlightController::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlashlightController.FadeLighting
::System::Collections::IEnumerator* GlobalNamespace::FlashlightController::FadeLighting(::UnityEngine::Color newColor, float sceneLightIntensity, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::FadeLighting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeLighting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newColor), ::il2cpp_utils::ExtractType(sceneLightIntensity), ::il2cpp_utils::ExtractType(fadeTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, newColor, sceneLightIntensity, fadeTime);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FlashlightController/<FadeLighting>d__17
#include "GlobalNamespace/FlashlightController_-FadeLighting-d__17.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FlashlightController::$FadeLighting$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::$FadeLighting$d__17::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::FlashlightController::$FadeLighting$d__17::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::$FadeLighting$d__17::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FlashlightController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FlashlightController*& GlobalNamespace::FlashlightController::$FadeLighting$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::$FadeLighting$d__17::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FlashlightController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FlashlightController::$FadeLighting$d__17::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::$FadeLighting$d__17::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color newColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::FlashlightController::$FadeLighting$d__17::dyn_newColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::$FadeLighting$d__17::dyn_newColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sceneLightIntensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FlashlightController::$FadeLighting$d__17::dyn_sceneLightIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::$FadeLighting$d__17::dyn_sceneLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneLightIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <timer>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FlashlightController::$FadeLighting$d__17::dyn_$timer$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::$FadeLighting$d__17::dyn_$timer$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timer>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <currentColor>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::FlashlightController::$FadeLighting$d__17::dyn_$currentColor$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::$FadeLighting$d__17::dyn_$currentColor$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentColor>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <currentLight>5__4
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FlashlightController::$FadeLighting$d__17::dyn_$currentLight$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::$FadeLighting$d__17::dyn_$currentLight$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentLight>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FlashlightController/<FadeLighting>d__17.System.IDisposable.Dispose
void GlobalNamespace::FlashlightController::$FadeLighting$d__17::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::$FadeLighting$d__17::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FlashlightController::$FadeLighting$d__17*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlashlightController/<FadeLighting>d__17.MoveNext
bool GlobalNamespace::FlashlightController::$FadeLighting$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::$FadeLighting$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FlashlightController::$FadeLighting$d__17*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FlashlightController/<FadeLighting>d__17.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::FlashlightController::$FadeLighting$d__17::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::$FadeLighting$d__17::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FlashlightController::$FadeLighting$d__17*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FlashlightController/<FadeLighting>d__17.System.Collections.IEnumerator.Reset
void GlobalNamespace::FlashlightController::$FadeLighting$d__17::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::$FadeLighting$d__17::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FlashlightController::$FadeLighting$d__17*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlashlightController/<FadeLighting>d__17.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::FlashlightController::$FadeLighting$d__17::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlashlightController::$FadeLighting$d__17::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FlashlightController::$FadeLighting$d__17*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GrabObject
#include "GlobalNamespace/GrabObject.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: GrabObject/GrabbedObject
#include "GlobalNamespace/GrabObject_GrabbedObject.hpp"
// Including type: GrabObject/ReleasedObject
#include "GlobalNamespace/GrabObject_ReleasedObject.hpp"
// Including type: GrabObject/SetCursorPosition
#include "GlobalNamespace/GrabObject_SetCursorPosition.hpp"
// Including type: OVRInput/Controller
#include "GlobalNamespace/OVRInput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String ObjectName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GrabObject::dyn_ObjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::dyn_ObjectName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ObjectName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ObjectInstructions
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GrabObject::dyn_ObjectInstructions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::dyn_ObjectInstructions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ObjectInstructions"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GrabObject/ManipulationType objectManipulationType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GrabObject::ManipulationType& GlobalNamespace::GrabObject::dyn_objectManipulationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::dyn_objectManipulationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectManipulationType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GrabObject::ManipulationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showLaserWhileGrabbed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GrabObject::dyn_showLaserWhileGrabbed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::dyn_showLaserWhileGrabbed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showLaserWhileGrabbed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion grabbedRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::GrabObject::dyn_grabbedRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::dyn_grabbedRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabbedRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GrabObject/GrabbedObject GrabbedObjectDelegate
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GrabObject::GrabbedObject*& GlobalNamespace::GrabObject::dyn_GrabbedObjectDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::dyn_GrabbedObjectDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GrabbedObjectDelegate"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GrabObject::GrabbedObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GrabObject/ReleasedObject ReleasedObjectDelegate
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GrabObject::ReleasedObject*& GlobalNamespace::GrabObject::dyn_ReleasedObjectDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::dyn_ReleasedObjectDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReleasedObjectDelegate"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GrabObject::ReleasedObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GrabObject/SetCursorPosition CursorPositionDelegate
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GrabObject::SetCursorPosition*& GlobalNamespace::GrabObject::dyn_CursorPositionDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::dyn_CursorPositionDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CursorPositionDelegate"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GrabObject::SetCursorPosition**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GrabObject.Grab
void GlobalNamespace::GrabObject::Grab(::GlobalNamespace::OVRInput::Controller grabHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::Grab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Grab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabHand);
}
// Autogenerated method: GrabObject.Release
void GlobalNamespace::GrabObject::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GrabObject.CursorPos
void GlobalNamespace::GrabObject::CursorPos(::UnityEngine::Vector3 cursorPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::CursorPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CursorPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cursorPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cursorPos);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GrabObject/ManipulationType
#include "GlobalNamespace/GrabObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GrabObject/ManipulationType Default
::GlobalNamespace::GrabObject::ManipulationType GlobalNamespace::GrabObject::ManipulationType::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::ManipulationType::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GrabObject::ManipulationType>("", "GrabObject/ManipulationType", "Default"));
}
// Autogenerated static field setter
// Set static field: static public GrabObject/ManipulationType Default
void GlobalNamespace::GrabObject::ManipulationType::_set_Default(::GlobalNamespace::GrabObject::ManipulationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::ManipulationType::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GrabObject/ManipulationType", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public GrabObject/ManipulationType ForcedHand
::GlobalNamespace::GrabObject::ManipulationType GlobalNamespace::GrabObject::ManipulationType::_get_ForcedHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::ManipulationType::_get_ForcedHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GrabObject::ManipulationType>("", "GrabObject/ManipulationType", "ForcedHand"));
}
// Autogenerated static field setter
// Set static field: static public GrabObject/ManipulationType ForcedHand
void GlobalNamespace::GrabObject::ManipulationType::_set_ForcedHand(::GlobalNamespace::GrabObject::ManipulationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::ManipulationType::_set_ForcedHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GrabObject/ManipulationType", "ForcedHand", value));
}
// Autogenerated static field getter
// Get static field: static public GrabObject/ManipulationType DollyHand
::GlobalNamespace::GrabObject::ManipulationType GlobalNamespace::GrabObject::ManipulationType::_get_DollyHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::ManipulationType::_get_DollyHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GrabObject::ManipulationType>("", "GrabObject/ManipulationType", "DollyHand"));
}
// Autogenerated static field setter
// Set static field: static public GrabObject/ManipulationType DollyHand
void GlobalNamespace::GrabObject::ManipulationType::_set_DollyHand(::GlobalNamespace::GrabObject::ManipulationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::ManipulationType::_set_DollyHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GrabObject/ManipulationType", "DollyHand", value));
}
// Autogenerated static field getter
// Get static field: static public GrabObject/ManipulationType DollyAttached
::GlobalNamespace::GrabObject::ManipulationType GlobalNamespace::GrabObject::ManipulationType::_get_DollyAttached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::ManipulationType::_get_DollyAttached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GrabObject::ManipulationType>("", "GrabObject/ManipulationType", "DollyAttached"));
}
// Autogenerated static field setter
// Set static field: static public GrabObject/ManipulationType DollyAttached
void GlobalNamespace::GrabObject::ManipulationType::_set_DollyAttached(::GlobalNamespace::GrabObject::ManipulationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::ManipulationType::_set_DollyAttached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GrabObject/ManipulationType", "DollyAttached", value));
}
// Autogenerated static field getter
// Get static field: static public GrabObject/ManipulationType HorizontalScaled
::GlobalNamespace::GrabObject::ManipulationType GlobalNamespace::GrabObject::ManipulationType::_get_HorizontalScaled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::ManipulationType::_get_HorizontalScaled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GrabObject::ManipulationType>("", "GrabObject/ManipulationType", "HorizontalScaled"));
}
// Autogenerated static field setter
// Set static field: static public GrabObject/ManipulationType HorizontalScaled
void GlobalNamespace::GrabObject::ManipulationType::_set_HorizontalScaled(::GlobalNamespace::GrabObject::ManipulationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::ManipulationType::_set_HorizontalScaled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GrabObject/ManipulationType", "HorizontalScaled", value));
}
// Autogenerated static field getter
// Get static field: static public GrabObject/ManipulationType VerticalScaled
::GlobalNamespace::GrabObject::ManipulationType GlobalNamespace::GrabObject::ManipulationType::_get_VerticalScaled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::ManipulationType::_get_VerticalScaled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GrabObject::ManipulationType>("", "GrabObject/ManipulationType", "VerticalScaled"));
}
// Autogenerated static field setter
// Set static field: static public GrabObject/ManipulationType VerticalScaled
void GlobalNamespace::GrabObject::ManipulationType::_set_VerticalScaled(::GlobalNamespace::GrabObject::ManipulationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::ManipulationType::_set_VerticalScaled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GrabObject/ManipulationType", "VerticalScaled", value));
}
// Autogenerated static field getter
// Get static field: static public GrabObject/ManipulationType Menu
::GlobalNamespace::GrabObject::ManipulationType GlobalNamespace::GrabObject::ManipulationType::_get_Menu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::ManipulationType::_get_Menu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GrabObject::ManipulationType>("", "GrabObject/ManipulationType", "Menu"));
}
// Autogenerated static field setter
// Set static field: static public GrabObject/ManipulationType Menu
void GlobalNamespace::GrabObject::ManipulationType::_set_Menu(::GlobalNamespace::GrabObject::ManipulationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::ManipulationType::_set_Menu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GrabObject/ManipulationType", "Menu", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GrabObject::ManipulationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::ManipulationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GrabObject/GrabbedObject
#include "GlobalNamespace/GrabObject_GrabbedObject.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: OVRInput/Controller
#include "GlobalNamespace/OVRInput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GrabObject/GrabbedObject.Invoke
void GlobalNamespace::GrabObject::GrabbedObject::Invoke(::GlobalNamespace::OVRInput::Controller grabHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::GrabbedObject::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GrabObject::GrabbedObject*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabHand);
}
// Autogenerated method: GrabObject/GrabbedObject.BeginInvoke
::System::IAsyncResult* GlobalNamespace::GrabObject::GrabbedObject::BeginInvoke(::GlobalNamespace::OVRInput::Controller grabHand, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::GrabbedObject::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GrabObject::GrabbedObject*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, grabHand, callback, object);
}
// Autogenerated method: GrabObject/GrabbedObject.EndInvoke
void GlobalNamespace::GrabObject::GrabbedObject::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::GrabbedObject::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GrabObject::GrabbedObject*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GrabObject/ReleasedObject
#include "GlobalNamespace/GrabObject_ReleasedObject.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GrabObject/ReleasedObject.Invoke
void GlobalNamespace::GrabObject::ReleasedObject::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::ReleasedObject::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GrabObject::ReleasedObject*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GrabObject/ReleasedObject.BeginInvoke
::System::IAsyncResult* GlobalNamespace::GrabObject::ReleasedObject::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::ReleasedObject::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GrabObject::ReleasedObject*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: GrabObject/ReleasedObject.EndInvoke
void GlobalNamespace::GrabObject::ReleasedObject::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::ReleasedObject::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GrabObject::ReleasedObject*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GrabObject/SetCursorPosition
#include "GlobalNamespace/GrabObject_SetCursorPosition.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GrabObject/SetCursorPosition.Invoke
void GlobalNamespace::GrabObject::SetCursorPosition::Invoke(::UnityEngine::Vector3 cursorPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::SetCursorPosition::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GrabObject::SetCursorPosition*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cursorPosition);
}
// Autogenerated method: GrabObject/SetCursorPosition.BeginInvoke
::System::IAsyncResult* GlobalNamespace::GrabObject::SetCursorPosition::BeginInvoke(::UnityEngine::Vector3 cursorPosition, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::SetCursorPosition::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GrabObject::SetCursorPosition*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, cursorPosition, callback, object);
}
// Autogenerated method: GrabObject/SetCursorPosition.EndInvoke
void GlobalNamespace::GrabObject::SetCursorPosition::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GrabObject::SetCursorPosition::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GrabObject::SetCursorPosition*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: HandMeshMask
#include "GlobalNamespace/HandMeshMask.hpp"
// Including type: OVRSkeleton
#include "GlobalNamespace/OVRSkeleton.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRSkeleton referenceHand
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSkeleton*& GlobalNamespace::HandMeshMask::dyn_referenceHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::dyn_referenceHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referenceHand"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSkeleton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material maskMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::HandMeshMask::dyn_maskMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::dyn_maskMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maskMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 radialDivisions
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HandMeshMask::dyn_radialDivisions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::dyn_radialDivisions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radialDivisions"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single borderSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandMeshMask::dyn_borderSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::dyn_borderSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "borderSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fingerTaper
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandMeshMask::dyn_fingerTaper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::dyn_fingerTaper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fingerTaper"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fingerTipLength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandMeshMask::dyn_fingerTipLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::dyn_fingerTipLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fingerTipLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single webOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandMeshMask::dyn_webOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::dyn_webOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "webOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single handScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandMeshMask::dyn_handScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::dyn_handScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject maskMeshObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::HandMeshMask::dyn_maskMeshObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::dyn_maskMeshObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maskMeshObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh maskMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::HandMeshMask::dyn_maskMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::dyn_maskMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maskMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] handVertices
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::HandMeshMask::dyn_handVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::dyn_handVertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handVertices"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2[] handUVs
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2>& GlobalNamespace::HandMeshMask::dyn_handUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::dyn_handUVs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handUVs"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color32[] handColors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color32>& GlobalNamespace::HandMeshMask::dyn_handColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::dyn_handColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handColors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color32>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] handTriangles
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::HandMeshMask::dyn_handTriangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::dyn_handTriangles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handTriangles"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 vertCounter
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HandMeshMask::dyn_vertCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::dyn_vertCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vertCounter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 triCounter
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HandMeshMask::dyn_triCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::dyn_triCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triCounter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HandMeshMask.Awake
void GlobalNamespace::HandMeshMask::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandMeshMask.Update
void GlobalNamespace::HandMeshMask::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandMeshMask.CreateHandMesh
void GlobalNamespace::HandMeshMask::CreateHandMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::CreateHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandMeshMask.AddKnuckleMesh
void GlobalNamespace::HandMeshMask::AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, ::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::AddKnuckleMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKnuckleMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(knuckleVerts), ::il2cpp_utils::ExtractType(point1scale), ::il2cpp_utils::ExtractType(point2scale), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, knuckleVerts, point1scale, point2scale, point1, point2);
}
// Autogenerated method: HandMeshMask.AddPalmMesh
void GlobalNamespace::HandMeshMask::AddPalmMesh(int knuckleVerts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::AddPalmMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPalmMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(knuckleVerts)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, knuckleVerts);
}
// Autogenerated method: HandMeshMask.AddVertex
void GlobalNamespace::HandMeshMask::AddVertex(::UnityEngine::Vector3 position, ::UnityEngine::Vector2 uv, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshMask::AddVertex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddVertex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(uv), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, uv, color);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: HandMeshUI
#include "GlobalNamespace/HandMeshUI.hpp"
// Including type: UnityEngine.SphereCollider
#include "UnityEngine/SphereCollider.hpp"
// Including type: UnityEngine.TextMesh
#include "UnityEngine/TextMesh.hpp"
// Including type: OVRSkeleton
#include "GlobalNamespace/OVRSkeleton.hpp"
// Including type: HandMeshMask
#include "GlobalNamespace/HandMeshMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SphereCollider[] knobs
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::SphereCollider*>& GlobalNamespace::HandMeshUI::dyn_knobs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshUI::dyn_knobs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "knobs"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::SphereCollider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextMesh[] readouts
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::TextMesh*>& GlobalNamespace::HandMeshUI::dyn_readouts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshUI::dyn_readouts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readouts"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::TextMesh*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 rightHeldKnob
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HandMeshUI::dyn_rightHeldKnob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshUI::dyn_rightHeldKnob");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHeldKnob"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 leftHeldKnob
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HandMeshUI::dyn_leftHeldKnob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshUI::dyn_leftHeldKnob");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHeldKnob"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSkeleton leftHand
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSkeleton*& GlobalNamespace::HandMeshUI::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshUI::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSkeleton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSkeleton rightHand
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSkeleton*& GlobalNamespace::HandMeshUI::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshUI::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSkeleton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HandMeshMask leftMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HandMeshMask*& GlobalNamespace::HandMeshUI::dyn_leftMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshUI::dyn_leftMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HandMeshMask**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HandMeshMask rightMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HandMeshMask*& GlobalNamespace::HandMeshUI::dyn_rightMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshUI::dyn_rightMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HandMeshMask**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HandMeshUI.Start
void GlobalNamespace::HandMeshUI::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshUI::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandMeshUI.Update
void GlobalNamespace::HandMeshUI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshUI::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandMeshUI.SetSliderValue
void GlobalNamespace::HandMeshUI::SetSliderValue(int sliderID, float value, bool isNormalized) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshUI::SetSliderValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSliderValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderID), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(isNormalized)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderID, value, isNormalized);
}
// Autogenerated method: HandMeshUI.CheckForHands
void GlobalNamespace::HandMeshUI::CheckForHands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandMeshUI::CheckForHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ObjectManipulator
#include "GlobalNamespace/ObjectManipulator.hpp"
// Including type: ObjectManipulator/<StartDemo>d__23
#include "GlobalNamespace/ObjectManipulator_-StartDemo-d__23.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.TextMesh
#include "UnityEngine/TextMesh.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: OVRPassthroughLayer
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: GrabObject
#include "GlobalNamespace/GrabObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller controller
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::ObjectManipulator::dyn_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controller"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject hoverObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::ObjectManipulator::dyn_hoverObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_hoverObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hoverObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject grabObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::ObjectManipulator::dyn_grabObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_grabObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single grabTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ObjectManipulator::dyn_grabTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_grabTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 localGrabOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ObjectManipulator::dyn_localGrabOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_localGrabOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localGrabOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion localGrabRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::ObjectManipulator::dyn_localGrabRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_localGrabRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localGrabRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 camGrabPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ObjectManipulator::dyn_camGrabPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_camGrabPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "camGrabPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion camGrabRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::ObjectManipulator::dyn_camGrabRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_camGrabRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "camGrabRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 handGrabPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ObjectManipulator::dyn_handGrabPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_handGrabPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handGrabPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion handGrabRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::ObjectManipulator::dyn_handGrabRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_handGrabRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handGrabRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 cursorPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ObjectManipulator::dyn_cursorPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_cursorPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cursorPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotationOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ObjectManipulator::dyn_rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_rotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LineRenderer laser
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::ObjectManipulator::dyn_laser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_laser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laser"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform objectInfo
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::ObjectManipulator::dyn_objectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_objectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectInfo"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextMesh objectNameLabel
[[deprecated("Use field access instead!")]] ::UnityEngine::TextMesh*& GlobalNamespace::ObjectManipulator::dyn_objectNameLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_objectNameLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectNameLabel"))->offset;
  return *reinterpret_cast<::UnityEngine::TextMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextMesh objectInstructionsLabel
[[deprecated("Use field access instead!")]] ::UnityEngine::TextMesh*& GlobalNamespace::ObjectManipulator::dyn_objectInstructionsLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_objectInstructionsLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectInstructionsLabel"))->offset;
  return *reinterpret_cast<::UnityEngine::TextMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image objectInfoBG
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::ObjectManipulator::dyn_objectInfoBG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_objectInfoBG");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectInfoBG"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject demoObjects
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::ObjectManipulator::dyn_demoObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_demoObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "demoObjects"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPassthroughLayer passthrough
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer*& GlobalNamespace::ObjectManipulator::dyn_passthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::dyn_passthrough");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passthrough"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObjectManipulator.Start
void GlobalNamespace::ObjectManipulator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObjectManipulator.Update
void GlobalNamespace::ObjectManipulator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObjectManipulator.GrabHoverObject
void GlobalNamespace::ObjectManipulator::GrabHoverObject(::UnityEngine::GameObject* grbObj, ::UnityEngine::Vector3 controllerPos, ::UnityEngine::Quaternion controllerRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::GrabHoverObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabHoverObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grbObj), ::il2cpp_utils::ExtractType(controllerPos), ::il2cpp_utils::ExtractType(controllerRot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grbObj, controllerPos, controllerRot);
}
// Autogenerated method: ObjectManipulator.ReleaseObject
void GlobalNamespace::ObjectManipulator::ReleaseObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::ReleaseObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObjectManipulator.StartDemo
::System::Collections::IEnumerator* GlobalNamespace::ObjectManipulator::StartDemo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::StartDemo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartDemo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: ObjectManipulator.FindHoverObject
void GlobalNamespace::ObjectManipulator::FindHoverObject(::UnityEngine::Vector3 controllerPos, ::UnityEngine::Quaternion controllerRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::FindHoverObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindHoverObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerPos), ::il2cpp_utils::ExtractType(controllerRot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerPos, controllerRot);
}
// Autogenerated method: ObjectManipulator.ManipulateObject
void GlobalNamespace::ObjectManipulator::ManipulateObject(::UnityEngine::GameObject* obj, ::UnityEngine::Vector3 controllerPos, ::UnityEngine::Quaternion controllerRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::ManipulateObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManipulateObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(controllerPos), ::il2cpp_utils::ExtractType(controllerRot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, controllerPos, controllerRot);
}
// Autogenerated method: ObjectManipulator.ClampGrabOffset
void GlobalNamespace::ObjectManipulator::ClampGrabOffset(ByRef<::UnityEngine::Vector3> localOffset, float thumbY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::ClampGrabOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClampGrabOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localOffset), ::il2cpp_utils::ExtractType(thumbY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(localOffset), thumbY);
}
// Autogenerated method: ObjectManipulator.ClampScale
::UnityEngine::Vector3 GlobalNamespace::ObjectManipulator::ClampScale(::UnityEngine::Vector3 localScale, ::UnityEngine::Vector2 thumb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::ClampScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClampScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localScale), ::il2cpp_utils::ExtractType(thumb)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, localScale, thumb);
}
// Autogenerated method: ObjectManipulator.CheckForDominantHand
void GlobalNamespace::ObjectManipulator::CheckForDominantHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::CheckForDominantHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForDominantHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObjectManipulator.AssignInstructions
void GlobalNamespace::ObjectManipulator::AssignInstructions(::GlobalNamespace::GrabObject* targetObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::AssignInstructions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignInstructions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetObject);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ObjectManipulator/<StartDemo>d__23
#include "GlobalNamespace/ObjectManipulator_-StartDemo-d__23.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ObjectManipulator::$StartDemo$d__23::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::$StartDemo$d__23::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::ObjectManipulator::$StartDemo$d__23::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::$StartDemo$d__23::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ObjectManipulator <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObjectManipulator*& GlobalNamespace::ObjectManipulator::$StartDemo$d__23::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::$StartDemo$d__23::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectManipulator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <timer>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ObjectManipulator::$StartDemo$d__23::dyn_$timer$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::$StartDemo$d__23::dyn_$timer$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timer>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <fadeTime>5__3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ObjectManipulator::$StartDemo$d__23::dyn_$fadeTime$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::$StartDemo$d__23::dyn_$fadeTime$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<fadeTime>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObjectManipulator/<StartDemo>d__23.System.IDisposable.Dispose
void GlobalNamespace::ObjectManipulator::$StartDemo$d__23::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::$StartDemo$d__23::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ObjectManipulator::$StartDemo$d__23*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObjectManipulator/<StartDemo>d__23.MoveNext
bool GlobalNamespace::ObjectManipulator::$StartDemo$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::$StartDemo$d__23::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ObjectManipulator::$StartDemo$d__23*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ObjectManipulator/<StartDemo>d__23.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ObjectManipulator::$StartDemo$d__23::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::$StartDemo$d__23::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ObjectManipulator::$StartDemo$d__23*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ObjectManipulator/<StartDemo>d__23.System.Collections.IEnumerator.Reset
void GlobalNamespace::ObjectManipulator::$StartDemo$d__23::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::$StartDemo$d__23::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ObjectManipulator::$StartDemo$d__23*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObjectManipulator/<StartDemo>d__23.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ObjectManipulator::$StartDemo$d__23::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectManipulator::$StartDemo$d__23::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ObjectManipulator::$StartDemo$d__23*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OverlayPassthrough
#include "GlobalNamespace/OverlayPassthrough.hpp"
// Including type: OVRPassthroughLayer
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRPassthroughLayer passthroughLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer*& GlobalNamespace::OverlayPassthrough::dyn_passthroughLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverlayPassthrough::dyn_passthroughLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passthroughLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OverlayPassthrough.Start
void GlobalNamespace::OverlayPassthrough::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverlayPassthrough::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OverlayPassthrough.Update
void GlobalNamespace::OverlayPassthrough::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverlayPassthrough::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PassthroughBrush
#include "GlobalNamespace/PassthroughBrush.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRInput/Controller controllerHand
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::PassthroughBrush::dyn_controllerHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::dyn_controllerHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerHand"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject lineSegmentPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PassthroughBrush::dyn_lineSegmentPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::dyn_lineSegmentPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineSegmentPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject lineContainer
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PassthroughBrush::dyn_lineContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::dyn_lineContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineContainer"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean forceActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PassthroughBrush::dyn_forceActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::dyn_forceActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forceActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer currentLineSegment
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::PassthroughBrush::dyn_currentLineSegment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::dyn_currentLineSegment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentLineSegment"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> inkPositions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::PassthroughBrush::dyn_inkPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::dyn_inkPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inkPositions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single minInkDist
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PassthroughBrush::dyn_minInkDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::dyn_minInkDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minInkDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single strokeWidth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PassthroughBrush::dyn_strokeWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::dyn_strokeWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strokeWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single strokeLength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PassthroughBrush::dyn_strokeLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::dyn_strokeLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strokeLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PassthroughBrush/BrushState brushStatus
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PassthroughBrush::BrushState& GlobalNamespace::PassthroughBrush::dyn_brushStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::dyn_brushStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "brushStatus"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PassthroughBrush::BrushState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PassthroughBrush.OnDisable
void GlobalNamespace::PassthroughBrush::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughBrush.LateUpdate
void GlobalNamespace::PassthroughBrush::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughBrush.StartLine
void GlobalNamespace::PassthroughBrush::StartLine(::UnityEngine::Vector3 inkPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::StartLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inkPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inkPos);
}
// Autogenerated method: PassthroughBrush.UpdateLine
void GlobalNamespace::PassthroughBrush::UpdateLine(::UnityEngine::Vector3 inkPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::UpdateLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inkPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inkPos);
}
// Autogenerated method: PassthroughBrush.ClearLines
void GlobalNamespace::PassthroughBrush::ClearLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::ClearLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughBrush.UndoInkLine
void GlobalNamespace::PassthroughBrush::UndoInkLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::UndoInkLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UndoInkLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PassthroughBrush/BrushState
#include "GlobalNamespace/PassthroughBrush.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PassthroughBrush/BrushState Idle
::GlobalNamespace::PassthroughBrush::BrushState GlobalNamespace::PassthroughBrush::BrushState::_get_Idle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::BrushState::_get_Idle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PassthroughBrush::BrushState>("", "PassthroughBrush/BrushState", "Idle"));
}
// Autogenerated static field setter
// Set static field: static public PassthroughBrush/BrushState Idle
void GlobalNamespace::PassthroughBrush::BrushState::_set_Idle(::GlobalNamespace::PassthroughBrush::BrushState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::BrushState::_set_Idle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PassthroughBrush/BrushState", "Idle", value));
}
// Autogenerated static field getter
// Get static field: static public PassthroughBrush/BrushState Inking
::GlobalNamespace::PassthroughBrush::BrushState GlobalNamespace::PassthroughBrush::BrushState::_get_Inking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::BrushState::_get_Inking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PassthroughBrush::BrushState>("", "PassthroughBrush/BrushState", "Inking"));
}
// Autogenerated static field setter
// Set static field: static public PassthroughBrush/BrushState Inking
void GlobalNamespace::PassthroughBrush::BrushState::_set_Inking(::GlobalNamespace::PassthroughBrush::BrushState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::BrushState::_set_Inking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PassthroughBrush/BrushState", "Inking", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PassthroughBrush::BrushState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughBrush::BrushState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PassthroughController
#include "GlobalNamespace/PassthroughController.hpp"
// Including type: OVRPassthroughLayer
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRPassthroughLayer passthroughLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer*& GlobalNamespace::PassthroughController::dyn_passthroughLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughController::dyn_passthroughLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passthroughLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PassthroughController.Start
void GlobalNamespace::PassthroughController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughController.Update
void GlobalNamespace::PassthroughController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PassthroughProjectionSurface
#include "GlobalNamespace/PassthroughProjectionSurface.hpp"
// Including type: OVRPassthroughLayer
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRPassthroughLayer passthroughLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer*& GlobalNamespace::PassthroughProjectionSurface::dyn_passthroughLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughProjectionSurface::dyn_passthroughLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passthroughLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshFilter projectionObject
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::PassthroughProjectionSurface::dyn_projectionObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughProjectionSurface::dyn_projectionObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "projectionObject"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer quadOutline
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::PassthroughProjectionSurface::dyn_quadOutline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughProjectionSurface::dyn_quadOutline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quadOutline"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PassthroughProjectionSurface.Start
void GlobalNamespace::PassthroughProjectionSurface::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughProjectionSurface::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughProjectionSurface.Update
void GlobalNamespace::PassthroughProjectionSurface::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughProjectionSurface::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PassthroughStyler
#include "GlobalNamespace/PassthroughStyler.hpp"
// Including type: PassthroughStyler/<FadeTo>d__33
#include "GlobalNamespace/PassthroughStyler_-FadeTo-d__33.hpp"
// Including type: PassthroughStyler/<FadeToCurrentStyle>d__31
#include "GlobalNamespace/PassthroughStyler_-FadeToCurrentStyle-d__31.hpp"
// Including type: PassthroughStyler/<FadeToDefaultPassthrough>d__32
#include "GlobalNamespace/PassthroughStyler_-FadeToDefaultPassthrough-d__32.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRPassthroughColorLut
#include "GlobalNamespace/OVRPassthroughColorLut.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single FadeDuration
float GlobalNamespace::PassthroughStyler::_get_FadeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::_get_FadeDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "PassthroughStyler", "FadeDuration"));
}
// Autogenerated static field setter
// Set static field: static private System.Single FadeDuration
void GlobalNamespace::PassthroughStyler::_set_FadeDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::_set_FadeDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PassthroughStyler", "FadeDuration", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller _controllerHand
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::PassthroughStyler::dyn__controllerHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::dyn__controllerHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllerHand"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPassthroughLayer _passthroughLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer*& GlobalNamespace::PassthroughStyler::dyn__passthroughLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::dyn__passthroughLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_passthroughLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _colorWheel
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::PassthroughStyler::dyn__colorWheel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::dyn__colorWheel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorWheel"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _colorTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::PassthroughStyler::dyn__colorTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::dyn__colorTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _colorLutTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::PassthroughStyler::dyn__colorLutTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::dyn__colorLutTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorLutTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _mainCanvas
[[deprecated("Use field access instead!")]] ::UnityEngine::CanvasGroup*& GlobalNamespace::PassthroughStyler::dyn__mainCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::dyn__mainCanvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainCanvas"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _compactObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::PassthroughStyler::dyn__compactObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::dyn__compactObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compactObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _objectsToHideForColorPassthrough
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::PassthroughStyler::dyn__objectsToHideForColorPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::dyn__objectsToHideForColorPassthrough");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectsToHideForColorPassthrough"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _cursorPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::PassthroughStyler::dyn__cursorPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::dyn__cursorPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cursorPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _settingColor
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PassthroughStyler::dyn__settingColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::dyn__settingColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingColor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _savedColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::PassthroughStyler::dyn__savedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::dyn__savedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_savedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _savedBrightness
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PassthroughStyler::dyn__savedBrightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::dyn__savedBrightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_savedBrightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _savedContrast
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PassthroughStyler::dyn__savedContrast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::dyn__savedContrast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_savedContrast"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _savedSaturation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PassthroughStyler::dyn__savedSaturation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::dyn__savedSaturation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_savedSaturation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPassthroughLayer/ColorMapEditorType _currentStyle
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType& GlobalNamespace::PassthroughStyler::dyn__currentStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::dyn__currentStyle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentStyle"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _savedBlend
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PassthroughStyler::dyn__savedBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::dyn__savedBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_savedBlend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPassthroughColorLut _passthroughColorLut
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughColorLut*& GlobalNamespace::PassthroughStyler::dyn__passthroughColorLut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::dyn__passthroughColorLut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_passthroughColorLut"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughColorLut**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator _fade
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& GlobalNamespace::PassthroughStyler::dyn__fade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::dyn__fade");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fade"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PassthroughStyler.Start
void GlobalNamespace::PassthroughStyler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughStyler.Update
void GlobalNamespace::PassthroughStyler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughStyler.OnBrightnessChanged
void GlobalNamespace::PassthroughStyler::OnBrightnessChanged(float newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::OnBrightnessChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBrightnessChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newValue);
}
// Autogenerated method: PassthroughStyler.OnContrastChanged
void GlobalNamespace::PassthroughStyler::OnContrastChanged(float newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::OnContrastChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnContrastChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newValue);
}
// Autogenerated method: PassthroughStyler.OnSaturationChanged
void GlobalNamespace::PassthroughStyler::OnSaturationChanged(float newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::OnSaturationChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSaturationChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newValue);
}
// Autogenerated method: PassthroughStyler.OnAlphaChanged
void GlobalNamespace::PassthroughStyler::OnAlphaChanged(float newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::OnAlphaChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAlphaChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newValue);
}
// Autogenerated method: PassthroughStyler.OnBlendChange
void GlobalNamespace::PassthroughStyler::OnBlendChange(float newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::OnBlendChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBlendChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newValue);
}
// Autogenerated method: PassthroughStyler.DoColorDrag
void GlobalNamespace::PassthroughStyler::DoColorDrag(bool doDrag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::DoColorDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoColorDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doDrag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, doDrag);
}
// Autogenerated method: PassthroughStyler.SetPassthroughStyleToColorAdjustment
void GlobalNamespace::PassthroughStyler::SetPassthroughStyleToColorAdjustment(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::SetPassthroughStyleToColorAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPassthroughStyleToColorAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: PassthroughStyler.SetPassthroughStyleToColorLut
void GlobalNamespace::PassthroughStyler::SetPassthroughStyleToColorLut(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::SetPassthroughStyleToColorLut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPassthroughStyleToColorLut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: PassthroughStyler.Grab
void GlobalNamespace::PassthroughStyler::Grab(::GlobalNamespace::OVRInput::Controller grabHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::Grab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Grab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabHand);
}
// Autogenerated method: PassthroughStyler.Release
void GlobalNamespace::PassthroughStyler::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughStyler.FadeToCurrentStyle
::System::Collections::IEnumerator* GlobalNamespace::PassthroughStyler::FadeToCurrentStyle(float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::FadeToCurrentStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeToCurrentStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, fadeTime);
}
// Autogenerated method: PassthroughStyler.FadeToDefaultPassthrough
::System::Collections::IEnumerator* GlobalNamespace::PassthroughStyler::FadeToDefaultPassthrough(float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::FadeToDefaultPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeToDefaultPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, fadeTime);
}
// Autogenerated method: PassthroughStyler.FadeTo
::System::Collections::IEnumerator* GlobalNamespace::PassthroughStyler::FadeTo(float styleValueMultiplier, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::FadeTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(styleValueMultiplier), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, styleValueMultiplier, duration);
}
// Autogenerated method: PassthroughStyler.UpdateBrighnessContrastSaturation
void GlobalNamespace::PassthroughStyler::UpdateBrighnessContrastSaturation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::UpdateBrighnessContrastSaturation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBrighnessContrastSaturation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughStyler.ShowFullMenu
void GlobalNamespace::PassthroughStyler::ShowFullMenu(bool doShow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::ShowFullMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowFullMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doShow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, doShow);
}
// Autogenerated method: PassthroughStyler.Cursor
void GlobalNamespace::PassthroughStyler::Cursor(::UnityEngine::Vector3 cP) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::Cursor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cursor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cP)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cP);
}
// Autogenerated method: PassthroughStyler.GetColorFromWheel
void GlobalNamespace::PassthroughStyler::GetColorFromWheel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::GetColorFromWheel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorFromWheel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughStyler.SetPassthroughStyle
void GlobalNamespace::PassthroughStyler::SetPassthroughStyle(::GlobalNamespace::OVRPassthroughLayer::ColorMapEditorType passthroughStyle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::SetPassthroughStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPassthroughStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(passthroughStyle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, passthroughStyle);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PassthroughStyler/<FadeTo>d__33
#include "GlobalNamespace/PassthroughStyler_-FadeTo-d__33.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PassthroughStyler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PassthroughStyler*& GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PassthroughStyler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single duration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single styleValueMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_styleValueMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_styleValueMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "styleValueMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <timer>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_$timer$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_$timer$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timer>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <brightness>5__3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_$brightness$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_$brightness$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<brightness>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <contrast>5__4
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_$contrast$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_$contrast$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<contrast>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <saturation>5__5
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_$saturation$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_$saturation$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<saturation>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <edgeCol>5__6
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_$edgeCol$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_$edgeCol$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<edgeCol>5__6"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <blend>5__7
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_$blend$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeTo$d__33::dyn_$blend$5__7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<blend>5__7"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PassthroughStyler/<FadeTo>d__33.System.IDisposable.Dispose
void GlobalNamespace::PassthroughStyler::$FadeTo$d__33::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeTo$d__33::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PassthroughStyler::$FadeTo$d__33*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughStyler/<FadeTo>d__33.MoveNext
bool GlobalNamespace::PassthroughStyler::$FadeTo$d__33::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeTo$d__33::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PassthroughStyler::$FadeTo$d__33*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughStyler/<FadeTo>d__33.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::PassthroughStyler::$FadeTo$d__33::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeTo$d__33::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PassthroughStyler::$FadeTo$d__33*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughStyler/<FadeTo>d__33.System.Collections.IEnumerator.Reset
void GlobalNamespace::PassthroughStyler::$FadeTo$d__33::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeTo$d__33::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PassthroughStyler::$FadeTo$d__33*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughStyler/<FadeTo>d__33.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::PassthroughStyler::$FadeTo$d__33::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeTo$d__33::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PassthroughStyler::$FadeTo$d__33*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PassthroughStyler/<FadeToCurrentStyle>d__31
#include "GlobalNamespace/PassthroughStyler_-FadeToCurrentStyle-d__31.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PassthroughStyler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PassthroughStyler*& GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PassthroughStyler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PassthroughStyler/<FadeToCurrentStyle>d__31.System.IDisposable.Dispose
void GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughStyler/<FadeToCurrentStyle>d__31.MoveNext
bool GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughStyler/<FadeToCurrentStyle>d__31.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughStyler/<FadeToCurrentStyle>d__31.System.Collections.IEnumerator.Reset
void GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughStyler/<FadeToCurrentStyle>d__31.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PassthroughStyler::$FadeToCurrentStyle$d__31*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PassthroughStyler/<FadeToDefaultPassthrough>d__32
#include "GlobalNamespace/PassthroughStyler_-FadeToDefaultPassthrough-d__32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PassthroughStyler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PassthroughStyler*& GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PassthroughStyler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PassthroughStyler/<FadeToDefaultPassthrough>d__32.System.IDisposable.Dispose
void GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughStyler/<FadeToDefaultPassthrough>d__32.MoveNext
bool GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughStyler/<FadeToDefaultPassthrough>d__32.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughStyler/<FadeToDefaultPassthrough>d__32.System.Collections.IEnumerator.Reset
void GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PassthroughStyler/<FadeToDefaultPassthrough>d__32.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PassthroughStyler::$FadeToDefaultPassthrough$d__32*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PassthroughSurface
#include "GlobalNamespace/PassthroughSurface.hpp"
// Including type: OVRPassthroughLayer
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRPassthroughLayer passthroughLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer*& GlobalNamespace::PassthroughSurface::dyn_passthroughLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughSurface::dyn_passthroughLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passthroughLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshFilter projectionObject
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::PassthroughSurface::dyn_projectionObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughSurface::dyn_projectionObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "projectionObject"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PassthroughSurface.Start
void GlobalNamespace::PassthroughSurface::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PassthroughSurface::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SceneSampler
#include "GlobalNamespace/SceneSampler.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentSceneIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SceneSampler::dyn_currentSceneIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneSampler::dyn_currentSceneIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSceneIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject displayText
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::SceneSampler::dyn_displayText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneSampler::dyn_displayText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "displayText"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SceneSampler.Awake
void GlobalNamespace::SceneSampler::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneSampler::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SceneSampler.Update
void GlobalNamespace::SceneSampler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneSampler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SelectivePassthroughExperience
#include "GlobalNamespace/SelectivePassthroughExperience.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject leftMaskObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::SelectivePassthroughExperience::dyn_leftMaskObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectivePassthroughExperience::dyn_leftMaskObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftMaskObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject rightMaskObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::SelectivePassthroughExperience::dyn_rightMaskObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectivePassthroughExperience::dyn_rightMaskObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightMaskObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SelectivePassthroughExperience.Update
void GlobalNamespace::SelectivePassthroughExperience::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectivePassthroughExperience::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SPPquad
#include "GlobalNamespace/SPPquad.hpp"
// Including type: OVRPassthroughLayer
#include "GlobalNamespace/OVRPassthroughLayer.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRPassthroughLayer passthroughLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPassthroughLayer*& GlobalNamespace::SPPquad::dyn_passthroughLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SPPquad::dyn_passthroughLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passthroughLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPassthroughLayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshFilter projectionObject
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::SPPquad::dyn_projectionObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SPPquad::dyn_projectionObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "projectionObject"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller controllerHand
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::SPPquad::dyn_controllerHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SPPquad::dyn_controllerHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerHand"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SPPquad.Start
void GlobalNamespace::SPPquad::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SPPquad::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SPPquad.Grab
void GlobalNamespace::SPPquad::Grab(::GlobalNamespace::OVRInput::Controller grabHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SPPquad::Grab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Grab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabHand);
}
// Autogenerated method: SPPquad.Release
void GlobalNamespace::SPPquad::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SPPquad::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BouncingBallLogic
#include "GlobalNamespace/BouncingBallLogic.hpp"
// Including type: BouncingBallLogic/<PlayPopCallback>d__18
#include "GlobalNamespace/BouncingBallLogic_-PlayPopCallback-d__18.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single TTL
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BouncingBallLogic::dyn_TTL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::dyn_TTL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TTL"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip pop
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::BouncingBallLogic::dyn_pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::dyn_pop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pop"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip bounce
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::BouncingBallLogic::dyn_bounce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::dyn_bounce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bounce"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip loadball
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::BouncingBallLogic::dyn_loadball() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::dyn_loadball");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadball"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material visibleMat
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::BouncingBallLogic::dyn_visibleMat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::dyn_visibleMat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visibleMat"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material hiddenMat
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::BouncingBallLogic::dyn_hiddenMat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::dyn_hiddenMat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenMat"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::BouncingBallLogic::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform centerEyeCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::BouncingBallLogic::dyn_centerEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::dyn_centerEyeCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "centerEyeCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isVisible
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BouncingBallLogic::dyn_isVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::dyn_isVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timer
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BouncingBallLogic::dyn_timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::dyn_timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isReleased
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BouncingBallLogic::dyn_isReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::dyn_isReleased");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isReleased"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isReadyForDestroy
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BouncingBallLogic::dyn_isReadyForDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::dyn_isReadyForDestroy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isReadyForDestroy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BouncingBallLogic.OnCollisionEnter
void GlobalNamespace::BouncingBallLogic::OnCollisionEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BouncingBallLogic.Start
void GlobalNamespace::BouncingBallLogic::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BouncingBallLogic.Update
void GlobalNamespace::BouncingBallLogic::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BouncingBallLogic.UpdateVisibility
void GlobalNamespace::BouncingBallLogic::UpdateVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::UpdateVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BouncingBallLogic.SetVisible
void GlobalNamespace::BouncingBallLogic::SetVisible(bool setVisible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::SetVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(setVisible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, setVisible);
}
// Autogenerated method: BouncingBallLogic.Release
void GlobalNamespace::BouncingBallLogic::Release(::UnityEngine::Vector3 pos, ::UnityEngine::Vector3 vel, ::UnityEngine::Vector3 angVel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(vel), ::il2cpp_utils::ExtractType(angVel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, vel, angVel);
}
// Autogenerated method: BouncingBallLogic.PlayPopCallback
::System::Collections::IEnumerator* GlobalNamespace::BouncingBallLogic::PlayPopCallback(float clipLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::PlayPopCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayPopCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, clipLength);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BouncingBallLogic/<PlayPopCallback>d__18
#include "GlobalNamespace/BouncingBallLogic_-PlayPopCallback-d__18.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single clipLength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18::dyn_clipLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18::dyn_clipLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BouncingBallLogic <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BouncingBallLogic*& GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BouncingBallLogic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BouncingBallLogic/<PlayPopCallback>d__18.System.IDisposable.Dispose
void GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BouncingBallLogic/<PlayPopCallback>d__18.MoveNext
bool GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BouncingBallLogic/<PlayPopCallback>d__18.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BouncingBallLogic/<PlayPopCallback>d__18.System.Collections.IEnumerator.Reset
void GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BouncingBallLogic/<PlayPopCallback>d__18.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BouncingBallLogic::$PlayPopCallback$d__18*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BouncingBallMgr
#include "GlobalNamespace/BouncingBallMgr.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform trackingspace
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::BouncingBallMgr::dyn_trackingspace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallMgr::dyn_trackingspace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackingspace"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject rightControllerPivot
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BouncingBallMgr::dyn_rightControllerPivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallMgr::dyn_rightControllerPivot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerPivot"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/RawButton actionBtn
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::BouncingBallMgr::dyn_actionBtn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallMgr::dyn_actionBtn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "actionBtn"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject ball
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BouncingBallMgr::dyn_ball() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallMgr::dyn_ball");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ball"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject currentBall
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BouncingBallMgr::dyn_currentBall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallMgr::dyn_currentBall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentBall"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ballGrabbed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BouncingBallMgr::dyn_ballGrabbed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallMgr::dyn_ballGrabbed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ballGrabbed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BouncingBallMgr.Update
void GlobalNamespace::BouncingBallMgr::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BouncingBallMgr::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BasicSceneManager
#include "GlobalNamespace/BasicSceneManager.hpp"
// Including type: BasicSceneManager/<<LoadSceneAsync>b__1_0>d
#include "GlobalNamespace/BasicSceneManager_--LoadSceneAsync-b__1_0-d.hpp"
// Including type: BasicSceneManager/<>c__DisplayClass2_0
#include "GlobalNamespace/BasicSceneManager_--c__DisplayClass2_0.hpp"
// Including type: BasicSceneManager/<CreateSceneAnchors>d__2
#include "GlobalNamespace/BasicSceneManager_-CreateSceneAnchors-d__2.hpp"
// Including type: BasicSceneManager/<LoadSceneAsync>d__1
#include "GlobalNamespace/BasicSceneManager_-LoadSceneAsync-d__1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BasicSceneManager.Start
void GlobalNamespace::BasicSceneManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicSceneManager.LoadSceneAsync
void GlobalNamespace::BasicSceneManager::LoadSceneAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicSceneManager.CreateSceneAnchors
::System::Threading::Tasks::Task* GlobalNamespace::BasicSceneManager::CreateSceneAnchors(::UnityEngine::GameObject* roomGameObject, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* anchors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::CreateSceneAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSceneAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomGameObject), ::il2cpp_utils::ExtractType(anchors)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, roomGameObject, anchors);
}
// Autogenerated method: BasicSceneManager.<LoadSceneAsync>b__1_0
::System::Threading::Tasks::Task* GlobalNamespace::BasicSceneManager::$LoadSceneAsync$b__1_0(::GlobalNamespace::OVRAnchor room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::<LoadSceneAsync>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadSceneAsync>b__1_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, room);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BasicSceneManager/<<LoadSceneAsync>b__1_0>d
#include "GlobalNamespace/BasicSceneManager_--LoadSceneAsync-b__1_0-d.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRAnchor room
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRAnchor& GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::dyn_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::dyn_room");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "room"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRAnchor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BasicSceneManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BasicSceneManager*& GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicSceneManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject <roomObject>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::dyn_$roomObject$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::dyn_$roomObject$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<roomObject>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRAnchor> <children>5__3
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::dyn_$children$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::dyn_$children$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<children>5__3"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTask`1/Awaiter<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter& GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BasicSceneManager/<<LoadSceneAsync>b__1_0>d.MoveNext
void GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicSceneManager/<<LoadSceneAsync>b__1_0>d.SetStateMachine
void GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::BasicSceneManager::$$LoadSceneAsync$b__1_0$d), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
