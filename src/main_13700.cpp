// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.BlendConstraintJob
#include "UnityEngine/Animations/Rigging/BlendConstraintJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_BlendTranslationMask
int UnityEngine::Animations::Rigging::BlendConstraintJob::_get_k_BlendTranslationMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintJob::_get_k_BlendTranslationMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Animations.Rigging", "BlendConstraintJob", "k_BlendTranslationMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_BlendTranslationMask
void UnityEngine::Animations::Rigging::BlendConstraintJob::_set_k_BlendTranslationMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintJob::_set_k_BlendTranslationMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "BlendConstraintJob", "k_BlendTranslationMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_BlendRotationMask
int UnityEngine::Animations::Rigging::BlendConstraintJob::_get_k_BlendRotationMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintJob::_get_k_BlendRotationMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Animations.Rigging", "BlendConstraintJob", "k_BlendRotationMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_BlendRotationMask
void UnityEngine::Animations::Rigging::BlendConstraintJob::_set_k_BlendRotationMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintJob::_set_k_BlendRotationMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "BlendConstraintJob", "k_BlendRotationMask", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadWriteTransformHandle driven
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle& UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_driven() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_driven");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "driven"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadOnlyTransformHandle sourceA
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle& UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_sourceA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_sourceA");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceA"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadOnlyTransformHandle sourceB
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle& UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_sourceB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_sourceB");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceB"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.AffineTransform sourceAOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::AffineTransform& UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_sourceAOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_sourceAOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceAOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::AffineTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.AffineTransform sourceBOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::AffineTransform& UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_sourceBOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_sourceBOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceBOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::AffineTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.BoolProperty blendPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::BoolProperty& UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_blendPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_blendPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blendPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::BoolProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.BoolProperty blendRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::BoolProperty& UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_blendRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_blendRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blendRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::BoolProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.FloatProperty positionWeight
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_positionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_positionWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionWeight"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.FloatProperty rotationWeight
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_rotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_rotationWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationWeight"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.FloatProperty <jobWeight>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_$jobWeight$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintJob::dyn_$jobWeight$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<jobWeight>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintJob.get_jobWeight
::UnityEngine::Animations::Rigging::FloatProperty UnityEngine::Animations::Rigging::BlendConstraintJob::get_jobWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintJob::get_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintJob), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::FloatProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintJob.set_jobWeight
void UnityEngine::Animations::Rigging::BlendConstraintJob::set_jobWeight(::UnityEngine::Animations::Rigging::FloatProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintJob::set_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintJob), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintJob.ProcessRootMotion
void UnityEngine::Animations::Rigging::BlendConstraintJob::ProcessRootMotion(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintJob::ProcessRootMotion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintJob), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintJob.ProcessAnimation
void UnityEngine::Animations::Rigging::BlendConstraintJob::ProcessAnimation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintJob::ProcessAnimation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintJob), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IBlendConstraintData
#include "UnityEngine/Animations/Rigging/IBlendConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.IBlendConstraintData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::IBlendConstraintData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IBlendConstraintData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IBlendConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IBlendConstraintData.get_sourceObjectA
::UnityEngine::Transform* UnityEngine::Animations::Rigging::IBlendConstraintData::get_sourceObjectA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IBlendConstraintData::get_sourceObjectA");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IBlendConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IBlendConstraintData.get_sourceObjectB
::UnityEngine::Transform* UnityEngine::Animations::Rigging::IBlendConstraintData::get_sourceObjectB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IBlendConstraintData::get_sourceObjectB");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IBlendConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IBlendConstraintData.get_maintainPositionOffsets
bool UnityEngine::Animations::Rigging::IBlendConstraintData::get_maintainPositionOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IBlendConstraintData::get_maintainPositionOffsets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IBlendConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IBlendConstraintData.get_maintainRotationOffsets
bool UnityEngine::Animations::Rigging::IBlendConstraintData::get_maintainRotationOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IBlendConstraintData::get_maintainRotationOffsets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IBlendConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IBlendConstraintData.get_blendPositionBoolProperty
::StringW UnityEngine::Animations::Rigging::IBlendConstraintData::get_blendPositionBoolProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IBlendConstraintData::get_blendPositionBoolProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IBlendConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IBlendConstraintData.get_blendRotationBoolProperty
::StringW UnityEngine::Animations::Rigging::IBlendConstraintData::get_blendRotationBoolProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IBlendConstraintData::get_blendRotationBoolProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IBlendConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IBlendConstraintData.get_positionWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::IBlendConstraintData::get_positionWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IBlendConstraintData::get_positionWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IBlendConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IBlendConstraintData.get_rotationWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::IBlendConstraintData::get_rotationWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IBlendConstraintData::get_rotationWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IBlendConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.ChainIKConstraintJob
#include "UnityEngine/Animations/Rigging/ChainIKConstraintJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.Rigging.ReadWriteTransformHandle> chain
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle>& UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_chain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_chain");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chain"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadOnlyTransformHandle target
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle& UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_target");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.AffineTransform targetOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::AffineTransform& UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_targetOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_targetOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::AffineTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Single> linkLengths
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<float>& UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_linkLengths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_linkLengths");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkLengths"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Vector3> linkPositions
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>& UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_linkPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_linkPositions");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkPositions"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.FloatProperty chainRotationWeight
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_chainRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_chainRotationWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chainRotationWeight"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.FloatProperty tipRotationWeight
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_tipRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_tipRotationWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tipRotationWeight"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.CacheIndex toleranceIdx
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::CacheIndex& UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_toleranceIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_toleranceIdx");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toleranceIdx"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::CacheIndex*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.CacheIndex maxIterationsIdx
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::CacheIndex& UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_maxIterationsIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_maxIterationsIdx");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxIterationsIdx"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::CacheIndex*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.AnimationJobCache cache
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::AnimationJobCache& UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_cache");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cache"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::AnimationJobCache*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxReach
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_maxReach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_maxReach");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxReach"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.FloatProperty <jobWeight>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_$jobWeight$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintJob::dyn_$jobWeight$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<jobWeight>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintJob.get_jobWeight
::UnityEngine::Animations::Rigging::FloatProperty UnityEngine::Animations::Rigging::ChainIKConstraintJob::get_jobWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintJob::get_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintJob), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::FloatProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintJob.set_jobWeight
void UnityEngine::Animations::Rigging::ChainIKConstraintJob::set_jobWeight(::UnityEngine::Animations::Rigging::FloatProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintJob::set_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintJob), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintJob.ProcessRootMotion
void UnityEngine::Animations::Rigging::ChainIKConstraintJob::ProcessRootMotion(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintJob::ProcessRootMotion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintJob), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintJob.ProcessAnimation
void UnityEngine::Animations::Rigging::ChainIKConstraintJob::ProcessAnimation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintJob::ProcessAnimation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintJob), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IChainIKConstraintData
#include "UnityEngine/Animations/Rigging/IChainIKConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.IChainIKConstraintData.get_root
::UnityEngine::Transform* UnityEngine::Animations::Rigging::IChainIKConstraintData::get_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IChainIKConstraintData::get_root");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IChainIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IChainIKConstraintData.get_tip
::UnityEngine::Transform* UnityEngine::Animations::Rigging::IChainIKConstraintData::get_tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IChainIKConstraintData::get_tip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IChainIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IChainIKConstraintData.get_target
::UnityEngine::Transform* UnityEngine::Animations::Rigging::IChainIKConstraintData::get_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IChainIKConstraintData::get_target");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IChainIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IChainIKConstraintData.get_maxIterations
int UnityEngine::Animations::Rigging::IChainIKConstraintData::get_maxIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IChainIKConstraintData::get_maxIterations");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IChainIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IChainIKConstraintData.get_tolerance
float UnityEngine::Animations::Rigging::IChainIKConstraintData::get_tolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IChainIKConstraintData::get_tolerance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IChainIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IChainIKConstraintData.get_maintainTargetPositionOffset
bool UnityEngine::Animations::Rigging::IChainIKConstraintData::get_maintainTargetPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IChainIKConstraintData::get_maintainTargetPositionOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IChainIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IChainIKConstraintData.get_maintainTargetRotationOffset
bool UnityEngine::Animations::Rigging::IChainIKConstraintData::get_maintainTargetRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IChainIKConstraintData::get_maintainTargetRotationOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IChainIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IChainIKConstraintData.get_chainRotationWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::IChainIKConstraintData::get_chainRotationWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IChainIKConstraintData::get_chainRotationWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IChainIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IChainIKConstraintData.get_tipRotationWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::IChainIKConstraintData::get_tipRotationWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IChainIKConstraintData::get_tipRotationWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IChainIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.DampedTransformJob
#include "UnityEngine/Animations/Rigging/DampedTransformJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_FixedDt
float UnityEngine::Animations::Rigging::DampedTransformJob::_get_k_FixedDt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformJob::_get_k_FixedDt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Animations.Rigging", "DampedTransformJob", "k_FixedDt"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_FixedDt
void UnityEngine::Animations::Rigging::DampedTransformJob::_set_k_FixedDt(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformJob::_set_k_FixedDt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "DampedTransformJob", "k_FixedDt", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DampFactor
float UnityEngine::Animations::Rigging::DampedTransformJob::_get_k_DampFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformJob::_get_k_DampFactor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Animations.Rigging", "DampedTransformJob", "k_DampFactor"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DampFactor
void UnityEngine::Animations::Rigging::DampedTransformJob::_set_k_DampFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformJob::_set_k_DampFactor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "DampedTransformJob", "k_DampFactor", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadWriteTransformHandle driven
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle& UnityEngine::Animations::Rigging::DampedTransformJob::dyn_driven() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformJob::dyn_driven");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "driven"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadOnlyTransformHandle source
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle& UnityEngine::Animations::Rigging::DampedTransformJob::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformJob::dyn_source");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.AffineTransform localBindTx
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::AffineTransform& UnityEngine::Animations::Rigging::DampedTransformJob::dyn_localBindTx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformJob::dyn_localBindTx");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localBindTx"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::AffineTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 aimBindAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::DampedTransformJob::dyn_aimBindAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformJob::dyn_aimBindAxis");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aimBindAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.AffineTransform prevDrivenTx
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::AffineTransform& UnityEngine::Animations::Rigging::DampedTransformJob::dyn_prevDrivenTx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformJob::dyn_prevDrivenTx");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevDrivenTx"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::AffineTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.FloatProperty dampPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::DampedTransformJob::dyn_dampPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformJob::dyn_dampPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dampPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.FloatProperty dampRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::DampedTransformJob::dyn_dampRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformJob::dyn_dampRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dampRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.FloatProperty <jobWeight>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::DampedTransformJob::dyn_$jobWeight$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformJob::dyn_$jobWeight$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<jobWeight>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformJob.get_jobWeight
::UnityEngine::Animations::Rigging::FloatProperty UnityEngine::Animations::Rigging::DampedTransformJob::get_jobWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformJob::get_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::DampedTransformJob), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::FloatProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformJob.set_jobWeight
void UnityEngine::Animations::Rigging::DampedTransformJob::set_jobWeight(::UnityEngine::Animations::Rigging::FloatProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformJob::set_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::DampedTransformJob), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformJob.ProcessRootMotion
void UnityEngine::Animations::Rigging::DampedTransformJob::ProcessRootMotion(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformJob::ProcessRootMotion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::DampedTransformJob), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformJob.ProcessAnimation
void UnityEngine::Animations::Rigging::DampedTransformJob::ProcessAnimation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformJob::ProcessAnimation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::DampedTransformJob), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IDampedTransformData
#include "UnityEngine/Animations/Rigging/IDampedTransformData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.IDampedTransformData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::IDampedTransformData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IDampedTransformData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IDampedTransformData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IDampedTransformData.get_sourceObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::IDampedTransformData::get_sourceObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IDampedTransformData::get_sourceObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IDampedTransformData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IDampedTransformData.get_maintainAim
bool UnityEngine::Animations::Rigging::IDampedTransformData::get_maintainAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IDampedTransformData::get_maintainAim");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IDampedTransformData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IDampedTransformData.get_dampPositionFloatProperty
::StringW UnityEngine::Animations::Rigging::IDampedTransformData::get_dampPositionFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IDampedTransformData::get_dampPositionFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IDampedTransformData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IDampedTransformData.get_dampRotationFloatProperty
::StringW UnityEngine::Animations::Rigging::IDampedTransformData::get_dampRotationFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IDampedTransformData::get_dampRotationFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IDampedTransformData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.BoolProperty
#include "UnityEngine/Animations/Rigging/BoolProperty.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.PropertyStreamHandle value
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::PropertyStreamHandle& UnityEngine::Animations::Rigging::BoolProperty::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BoolProperty::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::PropertyStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BoolProperty.Bind
::UnityEngine::Animations::Rigging::BoolProperty UnityEngine::Animations::Rigging::BoolProperty::Bind(::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BoolProperty::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "BoolProperty", "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::BoolProperty, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, component, name);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BoolProperty.BindCustom
::UnityEngine::Animations::Rigging::BoolProperty UnityEngine::Animations::Rigging::BoolProperty::BindCustom(::UnityEngine::Animator* animator, ::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BoolProperty::BindCustom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "BoolProperty", "BindCustom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::BoolProperty, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, property);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BoolProperty.Get
bool UnityEngine::Animations::Rigging::BoolProperty::Get(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BoolProperty::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BoolProperty), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BoolProperty.Set
void UnityEngine::Animations::Rigging::BoolProperty::Set(::UnityEngine::Animations::AnimationStream stream, bool v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BoolProperty::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BoolProperty), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, v);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IntProperty
#include "UnityEngine/Animations/Rigging/IntProperty.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.PropertyStreamHandle value
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::PropertyStreamHandle& UnityEngine::Animations::Rigging::IntProperty::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IntProperty::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::PropertyStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IntProperty.Bind
::UnityEngine::Animations::Rigging::IntProperty UnityEngine::Animations::Rigging::IntProperty::Bind(::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IntProperty::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "IntProperty", "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::IntProperty, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, component, name);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IntProperty.BindCustom
::UnityEngine::Animations::Rigging::IntProperty UnityEngine::Animations::Rigging::IntProperty::BindCustom(::UnityEngine::Animator* animator, ::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IntProperty::BindCustom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "IntProperty", "BindCustom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::IntProperty, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, property);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IntProperty.Get
int UnityEngine::Animations::Rigging::IntProperty::Get(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IntProperty::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::IntProperty), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IntProperty.Set
void UnityEngine::Animations::Rigging::IntProperty::Set(::UnityEngine::Animations::AnimationStream stream, int v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IntProperty::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::IntProperty), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, v);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.FloatProperty
#include "UnityEngine/Animations/Rigging/FloatProperty.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.PropertyStreamHandle value
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::PropertyStreamHandle& UnityEngine::Animations::Rigging::FloatProperty::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::FloatProperty::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::PropertyStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.FloatProperty.Bind
::UnityEngine::Animations::Rigging::FloatProperty UnityEngine::Animations::Rigging::FloatProperty::Bind(::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::FloatProperty::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "FloatProperty", "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::FloatProperty, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, component, name);
}
// Autogenerated method: UnityEngine.Animations.Rigging.FloatProperty.BindCustom
::UnityEngine::Animations::Rigging::FloatProperty UnityEngine::Animations::Rigging::FloatProperty::BindCustom(::UnityEngine::Animator* animator, ::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::FloatProperty::BindCustom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "FloatProperty", "BindCustom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::FloatProperty, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, property);
}
// Autogenerated method: UnityEngine.Animations.Rigging.FloatProperty.Get
float UnityEngine::Animations::Rigging::FloatProperty::Get(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::FloatProperty::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::FloatProperty), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.FloatProperty.Set
void UnityEngine::Animations::Rigging::FloatProperty::Set(::UnityEngine::Animations::AnimationStream stream, float v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::FloatProperty::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::FloatProperty), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, v);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.Vector2Property
#include "UnityEngine/Animations/Rigging/Vector2Property.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.PropertyStreamHandle x
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::PropertyStreamHandle& UnityEngine::Animations::Rigging::Vector2Property::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector2Property::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::PropertyStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.PropertyStreamHandle y
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::PropertyStreamHandle& UnityEngine::Animations::Rigging::Vector2Property::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector2Property::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::PropertyStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector2Property.Bind
::UnityEngine::Animations::Rigging::Vector2Property UnityEngine::Animations::Rigging::Vector2Property::Bind(::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector2Property::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "Vector2Property", "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::Vector2Property, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, component, name);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector2Property.BindCustom
::UnityEngine::Animations::Rigging::Vector2Property UnityEngine::Animations::Rigging::Vector2Property::BindCustom(::UnityEngine::Animator* animator, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector2Property::BindCustom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "Vector2Property", "BindCustom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::Vector2Property, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, name);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector2Property.Get
::UnityEngine::Vector2 UnityEngine::Animations::Rigging::Vector2Property::Get(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector2Property::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::Vector2Property), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector2Property.Set
void UnityEngine::Animations::Rigging::Vector2Property::Set(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector2Property::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::Vector2Property), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.Vector3Property
#include "UnityEngine/Animations/Rigging/Vector3Property.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.PropertyStreamHandle x
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::PropertyStreamHandle& UnityEngine::Animations::Rigging::Vector3Property::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3Property::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::PropertyStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.PropertyStreamHandle y
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::PropertyStreamHandle& UnityEngine::Animations::Rigging::Vector3Property::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3Property::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::PropertyStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.PropertyStreamHandle z
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::PropertyStreamHandle& UnityEngine::Animations::Rigging::Vector3Property::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3Property::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::PropertyStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector3Property.Bind
::UnityEngine::Animations::Rigging::Vector3Property UnityEngine::Animations::Rigging::Vector3Property::Bind(::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3Property::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "Vector3Property", "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::Vector3Property, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, component, name);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector3Property.BindCustom
::UnityEngine::Animations::Rigging::Vector3Property UnityEngine::Animations::Rigging::Vector3Property::BindCustom(::UnityEngine::Animator* animator, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3Property::BindCustom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "Vector3Property", "BindCustom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::Vector3Property, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, name);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector3Property.Get
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::Vector3Property::Get(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3Property::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::Vector3Property), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector3Property.Set
void UnityEngine::Animations::Rigging::Vector3Property::Set(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3Property::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::Vector3Property), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.Vector3IntProperty
#include "UnityEngine/Animations/Rigging/Vector3IntProperty.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.PropertyStreamHandle x
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::PropertyStreamHandle& UnityEngine::Animations::Rigging::Vector3IntProperty::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3IntProperty::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::PropertyStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.PropertyStreamHandle y
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::PropertyStreamHandle& UnityEngine::Animations::Rigging::Vector3IntProperty::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3IntProperty::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::PropertyStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.PropertyStreamHandle z
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::PropertyStreamHandle& UnityEngine::Animations::Rigging::Vector3IntProperty::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3IntProperty::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::PropertyStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector3IntProperty.Bind
::UnityEngine::Animations::Rigging::Vector3IntProperty UnityEngine::Animations::Rigging::Vector3IntProperty::Bind(::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3IntProperty::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "Vector3IntProperty", "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::Vector3IntProperty, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, component, name);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector3IntProperty.BindCustom
::UnityEngine::Animations::Rigging::Vector3IntProperty UnityEngine::Animations::Rigging::Vector3IntProperty::BindCustom(::UnityEngine::Animator* animator, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3IntProperty::BindCustom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "Vector3IntProperty", "BindCustom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::Vector3IntProperty, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, name);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector3IntProperty.Get
::UnityEngine::Vector3Int UnityEngine::Animations::Rigging::Vector3IntProperty::Get(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3IntProperty::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::Vector3IntProperty), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3Int, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector3IntProperty.Set
void UnityEngine::Animations::Rigging::Vector3IntProperty::Set(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3IntProperty::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::Vector3IntProperty), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.Vector3BoolProperty
#include "UnityEngine/Animations/Rigging/Vector3BoolProperty.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.PropertyStreamHandle x
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::PropertyStreamHandle& UnityEngine::Animations::Rigging::Vector3BoolProperty::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3BoolProperty::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::PropertyStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.PropertyStreamHandle y
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::PropertyStreamHandle& UnityEngine::Animations::Rigging::Vector3BoolProperty::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3BoolProperty::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::PropertyStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.PropertyStreamHandle z
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::PropertyStreamHandle& UnityEngine::Animations::Rigging::Vector3BoolProperty::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3BoolProperty::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::PropertyStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector3BoolProperty.Bind
::UnityEngine::Animations::Rigging::Vector3BoolProperty UnityEngine::Animations::Rigging::Vector3BoolProperty::Bind(::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3BoolProperty::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "Vector3BoolProperty", "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::Vector3BoolProperty, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, component, name);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector3BoolProperty.BindCustom
::UnityEngine::Animations::Rigging::Vector3BoolProperty UnityEngine::Animations::Rigging::Vector3BoolProperty::BindCustom(::UnityEngine::Animator* animator, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3BoolProperty::BindCustom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "Vector3BoolProperty", "BindCustom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::Vector3BoolProperty, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, name);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector3BoolProperty.Get
::UnityEngine::Animations::Rigging::Vector3Bool UnityEngine::Animations::Rigging::Vector3BoolProperty::Get(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3BoolProperty::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::Vector3BoolProperty), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::Vector3Bool, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector3BoolProperty.Set
void UnityEngine::Animations::Rigging::Vector3BoolProperty::Set(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Animations::Rigging::Vector3Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3BoolProperty::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::Vector3BoolProperty), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.Vector4Property
#include "UnityEngine/Animations/Rigging/Vector4Property.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.PropertyStreamHandle x
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::PropertyStreamHandle& UnityEngine::Animations::Rigging::Vector4Property::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector4Property::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::PropertyStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.PropertyStreamHandle y
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::PropertyStreamHandle& UnityEngine::Animations::Rigging::Vector4Property::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector4Property::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::PropertyStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.PropertyStreamHandle z
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::PropertyStreamHandle& UnityEngine::Animations::Rigging::Vector4Property::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector4Property::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::PropertyStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.PropertyStreamHandle w
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::PropertyStreamHandle& UnityEngine::Animations::Rigging::Vector4Property::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector4Property::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::PropertyStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector4Property.Bind
::UnityEngine::Animations::Rigging::Vector4Property UnityEngine::Animations::Rigging::Vector4Property::Bind(::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector4Property::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "Vector4Property", "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::Vector4Property, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, component, name);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector4Property.BindCustom
::UnityEngine::Animations::Rigging::Vector4Property UnityEngine::Animations::Rigging::Vector4Property::BindCustom(::UnityEngine::Animator* animator, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector4Property::BindCustom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "Vector4Property", "BindCustom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::Vector4Property, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, name);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector4Property.Get
::UnityEngine::Vector4 UnityEngine::Animations::Rigging::Vector4Property::Get(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector4Property::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::Vector4Property), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector4Property.Set
void UnityEngine::Animations::Rigging::Vector4Property::Set(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector4Property::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::Vector4Property), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IAnimationJobBinder
#include "UnityEngine/Animations/Rigging/IAnimationJobBinder.hpp"
// Including type: UnityEngine.Animations.IAnimationJob
#include "UnityEngine/Animations/IAnimationJob.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Animations.Rigging.IAnimationJobData
#include "UnityEngine/Animations/Rigging/IAnimationJobData.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Animations.AnimationScriptPlayable
#include "UnityEngine/Animations/AnimationScriptPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.IAnimationJobBinder.Create
::UnityEngine::Animations::IAnimationJob* UnityEngine::Animations::Rigging::IAnimationJobBinder::Create(::UnityEngine::Animator* animator, ::UnityEngine::Animations::Rigging::IAnimationJobData* data, ::UnityEngine::Component* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IAnimationJobBinder::Create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IAnimationJobBinder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::IAnimationJob*, false>(this, ___internal__method, animator, data, component);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IAnimationJobBinder.Destroy
void UnityEngine::Animations::Rigging::IAnimationJobBinder::Destroy(::UnityEngine::Animations::IAnimationJob* job) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IAnimationJobBinder::Destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IAnimationJobBinder*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, job);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IAnimationJobBinder.Update
void UnityEngine::Animations::Rigging::IAnimationJobBinder::Update(::UnityEngine::Animations::IAnimationJob* job, ::UnityEngine::Animations::Rigging::IAnimationJobData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IAnimationJobBinder::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IAnimationJobBinder*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, job, data);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IAnimationJobBinder.CreatePlayable
::UnityEngine::Animations::AnimationScriptPlayable UnityEngine::Animations::Rigging::IAnimationJobBinder::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Animations::IAnimationJob* job) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IAnimationJobBinder::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IAnimationJobBinder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationScriptPlayable, false>(this, ___internal__method, graph, job);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IAnimationJobData
#include "UnityEngine/Animations/Rigging/IAnimationJobData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::IAnimationJobData::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IAnimationJobData::IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IAnimationJobData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::IAnimationJobData::SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IAnimationJobData::SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IAnimationJobData*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IWeightedAnimationJob
#include "UnityEngine/Animations/Rigging/IWeightedAnimationJob.hpp"
// Including type: UnityEngine.Animations.Rigging.FloatProperty
#include "UnityEngine/Animations/Rigging/FloatProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.IWeightedAnimationJob.get_jobWeight
::UnityEngine::Animations::Rigging::FloatProperty UnityEngine::Animations::Rigging::IWeightedAnimationJob::get_jobWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IWeightedAnimationJob::get_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IWeightedAnimationJob*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::FloatProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IWeightedAnimationJob.set_jobWeight
void UnityEngine::Animations::Rigging::IWeightedAnimationJob::set_jobWeight(::UnityEngine::Animations::Rigging::FloatProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IWeightedAnimationJob::set_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IWeightedAnimationJob*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiAimConstraintJob
#include "UnityEngine/Animations/Rigging/MultiAimConstraintJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_Epsilon
float UnityEngine::Animations::Rigging::MultiAimConstraintJob::_get_k_Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::_get_k_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Animations.Rigging", "MultiAimConstraintJob", "k_Epsilon"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_Epsilon
void UnityEngine::Animations::Rigging::MultiAimConstraintJob::_set_k_Epsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::_set_k_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintJob", "k_Epsilon", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadWriteTransformHandle driven
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle& UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_driven() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_driven");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "driven"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadOnlyTransformHandle drivenParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle& UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_drivenParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_drivenParent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drivenParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.Vector3Property drivenOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::Vector3Property& UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_drivenOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_drivenOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drivenOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::Vector3Property*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.Rigging.ReadOnlyTransformHandle> sourceTransforms
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle>& UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_sourceTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_sourceTransforms");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceTransforms"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertyStreamHandle> sourceWeights
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>& UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_sourceWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_sourceWeights");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceWeights"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Quaternion> sourceOffsets
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Quaternion>& UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_sourceOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_sourceOffsets");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceOffsets"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Single> weightBuffer
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<float>& UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_weightBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_weightBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weightBuffer"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 aimAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_aimAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_aimAxis");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aimAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 upAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_upAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_upAxis");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.MultiAimConstraintJob/WorldUpType worldUpType
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType& UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_worldUpType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_worldUpType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "worldUpType"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 worldUpAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_worldUpAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_worldUpAxis");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "worldUpAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadOnlyTransformHandle worldUpObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle& UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_worldUpObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_worldUpObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "worldUpObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 axesMask
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_axesMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_axesMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axesMask"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.FloatProperty minLimit
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_minLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_minLimit");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minLimit"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.FloatProperty maxLimit
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_maxLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_maxLimit");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxLimit"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.FloatProperty <jobWeight>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_$jobWeight$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::dyn_$jobWeight$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<jobWeight>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintJob.get_jobWeight
::UnityEngine::Animations::Rigging::FloatProperty UnityEngine::Animations::Rigging::MultiAimConstraintJob::get_jobWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::get_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintJob), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::FloatProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintJob.set_jobWeight
void UnityEngine::Animations::Rigging::MultiAimConstraintJob::set_jobWeight(::UnityEngine::Animations::Rigging::FloatProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::set_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintJob), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintJob.ProcessRootMotion
void UnityEngine::Animations::Rigging::MultiAimConstraintJob::ProcessRootMotion(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::ProcessRootMotion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintJob), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintJob.ProcessAnimation
void UnityEngine::Animations::Rigging::MultiAimConstraintJob::ProcessAnimation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::ProcessAnimation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintJob), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintJob.ComputeWorldUpVector
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::MultiAimConstraintJob::ComputeWorldUpVector(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::ComputeWorldUpVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ComputeWorldUpVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiAimConstraintJob/WorldUpType
#include "UnityEngine/Animations/Rigging/MultiAimConstraintJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintJob/WorldUpType None
::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType>("UnityEngine.Animations.Rigging", "MultiAimConstraintJob/WorldUpType", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintJob/WorldUpType None
void UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_set_None(::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintJob/WorldUpType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintJob/WorldUpType SceneUp
::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_get_SceneUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_get_SceneUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType>("UnityEngine.Animations.Rigging", "MultiAimConstraintJob/WorldUpType", "SceneUp"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintJob/WorldUpType SceneUp
void UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_set_SceneUp(::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_set_SceneUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintJob/WorldUpType", "SceneUp", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintJob/WorldUpType ObjectUp
::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_get_ObjectUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_get_ObjectUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType>("UnityEngine.Animations.Rigging", "MultiAimConstraintJob/WorldUpType", "ObjectUp"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintJob/WorldUpType ObjectUp
void UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_set_ObjectUp(::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_set_ObjectUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintJob/WorldUpType", "ObjectUp", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintJob/WorldUpType ObjectRotationUp
::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_get_ObjectRotationUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_get_ObjectRotationUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType>("UnityEngine.Animations.Rigging", "MultiAimConstraintJob/WorldUpType", "ObjectRotationUp"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintJob/WorldUpType ObjectRotationUp
void UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_set_ObjectRotationUp(::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_set_ObjectRotationUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintJob/WorldUpType", "ObjectRotationUp", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintJob/WorldUpType Vector
::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_get_Vector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_get_Vector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType>("UnityEngine.Animations.Rigging", "MultiAimConstraintJob/WorldUpType", "Vector"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintJob/WorldUpType Vector
void UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_set_Vector(::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::_set_Vector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintJob/WorldUpType", "Vector", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintJob::WorldUpType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IMultiAimConstraintData
#include "UnityEngine/Animations/Rigging/IMultiAimConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Animations.Rigging.WeightedTransformArray
#include "UnityEngine/Animations/Rigging/WeightedTransformArray.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiAimConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_sourceObjects
::UnityEngine::Animations::Rigging::WeightedTransformArray UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_sourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_sourceObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiAimConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransformArray, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_maintainOffset
bool UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_maintainOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_maintainOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiAimConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_aimAxis
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_aimAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_aimAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiAimConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_upAxis
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_upAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_upAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiAimConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_worldUpType
int UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_worldUpType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_worldUpType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiAimConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_worldUpAxis
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_worldUpAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_worldUpAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiAimConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_worldUpObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_worldUpObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_worldUpObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiAimConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_constrainedXAxis
bool UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_constrainedXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_constrainedXAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiAimConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_constrainedYAxis
bool UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_constrainedYAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_constrainedYAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiAimConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_constrainedZAxis
bool UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_constrainedZAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_constrainedZAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiAimConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_offsetVector3Property
::StringW UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_offsetVector3Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_offsetVector3Property");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiAimConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_minLimitFloatProperty
::StringW UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_minLimitFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_minLimitFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiAimConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_maxLimitFloatProperty
::StringW UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_maxLimitFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_maxLimitFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiAimConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_sourceObjectsProperty
::StringW UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_sourceObjectsProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiAimConstraintData::get_sourceObjectsProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiAimConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiParentConstraintJob
#include "UnityEngine/Animations/Rigging/MultiParentConstraintJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_Epsilon
float UnityEngine::Animations::Rigging::MultiParentConstraintJob::_get_k_Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintJob::_get_k_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Animations.Rigging", "MultiParentConstraintJob", "k_Epsilon"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_Epsilon
void UnityEngine::Animations::Rigging::MultiParentConstraintJob::_set_k_Epsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintJob::_set_k_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiParentConstraintJob", "k_Epsilon", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadWriteTransformHandle driven
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle& UnityEngine::Animations::Rigging::MultiParentConstraintJob::dyn_driven() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintJob::dyn_driven");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "driven"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadOnlyTransformHandle drivenParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle& UnityEngine::Animations::Rigging::MultiParentConstraintJob::dyn_drivenParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintJob::dyn_drivenParent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drivenParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.Rigging.ReadOnlyTransformHandle> sourceTransforms
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle>& UnityEngine::Animations::Rigging::MultiParentConstraintJob::dyn_sourceTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintJob::dyn_sourceTransforms");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceTransforms"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertyStreamHandle> sourceWeights
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>& UnityEngine::Animations::Rigging::MultiParentConstraintJob::dyn_sourceWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintJob::dyn_sourceWeights");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceWeights"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.Rigging.AffineTransform> sourceOffsets
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::AffineTransform>& UnityEngine::Animations::Rigging::MultiParentConstraintJob::dyn_sourceOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintJob::dyn_sourceOffsets");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceOffsets"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::AffineTransform>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Single> weightBuffer
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<float>& UnityEngine::Animations::Rigging::MultiParentConstraintJob::dyn_weightBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintJob::dyn_weightBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weightBuffer"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 positionAxesMask
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::MultiParentConstraintJob::dyn_positionAxesMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintJob::dyn_positionAxesMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionAxesMask"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rotationAxesMask
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::MultiParentConstraintJob::dyn_rotationAxesMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintJob::dyn_rotationAxesMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationAxesMask"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.FloatProperty <jobWeight>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::MultiParentConstraintJob::dyn_$jobWeight$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintJob::dyn_$jobWeight$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<jobWeight>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintJob.get_jobWeight
::UnityEngine::Animations::Rigging::FloatProperty UnityEngine::Animations::Rigging::MultiParentConstraintJob::get_jobWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintJob::get_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintJob), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::FloatProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintJob.set_jobWeight
void UnityEngine::Animations::Rigging::MultiParentConstraintJob::set_jobWeight(::UnityEngine::Animations::Rigging::FloatProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintJob::set_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintJob), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintJob.ProcessRootMotion
void UnityEngine::Animations::Rigging::MultiParentConstraintJob::ProcessRootMotion(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintJob::ProcessRootMotion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintJob), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintJob.ProcessAnimation
void UnityEngine::Animations::Rigging::MultiParentConstraintJob::ProcessAnimation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintJob::ProcessAnimation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintJob), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IMultiParentConstraintData
#include "UnityEngine/Animations/Rigging/IMultiParentConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Animations.Rigging.WeightedTransformArray
#include "UnityEngine/Animations/Rigging/WeightedTransformArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiParentConstraintData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiParentConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiParentConstraintData.get_sourceObjects
::UnityEngine::Animations::Rigging::WeightedTransformArray UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_sourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_sourceObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiParentConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransformArray, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiParentConstraintData.get_maintainPositionOffset
bool UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_maintainPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_maintainPositionOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiParentConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiParentConstraintData.get_maintainRotationOffset
bool UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_maintainRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_maintainRotationOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiParentConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiParentConstraintData.get_constrainedPositionXAxis
bool UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_constrainedPositionXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_constrainedPositionXAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiParentConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiParentConstraintData.get_constrainedPositionYAxis
bool UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_constrainedPositionYAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_constrainedPositionYAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiParentConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiParentConstraintData.get_constrainedPositionZAxis
bool UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_constrainedPositionZAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_constrainedPositionZAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiParentConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiParentConstraintData.get_constrainedRotationXAxis
bool UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_constrainedRotationXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_constrainedRotationXAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiParentConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiParentConstraintData.get_constrainedRotationYAxis
bool UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_constrainedRotationYAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_constrainedRotationYAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiParentConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiParentConstraintData.get_constrainedRotationZAxis
bool UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_constrainedRotationZAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_constrainedRotationZAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiParentConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiParentConstraintData.get_sourceObjectsProperty
::StringW UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_sourceObjectsProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiParentConstraintData::get_sourceObjectsProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiParentConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiPositionConstraintJob
#include "UnityEngine/Animations/Rigging/MultiPositionConstraintJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_Epsilon
float UnityEngine::Animations::Rigging::MultiPositionConstraintJob::_get_k_Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintJob::_get_k_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Animations.Rigging", "MultiPositionConstraintJob", "k_Epsilon"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_Epsilon
void UnityEngine::Animations::Rigging::MultiPositionConstraintJob::_set_k_Epsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintJob::_set_k_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiPositionConstraintJob", "k_Epsilon", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadWriteTransformHandle driven
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle& UnityEngine::Animations::Rigging::MultiPositionConstraintJob::dyn_driven() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintJob::dyn_driven");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "driven"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadOnlyTransformHandle drivenParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle& UnityEngine::Animations::Rigging::MultiPositionConstraintJob::dyn_drivenParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintJob::dyn_drivenParent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drivenParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.Vector3Property drivenOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::Vector3Property& UnityEngine::Animations::Rigging::MultiPositionConstraintJob::dyn_drivenOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintJob::dyn_drivenOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drivenOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::Vector3Property*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.Rigging.ReadOnlyTransformHandle> sourceTransforms
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle>& UnityEngine::Animations::Rigging::MultiPositionConstraintJob::dyn_sourceTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintJob::dyn_sourceTransforms");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceTransforms"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertyStreamHandle> sourceWeights
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>& UnityEngine::Animations::Rigging::MultiPositionConstraintJob::dyn_sourceWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintJob::dyn_sourceWeights");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceWeights"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Vector3> sourceOffsets
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>& UnityEngine::Animations::Rigging::MultiPositionConstraintJob::dyn_sourceOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintJob::dyn_sourceOffsets");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceOffsets"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Single> weightBuffer
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<float>& UnityEngine::Animations::Rigging::MultiPositionConstraintJob::dyn_weightBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintJob::dyn_weightBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weightBuffer"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 axesMask
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::MultiPositionConstraintJob::dyn_axesMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintJob::dyn_axesMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axesMask"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.FloatProperty <jobWeight>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::MultiPositionConstraintJob::dyn_$jobWeight$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintJob::dyn_$jobWeight$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<jobWeight>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintJob.get_jobWeight
::UnityEngine::Animations::Rigging::FloatProperty UnityEngine::Animations::Rigging::MultiPositionConstraintJob::get_jobWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintJob::get_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintJob), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::FloatProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintJob.set_jobWeight
void UnityEngine::Animations::Rigging::MultiPositionConstraintJob::set_jobWeight(::UnityEngine::Animations::Rigging::FloatProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintJob::set_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintJob), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintJob.ProcessRootMotion
void UnityEngine::Animations::Rigging::MultiPositionConstraintJob::ProcessRootMotion(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintJob::ProcessRootMotion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintJob), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintJob.ProcessAnimation
void UnityEngine::Animations::Rigging::MultiPositionConstraintJob::ProcessAnimation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintJob::ProcessAnimation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintJob), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IMultiPositionConstraintData
#include "UnityEngine/Animations/Rigging/IMultiPositionConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Animations.Rigging.WeightedTransformArray
#include "UnityEngine/Animations/Rigging/WeightedTransformArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::IMultiPositionConstraintData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiPositionConstraintData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiPositionConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_sourceObjects
::UnityEngine::Animations::Rigging::WeightedTransformArray UnityEngine::Animations::Rigging::IMultiPositionConstraintData::get_sourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiPositionConstraintData::get_sourceObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiPositionConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransformArray, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_maintainOffset
bool UnityEngine::Animations::Rigging::IMultiPositionConstraintData::get_maintainOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiPositionConstraintData::get_maintainOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiPositionConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_offsetVector3Property
::StringW UnityEngine::Animations::Rigging::IMultiPositionConstraintData::get_offsetVector3Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiPositionConstraintData::get_offsetVector3Property");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiPositionConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_sourceObjectsProperty
::StringW UnityEngine::Animations::Rigging::IMultiPositionConstraintData::get_sourceObjectsProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiPositionConstraintData::get_sourceObjectsProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiPositionConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_constrainedXAxis
bool UnityEngine::Animations::Rigging::IMultiPositionConstraintData::get_constrainedXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiPositionConstraintData::get_constrainedXAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiPositionConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_constrainedYAxis
bool UnityEngine::Animations::Rigging::IMultiPositionConstraintData::get_constrainedYAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiPositionConstraintData::get_constrainedYAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiPositionConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_constrainedZAxis
bool UnityEngine::Animations::Rigging::IMultiPositionConstraintData::get_constrainedZAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiPositionConstraintData::get_constrainedZAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiPositionConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiReferentialConstraintJob
#include "UnityEngine/Animations/Rigging/MultiReferentialConstraintJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.IntProperty driver
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::IntProperty& UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::dyn_driver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::dyn_driver");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "driver"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::IntProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.Rigging.ReadWriteTransformHandle> sources
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle>& UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::dyn_sources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::dyn_sources");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sources"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.Rigging.AffineTransform> sourceBindTx
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::AffineTransform>& UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::dyn_sourceBindTx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::dyn_sourceBindTx");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceBindTx"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::AffineTransform>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.Rigging.AffineTransform> offsetTx
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::AffineTransform>& UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::dyn_offsetTx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::dyn_offsetTx");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offsetTx"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::AffineTransform>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_PrevDriverIdx
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::dyn_m_PrevDriverIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::dyn_m_PrevDriverIdx");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PrevDriverIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.FloatProperty <jobWeight>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::dyn_$jobWeight$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::dyn_$jobWeight$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<jobWeight>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintJob.get_jobWeight
::UnityEngine::Animations::Rigging::FloatProperty UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::get_jobWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::get_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiReferentialConstraintJob), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::FloatProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintJob.set_jobWeight
void UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::set_jobWeight(::UnityEngine::Animations::Rigging::FloatProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::set_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiReferentialConstraintJob), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintJob.ProcessRootMotion
void UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::ProcessRootMotion(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::ProcessRootMotion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiReferentialConstraintJob), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintJob.ProcessAnimation
void UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::ProcessAnimation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::ProcessAnimation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiReferentialConstraintJob), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintJob.UpdateOffsets
void UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::UpdateOffsets(int driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintJob::UpdateOffsets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UpdateOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, driver);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IMultiReferentialConstraintData
#include "UnityEngine/Animations/Rigging/IMultiReferentialConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_driverValue
int UnityEngine::Animations::Rigging::IMultiReferentialConstraintData::get_driverValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiReferentialConstraintData::get_driverValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiReferentialConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_driverIntProperty
::StringW UnityEngine::Animations::Rigging::IMultiReferentialConstraintData::get_driverIntProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiReferentialConstraintData::get_driverIntProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiReferentialConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_sourceObjects
::ArrayW<::UnityEngine::Transform*> UnityEngine::Animations::Rigging::IMultiReferentialConstraintData::get_sourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiReferentialConstraintData::get_sourceObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiReferentialConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Transform*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiRotationConstraintJob
#include "UnityEngine/Animations/Rigging/MultiRotationConstraintJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_Epsilon
float UnityEngine::Animations::Rigging::MultiRotationConstraintJob::_get_k_Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintJob::_get_k_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Animations.Rigging", "MultiRotationConstraintJob", "k_Epsilon"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_Epsilon
void UnityEngine::Animations::Rigging::MultiRotationConstraintJob::_set_k_Epsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintJob::_set_k_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiRotationConstraintJob", "k_Epsilon", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadWriteTransformHandle driven
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle& UnityEngine::Animations::Rigging::MultiRotationConstraintJob::dyn_driven() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintJob::dyn_driven");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "driven"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadOnlyTransformHandle drivenParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle& UnityEngine::Animations::Rigging::MultiRotationConstraintJob::dyn_drivenParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintJob::dyn_drivenParent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drivenParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.Vector3Property drivenOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::Vector3Property& UnityEngine::Animations::Rigging::MultiRotationConstraintJob::dyn_drivenOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintJob::dyn_drivenOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drivenOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::Vector3Property*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.Rigging.ReadOnlyTransformHandle> sourceTransforms
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle>& UnityEngine::Animations::Rigging::MultiRotationConstraintJob::dyn_sourceTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintJob::dyn_sourceTransforms");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceTransforms"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertyStreamHandle> sourceWeights
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>& UnityEngine::Animations::Rigging::MultiRotationConstraintJob::dyn_sourceWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintJob::dyn_sourceWeights");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceWeights"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Quaternion> sourceOffsets
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Quaternion>& UnityEngine::Animations::Rigging::MultiRotationConstraintJob::dyn_sourceOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintJob::dyn_sourceOffsets");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceOffsets"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Single> weightBuffer
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<float>& UnityEngine::Animations::Rigging::MultiRotationConstraintJob::dyn_weightBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintJob::dyn_weightBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weightBuffer"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 axesMask
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::MultiRotationConstraintJob::dyn_axesMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintJob::dyn_axesMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axesMask"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.FloatProperty <jobWeight>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::MultiRotationConstraintJob::dyn_$jobWeight$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintJob::dyn_$jobWeight$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<jobWeight>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintJob.get_jobWeight
::UnityEngine::Animations::Rigging::FloatProperty UnityEngine::Animations::Rigging::MultiRotationConstraintJob::get_jobWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintJob::get_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintJob), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::FloatProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintJob.set_jobWeight
void UnityEngine::Animations::Rigging::MultiRotationConstraintJob::set_jobWeight(::UnityEngine::Animations::Rigging::FloatProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintJob::set_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintJob), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintJob.ProcessRootMotion
void UnityEngine::Animations::Rigging::MultiRotationConstraintJob::ProcessRootMotion(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintJob::ProcessRootMotion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintJob), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintJob.ProcessAnimation
void UnityEngine::Animations::Rigging::MultiRotationConstraintJob::ProcessAnimation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintJob::ProcessAnimation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintJob), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IMultiRotationConstraintData
#include "UnityEngine/Animations/Rigging/IMultiRotationConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Animations.Rigging.WeightedTransformArray
#include "UnityEngine/Animations/Rigging/WeightedTransformArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiRotationConstraintData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::IMultiRotationConstraintData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiRotationConstraintData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiRotationConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiRotationConstraintData.get_sourceObjects
::UnityEngine::Animations::Rigging::WeightedTransformArray UnityEngine::Animations::Rigging::IMultiRotationConstraintData::get_sourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiRotationConstraintData::get_sourceObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiRotationConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransformArray, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiRotationConstraintData.get_maintainOffset
bool UnityEngine::Animations::Rigging::IMultiRotationConstraintData::get_maintainOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiRotationConstraintData::get_maintainOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiRotationConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiRotationConstraintData.get_offsetVector3Property
::StringW UnityEngine::Animations::Rigging::IMultiRotationConstraintData::get_offsetVector3Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiRotationConstraintData::get_offsetVector3Property");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiRotationConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiRotationConstraintData.get_sourceObjectsProperty
::StringW UnityEngine::Animations::Rigging::IMultiRotationConstraintData::get_sourceObjectsProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiRotationConstraintData::get_sourceObjectsProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiRotationConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiRotationConstraintData.get_constrainedXAxis
bool UnityEngine::Animations::Rigging::IMultiRotationConstraintData::get_constrainedXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiRotationConstraintData::get_constrainedXAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiRotationConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiRotationConstraintData.get_constrainedYAxis
bool UnityEngine::Animations::Rigging::IMultiRotationConstraintData::get_constrainedYAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiRotationConstraintData::get_constrainedYAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiRotationConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IMultiRotationConstraintData.get_constrainedZAxis
bool UnityEngine::Animations::Rigging::IMultiRotationConstraintData::get_constrainedZAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IMultiRotationConstraintData::get_constrainedZAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IMultiRotationConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.OverrideTransformJob
#include "UnityEngine/Animations/Rigging/OverrideTransformJob.hpp"
// Including type: UnityEngine.Animations.Rigging.OverrideTransformJob/Space
#include "UnityEngine/Animations/Rigging/OverrideTransformJob_Space.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadWriteTransformHandle driven
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle& UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_driven() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_driven");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "driven"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadOnlyTransformHandle source
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle& UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_source");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.AffineTransform sourceInvLocalBindTx
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::AffineTransform& UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_sourceInvLocalBindTx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_sourceInvLocalBindTx");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceInvLocalBindTx"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::AffineTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion sourceToWorldRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_sourceToWorldRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_sourceToWorldRot");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceToWorldRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion sourceToLocalRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_sourceToLocalRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_sourceToLocalRot");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceToLocalRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion sourceToPivotRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_sourceToPivotRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_sourceToPivotRot");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceToPivotRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.CacheIndex spaceIdx
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::CacheIndex& UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_spaceIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_spaceIdx");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spaceIdx"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::CacheIndex*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.CacheIndex sourceToCurrSpaceRotIdx
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::CacheIndex& UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_sourceToCurrSpaceRotIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_sourceToCurrSpaceRotIdx");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceToCurrSpaceRotIdx"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::CacheIndex*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.Vector3Property position
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::Vector3Property& UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::Vector3Property*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.Vector3Property rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::Vector3Property& UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::Vector3Property*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.FloatProperty positionWeight
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_positionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_positionWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionWeight"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.FloatProperty rotationWeight
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_rotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_rotationWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationWeight"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.AnimationJobCache cache
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::AnimationJobCache& UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_cache");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cache"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::AnimationJobCache*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.FloatProperty <jobWeight>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_$jobWeight$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::dyn_$jobWeight$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<jobWeight>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformJob.get_jobWeight
::UnityEngine::Animations::Rigging::FloatProperty UnityEngine::Animations::Rigging::OverrideTransformJob::get_jobWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::get_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformJob), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::FloatProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformJob.set_jobWeight
void UnityEngine::Animations::Rigging::OverrideTransformJob::set_jobWeight(::UnityEngine::Animations::Rigging::FloatProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::set_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformJob), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformJob.ProcessRootMotion
void UnityEngine::Animations::Rigging::OverrideTransformJob::ProcessRootMotion(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::ProcessRootMotion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformJob), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformJob.ProcessAnimation
void UnityEngine::Animations::Rigging::OverrideTransformJob::ProcessAnimation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::ProcessAnimation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformJob), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformJob.UpdateSpace
void UnityEngine::Animations::Rigging::OverrideTransformJob::UpdateSpace(int space) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::UpdateSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UpdateSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, space);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.OverrideTransformJob/Space
#include "UnityEngine/Animations/Rigging/OverrideTransformJob_Space.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.OverrideTransformJob/Space World
::UnityEngine::Animations::Rigging::OverrideTransformJob::Space UnityEngine::Animations::Rigging::OverrideTransformJob::Space::_get_World() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::Space::_get_World");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::OverrideTransformJob::Space>("UnityEngine.Animations.Rigging", "OverrideTransformJob/Space", "World"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.OverrideTransformJob/Space World
void UnityEngine::Animations::Rigging::OverrideTransformJob::Space::_set_World(::UnityEngine::Animations::Rigging::OverrideTransformJob::Space value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::Space::_set_World");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "OverrideTransformJob/Space", "World", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.OverrideTransformJob/Space Local
::UnityEngine::Animations::Rigging::OverrideTransformJob::Space UnityEngine::Animations::Rigging::OverrideTransformJob::Space::_get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::Space::_get_Local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::OverrideTransformJob::Space>("UnityEngine.Animations.Rigging", "OverrideTransformJob/Space", "Local"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.OverrideTransformJob/Space Local
void UnityEngine::Animations::Rigging::OverrideTransformJob::Space::_set_Local(::UnityEngine::Animations::Rigging::OverrideTransformJob::Space value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::Space::_set_Local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "OverrideTransformJob/Space", "Local", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.OverrideTransformJob/Space Pivot
::UnityEngine::Animations::Rigging::OverrideTransformJob::Space UnityEngine::Animations::Rigging::OverrideTransformJob::Space::_get_Pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::Space::_get_Pivot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::OverrideTransformJob::Space>("UnityEngine.Animations.Rigging", "OverrideTransformJob/Space", "Pivot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.OverrideTransformJob/Space Pivot
void UnityEngine::Animations::Rigging::OverrideTransformJob::Space::_set_Pivot(::UnityEngine::Animations::Rigging::OverrideTransformJob::Space value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::Space::_set_Pivot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "OverrideTransformJob/Space", "Pivot", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::Rigging::OverrideTransformJob::Space::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformJob::Space::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IOverrideTransformData
#include "UnityEngine/Animations/Rigging/IOverrideTransformData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.IOverrideTransformData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::IOverrideTransformData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IOverrideTransformData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IOverrideTransformData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IOverrideTransformData.get_sourceObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::IOverrideTransformData::get_sourceObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IOverrideTransformData::get_sourceObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IOverrideTransformData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IOverrideTransformData.get_space
int UnityEngine::Animations::Rigging::IOverrideTransformData::get_space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IOverrideTransformData::get_space");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IOverrideTransformData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IOverrideTransformData.get_positionWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::IOverrideTransformData::get_positionWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IOverrideTransformData::get_positionWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IOverrideTransformData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IOverrideTransformData.get_rotationWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::IOverrideTransformData::get_rotationWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IOverrideTransformData::get_rotationWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IOverrideTransformData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IOverrideTransformData.get_positionVector3Property
::StringW UnityEngine::Animations::Rigging::IOverrideTransformData::get_positionVector3Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IOverrideTransformData::get_positionVector3Property");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IOverrideTransformData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IOverrideTransformData.get_rotationVector3Property
::StringW UnityEngine::Animations::Rigging::IOverrideTransformData::get_rotationVector3Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IOverrideTransformData::get_rotationVector3Property");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IOverrideTransformData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob
#include "UnityEngine/Animations/Rigging/RigSyncSceneToStreamJob.hpp"
// Including type: UnityEngine.Animations.AnimationStream
#include "UnityEngine/Animations/AnimationStream.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/TransformSyncer transformSyncer
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer& UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::dyn_transformSyncer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::dyn_transformSyncer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformSyncer"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/PropertySyncer propertySyncer
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer& UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::dyn_propertySyncer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::dyn_propertySyncer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertySyncer"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/PropertySyncer rigWeightSyncer
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer& UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::dyn_rigWeightSyncer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::dyn_rigWeightSyncer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigWeightSyncer"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/PropertySyncer constraintWeightSyncer
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer& UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::dyn_constraintWeightSyncer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::dyn_constraintWeightSyncer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constraintWeightSyncer"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Single> rigStates
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<float>& UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::dyn_rigStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::dyn_rigStates");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigStates"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Int32> rigConstraintEndIdx
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::dyn_rigConstraintEndIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::dyn_rigConstraintEndIdx");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigConstraintEndIdx"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertyStreamHandle> modulatedConstraintWeights
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>& UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::dyn_modulatedConstraintWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::dyn_modulatedConstraintWeights");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modulatedConstraintWeights"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob.ProcessRootMotion
void UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::ProcessRootMotion(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::ProcessRootMotion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob.ProcessAnimation
void UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::ProcessAnimation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::ProcessAnimation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/TransformSyncer
#include "UnityEngine/Animations/Rigging/RigSyncSceneToStreamJob.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Animations.AnimationStream
#include "UnityEngine/Animations/AnimationStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.TransformSceneHandle> sceneHandles
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::TransformSceneHandle>& UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::dyn_sceneHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::dyn_sceneHandles");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneHandles"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::TransformSceneHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.TransformStreamHandle> streamHandles
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::TransformStreamHandle>& UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::dyn_streamHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::dyn_streamHandles");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "streamHandles"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::TransformStreamHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/TransformSyncer.Create
::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::Create(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigSyncSceneToStreamJob/TransformSyncer", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/TransformSyncer.Dispose
void UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/TransformSyncer.BindAt
void UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::BindAt(int index, ::UnityEngine::Animator* animator, ::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::BindAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "BindAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, animator, transform);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/TransformSyncer.Sync
void UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::Sync(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::Sync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Sync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/PropertySyncer
#include "UnityEngine/Animations/Rigging/RigSyncSceneToStreamJob.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Animations.AnimationStream
#include "UnityEngine/Animations/AnimationStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertySceneHandle> sceneHandles
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertySceneHandle>& UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::dyn_sceneHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::dyn_sceneHandles");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneHandles"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertySceneHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertyStreamHandle> streamHandles
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>& UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::dyn_streamHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::dyn_streamHandles");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "streamHandles"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Single> buffer
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<float>& UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::dyn_buffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/PropertySyncer.Create
::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::Create(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigSyncSceneToStreamJob/PropertySyncer", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/PropertySyncer.Dispose
void UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/PropertySyncer.BindAt
void UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::BindAt(int index, ::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::BindAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "BindAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(property)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, animator, component, property);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/PropertySyncer.Sync
void UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::Sync(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::Sync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Sync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/PropertySyncer.StreamValues
::Unity::Collections::NativeArray_1<float> UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::StreamValues(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::StreamValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "StreamValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::Collections::NativeArray_1<float>, false>(this, ___internal__method, byref(stream));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IRigSyncSceneToStreamData
#include "UnityEngine/Animations/Rigging/IRigSyncSceneToStreamData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.IRigSyncSceneToStreamData.get_syncableTransforms
::ArrayW<::UnityEngine::Transform*> UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData::get_syncableTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData::get_syncableTransforms");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Transform*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigSyncSceneToStreamData.get_syncableProperties
::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties> UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData::get_syncableProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData::get_syncableProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigSyncSceneToStreamData.get_rigStates
::ArrayW<bool> UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData::get_rigStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData::get_rigStates");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<bool>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.ReadWriteTransformHandle
#include "UnityEngine/Animations/Rigging/ReadWriteTransformHandle.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Animations.AnimationStream
#include "UnityEngine/Animations/AnimationStream.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.TransformStreamHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::TransformStreamHandle& UnityEngine::Animations::Rigging::ReadWriteTransformHandle::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::TransformStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.GetLocalPosition
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetLocalPosition(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetLocalPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.GetLocalRotation
::UnityEngine::Quaternion UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetLocalRotation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetLocalRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.GetLocalScale
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetLocalScale(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetLocalScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.GetLocalTRS
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetLocalTRS(::UnityEngine::Animations::AnimationStream stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetLocalTRS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalTRS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, byref(position), byref(rotation), byref(scale));
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.SetLocalPosition
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetLocalPosition(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetLocalPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLocalPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, position);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.SetLocalRotation
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetLocalRotation(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetLocalRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLocalRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, rotation);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.SetLocalScale
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetLocalScale(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetLocalScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLocalScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, scale);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.SetLocalTRS
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetLocalTRS(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, bool useMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetLocalTRS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLocalTRS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(useMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, position, rotation, scale, useMask);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.GetPosition
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetPosition(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.GetRotation
::UnityEngine::Quaternion UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetRotation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.GetGlobalTR
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetGlobalTR(::UnityEngine::Animations::AnimationStream stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetGlobalTR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetGlobalTR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, byref(position), byref(rotation));
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.SetPosition
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetPosition(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, position);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.SetRotation
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetRotation(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, rotation);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.SetGlobalTR
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetGlobalTR(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, bool useMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetGlobalTR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetGlobalTR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(useMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, position, rotation, useMask);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.IsResolved
bool UnityEngine::Animations::Rigging::ReadWriteTransformHandle::IsResolved(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::IsResolved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsResolved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.IsValid
bool UnityEngine::Animations::Rigging::ReadWriteTransformHandle::IsValid(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.Resolve
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::Resolve(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::Resolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Resolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.Bind
::UnityEngine::Animations::Rigging::ReadWriteTransformHandle UnityEngine::Animations::Rigging::ReadWriteTransformHandle::Bind(::UnityEngine::Animator* animator, ::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "ReadWriteTransformHandle", "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, transform);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle
#include "UnityEngine/Animations/Rigging/ReadOnlyTransformHandle.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Animations.AnimationStream
#include "UnityEngine/Animations/AnimationStream.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.TransformStreamHandle m_StreamHandle
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::TransformStreamHandle& UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::dyn_m_StreamHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::dyn_m_StreamHandle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StreamHandle"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::TransformStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.TransformSceneHandle m_SceneHandle
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::TransformSceneHandle& UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::dyn_m_SceneHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::dyn_m_SceneHandle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SceneHandle"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::TransformSceneHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte m_InStream
[[deprecated("Use field access instead!")]] uint8_t& UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::dyn_m_InStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::dyn_m_InStream");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InStream"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.GetLocalPosition
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetLocalPosition(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetLocalPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.GetLocalRotation
::UnityEngine::Quaternion UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetLocalRotation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetLocalRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.GetLocalScale
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetLocalScale(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetLocalScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.GetLocalTRS
void UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetLocalTRS(::UnityEngine::Animations::AnimationStream stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetLocalTRS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalTRS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, byref(position), byref(rotation), byref(scale));
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.GetPosition
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetPosition(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.GetRotation
::UnityEngine::Quaternion UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetRotation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.GetGlobalTR
void UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetGlobalTR(::UnityEngine::Animations::AnimationStream stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetGlobalTR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetGlobalTR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, byref(position), byref(rotation));
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.IsResolved
bool UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::IsResolved(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::IsResolved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsResolved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.IsValid
bool UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::IsValid(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.Resolve
void UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::Resolve(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::Resolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Resolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.Bind
::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::Bind(::UnityEngine::Animator* animator, ::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "ReadOnlyTransformHandle", "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, transform);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.TwistChainConstraintJob
#include "UnityEngine/Animations/Rigging/TwistChainConstraintJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadWriteTransformHandle rootTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle& UnityEngine::Animations::Rigging::TwistChainConstraintJob::dyn_rootTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintJob::dyn_rootTarget");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadWriteTransformHandle tipTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle& UnityEngine::Animations::Rigging::TwistChainConstraintJob::dyn_tipTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintJob::dyn_tipTarget");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tipTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.Rigging.ReadWriteTransformHandle> chain
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle>& UnityEngine::Animations::Rigging::TwistChainConstraintJob::dyn_chain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintJob::dyn_chain");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chain"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Single> steps
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<float>& UnityEngine::Animations::Rigging::TwistChainConstraintJob::dyn_steps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintJob::dyn_steps");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "steps"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Single> weights
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<float>& UnityEngine::Animations::Rigging::TwistChainConstraintJob::dyn_weights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintJob::dyn_weights");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weights"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Quaternion> rotations
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Quaternion>& UnityEngine::Animations::Rigging::TwistChainConstraintJob::dyn_rotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintJob::dyn_rotations");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotations"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.FloatProperty <jobWeight>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::TwistChainConstraintJob::dyn_$jobWeight$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintJob::dyn_$jobWeight$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<jobWeight>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistChainConstraintJob.get_jobWeight
::UnityEngine::Animations::Rigging::FloatProperty UnityEngine::Animations::Rigging::TwistChainConstraintJob::get_jobWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintJob::get_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistChainConstraintJob), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::FloatProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistChainConstraintJob.set_jobWeight
void UnityEngine::Animations::Rigging::TwistChainConstraintJob::set_jobWeight(::UnityEngine::Animations::Rigging::FloatProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintJob::set_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistChainConstraintJob), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistChainConstraintJob.ProcessRootMotion
void UnityEngine::Animations::Rigging::TwistChainConstraintJob::ProcessRootMotion(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintJob::ProcessRootMotion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistChainConstraintJob), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistChainConstraintJob.ProcessAnimation
void UnityEngine::Animations::Rigging::TwistChainConstraintJob::ProcessAnimation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintJob::ProcessAnimation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistChainConstraintJob), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.ITwistChainConstraintData
#include "UnityEngine/Animations/Rigging/ITwistChainConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.ITwistChainConstraintData.get_root
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ITwistChainConstraintData::get_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwistChainConstraintData::get_root");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwistChainConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwistChainConstraintData.get_tip
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ITwistChainConstraintData::get_tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwistChainConstraintData::get_tip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwistChainConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwistChainConstraintData.get_rootTarget
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ITwistChainConstraintData::get_rootTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwistChainConstraintData::get_rootTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwistChainConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwistChainConstraintData.get_tipTarget
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ITwistChainConstraintData::get_tipTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwistChainConstraintData::get_tipTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwistChainConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwistChainConstraintData.get_curve
::UnityEngine::AnimationCurve* UnityEngine::Animations::Rigging::ITwistChainConstraintData::get_curve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwistChainConstraintData::get_curve");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwistChainConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.TwistCorrectionJob
#include "UnityEngine/Animations/Rigging/TwistCorrectionJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadOnlyTransformHandle source
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle& UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_source");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion sourceInverseBindRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_sourceInverseBindRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_sourceInverseBindRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceInverseBindRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 axisMask
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_axisMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_axisMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axisMask"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.Rigging.ReadWriteTransformHandle> twistTransforms
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle>& UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_twistTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_twistTransforms");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "twistTransforms"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertyStreamHandle> twistWeights
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>& UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_twistWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_twistWeights");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "twistWeights"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Quaternion> twistBindRotations
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Quaternion>& UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_twistBindRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_twistBindRotations");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "twistBindRotations"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Single> weightBuffer
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<float>& UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_weightBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_weightBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weightBuffer"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.FloatProperty <jobWeight>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_$jobWeight$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_$jobWeight$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<jobWeight>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionJob.get_jobWeight
::UnityEngine::Animations::Rigging::FloatProperty UnityEngine::Animations::Rigging::TwistCorrectionJob::get_jobWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::get_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionJob), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::FloatProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionJob.set_jobWeight
void UnityEngine::Animations::Rigging::TwistCorrectionJob::set_jobWeight(::UnityEngine::Animations::Rigging::FloatProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::set_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionJob), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionJob.ProcessRootMotion
void UnityEngine::Animations::Rigging::TwistCorrectionJob::ProcessRootMotion(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::ProcessRootMotion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionJob), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionJob.ProcessAnimation
void UnityEngine::Animations::Rigging::TwistCorrectionJob::ProcessAnimation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::ProcessAnimation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionJob), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionJob.TwistRotation
::UnityEngine::Quaternion UnityEngine::Animations::Rigging::TwistCorrectionJob::TwistRotation(::UnityEngine::Vector3 axis, ::UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::TwistRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "TwistCorrectionJob", "TwistRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(rot)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, axis, rot);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.ITwistCorrectionData
#include "UnityEngine/Animations/Rigging/ITwistCorrectionData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Animations.Rigging.WeightedTransformArray
#include "UnityEngine/Animations/Rigging/WeightedTransformArray.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.ITwistCorrectionData.get_source
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ITwistCorrectionData::get_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwistCorrectionData::get_source");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwistCorrectionData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistNodes
::UnityEngine::Animations::Rigging::WeightedTransformArray UnityEngine::Animations::Rigging::ITwistCorrectionData::get_twistNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwistCorrectionData::get_twistNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwistCorrectionData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransformArray, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistAxis
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::ITwistCorrectionData::get_twistAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwistCorrectionData::get_twistAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwistCorrectionData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistNodesProperty
::StringW UnityEngine::Animations::Rigging::ITwistCorrectionData::get_twistNodesProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwistCorrectionData::get_twistNodesProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwistCorrectionData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.TwoBoneIKConstraintJob
#include "UnityEngine/Animations/Rigging/TwoBoneIKConstraintJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadWriteTransformHandle root
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_root");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadWriteTransformHandle mid
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_mid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_mid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mid"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadWriteTransformHandle tip
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_tip");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tip"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadOnlyTransformHandle hint
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_hint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_hint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hint"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadOnlyTransformHandle target
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_target");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.AffineTransform targetOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::AffineTransform& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_targetOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_targetOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::AffineTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.FloatProperty targetPositionWeight
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_targetPositionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_targetPositionWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetPositionWeight"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.FloatProperty targetRotationWeight
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_targetRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_targetRotationWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetRotationWeight"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.FloatProperty hintWeight
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_hintWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_hintWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hintWeight"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.FloatProperty <jobWeight>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_$jobWeight$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_$jobWeight$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<jobWeight>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintJob.get_jobWeight
::UnityEngine::Animations::Rigging::FloatProperty UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::get_jobWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::get_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::FloatProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintJob.set_jobWeight
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::set_jobWeight(::UnityEngine::Animations::Rigging::FloatProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::set_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintJob.ProcessRootMotion
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::ProcessRootMotion(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::ProcessRootMotion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintJob.ProcessAnimation
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::ProcessAnimation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::ProcessAnimation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData
#include "UnityEngine/Animations/Rigging/ITwoBoneIKConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_root
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_root");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_mid
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_mid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_mid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_tip
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_tip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_target
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_target");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_hint
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_hint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_hint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_maintainTargetPositionOffset
bool UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_maintainTargetPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_maintainTargetPositionOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_maintainTargetRotationOffset
bool UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_maintainTargetRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_maintainTargetRotationOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_targetPositionWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_targetPositionWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_targetPositionWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_targetRotationWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_targetRotationWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_targetRotationWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_hintWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_hintWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_hintWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.WeightedTransformArrayBinder
#include "UnityEngine/Animations/Rigging/WeightedTransformArrayBinder.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Animations.Rigging.WeightedTransformArray
#include "UnityEngine/Animations/Rigging/WeightedTransformArray.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArrayBinder.BindReadOnlyTransforms
void UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::BindReadOnlyTransforms(::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::UnityEngine::Animations::Rigging::WeightedTransformArray weightedTransformArray, ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle>> transforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::BindReadOnlyTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "WeightedTransformArrayBinder", "BindReadOnlyTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(weightedTransformArray), ::il2cpp_utils::ExtractIndependentType<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle>&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, component, weightedTransformArray, byref(transforms));
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArrayBinder.BindReadWriteTransforms
void UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::BindReadWriteTransforms(::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::UnityEngine::Animations::Rigging::WeightedTransformArray weightedTransformArray, ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle>> transforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::BindReadWriteTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "WeightedTransformArrayBinder", "BindReadWriteTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(weightedTransformArray), ::il2cpp_utils::ExtractIndependentType<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle>&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, component, weightedTransformArray, byref(transforms));
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArrayBinder.BindWeights
void UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::BindWeights(::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::UnityEngine::Animations::Rigging::WeightedTransformArray weightedTransformArray, ::StringW name, ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>> weights) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::BindWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "WeightedTransformArrayBinder", "BindWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(weightedTransformArray), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, component, weightedTransformArray, name, byref(weights));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.BlendConstraintData
#include "UnityEngine/Animations/Rigging/BlendConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ConstrainedObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_ConstrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_ConstrainedObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_SourceA
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_SourceA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_SourceA");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceA"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_SourceB
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_SourceB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_SourceB");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceB"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_BlendPosition
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_BlendPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_BlendPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BlendPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_BlendRotation
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_BlendRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_BlendRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BlendRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PositionWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_PositionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_PositionWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PositionWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_RotationWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_RotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_RotationWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainPositionOffsets
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_MaintainPositionOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_MaintainPositionOffsets");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainPositionOffsets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainRotationOffsets
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_MaintainRotationOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_MaintainRotationOffsets");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainRotationOffsets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::BlendConstraintData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.set_constrainedObject
void UnityEngine::Animations::Rigging::BlendConstraintData::set_constrainedObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::set_constrainedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.get_sourceObjectA
::UnityEngine::Transform* UnityEngine::Animations::Rigging::BlendConstraintData::get_sourceObjectA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::get_sourceObjectA");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.set_sourceObjectA
void UnityEngine::Animations::Rigging::BlendConstraintData::set_sourceObjectA(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::set_sourceObjectA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObjectA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.get_sourceObjectB
::UnityEngine::Transform* UnityEngine::Animations::Rigging::BlendConstraintData::get_sourceObjectB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::get_sourceObjectB");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.set_sourceObjectB
void UnityEngine::Animations::Rigging::BlendConstraintData::set_sourceObjectB(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::set_sourceObjectB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObjectB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.get_blendPosition
bool UnityEngine::Animations::Rigging::BlendConstraintData::get_blendPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::get_blendPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_blendPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.set_blendPosition
void UnityEngine::Animations::Rigging::BlendConstraintData::set_blendPosition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::set_blendPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_blendPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.get_blendRotation
bool UnityEngine::Animations::Rigging::BlendConstraintData::get_blendRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::get_blendRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_blendRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.set_blendRotation
void UnityEngine::Animations::Rigging::BlendConstraintData::set_blendRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::set_blendRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_blendRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.get_positionWeight
float UnityEngine::Animations::Rigging::BlendConstraintData::get_positionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::get_positionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_positionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.set_positionWeight
void UnityEngine::Animations::Rigging::BlendConstraintData::set_positionWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::set_positionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_positionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.get_rotationWeight
float UnityEngine::Animations::Rigging::BlendConstraintData::get_rotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::get_rotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_rotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.set_rotationWeight
void UnityEngine::Animations::Rigging::BlendConstraintData::set_rotationWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::set_rotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_rotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.get_maintainPositionOffsets
bool UnityEngine::Animations::Rigging::BlendConstraintData::get_maintainPositionOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::get_maintainPositionOffsets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.set_maintainPositionOffsets
void UnityEngine::Animations::Rigging::BlendConstraintData::set_maintainPositionOffsets(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::set_maintainPositionOffsets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainPositionOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.get_maintainRotationOffsets
bool UnityEngine::Animations::Rigging::BlendConstraintData::get_maintainRotationOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::get_maintainRotationOffsets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.set_maintainRotationOffsets
void UnityEngine::Animations::Rigging::BlendConstraintData::set_maintainRotationOffsets(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::set_maintainRotationOffsets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainRotationOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.UnityEngine.Animations.Rigging.IBlendConstraintData.get_blendPositionBoolProperty
::StringW UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IBlendConstraintData_get_blendPositionBoolProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine.Animations.Rigging.IBlendConstraintData.get_blendPositionBoolProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.UnityEngine.Animations.Rigging.IBlendConstraintData.get_blendRotationBoolProperty
::StringW UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IBlendConstraintData_get_blendRotationBoolProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine.Animations.Rigging.IBlendConstraintData.get_blendRotationBoolProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.UnityEngine.Animations.Rigging.IBlendConstraintData.get_positionWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IBlendConstraintData_get_positionWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine.Animations.Rigging.IBlendConstraintData.get_positionWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.UnityEngine.Animations.Rigging.IBlendConstraintData.get_rotationWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IBlendConstraintData_get_rotationWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine.Animations.Rigging.IBlendConstraintData.get_rotationWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.BlendConstraint
#include "UnityEngine/Animations/Rigging/BlendConstraint.hpp"
// Including type: UnityEngine.Animations.Rigging.BlendConstraintJobBinder`1
#include "UnityEngine/Animations/Rigging/BlendConstraintJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraint.OnValidate
void UnityEngine::Animations::Rigging::BlendConstraint::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraint::OnValidate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigConstraint_3<TJob, TData, TBinder>*), 13)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.ChainIKConstraintData
#include "UnityEngine/Animations/Rigging/ChainIKConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 k_MinIterations
int UnityEngine::Animations::Rigging::ChainIKConstraintData::_get_k_MinIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::_get_k_MinIterations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Animations.Rigging", "ChainIKConstraintData", "k_MinIterations"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 k_MinIterations
void UnityEngine::Animations::Rigging::ChainIKConstraintData::_set_k_MinIterations(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::_set_k_MinIterations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "ChainIKConstraintData", "k_MinIterations", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 k_MaxIterations
int UnityEngine::Animations::Rigging::ChainIKConstraintData::_get_k_MaxIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::_get_k_MaxIterations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Animations.Rigging", "ChainIKConstraintData", "k_MaxIterations"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 k_MaxIterations
void UnityEngine::Animations::Rigging::ChainIKConstraintData::_set_k_MaxIterations(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::_set_k_MaxIterations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "ChainIKConstraintData", "k_MaxIterations", value));
}
// Autogenerated static field getter
// Get static field: static System.Single k_MinTolerance
float UnityEngine::Animations::Rigging::ChainIKConstraintData::_get_k_MinTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::_get_k_MinTolerance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Animations.Rigging", "ChainIKConstraintData", "k_MinTolerance"));
}
// Autogenerated static field setter
// Set static field: static System.Single k_MinTolerance
void UnityEngine::Animations::Rigging::ChainIKConstraintData::_set_k_MinTolerance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::_set_k_MinTolerance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "ChainIKConstraintData", "k_MinTolerance", value));
}
// Autogenerated static field getter
// Get static field: static System.Single k_MaxTolerance
float UnityEngine::Animations::Rigging::ChainIKConstraintData::_get_k_MaxTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::_get_k_MaxTolerance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Animations.Rigging", "ChainIKConstraintData", "k_MaxTolerance"));
}
// Autogenerated static field setter
// Set static field: static System.Single k_MaxTolerance
void UnityEngine::Animations::Rigging::ChainIKConstraintData::_set_k_MaxTolerance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::_set_k_MaxTolerance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "ChainIKConstraintData", "k_MaxTolerance", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Root
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_Root");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Root"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Tip
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_Tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_Tip");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tip"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_Target");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ChainRotationWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_ChainRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_ChainRotationWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ChainRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TipRotationWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_TipRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_TipRotationWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TipRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_MaxIterations
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_MaxIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_MaxIterations");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxIterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Tolerance
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_Tolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_Tolerance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tolerance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainTargetPositionOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_MaintainTargetPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_MaintainTargetPositionOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainTargetPositionOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainTargetRotationOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_MaintainTargetRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_MaintainTargetRotationOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainTargetRotationOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.get_root
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ChainIKConstraintData::get_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::get_root");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.set_root
void UnityEngine::Animations::Rigging::ChainIKConstraintData::set_root(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::set_root");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_root", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.get_tip
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ChainIKConstraintData::get_tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::get_tip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.set_tip
void UnityEngine::Animations::Rigging::ChainIKConstraintData::set_tip(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::set_tip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.get_target
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ChainIKConstraintData::get_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::get_target");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.set_target
void UnityEngine::Animations::Rigging::ChainIKConstraintData::set_target(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::set_target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.get_chainRotationWeight
float UnityEngine::Animations::Rigging::ChainIKConstraintData::get_chainRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::get_chainRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_chainRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.set_chainRotationWeight
void UnityEngine::Animations::Rigging::ChainIKConstraintData::set_chainRotationWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::set_chainRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_chainRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.get_tipRotationWeight
float UnityEngine::Animations::Rigging::ChainIKConstraintData::get_tipRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::get_tipRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_tipRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.set_tipRotationWeight
void UnityEngine::Animations::Rigging::ChainIKConstraintData::set_tipRotationWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::set_tipRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tipRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.get_maxIterations
int UnityEngine::Animations::Rigging::ChainIKConstraintData::get_maxIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::get_maxIterations");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.set_maxIterations
void UnityEngine::Animations::Rigging::ChainIKConstraintData::set_maxIterations(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::set_maxIterations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maxIterations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.get_tolerance
float UnityEngine::Animations::Rigging::ChainIKConstraintData::get_tolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::get_tolerance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 10));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.set_tolerance
void UnityEngine::Animations::Rigging::ChainIKConstraintData::set_tolerance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::set_tolerance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tolerance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.get_maintainTargetPositionOffset
bool UnityEngine::Animations::Rigging::ChainIKConstraintData::get_maintainTargetPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::get_maintainTargetPositionOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.set_maintainTargetPositionOffset
void UnityEngine::Animations::Rigging::ChainIKConstraintData::set_maintainTargetPositionOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::set_maintainTargetPositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainTargetPositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.get_maintainTargetRotationOffset
bool UnityEngine::Animations::Rigging::ChainIKConstraintData::get_maintainTargetRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::get_maintainTargetRotationOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.set_maintainTargetRotationOffset
void UnityEngine::Animations::Rigging::ChainIKConstraintData::set_maintainTargetRotationOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::set_maintainTargetRotationOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainTargetRotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.UnityEngine.Animations.Rigging.IChainIKConstraintData.get_chainRotationWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::ChainIKConstraintData::UnityEngine_Animations_Rigging_IChainIKConstraintData_get_chainRotationWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::UnityEngine.Animations.Rigging.IChainIKConstraintData.get_chainRotationWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.UnityEngine.Animations.Rigging.IChainIKConstraintData.get_tipRotationWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::ChainIKConstraintData::UnityEngine_Animations_Rigging_IChainIKConstraintData_get_tipRotationWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::UnityEngine.Animations.Rigging.IChainIKConstraintData.get_tipRotationWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::ChainIKConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::ChainIKConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.ChainIKConstraint
#include "UnityEngine/Animations/Rigging/ChainIKConstraint.hpp"
// Including type: UnityEngine.Animations.Rigging.ChainIKConstraintJobBinder`1
#include "UnityEngine/Animations/Rigging/ChainIKConstraintJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraint.OnValidate
void UnityEngine::Animations::Rigging::ChainIKConstraint::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraint::OnValidate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigConstraint_3<TJob, TData, TBinder>*), 13)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.DampedTransformData
#include "UnityEngine/Animations/Rigging/DampedTransformData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ConstrainedObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_ConstrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_ConstrainedObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Source
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_Source");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Source"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DampPosition
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_DampPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_DampPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DampPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DampRotation
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_DampRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_DampRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DampRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainAim
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_MaintainAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_MaintainAim");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainAim"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::DampedTransformData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::DampedTransformData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.set_constrainedObject
void UnityEngine::Animations::Rigging::DampedTransformData::set_constrainedObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::set_constrainedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.get_sourceObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::DampedTransformData::get_sourceObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::get_sourceObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::DampedTransformData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.set_sourceObject
void UnityEngine::Animations::Rigging::DampedTransformData::set_sourceObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::set_sourceObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.get_dampPosition
float UnityEngine::Animations::Rigging::DampedTransformData::get_dampPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::get_dampPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_dampPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.set_dampPosition
void UnityEngine::Animations::Rigging::DampedTransformData::set_dampPosition(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::set_dampPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_dampPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.get_dampRotation
float UnityEngine::Animations::Rigging::DampedTransformData::get_dampRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::get_dampRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_dampRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.set_dampRotation
void UnityEngine::Animations::Rigging::DampedTransformData::set_dampRotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::set_dampRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_dampRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.get_maintainAim
bool UnityEngine::Animations::Rigging::DampedTransformData::get_maintainAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::get_maintainAim");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::DampedTransformData), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.set_maintainAim
void UnityEngine::Animations::Rigging::DampedTransformData::set_maintainAim(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::set_maintainAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.UnityEngine.Animations.Rigging.IDampedTransformData.get_dampPositionFloatProperty
::StringW UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine_Animations_Rigging_IDampedTransformData_get_dampPositionFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine.Animations.Rigging.IDampedTransformData.get_dampPositionFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::DampedTransformData), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.UnityEngine.Animations.Rigging.IDampedTransformData.get_dampRotationFloatProperty
::StringW UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine_Animations_Rigging_IDampedTransformData_get_dampRotationFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine.Animations.Rigging.IDampedTransformData.get_dampRotationFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::DampedTransformData), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::DampedTransformData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::DampedTransformData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.DampedTransform
#include "UnityEngine/Animations/Rigging/DampedTransform.hpp"
// Including type: UnityEngine.Animations.Rigging.DampedTransformJobBinder`1
#include "UnityEngine/Animations/Rigging/DampedTransformJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransform.OnValidate
void UnityEngine::Animations::Rigging::DampedTransform::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransform::OnValidate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigConstraint_3<TJob, TData, TBinder>*), 13)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiAimConstraintData
#include "UnityEngine/Animations/Rigging/MultiAimConstraintData.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Single k_MinAngularLimit
float UnityEngine::Animations::Rigging::MultiAimConstraintData::_get_k_MinAngularLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::_get_k_MinAngularLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Animations.Rigging", "MultiAimConstraintData", "k_MinAngularLimit"));
}
// Autogenerated static field setter
// Set static field: static System.Single k_MinAngularLimit
void UnityEngine::Animations::Rigging::MultiAimConstraintData::_set_k_MinAngularLimit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::_set_k_MinAngularLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData", "k_MinAngularLimit", value));
}
// Autogenerated static field getter
// Get static field: static System.Single k_MaxAngularLimit
float UnityEngine::Animations::Rigging::MultiAimConstraintData::_get_k_MaxAngularLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::_get_k_MaxAngularLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Animations.Rigging", "MultiAimConstraintData", "k_MaxAngularLimit"));
}
// Autogenerated static field setter
// Set static field: static System.Single k_MaxAngularLimit
void UnityEngine::Animations::Rigging::MultiAimConstraintData::_set_k_MaxAngularLimit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::_set_k_MaxAngularLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData", "k_MaxAngularLimit", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ConstrainedObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_ConstrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_ConstrainedObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransformArray m_SourceObjects
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransformArray& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_SourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_SourceObjects");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceObjects"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransformArray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_Offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MinLimit
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_MinLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_MinLimit");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MinLimit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MaxLimit
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_MaxLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_MaxLimit");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxLimit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis m_AimAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_AimAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_AimAxis");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AimAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis m_UpAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_UpAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_UpAxis");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.MultiAimConstraintData/WorldUpType m_WorldUpType
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_WorldUpType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_WorldUpType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WorldUpType"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_WorldUpObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_WorldUpObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_WorldUpObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WorldUpObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis m_WorldUpAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_WorldUpAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_WorldUpAxis");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WorldUpAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_MaintainOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_MaintainOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.Vector3Bool m_ConstrainedAxes
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::Vector3Bool& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_ConstrainedAxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_ConstrainedAxes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedAxes"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::Vector3Bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::MultiAimConstraintData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_constrainedObject
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_constrainedObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_constrainedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_sourceObjects
::UnityEngine::Animations::Rigging::WeightedTransformArray UnityEngine::Animations::Rigging::MultiAimConstraintData::get_sourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_sourceObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransformArray, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_sourceObjects
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_sourceObjects(::UnityEngine::Animations::Rigging::WeightedTransformArray value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_sourceObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_maintainOffset
bool UnityEngine::Animations::Rigging::MultiAimConstraintData::get_maintainOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_maintainOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_maintainOffset
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_maintainOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_maintainOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_offset
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::MultiAimConstraintData::get_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_offset
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_offset(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_limits
::UnityEngine::Vector2 UnityEngine::Animations::Rigging::MultiAimConstraintData::get_limits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_limits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_limits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_limits
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_limits(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_limits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_limits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_aimAxis
::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis UnityEngine::Animations::Rigging::MultiAimConstraintData::get_aimAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_aimAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_aimAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_aimAxis
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_aimAxis(::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_aimAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_aimAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_upAxis
::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis UnityEngine::Animations::Rigging::MultiAimConstraintData::get_upAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_upAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_upAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_upAxis
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_upAxis(::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_upAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_upAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_worldUpType
::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType UnityEngine::Animations::Rigging::MultiAimConstraintData::get_worldUpType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_worldUpType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_worldUpType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_worldUpType
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_worldUpType(::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_worldUpType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_worldUpType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_worldUpAxis
::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis UnityEngine::Animations::Rigging::MultiAimConstraintData::get_worldUpAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_worldUpAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_worldUpAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_worldUpAxis
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_worldUpAxis(::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_worldUpAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_worldUpAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_worldUpObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::MultiAimConstraintData::get_worldUpObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_worldUpObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 13));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_worldUpObject
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_worldUpObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_worldUpObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_worldUpObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_constrainedXAxis
bool UnityEngine::Animations::Rigging::MultiAimConstraintData::get_constrainedXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_constrainedXAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_constrainedXAxis
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_constrainedXAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_constrainedXAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedXAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_constrainedYAxis
bool UnityEngine::Animations::Rigging::MultiAimConstraintData::get_constrainedYAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_constrainedYAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_constrainedYAxis
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_constrainedYAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_constrainedYAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedYAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_constrainedZAxis
bool UnityEngine::Animations::Rigging::MultiAimConstraintData::get_constrainedZAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_constrainedZAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_constrainedZAxis
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_constrainedZAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_constrainedZAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedZAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_aimAxis
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine_Animations_Rigging_IMultiAimConstraintData_get_aimAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_aimAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 9));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_upAxis
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine_Animations_Rigging_IMultiAimConstraintData_get_upAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_upAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 10));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_worldUpType
int UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine_Animations_Rigging_IMultiAimConstraintData_get_worldUpType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_worldUpType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_worldUpAxis
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine_Animations_Rigging_IMultiAimConstraintData_get_worldUpAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_worldUpAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 12));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_offsetVector3Property
::StringW UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine_Animations_Rigging_IMultiAimConstraintData_get_offsetVector3Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_offsetVector3Property");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 17));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_minLimitFloatProperty
::StringW UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine_Animations_Rigging_IMultiAimConstraintData_get_minLimitFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_minLimitFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_maxLimitFloatProperty
::StringW UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine_Animations_Rigging_IMultiAimConstraintData_get_maxLimitFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_maxLimitFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 19));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_sourceObjectsProperty
::StringW UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine_Animations_Rigging_IMultiAimConstraintData_get_sourceObjectsProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_sourceObjectsProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.Convert
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::MultiAimConstraintData::Convert(::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "MultiAimConstraintData", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, axis);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis
#include "UnityEngine/Animations/Rigging/MultiAimConstraintData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis X
::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis>("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "X"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis X
void UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_X(::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "X", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis X_NEG
::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_X_NEG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_X_NEG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis>("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "X_NEG"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis X_NEG
void UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_X_NEG(::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_X_NEG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "X_NEG", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis Y
::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis>("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "Y"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis Y
void UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_Y(::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis Y_NEG
::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_Y_NEG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_Y_NEG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis>("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "Y_NEG"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis Y_NEG
void UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_Y_NEG(::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_Y_NEG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "Y_NEG", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis Z
::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_Z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_Z");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis>("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "Z"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis Z
void UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_Z(::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_Z");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "Z", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis Z_NEG
::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_Z_NEG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_Z_NEG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis>("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "Z_NEG"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis Z_NEG
void UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_Z_NEG(::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_Z_NEG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "Z_NEG", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiAimConstraintData/WorldUpType
#include "UnityEngine/Animations/Rigging/MultiAimConstraintData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/WorldUpType None
::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType>("UnityEngine.Animations.Rigging", "MultiAimConstraintData/WorldUpType", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/WorldUpType None
void UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_set_None(::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData/WorldUpType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/WorldUpType SceneUp
::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_get_SceneUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_get_SceneUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType>("UnityEngine.Animations.Rigging", "MultiAimConstraintData/WorldUpType", "SceneUp"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/WorldUpType SceneUp
void UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_set_SceneUp(::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_set_SceneUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData/WorldUpType", "SceneUp", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/WorldUpType ObjectUp
::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_get_ObjectUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_get_ObjectUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType>("UnityEngine.Animations.Rigging", "MultiAimConstraintData/WorldUpType", "ObjectUp"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/WorldUpType ObjectUp
void UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_set_ObjectUp(::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_set_ObjectUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData/WorldUpType", "ObjectUp", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/WorldUpType ObjectRotationUp
::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_get_ObjectRotationUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_get_ObjectRotationUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType>("UnityEngine.Animations.Rigging", "MultiAimConstraintData/WorldUpType", "ObjectRotationUp"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/WorldUpType ObjectRotationUp
void UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_set_ObjectRotationUp(::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_set_ObjectRotationUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData/WorldUpType", "ObjectRotationUp", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/WorldUpType Vector
::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_get_Vector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_get_Vector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType>("UnityEngine.Animations.Rigging", "MultiAimConstraintData/WorldUpType", "Vector"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/WorldUpType Vector
void UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_set_Vector(::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::_set_Vector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData/WorldUpType", "Vector", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::WorldUpType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiAimConstraint
#include "UnityEngine/Animations/Rigging/MultiAimConstraint.hpp"
// Including type: UnityEngine.Animations.Rigging.MultiAimConstraintJobBinder`1
#include "UnityEngine/Animations/Rigging/MultiAimConstraintJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraint.OnValidate
void UnityEngine::Animations::Rigging::MultiAimConstraint::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraint::OnValidate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigConstraint_3<TJob, TData, TBinder>*), 13)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiParentConstraintData
#include "UnityEngine/Animations/Rigging/MultiParentConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ConstrainedObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_ConstrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_ConstrainedObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransformArray m_SourceObjects
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransformArray& UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_SourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_SourceObjects");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceObjects"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransformArray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.Vector3Bool m_ConstrainedPositionAxes
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::Vector3Bool& UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_ConstrainedPositionAxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_ConstrainedPositionAxes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedPositionAxes"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::Vector3Bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.Vector3Bool m_ConstrainedRotationAxes
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::Vector3Bool& UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_ConstrainedRotationAxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_ConstrainedRotationAxes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedRotationAxes"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::Vector3Bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainPositionOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_MaintainPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_MaintainPositionOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainPositionOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainRotationOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_MaintainRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_MaintainRotationOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainRotationOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_constrainedObject
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_sourceObjects
::UnityEngine::Animations::Rigging::WeightedTransformArray UnityEngine::Animations::Rigging::MultiParentConstraintData::get_sourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_sourceObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransformArray, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_sourceObjects
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_sourceObjects(::UnityEngine::Animations::Rigging::WeightedTransformArray value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_sourceObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_maintainPositionOffset
bool UnityEngine::Animations::Rigging::MultiParentConstraintData::get_maintainPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_maintainPositionOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_maintainPositionOffset
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_maintainPositionOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_maintainPositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainPositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_maintainRotationOffset
bool UnityEngine::Animations::Rigging::MultiParentConstraintData::get_maintainRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_maintainRotationOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_maintainRotationOffset
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_maintainRotationOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_maintainRotationOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainRotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_constrainedPositionXAxis
bool UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedPositionXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedPositionXAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_constrainedPositionXAxis
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedPositionXAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedPositionXAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedPositionXAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_constrainedPositionYAxis
bool UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedPositionYAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedPositionYAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_constrainedPositionYAxis
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedPositionYAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedPositionYAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedPositionYAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_constrainedPositionZAxis
bool UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedPositionZAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedPositionZAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_constrainedPositionZAxis
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedPositionZAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedPositionZAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedPositionZAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_constrainedRotationXAxis
bool UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedRotationXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedRotationXAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_constrainedRotationXAxis
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedRotationXAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedRotationXAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedRotationXAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_constrainedRotationYAxis
bool UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedRotationYAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedRotationYAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_constrainedRotationYAxis
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedRotationYAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedRotationYAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedRotationYAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_constrainedRotationZAxis
bool UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedRotationZAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedRotationZAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_constrainedRotationZAxis
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedRotationZAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedRotationZAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedRotationZAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.UnityEngine.Animations.Rigging.IMultiParentConstraintData.get_sourceObjectsProperty
::StringW UnityEngine::Animations::Rigging::MultiParentConstraintData::UnityEngine_Animations_Rigging_IMultiParentConstraintData_get_sourceObjectsProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::UnityEngine.Animations.Rigging.IMultiParentConstraintData.get_sourceObjectsProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::MultiParentConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::MultiParentConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiParentConstraint
#include "UnityEngine/Animations/Rigging/MultiParentConstraint.hpp"
// Including type: UnityEngine.Animations.Rigging.MultiParentConstraintJobBinder`1
#include "UnityEngine/Animations/Rigging/MultiParentConstraintJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraint.OnValidate
void UnityEngine::Animations::Rigging::MultiParentConstraint::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraint::OnValidate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigConstraint_3<TJob, TData, TBinder>*), 13)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiPositionConstraintData
#include "UnityEngine/Animations/Rigging/MultiPositionConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ConstrainedObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_ConstrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_ConstrainedObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransformArray m_SourceObjects
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransformArray& UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_SourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_SourceObjects");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceObjects"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransformArray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_Offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.Vector3Bool m_ConstrainedAxes
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::Vector3Bool& UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_ConstrainedAxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_ConstrainedAxes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedAxes"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::Vector3Bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_MaintainOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_MaintainOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.set_constrainedObject
void UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_constrainedObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_constrainedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.get_sourceObjects
::UnityEngine::Animations::Rigging::WeightedTransformArray UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_sourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_sourceObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransformArray, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.set_sourceObjects
void UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_sourceObjects(::UnityEngine::Animations::Rigging::WeightedTransformArray value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_sourceObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.get_maintainOffset
bool UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_maintainOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_maintainOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.set_maintainOffset
void UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_maintainOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_maintainOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.get_offset
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.set_offset
void UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_offset(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.get_constrainedXAxis
bool UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_constrainedXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_constrainedXAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.set_constrainedXAxis
void UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_constrainedXAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_constrainedXAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedXAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.get_constrainedYAxis
bool UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_constrainedYAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_constrainedYAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.set_constrainedYAxis
void UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_constrainedYAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_constrainedYAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedYAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.get_constrainedZAxis
bool UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_constrainedZAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_constrainedZAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.set_constrainedZAxis
void UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_constrainedZAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_constrainedZAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedZAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_offsetVector3Property
::StringW UnityEngine::Animations::Rigging::MultiPositionConstraintData::UnityEngine_Animations_Rigging_IMultiPositionConstraintData_get_offsetVector3Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_offsetVector3Property");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_sourceObjectsProperty
::StringW UnityEngine::Animations::Rigging::MultiPositionConstraintData::UnityEngine_Animations_Rigging_IMultiPositionConstraintData_get_sourceObjectsProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_sourceObjectsProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::MultiPositionConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::MultiPositionConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiPositionConstraint
#include "UnityEngine/Animations/Rigging/MultiPositionConstraint.hpp"
// Including type: UnityEngine.Animations.Rigging.MultiPositionConstraintJobBinder`1
#include "UnityEngine/Animations/Rigging/MultiPositionConstraintJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraint.OnValidate
void UnityEngine::Animations::Rigging::MultiPositionConstraint::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraint::OnValidate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigConstraint_3<TJob, TData, TBinder>*), 13)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiReferentialConstraintData
#include "UnityEngine/Animations/Rigging/MultiReferentialConstraintData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Driver
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::Rigging::MultiReferentialConstraintData::dyn_m_Driver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::dyn_m_Driver");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Driver"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Transform> m_SourceObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Transform*>*& UnityEngine::Animations::Rigging::MultiReferentialConstraintData::dyn_m_SourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::dyn_m_SourceObjects");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.get_driver
int UnityEngine::Animations::Rigging::MultiReferentialConstraintData::get_driver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::get_driver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_driver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.set_driver
void UnityEngine::Animations::Rigging::MultiReferentialConstraintData::set_driver(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::set_driver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_driver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.get_sourceObjects
::System::Collections::Generic::List_1<::UnityEngine::Transform*>* UnityEngine::Animations::Rigging::MultiReferentialConstraintData::get_sourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::get_sourceObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_sourceObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Transform*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.set_sourceObjects
void UnityEngine::Animations::Rigging::MultiReferentialConstraintData::set_sourceObjects(::System::Collections::Generic::List_1<::UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::set_sourceObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_sourceObjects
::ArrayW<::UnityEngine::Transform*> UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IMultiReferentialConstraintData_get_sourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_sourceObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiReferentialConstraintData), 8));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Transform*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_driverValue
int UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IMultiReferentialConstraintData_get_driverValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_driverValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiReferentialConstraintData), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_driverIntProperty
::StringW UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IMultiReferentialConstraintData_get_driverIntProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_driverIntProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiReferentialConstraintData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiReferentialConstraintData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiReferentialConstraintData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.UpdateDriver
void UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UpdateDriver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UpdateDriver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UpdateDriver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiReferentialConstraint
#include "UnityEngine/Animations/Rigging/MultiReferentialConstraint.hpp"
// Including type: UnityEngine.Animations.Rigging.MultiReferentialConstraintJobBinder`1
#include "UnityEngine/Animations/Rigging/MultiReferentialConstraintJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraint.OnValidate
void UnityEngine::Animations::Rigging::MultiReferentialConstraint::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraint::OnValidate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigConstraint_3<TJob, TData, TBinder>*), 13)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiRotationConstraintData
#include "UnityEngine/Animations/Rigging/MultiRotationConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ConstrainedObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_ConstrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_ConstrainedObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransformArray m_SourceObjects
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransformArray& UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_SourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_SourceObjects");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceObjects"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransformArray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_Offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.Vector3Bool m_ConstrainedAxes
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::Vector3Bool& UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_ConstrainedAxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_ConstrainedAxes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedAxes"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::Vector3Bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_MaintainOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_MaintainOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.set_constrainedObject
void UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_constrainedObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_constrainedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.get_sourceObjects
::UnityEngine::Animations::Rigging::WeightedTransformArray UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_sourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_sourceObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransformArray, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.set_sourceObjects
void UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_sourceObjects(::UnityEngine::Animations::Rigging::WeightedTransformArray value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_sourceObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.get_maintainOffset
bool UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_maintainOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_maintainOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.set_maintainOffset
void UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_maintainOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_maintainOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.get_offset
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.set_offset
void UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_offset(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.get_constrainedXAxis
bool UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_constrainedXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_constrainedXAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.set_constrainedXAxis
void UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_constrainedXAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_constrainedXAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedXAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.get_constrainedYAxis
bool UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_constrainedYAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_constrainedYAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.set_constrainedYAxis
void UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_constrainedYAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_constrainedYAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedYAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.get_constrainedZAxis
bool UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_constrainedZAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_constrainedZAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.set_constrainedZAxis
void UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_constrainedZAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_constrainedZAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedZAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.UnityEngine.Animations.Rigging.IMultiRotationConstraintData.get_offsetVector3Property
::StringW UnityEngine::Animations::Rigging::MultiRotationConstraintData::UnityEngine_Animations_Rigging_IMultiRotationConstraintData_get_offsetVector3Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::UnityEngine.Animations.Rigging.IMultiRotationConstraintData.get_offsetVector3Property");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.UnityEngine.Animations.Rigging.IMultiRotationConstraintData.get_sourceObjectsProperty
::StringW UnityEngine::Animations::Rigging::MultiRotationConstraintData::UnityEngine_Animations_Rigging_IMultiRotationConstraintData_get_sourceObjectsProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::UnityEngine.Animations.Rigging.IMultiRotationConstraintData.get_sourceObjectsProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::MultiRotationConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::MultiRotationConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiRotationConstraint
#include "UnityEngine/Animations/Rigging/MultiRotationConstraint.hpp"
// Including type: UnityEngine.Animations.Rigging.MultiRotationConstraintJobBinder`1
#include "UnityEngine/Animations/Rigging/MultiRotationConstraintJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraint.OnValidate
void UnityEngine::Animations::Rigging::MultiRotationConstraint::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraint::OnValidate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigConstraint_3<TJob, TData, TBinder>*), 13)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.OverrideTransformData
#include "UnityEngine/Animations/Rigging/OverrideTransformData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ConstrainedObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_ConstrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_ConstrainedObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_OverrideSource
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_OverrideSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_OverrideSource");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverrideSource"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_OverridePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_OverridePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_OverridePosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverridePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_OverrideRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_OverrideRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_OverrideRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverrideRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PositionWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_PositionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_PositionWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PositionWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_RotationWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_RotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_RotationWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.OverrideTransformData/Space m_Space
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::OverrideTransformData::Space& UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_Space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_Space");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Space"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::OverrideTransformData::Space*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::OverrideTransformData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.set_constrainedObject
void UnityEngine::Animations::Rigging::OverrideTransformData::set_constrainedObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::set_constrainedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.get_sourceObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::OverrideTransformData::get_sourceObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::get_sourceObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.set_sourceObject
void UnityEngine::Animations::Rigging::OverrideTransformData::set_sourceObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::set_sourceObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.get_space
::UnityEngine::Animations::Rigging::OverrideTransformData::Space UnityEngine::Animations::Rigging::OverrideTransformData::get_space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::get_space");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_space", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::OverrideTransformData::Space, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.set_space
void UnityEngine::Animations::Rigging::OverrideTransformData::set_space(::UnityEngine::Animations::Rigging::OverrideTransformData::Space value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::set_space");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_space", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.get_position
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::OverrideTransformData::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.set_position
void UnityEngine::Animations::Rigging::OverrideTransformData::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.get_rotation
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::OverrideTransformData::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.set_rotation
void UnityEngine::Animations::Rigging::OverrideTransformData::set_rotation(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.get_positionWeight
float UnityEngine::Animations::Rigging::OverrideTransformData::get_positionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::get_positionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_positionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.set_positionWeight
void UnityEngine::Animations::Rigging::OverrideTransformData::set_positionWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::set_positionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_positionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.get_rotationWeight
float UnityEngine::Animations::Rigging::OverrideTransformData::get_rotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::get_rotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_rotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.set_rotationWeight
void UnityEngine::Animations::Rigging::OverrideTransformData::set_rotationWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::set_rotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_rotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.UnityEngine.Animations.Rigging.IOverrideTransformData.get_space
int UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine_Animations_Rigging_IOverrideTransformData_get_space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine.Animations.Rigging.IOverrideTransformData.get_space");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformData), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.UnityEngine.Animations.Rigging.IOverrideTransformData.get_positionWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine_Animations_Rigging_IOverrideTransformData_get_positionWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine.Animations.Rigging.IOverrideTransformData.get_positionWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformData), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.UnityEngine.Animations.Rigging.IOverrideTransformData.get_rotationWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine_Animations_Rigging_IOverrideTransformData_get_rotationWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine.Animations.Rigging.IOverrideTransformData.get_rotationWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformData), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.UnityEngine.Animations.Rigging.IOverrideTransformData.get_positionVector3Property
::StringW UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine_Animations_Rigging_IOverrideTransformData_get_positionVector3Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine.Animations.Rigging.IOverrideTransformData.get_positionVector3Property");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformData), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.UnityEngine.Animations.Rigging.IOverrideTransformData.get_rotationVector3Property
::StringW UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine_Animations_Rigging_IOverrideTransformData_get_rotationVector3Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine.Animations.Rigging.IOverrideTransformData.get_rotationVector3Property");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformData), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.OverrideTransformData/Space
#include "UnityEngine/Animations/Rigging/OverrideTransformData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.OverrideTransformData/Space World
::UnityEngine::Animations::Rigging::OverrideTransformData::Space UnityEngine::Animations::Rigging::OverrideTransformData::Space::_get_World() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::Space::_get_World");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::OverrideTransformData::Space>("UnityEngine.Animations.Rigging", "OverrideTransformData/Space", "World"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.OverrideTransformData/Space World
void UnityEngine::Animations::Rigging::OverrideTransformData::Space::_set_World(::UnityEngine::Animations::Rigging::OverrideTransformData::Space value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::Space::_set_World");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "OverrideTransformData/Space", "World", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.OverrideTransformData/Space Local
::UnityEngine::Animations::Rigging::OverrideTransformData::Space UnityEngine::Animations::Rigging::OverrideTransformData::Space::_get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::Space::_get_Local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::OverrideTransformData::Space>("UnityEngine.Animations.Rigging", "OverrideTransformData/Space", "Local"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.OverrideTransformData/Space Local
void UnityEngine::Animations::Rigging::OverrideTransformData::Space::_set_Local(::UnityEngine::Animations::Rigging::OverrideTransformData::Space value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::Space::_set_Local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "OverrideTransformData/Space", "Local", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.OverrideTransformData/Space Pivot
::UnityEngine::Animations::Rigging::OverrideTransformData::Space UnityEngine::Animations::Rigging::OverrideTransformData::Space::_get_Pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::Space::_get_Pivot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::OverrideTransformData::Space>("UnityEngine.Animations.Rigging", "OverrideTransformData/Space", "Pivot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.OverrideTransformData/Space Pivot
void UnityEngine::Animations::Rigging::OverrideTransformData::Space::_set_Pivot(::UnityEngine::Animations::Rigging::OverrideTransformData::Space value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::Space::_set_Pivot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "OverrideTransformData/Space", "Pivot", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::Rigging::OverrideTransformData::Space::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::Space::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.OverrideTransform
#include "UnityEngine/Animations/Rigging/OverrideTransform.hpp"
// Including type: UnityEngine.Animations.Rigging.OverrideTransformJobBinder`1
#include "UnityEngine/Animations/Rigging/OverrideTransformJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransform.OnValidate
void UnityEngine::Animations::Rigging::OverrideTransform::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransform::OnValidate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigConstraint_3<TJob, TData, TBinder>*), 13)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.TwistChainConstraintData
#include "UnityEngine/Animations/Rigging/TwistChainConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Root
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::TwistChainConstraintData::dyn_m_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintData::dyn_m_Root");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Root"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Tip
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::TwistChainConstraintData::dyn_m_Tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintData::dyn_m_Tip");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tip"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_RootTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::TwistChainConstraintData::dyn_m_RootTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintData::dyn_m_RootTarget");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RootTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_TipTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::TwistChainConstraintData::dyn_m_TipTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintData::dyn_m_TipTarget");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TipTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve m_Curve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& UnityEngine::Animations::Rigging::TwistChainConstraintData::dyn_m_Curve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintData::dyn_m_Curve");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Curve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistChainConstraintData.get_root
::UnityEngine::Transform* UnityEngine::Animations::Rigging::TwistChainConstraintData::get_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintData::get_root");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistChainConstraintData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistChainConstraintData.set_root
void UnityEngine::Animations::Rigging::TwistChainConstraintData::set_root(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintData::set_root");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_root", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistChainConstraintData.get_tip
::UnityEngine::Transform* UnityEngine::Animations::Rigging::TwistChainConstraintData::get_tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintData::get_tip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistChainConstraintData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistChainConstraintData.set_tip
void UnityEngine::Animations::Rigging::TwistChainConstraintData::set_tip(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintData::set_tip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistChainConstraintData.get_rootTarget
::UnityEngine::Transform* UnityEngine::Animations::Rigging::TwistChainConstraintData::get_rootTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintData::get_rootTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistChainConstraintData), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistChainConstraintData.set_rootTarget
void UnityEngine::Animations::Rigging::TwistChainConstraintData::set_rootTarget(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintData::set_rootTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_rootTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistChainConstraintData.get_tipTarget
::UnityEngine::Transform* UnityEngine::Animations::Rigging::TwistChainConstraintData::get_tipTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintData::get_tipTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistChainConstraintData), 9));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistChainConstraintData.set_tipTarget
void UnityEngine::Animations::Rigging::TwistChainConstraintData::set_tipTarget(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintData::set_tipTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tipTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistChainConstraintData.get_curve
::UnityEngine::AnimationCurve* UnityEngine::Animations::Rigging::TwistChainConstraintData::get_curve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintData::get_curve");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistChainConstraintData), 10));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistChainConstraintData.set_curve
void UnityEngine::Animations::Rigging::TwistChainConstraintData::set_curve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintData::set_curve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_curve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistChainConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::TwistChainConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistChainConstraintData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistChainConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::TwistChainConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistChainConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistChainConstraintData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.TwistChainConstraint
#include "UnityEngine/Animations/Rigging/TwistChainConstraint.hpp"
// Including type: UnityEngine.Animations.Rigging.TwistChainConstraintJobBinder`1
#include "UnityEngine/Animations/Rigging/TwistChainConstraintJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.TwistCorrectionData
#include "UnityEngine/Animations/Rigging/TwistCorrectionData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Source
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::TwistCorrectionData::dyn_m_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::dyn_m_Source");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Source"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.TwistCorrectionData/Axis m_TwistAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis& UnityEngine::Animations::Rigging::TwistCorrectionData::dyn_m_TwistAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::dyn_m_TwistAxis");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TwistAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransformArray m_TwistNodes
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransformArray& UnityEngine::Animations::Rigging::TwistCorrectionData::dyn_m_TwistNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::dyn_m_TwistNodes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TwistNodes"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransformArray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.get_sourceObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::TwistCorrectionData::get_sourceObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::get_sourceObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_sourceObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.set_sourceObject
void UnityEngine::Animations::Rigging::TwistCorrectionData::set_sourceObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::set_sourceObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.get_twistNodes
::UnityEngine::Animations::Rigging::WeightedTransformArray UnityEngine::Animations::Rigging::TwistCorrectionData::get_twistNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::get_twistNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransformArray, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.set_twistNodes
void UnityEngine::Animations::Rigging::TwistCorrectionData::set_twistNodes(::UnityEngine::Animations::Rigging::WeightedTransformArray value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::set_twistNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_twistNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.get_twistAxis
::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis UnityEngine::Animations::Rigging::TwistCorrectionData::get_twistAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::get_twistAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_twistAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.set_twistAxis
void UnityEngine::Animations::Rigging::TwistCorrectionData::set_twistAxis(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::set_twistAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_twistAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.UnityEngine.Animations.Rigging.ITwistCorrectionData.get_source
::UnityEngine::Transform* UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_ITwistCorrectionData_get_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine.Animations.Rigging.ITwistCorrectionData.get_source");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistAxis
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_ITwistCorrectionData_get_twistAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionData), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistNodesProperty
::StringW UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_ITwistCorrectionData_get_twistNodesProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistNodesProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionData), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.Convert
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::TwistCorrectionData::Convert(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "TwistCorrectionData", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, axis);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.TwistCorrectionData/Axis
#include "UnityEngine/Animations/Rigging/TwistCorrectionData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.TwistCorrectionData/Axis X
::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis>("UnityEngine.Animations.Rigging", "TwistCorrectionData/Axis", "X"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.TwistCorrectionData/Axis X
void UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_set_X(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "TwistCorrectionData/Axis", "X", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.TwistCorrectionData/Axis Y
::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis>("UnityEngine.Animations.Rigging", "TwistCorrectionData/Axis", "Y"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.TwistCorrectionData/Axis Y
void UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_set_Y(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "TwistCorrectionData/Axis", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.TwistCorrectionData/Axis Z
::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_get_Z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_get_Z");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis>("UnityEngine.Animations.Rigging", "TwistCorrectionData/Axis", "Z"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.TwistCorrectionData/Axis Z
void UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_set_Z(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_set_Z");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "TwistCorrectionData/Axis", "Z", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.TwistCorrection
#include "UnityEngine/Animations/Rigging/TwistCorrection.hpp"
// Including type: UnityEngine.Animations.Rigging.TwistCorrectionJobBinder`1
#include "UnityEngine/Animations/Rigging/TwistCorrectionJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrection.OnValidate
void UnityEngine::Animations::Rigging::TwistCorrection::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrection::OnValidate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigConstraint_3<TJob, TData, TBinder>*), 13)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData
#include "UnityEngine/Animations/Rigging/TwoBoneIKConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Root
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Root");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Root"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Mid
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Mid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Mid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mid"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Tip
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Tip");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tip"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Target");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Hint
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Hint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Hint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Hint"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TargetPositionWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_TargetPositionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_TargetPositionWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetPositionWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TargetRotationWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_TargetRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_TargetRotationWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HintWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_HintWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_HintWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HintWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainTargetPositionOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_MaintainTargetPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_MaintainTargetPositionOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainTargetPositionOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainTargetRotationOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_MaintainTargetRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_MaintainTargetRotationOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainTargetRotationOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_root
::UnityEngine::Transform* UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_root");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_root
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_root(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_root");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_root", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_mid
::UnityEngine::Transform* UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_mid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_mid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_mid
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_mid(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_mid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_mid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_tip
::UnityEngine::Transform* UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_tip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_tip
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_tip(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_tip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_target
::UnityEngine::Transform* UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_target");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 9));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_target
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_target(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_hint
::UnityEngine::Transform* UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_hint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_hint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 10));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_hint
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_hint(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_hint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_hint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_targetPositionWeight
float UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_targetPositionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_targetPositionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_targetPositionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_targetPositionWeight
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_targetPositionWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_targetPositionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_targetPositionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_targetRotationWeight
float UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_targetRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_targetRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_targetRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_targetRotationWeight
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_targetRotationWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_targetRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_targetRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_hintWeight
float UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_hintWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_hintWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_hintWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_hintWeight
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_hintWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_hintWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_hintWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_maintainTargetPositionOffset
bool UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_maintainTargetPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_maintainTargetPositionOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_maintainTargetPositionOffset
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_maintainTargetPositionOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_maintainTargetPositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainTargetPositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_maintainTargetRotationOffset
bool UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_maintainTargetRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_maintainTargetRotationOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_maintainTargetRotationOffset
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_maintainTargetRotationOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_maintainTargetRotationOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainTargetRotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_targetPositionWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine_Animations_Rigging_ITwoBoneIKConstraintData_get_targetPositionWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_targetPositionWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_targetRotationWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine_Animations_Rigging_ITwoBoneIKConstraintData_get_targetRotationWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_targetRotationWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_hintWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine_Animations_Rigging_ITwoBoneIKConstraintData_get_hintWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_hintWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 15));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.TwoBoneIKConstraint
#include "UnityEngine/Animations/Rigging/TwoBoneIKConstraint.hpp"
// Including type: UnityEngine.Animations.Rigging.TwoBoneIKConstraintJobBinder`1
#include "UnityEngine/Animations/Rigging/TwoBoneIKConstraintJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraint.OnValidate
void UnityEngine::Animations::Rigging::TwoBoneIKConstraint::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraint::OnValidate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigConstraint_3<TJob, TData, TBinder>*), 13)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IRigConstraint
#include "UnityEngine/Animations/Rigging/IRigConstraint.hpp"
// Including type: UnityEngine.Animations.IAnimationJob
#include "UnityEngine/Animations/IAnimationJob.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Animations.Rigging.IAnimationJobData
#include "UnityEngine/Animations/Rigging/IAnimationJobData.hpp"
// Including type: UnityEngine.Animations.Rigging.IAnimationJobBinder
#include "UnityEngine/Animations/Rigging/IAnimationJobBinder.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.IRigConstraint.IsValid
bool UnityEngine::Animations::Rigging::IRigConstraint::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigConstraint::IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigConstraint*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigConstraint.CreateJob
::UnityEngine::Animations::IAnimationJob* UnityEngine::Animations::Rigging::IRigConstraint::CreateJob(::UnityEngine::Animator* animator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigConstraint::CreateJob");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigConstraint*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::IAnimationJob*, false>(this, ___internal__method, animator);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigConstraint.UpdateJob
void UnityEngine::Animations::Rigging::IRigConstraint::UpdateJob(::UnityEngine::Animations::IAnimationJob* job) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigConstraint::UpdateJob");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigConstraint*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, job);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigConstraint.DestroyJob
void UnityEngine::Animations::Rigging::IRigConstraint::DestroyJob(::UnityEngine::Animations::IAnimationJob* job) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigConstraint::DestroyJob");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigConstraint*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, job);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigConstraint.get_data
::UnityEngine::Animations::Rigging::IAnimationJobData* UnityEngine::Animations::Rigging::IRigConstraint::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigConstraint::get_data");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigConstraint*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::IAnimationJobData*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigConstraint.get_binder
::UnityEngine::Animations::Rigging::IAnimationJobBinder* UnityEngine::Animations::Rigging::IRigConstraint::get_binder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigConstraint::get_binder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigConstraint*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::IAnimationJobBinder*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigConstraint.get_component
::UnityEngine::Component* UnityEngine::Animations::Rigging::IRigConstraint::get_component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigConstraint::get_component");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigConstraint*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigConstraint.get_weight
float UnityEngine::Animations::Rigging::IRigConstraint::get_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigConstraint::get_weight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigConstraint*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigConstraint.set_weight
void UnityEngine::Animations::Rigging::IRigConstraint::set_weight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigConstraint::set_weight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigConstraint*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IRigLayer
#include "UnityEngine/Animations/Rigging/IRigLayer.hpp"
// Including type: UnityEngine.Animations.Rigging.Rig
#include "UnityEngine/Animations/Rigging/Rig.hpp"
// Including type: UnityEngine.Animations.Rigging.IRigConstraint
#include "UnityEngine/Animations/Rigging/IRigConstraint.hpp"
// Including type: UnityEngine.Animations.IAnimationJob
#include "UnityEngine/Animations/IAnimationJob.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.IRigLayer.get_rig
::UnityEngine::Animations::Rigging::Rig* UnityEngine::Animations::Rigging::IRigLayer::get_rig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigLayer::get_rig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigLayer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::Rig*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigLayer.get_constraints
::ArrayW<::UnityEngine::Animations::Rigging::IRigConstraint*> UnityEngine::Animations::Rigging::IRigLayer::get_constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigLayer::get_constraints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigLayer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Animations::Rigging::IRigConstraint*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigLayer.get_jobs
::ArrayW<::UnityEngine::Animations::IAnimationJob*> UnityEngine::Animations::Rigging::IRigLayer::get_jobs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigLayer::get_jobs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigLayer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Animations::IAnimationJob*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigLayer.get_active
bool UnityEngine::Animations::Rigging::IRigLayer::get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigLayer::get_active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigLayer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigLayer.get_name
::StringW UnityEngine::Animations::Rigging::IRigLayer::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigLayer::get_name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigLayer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigLayer.Initialize
bool UnityEngine::Animations::Rigging::IRigLayer::Initialize(::UnityEngine::Animator* animator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigLayer::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigLayer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, animator);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigLayer.Update
void UnityEngine::Animations::Rigging::IRigLayer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigLayer::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigLayer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigLayer.Reset
void UnityEngine::Animations::Rigging::IRigLayer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigLayer::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigLayer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigLayer.IsValid
bool UnityEngine::Animations::Rigging::IRigLayer::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigLayer::IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigLayer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.OverrideRigLayer
#include "UnityEngine/Animations/Rigging/OverrideRigLayer.hpp"
// Including type: UnityEngine.Animations.Rigging.Rig
#include "UnityEngine/Animations/Rigging/Rig.hpp"
// Including type: UnityEngine.Animations.Rigging.IRigConstraint
#include "UnityEngine/Animations/Rigging/IRigConstraint.hpp"
// Including type: UnityEngine.Animations.IAnimationJob
#include "UnityEngine/Animations/IAnimationJob.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.Rig m_Rig
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::Rig*& UnityEngine::Animations::Rigging::OverrideRigLayer::dyn_m_Rig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigLayer::dyn_m_Rig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Rig"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::Rig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Active
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::OverrideRigLayer::dyn_m_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigLayer::dyn_m_Active");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Active"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.IRigConstraint[] m_Constraints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Animations::Rigging::IRigConstraint*>& UnityEngine::Animations::Rigging::OverrideRigLayer::dyn_m_Constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigLayer::dyn_m_Constraints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Constraints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Animations::Rigging::IRigConstraint*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.IAnimationJob[] m_Jobs
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Animations::IAnimationJob*>& UnityEngine::Animations::Rigging::OverrideRigLayer::dyn_m_Jobs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigLayer::dyn_m_Jobs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Jobs"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Animations::IAnimationJob*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isInitialized>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::OverrideRigLayer::dyn_$isInitialized$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigLayer::dyn_$isInitialized$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isInitialized>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideRigLayer.get_rig
::UnityEngine::Animations::Rigging::Rig* UnityEngine::Animations::Rigging::OverrideRigLayer::get_rig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigLayer::get_rig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::OverrideRigLayer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::Rig*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideRigLayer.set_rig
void UnityEngine::Animations::Rigging::OverrideRigLayer::set_rig(::UnityEngine::Animations::Rigging::Rig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigLayer::set_rig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideRigLayer.get_active
bool UnityEngine::Animations::Rigging::OverrideRigLayer::get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigLayer::get_active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::OverrideRigLayer*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideRigLayer.set_active
void UnityEngine::Animations::Rigging::OverrideRigLayer::set_active(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigLayer::set_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideRigLayer.get_name
::StringW UnityEngine::Animations::Rigging::OverrideRigLayer::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigLayer::get_name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::OverrideRigLayer*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideRigLayer.get_constraints
::ArrayW<::UnityEngine::Animations::Rigging::IRigConstraint*> UnityEngine::Animations::Rigging::OverrideRigLayer::get_constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigLayer::get_constraints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::OverrideRigLayer*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Animations::Rigging::IRigConstraint*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideRigLayer.get_jobs
::ArrayW<::UnityEngine::Animations::IAnimationJob*> UnityEngine::Animations::Rigging::OverrideRigLayer::get_jobs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigLayer::get_jobs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::OverrideRigLayer*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Animations::IAnimationJob*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideRigLayer.get_isInitialized
bool UnityEngine::Animations::Rigging::OverrideRigLayer::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigLayer::get_isInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideRigLayer.set_isInitialized
void UnityEngine::Animations::Rigging::OverrideRigLayer::set_isInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigLayer::set_isInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideRigLayer.Initialize
bool UnityEngine::Animations::Rigging::OverrideRigLayer::Initialize(::UnityEngine::Animator* animator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigLayer::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::OverrideRigLayer*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, animator);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideRigLayer.Update
void UnityEngine::Animations::Rigging::OverrideRigLayer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigLayer::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::OverrideRigLayer*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideRigLayer.Reset
void UnityEngine::Animations::Rigging::OverrideRigLayer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigLayer::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::OverrideRigLayer*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideRigLayer.IsValid
bool UnityEngine::Animations::Rigging::OverrideRigLayer::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideRigLayer::IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::OverrideRigLayer*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.Rig
#include "UnityEngine/Animations/Rigging/Rig.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Animations.Rigging.RigEffectorData
#include "UnityEngine/Animations/Rigging/RigEffectorData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_Weight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::Rig::dyn_m_Weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Rig::dyn_m_Weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Animations.Rigging.RigEffectorData> m_Effectors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigEffectorData*>*& UnityEngine::Animations::Rigging::Rig::dyn_m_Effectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Rig::dyn_m_Effectors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Effectors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigEffectorData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Rig.get_weight
float UnityEngine::Animations::Rigging::Rig::get_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Rig::get_weight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_weight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Rig.set_weight
void UnityEngine::Animations::Rigging::Rig::set_weight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Rig::set_weight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_weight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.RigBuilder
#include "UnityEngine/Animations/Rigging/RigBuilder.hpp"
// Including type: UnityEngine.Animations.Rigging.RigBuilder/OnAddRigBuilderCallback
#include "UnityEngine/Animations/Rigging/RigBuilder_OnAddRigBuilderCallback.hpp"
// Including type: UnityEngine.Animations.Rigging.RigBuilder/OnRemoveRigBuilderCallback
#include "UnityEngine/Animations/Rigging/RigBuilder_OnRemoveRigBuilderCallback.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Animations.Rigging.RigLayer
#include "UnityEngine/Animations/Rigging/RigLayer.hpp"
// Including type: UnityEngine.Animations.Rigging.IRigLayer
#include "UnityEngine/Animations/Rigging/IRigLayer.hpp"
// Including type: UnityEngine.Animations.Rigging.SyncSceneToStreamLayer
#include "UnityEngine/Animations/Rigging/SyncSceneToStreamLayer.hpp"
// Including type: UnityEngine.Animations.Rigging.RigEffectorData
#include "UnityEngine/Animations/Rigging/RigEffectorData.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.RigBuilder/OnAddRigBuilderCallback onAddRigBuilder
::UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback* UnityEngine::Animations::Rigging::RigBuilder::_get_onAddRigBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::_get_onAddRigBuilder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback*>("UnityEngine.Animations.Rigging", "RigBuilder", "onAddRigBuilder"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.RigBuilder/OnAddRigBuilderCallback onAddRigBuilder
void UnityEngine::Animations::Rigging::RigBuilder::_set_onAddRigBuilder(::UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::_set_onAddRigBuilder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "RigBuilder", "onAddRigBuilder", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.RigBuilder/OnRemoveRigBuilderCallback onRemoveRigBuilder
::UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback* UnityEngine::Animations::Rigging::RigBuilder::_get_onRemoveRigBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::_get_onRemoveRigBuilder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback*>("UnityEngine.Animations.Rigging", "RigBuilder", "onRemoveRigBuilder"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.RigBuilder/OnRemoveRigBuilderCallback onRemoveRigBuilder
void UnityEngine::Animations::Rigging::RigBuilder::_set_onRemoveRigBuilder(::UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::_set_onRemoveRigBuilder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "RigBuilder", "onRemoveRigBuilder", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Animations.Rigging.RigLayer> m_RigLayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigLayer*>*& UnityEngine::Animations::Rigging::RigBuilder::dyn_m_RigLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::dyn_m_RigLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RigLayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigLayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.IRigLayer[] m_RuntimeRigLayers
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Animations::Rigging::IRigLayer*>& UnityEngine::Animations::Rigging::RigBuilder::dyn_m_RuntimeRigLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::dyn_m_RuntimeRigLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RuntimeRigLayers"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Animations::Rigging::IRigLayer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.SyncSceneToStreamLayer m_SyncSceneToStreamLayer
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::SyncSceneToStreamLayer*& UnityEngine::Animations::Rigging::RigBuilder::dyn_m_SyncSceneToStreamLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::dyn_m_SyncSceneToStreamLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SyncSceneToStreamLayer"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::SyncSceneToStreamLayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Animations.Rigging.RigEffectorData> m_Effectors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigEffectorData*>*& UnityEngine::Animations::Rigging::RigBuilder::dyn_m_Effectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::dyn_m_Effectors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Effectors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigEffectorData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsInPreview
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::RigBuilder::dyn_m_IsInPreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::dyn_m_IsInPreview");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsInPreview"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableGraph <graph>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableGraph& UnityEngine::Animations::Rigging::RigBuilder::dyn_$graph$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::dyn_$graph$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<graph>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableGraph*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.OnEnable
void UnityEngine::Animations::Rigging::RigBuilder::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.OnDisable
void UnityEngine::Animations::Rigging::RigBuilder::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.OnDestroy
void UnityEngine::Animations::Rigging::RigBuilder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.Evaluate
void UnityEngine::Animations::Rigging::RigBuilder::Evaluate(float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::Evaluate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.Update
void UnityEngine::Animations::Rigging::RigBuilder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.SyncLayers
void UnityEngine::Animations::Rigging::RigBuilder::SyncLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::SyncLayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.Build
bool UnityEngine::Animations::Rigging::RigBuilder::Build() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::Build");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Build", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.Build
bool UnityEngine::Animations::Rigging::RigBuilder::Build(::UnityEngine::Playables::PlayableGraph graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::Build");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Build", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, graph);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.Clear
void UnityEngine::Animations::Rigging::RigBuilder::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.StartPreview
void UnityEngine::Animations::Rigging::RigBuilder::StartPreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::StartPreview");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.StopPreview
void UnityEngine::Animations::Rigging::RigBuilder::StopPreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::StopPreview");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.UpdatePreviewGraph
void UnityEngine::Animations::Rigging::RigBuilder::UpdatePreviewGraph(::UnityEngine::Playables::PlayableGraph graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::UpdatePreviewGraph");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.BuildPreviewGraph
::UnityEngine::Playables::Playable UnityEngine::Animations::Rigging::RigBuilder::BuildPreviewGraph(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Playables::Playable inputPlayable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::BuildPreviewGraph");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, inputPlayable);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.get_layers
::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigLayer*>* UnityEngine::Animations::Rigging::RigBuilder::get_layers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::get_layers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigLayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.set_layers
void UnityEngine::Animations::Rigging::RigBuilder::set_layers(::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigLayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::set_layers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_layers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.get_syncSceneToStreamLayer
::UnityEngine::Animations::Rigging::SyncSceneToStreamLayer* UnityEngine::Animations::Rigging::RigBuilder::get_syncSceneToStreamLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::get_syncSceneToStreamLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncSceneToStreamLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::SyncSceneToStreamLayer*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.set_syncSceneToStreamLayer
void UnityEngine::Animations::Rigging::RigBuilder::set_syncSceneToStreamLayer(::UnityEngine::Animations::Rigging::SyncSceneToStreamLayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::set_syncSceneToStreamLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_syncSceneToStreamLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.get_graph
::UnityEngine::Playables::PlayableGraph UnityEngine::Animations::Rigging::RigBuilder::get_graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::get_graph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableGraph, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.set_graph
void UnityEngine::Animations::Rigging::RigBuilder::set_graph(::UnityEngine::Playables::PlayableGraph value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::set_graph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_graph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Animations.Rigging.RigBuilder/OnAddRigBuilderCallback
#include "UnityEngine/Animations/Rigging/RigBuilder_OnAddRigBuilderCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/OnAddRigBuilderCallback.Invoke
void UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback::Invoke(::UnityEngine::Animations::Rigging::RigBuilder* rigBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rigBuilder);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/OnAddRigBuilderCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback::BeginInvoke(::UnityEngine::Animations::Rigging::RigBuilder* rigBuilder, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, rigBuilder, callback, object);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/OnAddRigBuilderCallback.EndInvoke
void UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Animations.Rigging.RigBuilder/OnRemoveRigBuilderCallback
#include "UnityEngine/Animations/Rigging/RigBuilder_OnRemoveRigBuilderCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/OnRemoveRigBuilderCallback.Invoke
void UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback::Invoke(::UnityEngine::Animations::Rigging::RigBuilder* rigBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rigBuilder);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/OnRemoveRigBuilderCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback::BeginInvoke(::UnityEngine::Animations::Rigging::RigBuilder* rigBuilder, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, rigBuilder, callback, object);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/OnRemoveRigBuilderCallback.EndInvoke
void UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.RigBuilderUtils
#include "UnityEngine/Animations/Rigging/RigBuilderUtils.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Animations.Rigging.IRigLayer
#include "UnityEngine/Animations/Rigging/IRigLayer.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Animations.Rigging.SyncSceneToStreamLayer
#include "UnityEngine/Animations/Rigging/SyncSceneToStreamLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt16 k_AnimationOutputPriority
uint16_t UnityEngine::Animations::Rigging::RigBuilderUtils::_get_k_AnimationOutputPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilderUtils::_get_k_AnimationOutputPriority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint16_t>("UnityEngine.Animations.Rigging", "RigBuilderUtils", "k_AnimationOutputPriority"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt16 k_AnimationOutputPriority
void UnityEngine::Animations::Rigging::RigBuilderUtils::_set_k_AnimationOutputPriority(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilderUtils::_set_k_AnimationOutputPriority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "RigBuilderUtils", "k_AnimationOutputPriority", value));
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilderUtils.BuildRigPlayables
::ArrayW<::UnityEngine::Playables::Playable> UnityEngine::Animations::Rigging::RigBuilderUtils::BuildRigPlayables(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Animations::Rigging::IRigLayer* layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilderUtils::BuildRigPlayables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigBuilderUtils", "BuildRigPlayables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(layer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Playables::Playable>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, layer);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilderUtils.BuildPlayables
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Animations::Rigging::RigBuilderUtils::PlayableChain>* UnityEngine::Animations::Rigging::RigBuilderUtils::BuildPlayables(::UnityEngine::Animator* animator, ::UnityEngine::Playables::PlayableGraph graph, ::System::Collections::Generic::IList_1<::UnityEngine::Animations::Rigging::IRigLayer*>* layers, ::UnityEngine::Animations::Rigging::SyncSceneToStreamLayer* syncSceneToStreamLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilderUtils::BuildPlayables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigBuilderUtils", "BuildPlayables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(layers), ::il2cpp_utils::ExtractType(syncSceneToStreamLayer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Animations::Rigging::RigBuilderUtils::PlayableChain>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, graph, layers, syncSceneToStreamLayer);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilderUtils.BuildPlayableGraph
::UnityEngine::Playables::PlayableGraph UnityEngine::Animations::Rigging::RigBuilderUtils::BuildPlayableGraph(::UnityEngine::Animator* animator, ::System::Collections::Generic::IList_1<::UnityEngine::Animations::Rigging::IRigLayer*>* layers, ::UnityEngine::Animations::Rigging::SyncSceneToStreamLayer* syncSceneToStreamLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilderUtils::BuildPlayableGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigBuilderUtils", "BuildPlayableGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(layers), ::il2cpp_utils::ExtractType(syncSceneToStreamLayer)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableGraph, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, layers, syncSceneToStreamLayer);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilderUtils.BuildPlayableGraph
void UnityEngine::Animations::Rigging::RigBuilderUtils::BuildPlayableGraph(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Animator* animator, ::System::Collections::Generic::IList_1<::UnityEngine::Animations::Rigging::IRigLayer*>* layers, ::UnityEngine::Animations::Rigging::SyncSceneToStreamLayer* syncSceneToStreamLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilderUtils::BuildPlayableGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigBuilderUtils", "BuildPlayableGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(layers), ::il2cpp_utils::ExtractType(syncSceneToStreamLayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, animator, layers, syncSceneToStreamLayer);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilderUtils..cctor
void UnityEngine::Animations::Rigging::RigBuilderUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilderUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigBuilderUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.RigBuilderUtils/PlayableChain
#include "UnityEngine/Animations/Rigging/RigBuilderUtils.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Animations::Rigging::RigBuilderUtils::PlayableChain::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilderUtils::PlayableChain::dyn_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Playables.Playable[] playables
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Playables::Playable>& UnityEngine::Animations::Rigging::RigBuilderUtils::PlayableChain::dyn_playables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilderUtils::PlayableChain::dyn_playables");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playables"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Playables::Playable>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilderUtils/PlayableChain.IsValid
bool UnityEngine::Animations::Rigging::RigBuilderUtils::PlayableChain::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilderUtils::PlayableChain::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.RigLayer
#include "UnityEngine/Animations/Rigging/RigLayer.hpp"
// Including type: UnityEngine.Animations.Rigging.Rig
#include "UnityEngine/Animations/Rigging/Rig.hpp"
// Including type: UnityEngine.Animations.Rigging.IRigConstraint
#include "UnityEngine/Animations/Rigging/IRigConstraint.hpp"
// Including type: UnityEngine.Animations.IAnimationJob
#include "UnityEngine/Animations/IAnimationJob.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.Rig m_Rig
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::Rig*& UnityEngine::Animations::Rigging::RigLayer::dyn_m_Rig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigLayer::dyn_m_Rig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Rig"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::Rig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Active
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::RigLayer::dyn_m_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigLayer::dyn_m_Active");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Active"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.IRigConstraint[] m_Constraints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Animations::Rigging::IRigConstraint*>& UnityEngine::Animations::Rigging::RigLayer::dyn_m_Constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigLayer::dyn_m_Constraints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Constraints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Animations::Rigging::IRigConstraint*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.IAnimationJob[] m_Jobs
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Animations::IAnimationJob*>& UnityEngine::Animations::Rigging::RigLayer::dyn_m_Jobs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigLayer::dyn_m_Jobs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Jobs"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Animations::IAnimationJob*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isInitialized>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::RigLayer::dyn_$isInitialized$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigLayer::dyn_$isInitialized$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isInitialized>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigLayer.get_rig
::UnityEngine::Animations::Rigging::Rig* UnityEngine::Animations::Rigging::RigLayer::get_rig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigLayer::get_rig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigLayer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::Rig*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigLayer.set_rig
void UnityEngine::Animations::Rigging::RigLayer::set_rig(::UnityEngine::Animations::Rigging::Rig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigLayer::set_rig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigLayer.get_active
bool UnityEngine::Animations::Rigging::RigLayer::get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigLayer::get_active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigLayer*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigLayer.set_active
void UnityEngine::Animations::Rigging::RigLayer::set_active(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigLayer::set_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigLayer.get_name
::StringW UnityEngine::Animations::Rigging::RigLayer::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigLayer::get_name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigLayer*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigLayer.get_constraints
::ArrayW<::UnityEngine::Animations::Rigging::IRigConstraint*> UnityEngine::Animations::Rigging::RigLayer::get_constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigLayer::get_constraints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigLayer*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Animations::Rigging::IRigConstraint*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigLayer.get_jobs
::ArrayW<::UnityEngine::Animations::IAnimationJob*> UnityEngine::Animations::Rigging::RigLayer::get_jobs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigLayer::get_jobs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigLayer*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Animations::IAnimationJob*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigLayer.get_isInitialized
bool UnityEngine::Animations::Rigging::RigLayer::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigLayer::get_isInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigLayer.set_isInitialized
void UnityEngine::Animations::Rigging::RigLayer::set_isInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigLayer::set_isInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigLayer.Initialize
bool UnityEngine::Animations::Rigging::RigLayer::Initialize(::UnityEngine::Animator* animator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigLayer::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigLayer*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, animator);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigLayer.Update
void UnityEngine::Animations::Rigging::RigLayer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigLayer::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigLayer*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigLayer.Reset
void UnityEngine::Animations::Rigging::RigLayer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigLayer::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigLayer*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigLayer.IsValid
bool UnityEngine::Animations::Rigging::RigLayer::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigLayer::IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigLayer*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
