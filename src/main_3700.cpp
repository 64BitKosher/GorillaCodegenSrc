// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.SimulationPlayer
#include "Fusion/SimulationPlayer.hpp"
// Including type: Fusion.Sockets.NetBitBuffer
#include "Fusion/Sockets/NetBitBuffer.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.HashSet`1<Fusion.NetworkId> AlwaysInterested
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::Fusion::NetworkId>*& Fusion::SimulationPlayer::dyn_AlwaysInterested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationPlayer::dyn_AlwaysInterested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AlwaysInterested"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Fusion::NetworkId>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Fusion.SimulationPlayer/AOIQuery> AOIQueries
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Fusion::SimulationPlayer::AOIQuery>*& Fusion::SimulationPlayer::dyn_AOIQueries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationPlayer::dyn_AOIQueries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AOIQueries"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Fusion::SimulationPlayer::AOIQuery>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.HashSet`1<Fusion.NetworkId> AOIResult
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::Fusion::NetworkId>*& Fusion::SimulationPlayer::dyn_AOIResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationPlayer::dyn_AOIResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AOIResult"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Fusion::NetworkId>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AOICalculated
[[deprecated("Use field access instead!")]] bool& Fusion::SimulationPlayer::dyn_AOICalculated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationPlayer::dyn_AOICalculated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AOICalculated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.SimulationPlayer.Reset
void Fusion::SimulationPlayer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationPlayer::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.SimulationPlayer/AOIQuery
#include "Fusion/SimulationPlayer.hpp"
// Including type: Fusion.Sockets.NetBitBuffer
#include "Fusion/Sockets/NetBitBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Fusion::SimulationPlayer::AOIQuery::dyn_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationPlayer::AOIQuery::dyn_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Radius
[[deprecated("Use field access instead!")]] float& Fusion::SimulationPlayer::AOIQuery::dyn_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationPlayer::AOIQuery::dyn_Radius");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 LayerMask
[[deprecated("Use field access instead!")]] int& Fusion::SimulationPlayer::AOIQuery::dyn_LayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationPlayer::AOIQuery::dyn_LayerMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LayerMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.SimulationPlayer/AOIQuery.Write
void Fusion::SimulationPlayer::AOIQuery::Write(::Fusion::SimulationPlayer::AOIQuery q, ::Fusion::Sockets::NetBitBuffer* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationPlayer::AOIQuery::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "SimulationPlayer/AOIQuery", "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q, b);
}
// Autogenerated method: Fusion.SimulationPlayer/AOIQuery.Read
::Fusion::SimulationPlayer::AOIQuery Fusion::SimulationPlayer::AOIQuery::Read(::Fusion::Sockets::NetBitBuffer* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationPlayer::AOIQuery::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "SimulationPlayer/AOIQuery", "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationPlayer::AOIQuery, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.SimulationSnapshot
#include "Fusion/SimulationSnapshot.hpp"
// Including type: Fusion.SimulationSnapshot/IHistory
#include "Fusion/SimulationSnapshot_IHistory.hpp"
// Including type: Fusion.SimulationSnapshot/HistoryServerDeltaSnapshots
#include "Fusion/SimulationSnapshot_HistoryServerDeltaSnapshots.hpp"
// Including type: Fusion.SimulationSnapshot/HistoryLL
#include "Fusion/SimulationSnapshot_HistoryLL.hpp"
// Including type: Fusion.SimulationSnapshot/History
#include "Fusion/SimulationSnapshot_History.hpp"
// Including type: Fusion.SimulationSnapshot/Interpolator
#include "Fusion/SimulationSnapshot_Interpolator.hpp"
// Including type: Fusion.SimulationSnapshot/Pool
#include "Fusion/SimulationSnapshot_Pool.hpp"
// Including type: Fusion.Allocator
#include "Fusion/Allocator.hpp"
// Including type: Fusion.NetworkProjectConfig
#include "Fusion/NetworkProjectConfig.hpp"
// Including type: Fusion.SimulationGlobalState
#include "Fusion/SimulationGlobalState.hpp"
// Including type: Fusion.NetworkObjectHeader
#include "Fusion/NetworkObjectHeader.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: Fusion.NetworkPrefabId
#include "Fusion/NetworkPrefabId.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Fusion.NetworkBehaviour
#include "Fusion/NetworkBehaviour.hpp"
// Including type: Fusion.NetworkObjectRefMapPtr/Enumerable
#include "Fusion/NetworkObjectRefMapPtr_Enumerable.hpp"
// Including type: Fusion.NetworkObjectRefMapPtr/Entry
#include "Fusion/NetworkObjectRefMapPtr_Entry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Double _dt
[[deprecated("Use field access instead!")]] double& Fusion::SimulationSnapshot::dyn__dt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::dyn__dt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dt"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Tick _tick
[[deprecated("Use field access instead!")]] ::Fusion::Tick& Fusion::SimulationSnapshot::dyn__tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::dyn__tick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tick"))->offset;
  return *reinterpret_cast<::Fusion::Tick*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _pooled
[[deprecated("Use field access instead!")]] bool& Fusion::SimulationSnapshot::dyn__pooled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::dyn__pooled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pooled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _interp
[[deprecated("Use field access instead!")]] bool& Fusion::SimulationSnapshot::dyn__interp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::dyn__interp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Allocator* _allocator
[[deprecated("Use field access instead!")]] ::Fusion::Allocator*& Fusion::SimulationSnapshot::dyn__allocator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::dyn__allocator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allocator"))->offset;
  return *reinterpret_cast<::Fusion::Allocator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.SimulationSnapshot Prev
[[deprecated("Use field access instead!")]] ::Fusion::SimulationSnapshot*& Fusion::SimulationSnapshot::dyn_Prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::dyn_Prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Prev"))->offset;
  return *reinterpret_cast<::Fusion::SimulationSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.SimulationSnapshot Next
[[deprecated("Use field access instead!")]] ::Fusion::SimulationSnapshot*& Fusion::SimulationSnapshot::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::Fusion::SimulationSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.SimulationSnapshot.get_Tick
::Fusion::Tick Fusion::SimulationSnapshot::get_Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::get_Tick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Tick, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot.get_Time
double Fusion::SimulationSnapshot::get_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::get_Time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot.GetStateBytes
::ArrayW<uint8_t> Fusion::SimulationSnapshot::GetStateBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::GetStateBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStateBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot.get_Allocator
::Fusion::Allocator* Fusion::SimulationSnapshot::get_Allocator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::get_Allocator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Allocator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Allocator*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot.get_ReplicateWordLength
int Fusion::SimulationSnapshot::get_ReplicateWordLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::get_ReplicateWordLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReplicateWordLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot.Dispose
void Fusion::SimulationSnapshot::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot.SetTick
void Fusion::SimulationSnapshot::SetTick(::Fusion::Tick tick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::SetTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tick)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tick);
}
// Autogenerated method: Fusion.SimulationSnapshot.CopyFrom
void Fusion::SimulationSnapshot::CopyFrom(::Fusion::SimulationSnapshot* from, bool onlyUsedMemory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(onlyUsedMemory)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, onlyUsedMemory);
}
// Autogenerated method: Fusion.SimulationSnapshot.get_ObjectCount
int Fusion::SimulationSnapshot::get_ObjectCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::get_ObjectCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot.get_ObjectTable
::Fusion::NetworkObjectRefMapPtr* Fusion::SimulationSnapshot::get_ObjectTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::get_ObjectTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkObjectRefMapPtr*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot.get_Objects
::Fusion::NetworkObjectRefMapPtr::Enumerable Fusion::SimulationSnapshot::get_Objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::get_Objects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Objects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkObjectRefMapPtr::Enumerable, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot.get_GlobalState
::Fusion::SimulationGlobalState* Fusion::SimulationSnapshot::get_GlobalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::get_GlobalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationGlobalState*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot.AllocateObject
::Fusion::NetworkObjectHeader* Fusion::SimulationSnapshot::AllocateObject(::Fusion::NetworkId id, ::Fusion::NetworkPrefabId type, int wordCount, ::System::Nullable_1<::Fusion::NetworkId> nestingRoot, ::System::Nullable_1<::Fusion::NetworkObjectNestingKey> nestingKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::AllocateObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllocateObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(wordCount), ::il2cpp_utils::ExtractType(nestingRoot), ::il2cpp_utils::ExtractType(nestingKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkObjectHeader*, false>(this, ___internal__method, id, type, wordCount, nestingRoot, nestingKey);
}
// Autogenerated method: Fusion.SimulationSnapshot.ContainsObject
bool Fusion::SimulationSnapshot::ContainsObject(::Fusion::NetworkId id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::ContainsObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id);
}
// Autogenerated method: Fusion.SimulationSnapshot.GetObjectHeaderPtrs
::System::ValueTuple_2<::System::Collections::Generic::Dictionary_2<::Fusion::NetworkId, ::Fusion::NetworkObjectHeaderPtr>*, ::System::Collections::Generic::Dictionary_2<::Fusion::NetworkId, ::System::Collections::Generic::List_1<::Fusion::NetworkId>*>*> Fusion::SimulationSnapshot::GetObjectHeaderPtrs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::GetObjectHeaderPtrs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectHeaderPtrs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<::System::Collections::Generic::Dictionary_2<::Fusion::NetworkId, ::Fusion::NetworkObjectHeaderPtr>*, ::System::Collections::Generic::Dictionary_2<::Fusion::NetworkId, ::System::Collections::Generic::List_1<::Fusion::NetworkId>*>*>, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot.FreeObject
void Fusion::SimulationSnapshot::FreeObject(::Fusion::NetworkId id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::FreeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: Fusion.SimulationSnapshot.GetObject
::Fusion::NetworkObjectHeader* Fusion::SimulationSnapshot::GetObject(::Fusion::NetworkId id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::GetObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkObjectHeader*, false>(this, ___internal__method, id);
}
// Autogenerated method: Fusion.SimulationSnapshot.TryGetObject
::Fusion::NetworkObjectHeader* Fusion::SimulationSnapshot::TryGetObject(::Fusion::NetworkId id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::TryGetObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkObjectHeader*, false>(this, ___internal__method, id);
}
// Autogenerated method: Fusion.SimulationSnapshot.TryGetObject
bool Fusion::SimulationSnapshot::TryGetObject(::Fusion::NetworkId id, ByRef<::Fusion::NetworkObjectHeader*> header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::TryGetObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractIndependentType<::Fusion::NetworkObjectHeader*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id, byref(header));
}
// Autogenerated method: Fusion.SimulationSnapshot.TryGetObjectEntry
bool Fusion::SimulationSnapshot::TryGetObjectEntry(::Fusion::NetworkId id, ByRef<::Fusion::NetworkObjectRefMapPtr::Entry*> entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::TryGetObjectEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetObjectEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractIndependentType<::Fusion::NetworkObjectRefMapPtr::Entry*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id, byref(entry));
}
// Autogenerated method: Fusion.SimulationSnapshot.GetObjectFromEntry
::Fusion::NetworkObjectHeader* Fusion::SimulationSnapshot::GetObjectFromEntry(::Fusion::NetworkObjectRefMapPtr::Entry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::GetObjectFromEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectFromEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkObjectHeader*, false>(this, ___internal__method, entry);
}
// Autogenerated method: Fusion.SimulationSnapshot.TryGetBehaviourPointer
bool Fusion::SimulationSnapshot::TryGetBehaviourPointer(::Fusion::NetworkBehaviour* behaviour, ByRef<int*> ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::TryGetBehaviourPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetBehaviourPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviour), ::il2cpp_utils::ExtractIndependentType<int*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, behaviour, byref(ptr));
}
// Autogenerated method: Fusion.SimulationSnapshot.TryGetBehaviourPointer
int* Fusion::SimulationSnapshot::TryGetBehaviourPointer(::Fusion::NetworkBehaviour* behaviour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::TryGetBehaviourPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetBehaviourPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviour)})));
  return ::il2cpp_utils::RunMethodRethrow<int*, false>(this, ___internal__method, behaviour);
}
// Autogenerated method: Fusion.SimulationSnapshot.BuildReport
::StringW Fusion::SimulationSnapshot::BuildReport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::BuildReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot.PrintObjects
::StringW Fusion::SimulationSnapshot::PrintObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::PrintObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrintObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot.PrintAllocator
::StringW Fusion::SimulationSnapshot::PrintAllocator(::Fusion::Allocator* allocator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::PrintAllocator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrintAllocator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allocator)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, allocator);
}
// Autogenerated method: Fusion.SimulationSnapshot.LevelExperience
int Fusion::SimulationSnapshot::LevelExperience(int level, int experiencePerStep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::LevelExperience");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "SimulationSnapshot", "LevelExperience", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(experiencePerStep)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level, experiencePerStep);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.SimulationSnapshot/IHistory
#include "Fusion/SimulationSnapshot_IHistory.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Fusion.SimulationSnapshot/IHistory.get_Oldest
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::IHistory::get_Oldest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::IHistory::get_Oldest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::IHistory*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/IHistory.get_Latest
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::IHistory::get_Latest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::IHistory::get_Latest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::IHistory*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/IHistory.get_Root
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::IHistory::get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::IHistory::get_Root");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::IHistory*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/IHistory.get_Count
int Fusion::SimulationSnapshot::IHistory::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::IHistory::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::IHistory*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/IHistory.get_MaxTick
::Fusion::Tick Fusion::SimulationSnapshot::IHistory::get_MaxTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::IHistory::get_MaxTick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::IHistory*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Tick, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/IHistory.get_Item
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::IHistory::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::IHistory::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::IHistory*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method, index);
}
// Autogenerated method: Fusion.SimulationSnapshot/IHistory.Dispose
void Fusion::SimulationSnapshot::IHistory::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::IHistory::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::IHistory*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/IHistory.TryGet
bool Fusion::SimulationSnapshot::IHistory::TryGet(::Fusion::Tick tick, ByRef<::Fusion::SimulationSnapshot*> snapshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::IHistory::TryGet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::IHistory*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tick, byref(snapshot));
}
// Autogenerated method: Fusion.SimulationSnapshot/IHistory.Get
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::IHistory::Get(::Fusion::Tick tick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::IHistory::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::IHistory*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method, tick);
}
// Autogenerated method: Fusion.SimulationSnapshot/IHistory.Next
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::IHistory::Next(::Fusion::Tick tick, bool copyPrevious) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::IHistory::Next");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::IHistory*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method, tick, copyPrevious);
}
// Autogenerated method: Fusion.SimulationSnapshot/IHistory.DisposeAllExcept
void Fusion::SimulationSnapshot::IHistory::DisposeAllExcept(::System::Collections::Generic::HashSet_1<::Fusion::Tick>* save) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::IHistory::DisposeAllExcept");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::IHistory*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, save);
}
// Autogenerated method: Fusion.SimulationSnapshot/IHistory.DisposeOlderThan
void Fusion::SimulationSnapshot::IHistory::DisposeOlderThan(::Fusion::Tick tick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::IHistory::DisposeOlderThan");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::IHistory*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tick);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.SimulationSnapshot/HistoryServerDeltaSnapshots
#include "Fusion/SimulationSnapshot_HistoryServerDeltaSnapshots.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Fusion.SimulationSnapshot/Pool
#include "Fusion/SimulationSnapshot_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Fusion.SimulationSnapshot/Pool _pool
[[deprecated("Use field access instead!")]] ::Fusion::SimulationSnapshot::Pool*& Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::dyn__pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::dyn__pool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pool"))->offset;
  return *reinterpret_cast<::Fusion::SimulationSnapshot::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.SimulationSnapshot _root
[[deprecated("Use field access instead!")]] ::Fusion::SimulationSnapshot*& Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::dyn__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<::Fusion::SimulationSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Fusion.SimulationSnapshot> _snapshots
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Fusion::SimulationSnapshot*>*& Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::dyn__snapshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::dyn__snapshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_snapshots"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Fusion::SimulationSnapshot*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<Fusion.Tick,Fusion.SimulationSnapshot> _lookup
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Fusion::Tick, ::Fusion::SimulationSnapshot*>*& Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::dyn__lookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::dyn__lookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Fusion::Tick, ::Fusion::SimulationSnapshot*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryServerDeltaSnapshots.get_Oldest
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::get_Oldest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::get_Oldest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryServerDeltaSnapshots.get_Latest
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::get_Latest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::get_Latest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryServerDeltaSnapshots.get_Root
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::get_Root");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryServerDeltaSnapshots.get_Count
int Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryServerDeltaSnapshots.get_MaxTick
::Fusion::Tick Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::get_MaxTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::get_MaxTick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Tick, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryServerDeltaSnapshots.get_Item
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method, index);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryServerDeltaSnapshots.Dispose
void Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryServerDeltaSnapshots.TryGet
bool Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::TryGet(::Fusion::Tick tick, ByRef<::Fusion::SimulationSnapshot*> snapshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::TryGet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tick, byref(snapshot));
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryServerDeltaSnapshots.Get
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::Get(::Fusion::Tick tick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method, tick);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryServerDeltaSnapshots.Next
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::Next(::Fusion::Tick tick, bool copyPrevious) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::Next");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method, tick, copyPrevious);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryServerDeltaSnapshots.DisposeAllExcept
void Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::DisposeAllExcept(::System::Collections::Generic::HashSet_1<::Fusion::Tick>* save) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::DisposeAllExcept");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, save);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryServerDeltaSnapshots.DisposeOlderThan
void Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::DisposeOlderThan(::Fusion::Tick tick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots::DisposeOlderThan");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryServerDeltaSnapshots*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tick);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.SimulationSnapshot/HistoryLL
#include "Fusion/SimulationSnapshot_HistoryLL.hpp"
// Including type: Fusion.SimulationSnapshotList
#include "Fusion/SimulationSnapshotList.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Fusion.SimulationSnapshot/Pool
#include "Fusion/SimulationSnapshot_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Fusion.SimulationSnapshot/Pool _pool
[[deprecated("Use field access instead!")]] ::Fusion::SimulationSnapshot::Pool*& Fusion::SimulationSnapshot::HistoryLL::dyn__pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryLL::dyn__pool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pool"))->offset;
  return *reinterpret_cast<::Fusion::SimulationSnapshot::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.SimulationSnapshot _root
[[deprecated("Use field access instead!")]] ::Fusion::SimulationSnapshot*& Fusion::SimulationSnapshot::HistoryLL::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryLL::dyn__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<::Fusion::SimulationSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.SimulationSnapshotList _list
[[deprecated("Use field access instead!")]] ::Fusion::SimulationSnapshotList*& Fusion::SimulationSnapshot::HistoryLL::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryLL::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::Fusion::SimulationSnapshotList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<Fusion.Tick,Fusion.SimulationSnapshot> _lookup
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Fusion::Tick, ::Fusion::SimulationSnapshot*>*& Fusion::SimulationSnapshot::HistoryLL::dyn__lookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryLL::dyn__lookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Fusion::Tick, ::Fusion::SimulationSnapshot*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryLL.get_Oldest
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::HistoryLL::get_Oldest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryLL::get_Oldest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryLL*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryLL.get_Latest
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::HistoryLL::get_Latest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryLL::get_Latest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryLL*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryLL.get_Root
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::HistoryLL::get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryLL::get_Root");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryLL*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryLL.get_Count
int Fusion::SimulationSnapshot::HistoryLL::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryLL::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryLL*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryLL.get_MaxTick
::Fusion::Tick Fusion::SimulationSnapshot::HistoryLL::get_MaxTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryLL::get_MaxTick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryLL*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Tick, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryLL.get_Item
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::HistoryLL::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryLL::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryLL*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method, index);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryLL.Dispose
void Fusion::SimulationSnapshot::HistoryLL::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryLL::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryLL*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryLL.TryGet
bool Fusion::SimulationSnapshot::HistoryLL::TryGet(::Fusion::Tick tick, ByRef<::Fusion::SimulationSnapshot*> snapshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryLL::TryGet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryLL*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tick, byref(snapshot));
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryLL.Get
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::HistoryLL::Get(::Fusion::Tick tick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryLL::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryLL*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method, tick);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryLL.Next
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::HistoryLL::Next(::Fusion::Tick tick, bool copyPrevious) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryLL::Next");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryLL*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method, tick, copyPrevious);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryLL.DisposeAllExcept
void Fusion::SimulationSnapshot::HistoryLL::DisposeAllExcept(::System::Collections::Generic::HashSet_1<::Fusion::Tick>* save) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryLL::DisposeAllExcept");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryLL*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, save);
}
// Autogenerated method: Fusion.SimulationSnapshot/HistoryLL.DisposeOlderThan
void Fusion::SimulationSnapshot::HistoryLL::DisposeOlderThan(::Fusion::Tick tick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::HistoryLL::DisposeOlderThan");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::HistoryLL*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tick);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.SimulationSnapshot/History
#include "Fusion/SimulationSnapshot_History.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Fusion.SimulationSnapshot/Pool
#include "Fusion/SimulationSnapshot_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _tail
[[deprecated("Use field access instead!")]] int& Fusion::SimulationSnapshot::History::dyn__tail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::dyn__tail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tail"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _head
[[deprecated("Use field access instead!")]] int& Fusion::SimulationSnapshot::History::dyn__head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::dyn__head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_head"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _count
[[deprecated("Use field access instead!")]] int& Fusion::SimulationSnapshot::History::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::dyn__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.SimulationSnapshot/Pool _pool
[[deprecated("Use field access instead!")]] ::Fusion::SimulationSnapshot::Pool*& Fusion::SimulationSnapshot::History::dyn__pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::dyn__pool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pool"))->offset;
  return *reinterpret_cast<::Fusion::SimulationSnapshot::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.SimulationSnapshot _root
[[deprecated("Use field access instead!")]] ::Fusion::SimulationSnapshot*& Fusion::SimulationSnapshot::History::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::dyn__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<::Fusion::SimulationSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.SimulationSnapshot[] _inOrder
[[deprecated("Use field access instead!")]] ::ArrayW<::Fusion::SimulationSnapshot*>& Fusion::SimulationSnapshot::History::dyn__inOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::dyn__inOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inOrder"))->offset;
  return *reinterpret_cast<::ArrayW<::Fusion::SimulationSnapshot*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<Fusion.Tick,Fusion.SimulationSnapshot> _byTick
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Fusion::Tick, ::Fusion::SimulationSnapshot*>*& Fusion::SimulationSnapshot::History::dyn__byTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::dyn__byTick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_byTick"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Fusion::Tick, ::Fusion::SimulationSnapshot*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.SimulationSnapshot/History.get_Oldest
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::History::get_Oldest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::get_Oldest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::History*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/History.get_Latest
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::History::get_Latest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::get_Latest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::History*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/History.get_Item
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::History::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::History*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method, index);
}
// Autogenerated method: Fusion.SimulationSnapshot/History.get_Root
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::History::get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::get_Root");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::History*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/History.get_Count
int Fusion::SimulationSnapshot::History::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::History*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/History.get_MaxTick
::Fusion::Tick Fusion::SimulationSnapshot::History::get_MaxTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::get_MaxTick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::History*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Tick, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/History.Dispose
void Fusion::SimulationSnapshot::History::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::History*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/History.TryGet
bool Fusion::SimulationSnapshot::History::TryGet(::Fusion::Tick tick, ByRef<::Fusion::SimulationSnapshot*> snapshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::TryGet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::History*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tick, byref(snapshot));
}
// Autogenerated method: Fusion.SimulationSnapshot/History.Get
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::History::Get(::Fusion::Tick tick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::History*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method, tick);
}
// Autogenerated method: Fusion.SimulationSnapshot/History.Next
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::History::Next(::Fusion::Tick tick, bool copyPrevious) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::Next");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::History*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method, tick, copyPrevious);
}
// Autogenerated method: Fusion.SimulationSnapshot/History.DisposeAllExcept
void Fusion::SimulationSnapshot::History::DisposeAllExcept(::System::Collections::Generic::HashSet_1<::Fusion::Tick>* save) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::DisposeAllExcept");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::History*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, save);
}
// Autogenerated method: Fusion.SimulationSnapshot/History.DisposeOlderThan
void Fusion::SimulationSnapshot::History::DisposeOlderThan(::Fusion::Tick tick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::History::DisposeOlderThan");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::SimulationSnapshot::History*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tick);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.SimulationSnapshot/Interpolator
#include "Fusion/SimulationSnapshot_Interpolator.hpp"
// Including type: Fusion.InterpolationConfiguration
#include "Fusion/InterpolationConfiguration.hpp"
// Including type: Fusion.SimulationConfig
#include "Fusion/SimulationConfig.hpp"
// Including type: Fusion.Simulation
#include "Fusion/Simulation.hpp"
// Including type: Fusion.SimulationSnapshot/IHistory
#include "Fusion/SimulationSnapshot_IHistory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Double _time
[[deprecated("Use field access instead!")]] double& Fusion::SimulationSnapshot::Interpolator::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _timeScale
[[deprecated("Use field access instead!")]] double& Fusion::SimulationSnapshot::Interpolator::dyn__timeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::dyn__timeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeScale"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _alpha
[[deprecated("Use field access instead!")]] float& Fusion::SimulationSnapshot::Interpolator::dyn__alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::dyn__alpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _multiplier
[[deprecated("Use field access instead!")]] double& Fusion::SimulationSnapshot::Interpolator::dyn__multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::dyn__multiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplier"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Ema _diffAvg
[[deprecated("Use field access instead!")]] ::Fusion::Ema& Fusion::SimulationSnapshot::Interpolator::dyn__diffAvg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::dyn__diffAvg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_diffAvg"))->offset;
  return *reinterpret_cast<::Fusion::Ema*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Ema _uncertainAvg
[[deprecated("Use field access instead!")]] ::Fusion::Ema& Fusion::SimulationSnapshot::Interpolator::dyn__uncertainAvg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::dyn__uncertainAvg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uncertainAvg"))->offset;
  return *reinterpret_cast<::Fusion::Ema*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Tick _statsTick
[[deprecated("Use field access instead!")]] ::Fusion::Tick& Fusion::SimulationSnapshot::Interpolator::dyn__statsTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::dyn__statsTick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_statsTick"))->offset;
  return *reinterpret_cast<::Fusion::Tick*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.TimerDelta _stateDeltaTimer
[[deprecated("Use field access instead!")]] ::Fusion::TimerDelta& Fusion::SimulationSnapshot::Interpolator::dyn__stateDeltaTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::dyn__stateDeltaTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stateDeltaTimer"))->offset;
  return *reinterpret_cast<::Fusion::TimerDelta*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Ema _stateDeltaAvg
[[deprecated("Use field access instead!")]] ::Fusion::Ema& Fusion::SimulationSnapshot::Interpolator::dyn__stateDeltaAvg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::dyn__stateDeltaAvg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stateDeltaAvg"))->offset;
  return *reinterpret_cast<::Fusion::Ema*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.SimulationSnapshot _to
[[deprecated("Use field access instead!")]] ::Fusion::SimulationSnapshot*& Fusion::SimulationSnapshot::Interpolator::dyn__to() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::dyn__to");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_to"))->offset;
  return *reinterpret_cast<::Fusion::SimulationSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.SimulationSnapshot _from
[[deprecated("Use field access instead!")]] ::Fusion::SimulationSnapshot*& Fusion::SimulationSnapshot::Interpolator::dyn__from() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::dyn__from");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_from"))->offset;
  return *reinterpret_cast<::Fusion::SimulationSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.InterpolationConfiguration _interpConfig
[[deprecated("Use field access instead!")]] ::Fusion::InterpolationConfiguration*& Fusion::SimulationSnapshot::Interpolator::dyn__interpConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::dyn__interpConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interpConfig"))->offset;
  return *reinterpret_cast<::Fusion::InterpolationConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.SimulationConfig _simulationConfig
[[deprecated("Use field access instead!")]] ::Fusion::SimulationConfig*& Fusion::SimulationSnapshot::Interpolator::dyn__simulationConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::dyn__simulationConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simulationConfig"))->offset;
  return *reinterpret_cast<::Fusion::SimulationConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.SimulationSnapshot/Interpolator.get_To
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::Interpolator::get_To() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::get_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/Interpolator.get_From
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::Interpolator::get_From() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::get_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/Interpolator.get_Alpha
float Fusion::SimulationSnapshot::Interpolator::get_Alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::get_Alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/Interpolator.get_TimeScale
double Fusion::SimulationSnapshot::Interpolator::get_TimeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::get_TimeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/Interpolator.get_Uncertainty
double Fusion::SimulationSnapshot::Interpolator::get_Uncertainty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::get_Uncertainty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Uncertainty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/Interpolator.get_Offset
double Fusion::SimulationSnapshot::Interpolator::get_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::get_Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/Interpolator.Calculate
bool Fusion::SimulationSnapshot::Interpolator::Calculate(double dt, ::Fusion::SimulationSnapshot::IHistory* history, ::Fusion::Simulation* simulation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::Calculate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Calculate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt), ::il2cpp_utils::ExtractType(history), ::il2cpp_utils::ExtractType(simulation)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dt, history, simulation);
}
// Autogenerated method: Fusion.SimulationSnapshot/Interpolator.StateUpdateReceived
bool Fusion::SimulationSnapshot::Interpolator::StateUpdateReceived(::Fusion::Simulation* simulation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::StateUpdateReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StateUpdateReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(simulation)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, simulation);
}
// Autogenerated method: Fusion.SimulationSnapshot/Interpolator.GetDefaultMultiplier
double Fusion::SimulationSnapshot::Interpolator::GetDefaultMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::GetDefaultMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/Interpolator.CalculateInterpOffset
double Fusion::SimulationSnapshot::Interpolator::CalculateInterpOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Interpolator::CalculateInterpOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateInterpOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.SimulationSnapshot/Pool
#include "Fusion/SimulationSnapshot_Pool.hpp"
// Including type: Fusion.Simulation
#include "Fusion/Simulation.hpp"
// Including type: Fusion.NetworkProjectConfig
#include "Fusion/NetworkProjectConfig.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Fusion.Simulation _simulation
[[deprecated("Use field access instead!")]] ::Fusion::Simulation*& Fusion::SimulationSnapshot::Pool::dyn__simulation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Pool::dyn__simulation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simulation"))->offset;
  return *reinterpret_cast<::Fusion::Simulation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.NetworkProjectConfig _config
[[deprecated("Use field access instead!")]] ::Fusion::NetworkProjectConfig*& Fusion::SimulationSnapshot::Pool::dyn__config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Pool::dyn__config");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_config"))->offset;
  return *reinterpret_cast<::Fusion::NetworkProjectConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Stack`1<Fusion.SimulationSnapshot> _pool
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::Fusion::SimulationSnapshot*>*& Fusion::SimulationSnapshot::Pool::dyn__pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Pool::dyn__pool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pool"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::Fusion::SimulationSnapshot*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Fusion.SimulationSnapshot> _created
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Fusion::SimulationSnapshot*>*& Fusion::SimulationSnapshot::Pool::dyn__created() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Pool::dyn__created");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_created"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Fusion::SimulationSnapshot*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.SimulationSnapshot/Pool.Dispose
void Fusion::SimulationSnapshot::Pool::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Pool::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/Pool.Release
void Fusion::SimulationSnapshot::Pool::Release(::Fusion::SimulationSnapshot* snapshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Pool::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(snapshot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, snapshot);
}
// Autogenerated method: Fusion.SimulationSnapshot/Pool.Create
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::Pool::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Pool::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.SimulationSnapshot/Pool.Acquire
::Fusion::SimulationSnapshot* Fusion::SimulationSnapshot::Pool::Acquire(bool clearAllocator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationSnapshot::Pool::Acquire");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Acquire", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clearAllocator)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SimulationSnapshot*, false>(this, ___internal__method, clearAllocator);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.SimulationStages
#include "Fusion/SimulationStages.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.SimulationStages Forward
::Fusion::SimulationStages Fusion::SimulationStages::_get_Forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationStages::_get_Forward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::SimulationStages>("Fusion", "SimulationStages", "Forward"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.SimulationStages Forward
void Fusion::SimulationStages::_set_Forward(::Fusion::SimulationStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationStages::_set_Forward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "SimulationStages", "Forward", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.SimulationStages Resimulate
::Fusion::SimulationStages Fusion::SimulationStages::_get_Resimulate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationStages::_get_Resimulate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::SimulationStages>("Fusion", "SimulationStages", "Resimulate"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.SimulationStages Resimulate
void Fusion::SimulationStages::_set_Resimulate(::Fusion::SimulationStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationStages::_set_Resimulate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "SimulationStages", "Resimulate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Fusion::SimulationStages::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::SimulationStages::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.NetworkStructUtils
#include "Fusion/NetworkStructUtils.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Fusion.INetworkStruct
#include "Fusion/INetworkStruct.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Type,System.Int32> _wordCounts
::System::Collections::Generic::Dictionary_2<::System::Type*, int>* Fusion::NetworkStructUtils::_get__wordCounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkStructUtils::_get__wordCounts");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, int>*>("Fusion", "NetworkStructUtils", "_wordCounts")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Type,System.Int32> _wordCounts
void Fusion::NetworkStructUtils::_set__wordCounts(::System::Collections::Generic::Dictionary_2<::System::Type*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkStructUtils::_set__wordCounts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion", "NetworkStructUtils", "_wordCounts", value));
}
// Autogenerated method: Fusion.NetworkStructUtils.ResetStatics
void Fusion::NetworkStructUtils::ResetStatics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkStructUtils::ResetStatics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "NetworkStructUtils", "ResetStatics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Fusion.NetworkStructUtils.GetWordCount
int Fusion::NetworkStructUtils::GetWordCount(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkStructUtils::GetWordCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "NetworkStructUtils", "GetWordCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Fusion.NetworkStructUtils..cctor
void Fusion::NetworkStructUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::NetworkStructUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion", "NetworkStructUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Internal.UnitySurrogateBase
#include "Fusion/Internal/UnitySurrogateBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Fusion.Internal.UnitySurrogateBase.Read
void Fusion::Internal::UnitySurrogateBase::Read(int* data, int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Internal::UnitySurrogateBase::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Internal::UnitySurrogateBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, capacity);
}
// Autogenerated method: Fusion.Internal.UnitySurrogateBase.Write
void Fusion::Internal::UnitySurrogateBase::Write(int* data, int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Internal::UnitySurrogateBase::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Internal::UnitySurrogateBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, capacity);
}
// Autogenerated method: Fusion.Internal.UnitySurrogateBase.Init
void Fusion::Internal::UnitySurrogateBase::Init(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Internal::UnitySurrogateBase::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Internal::UnitySurrogateBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Internal.IUnitySurrogate
#include "Fusion/Internal/IUnitySurrogate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Fusion.Internal.IUnitySurrogate.Read
void Fusion::Internal::IUnitySurrogate::Read(int* data, int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Internal::IUnitySurrogate::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Internal::IUnitySurrogate*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, capacity);
}
// Autogenerated method: Fusion.Internal.IUnitySurrogate.Write
void Fusion::Internal::IUnitySurrogate::Write(int* data, int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Internal::IUnitySurrogate::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Internal::IUnitySurrogate*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, capacity);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.LagCompensation.PreProcessingDelegate
#include "Fusion/LagCompensation/PreProcessingDelegate.hpp"
// Including type: Fusion.LagCompensation.Query
#include "Fusion/LagCompensation/Query.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Fusion.HitboxRoot
#include "Fusion/HitboxRoot.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Fusion.LagCompensation.PreProcessingDelegate.Invoke
void Fusion::LagCompensation::PreProcessingDelegate::Invoke(ByRef<::Fusion::LagCompensation::Query> query, ::System::Collections::Generic::List_1<::Fusion::HitboxRoot*>* rootCandidates, ::System::Collections::Generic::HashSet_1<int>* processedColliderIndices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::PreProcessingDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::LagCompensation::PreProcessingDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(query), rootCandidates, processedColliderIndices);
}
// Autogenerated method: Fusion.LagCompensation.PreProcessingDelegate.BeginInvoke
::System::IAsyncResult* Fusion::LagCompensation::PreProcessingDelegate::BeginInvoke(ByRef<::Fusion::LagCompensation::Query> query, ::System::Collections::Generic::List_1<::Fusion::HitboxRoot*>* rootCandidates, ::System::Collections::Generic::HashSet_1<int>* processedColliderIndices, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::PreProcessingDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::LagCompensation::PreProcessingDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(query), rootCandidates, processedColliderIndices, callback, object);
}
// Autogenerated method: Fusion.LagCompensation.PreProcessingDelegate.EndInvoke
void Fusion::LagCompensation::PreProcessingDelegate::EndInvoke(ByRef<::Fusion::LagCompensation::Query> query, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::PreProcessingDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::LagCompensation::PreProcessingDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(query), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.LagCompensation.QueryType
#include "Fusion/LagCompensation/QueryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.LagCompensation.QueryType Raycast
::Fusion::LagCompensation::QueryType Fusion::LagCompensation::QueryType::_get_Raycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::QueryType::_get_Raycast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::LagCompensation::QueryType>("Fusion.LagCompensation", "QueryType", "Raycast"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.LagCompensation.QueryType Raycast
void Fusion::LagCompensation::QueryType::_set_Raycast(::Fusion::LagCompensation::QueryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::QueryType::_set_Raycast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.LagCompensation", "QueryType", "Raycast", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.LagCompensation.QueryType SphereOverlap
::Fusion::LagCompensation::QueryType Fusion::LagCompensation::QueryType::_get_SphereOverlap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::QueryType::_get_SphereOverlap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::LagCompensation::QueryType>("Fusion.LagCompensation", "QueryType", "SphereOverlap"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.LagCompensation.QueryType SphereOverlap
void Fusion::LagCompensation::QueryType::_set_SphereOverlap(::Fusion::LagCompensation::QueryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::QueryType::_set_SphereOverlap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.LagCompensation", "QueryType", "SphereOverlap", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.LagCompensation.QueryType BoxOverlap
::Fusion::LagCompensation::QueryType Fusion::LagCompensation::QueryType::_get_BoxOverlap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::QueryType::_get_BoxOverlap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::LagCompensation::QueryType>("Fusion.LagCompensation", "QueryType", "BoxOverlap"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.LagCompensation.QueryType BoxOverlap
void Fusion::LagCompensation::QueryType::_set_BoxOverlap(::Fusion::LagCompensation::QueryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::QueryType::_set_BoxOverlap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.LagCompensation", "QueryType", "BoxOverlap", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.LagCompensation.QueryType PositionRotation
::Fusion::LagCompensation::QueryType Fusion::LagCompensation::QueryType::_get_PositionRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::QueryType::_get_PositionRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::LagCompensation::QueryType>("Fusion.LagCompensation", "QueryType", "PositionRotation"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.LagCompensation.QueryType PositionRotation
void Fusion::LagCompensation::QueryType::_set_PositionRotation(::Fusion::LagCompensation::QueryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::QueryType::_set_PositionRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.LagCompensation", "QueryType", "PositionRotation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Fusion::LagCompensation::QueryType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::QueryType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.LagCompensation.RaycastQuery
#include "Fusion/LagCompensation/RaycastQuery.hpp"
// Including type: Fusion.LagCompensation.Query
#include "Fusion/LagCompensation/Query.hpp"
// Including type: Fusion.PlayerRef
#include "Fusion/PlayerRef.hpp"
// Including type: Fusion.HitOptions
#include "Fusion/HitOptions.hpp"
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
// Including type: Fusion.LagCompensation.PreProcessingDelegate
#include "Fusion/LagCompensation/PreProcessingDelegate.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Origin
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Fusion::LagCompensation::RaycastQuery::dyn_Origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::RaycastQuery::dyn_Origin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Origin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Direction
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Fusion::LagCompensation::RaycastQuery::dyn_Direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::RaycastQuery::dyn_Direction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Direction"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Length
[[deprecated("Use field access instead!")]] float& Fusion::LagCompensation::RaycastQuery::dyn_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::RaycastQuery::dyn_Length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HitAll
[[deprecated("Use field access instead!")]] bool& Fusion::LagCompensation::RaycastQuery::dyn_HitAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::RaycastQuery::dyn_HitAll");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HitAll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.LagCompensation.RaycastQuery.CreateQuery
::Fusion::LagCompensation::Query Fusion::LagCompensation::RaycastQuery::CreateQuery(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float length, bool hitAll, ::Fusion::PlayerRef player, int layerMask, ::Fusion::HitOptions options, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction, ::Fusion::LagCompensation::PreProcessingDelegate* preProcessRoots) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::RaycastQuery::CreateQuery");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.LagCompensation", "RaycastQuery", "CreateQuery", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(hitAll), ::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(queryTriggerInteraction), ::il2cpp_utils::ExtractType(preProcessRoots)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::LagCompensation::Query, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, length, hitAll, player, layerMask, options, queryTriggerInteraction, preProcessRoots);
}
// Autogenerated method: Fusion.LagCompensation.RaycastQuery.CreateQuery
::Fusion::LagCompensation::Query Fusion::LagCompensation::RaycastQuery::CreateQuery(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float length, bool hitAll, int tick, ::System::Nullable_1<int> tickTo, ::System::Nullable_1<float> alpha, int layerMask, ::Fusion::HitOptions options, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction, ::Fusion::LagCompensation::PreProcessingDelegate* preProcessRoots) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::RaycastQuery::CreateQuery");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.LagCompensation", "RaycastQuery", "CreateQuery", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(hitAll), ::il2cpp_utils::ExtractType(tick), ::il2cpp_utils::ExtractType(tickTo), ::il2cpp_utils::ExtractType(alpha), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(queryTriggerInteraction), ::il2cpp_utils::ExtractType(preProcessRoots)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::LagCompensation::Query, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, length, hitAll, tick, tickTo, alpha, layerMask, options, queryTriggerInteraction, preProcessRoots);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.LagCompensation.SphereOverlapQuery
#include "Fusion/LagCompensation/SphereOverlapQuery.hpp"
// Including type: Fusion.LagCompensation.Query
#include "Fusion/LagCompensation/Query.hpp"
// Including type: Fusion.PlayerRef
#include "Fusion/PlayerRef.hpp"
// Including type: Fusion.HitOptions
#include "Fusion/HitOptions.hpp"
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
// Including type: Fusion.LagCompensation.PreProcessingDelegate
#include "Fusion/LagCompensation/PreProcessingDelegate.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Center
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Fusion::LagCompensation::SphereOverlapQuery::dyn_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::SphereOverlapQuery::dyn_Center");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Center"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Radius
[[deprecated("Use field access instead!")]] float& Fusion::LagCompensation::SphereOverlapQuery::dyn_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::SphereOverlapQuery::dyn_Radius");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.LagCompensation.SphereOverlapQuery.CreateQuery
::Fusion::LagCompensation::Query Fusion::LagCompensation::SphereOverlapQuery::CreateQuery(::UnityEngine::Vector3 center, float radius, ::Fusion::PlayerRef player, int layerMask, ::Fusion::HitOptions options, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction, ::Fusion::LagCompensation::PreProcessingDelegate* preProcessRoots) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::SphereOverlapQuery::CreateQuery");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.LagCompensation", "SphereOverlapQuery", "CreateQuery", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(queryTriggerInteraction), ::il2cpp_utils::ExtractType(preProcessRoots)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::LagCompensation::Query, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, radius, player, layerMask, options, queryTriggerInteraction, preProcessRoots);
}
// Autogenerated method: Fusion.LagCompensation.SphereOverlapQuery.CreateQuery
::Fusion::LagCompensation::Query Fusion::LagCompensation::SphereOverlapQuery::CreateQuery(::UnityEngine::Vector3 center, float radius, int tick, ::System::Nullable_1<int> tickTo, ::System::Nullable_1<float> alpha, int layerMask, ::Fusion::HitOptions options, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction, ::Fusion::LagCompensation::PreProcessingDelegate* preProcessRoots) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::SphereOverlapQuery::CreateQuery");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.LagCompensation", "SphereOverlapQuery", "CreateQuery", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(tick), ::il2cpp_utils::ExtractType(tickTo), ::il2cpp_utils::ExtractType(alpha), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(queryTriggerInteraction), ::il2cpp_utils::ExtractType(preProcessRoots)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::LagCompensation::Query, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, radius, tick, tickTo, alpha, layerMask, options, queryTriggerInteraction, preProcessRoots);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.LagCompensation.BoxOverlapQuery
#include "Fusion/LagCompensation/BoxOverlapQuery.hpp"
// Including type: Fusion.LagCompensation.Query
#include "Fusion/LagCompensation/Query.hpp"
// Including type: Fusion.PlayerRef
#include "Fusion/PlayerRef.hpp"
// Including type: Fusion.HitOptions
#include "Fusion/HitOptions.hpp"
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
// Including type: Fusion.LagCompensation.PreProcessingDelegate
#include "Fusion/LagCompensation/PreProcessingDelegate.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Center
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Fusion::LagCompensation::BoxOverlapQuery::dyn_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::BoxOverlapQuery::dyn_Center");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Center"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Extents
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Fusion::LagCompensation::BoxOverlapQuery::dyn_Extents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::BoxOverlapQuery::dyn_Extents");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Extents"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion Rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Fusion::LagCompensation::BoxOverlapQuery::dyn_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::BoxOverlapQuery::dyn_Rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 AabbExtents
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Fusion::LagCompensation::BoxOverlapQuery::dyn_AabbExtents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::BoxOverlapQuery::dyn_AabbExtents");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AabbExtents"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.LagCompensation.BoxOverlapQuery.CreateQuery
::Fusion::LagCompensation::Query Fusion::LagCompensation::BoxOverlapQuery::CreateQuery(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 extents, ::UnityEngine::Quaternion rotation, ::Fusion::PlayerRef player, int layerMask, ::Fusion::HitOptions options, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction, ::Fusion::LagCompensation::PreProcessingDelegate* preProcessRoots) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::BoxOverlapQuery::CreateQuery");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.LagCompensation", "BoxOverlapQuery", "CreateQuery", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(extents), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(queryTriggerInteraction), ::il2cpp_utils::ExtractType(preProcessRoots)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::LagCompensation::Query, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, extents, rotation, player, layerMask, options, queryTriggerInteraction, preProcessRoots);
}
// Autogenerated method: Fusion.LagCompensation.BoxOverlapQuery.CreateQuery
::Fusion::LagCompensation::Query Fusion::LagCompensation::BoxOverlapQuery::CreateQuery(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 extents, ::UnityEngine::Quaternion rotation, int tick, ::System::Nullable_1<int> tickTo, ::System::Nullable_1<float> alpha, int layerMask, ::Fusion::HitOptions options, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction, ::Fusion::LagCompensation::PreProcessingDelegate* preProcessRoots) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::BoxOverlapQuery::CreateQuery");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.LagCompensation", "BoxOverlapQuery", "CreateQuery", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(extents), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(tick), ::il2cpp_utils::ExtractType(tickTo), ::il2cpp_utils::ExtractType(alpha), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(queryTriggerInteraction), ::il2cpp_utils::ExtractType(preProcessRoots)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::LagCompensation::Query, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, extents, rotation, tick, tickTo, alpha, layerMask, options, queryTriggerInteraction, preProcessRoots);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.LagCompensation.PositionRotationQuery
#include "Fusion/LagCompensation/PositionRotationQuery.hpp"
// Including type: Fusion.Hitbox
#include "Fusion/Hitbox.hpp"
// Including type: Fusion.LagCompensation.Query
#include "Fusion/LagCompensation/Query.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: Fusion.PlayerRef
#include "Fusion/PlayerRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Fusion.Hitbox Hitbox
[[deprecated("Use field access instead!")]] ::Fusion::Hitbox*& Fusion::LagCompensation::PositionRotationQuery::dyn_Hitbox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::PositionRotationQuery::dyn_Hitbox");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hitbox"))->offset;
  return *reinterpret_cast<::Fusion::Hitbox**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.LagCompensation.PositionRotationQuery.CreateQuery
::Fusion::LagCompensation::Query Fusion::LagCompensation::PositionRotationQuery::CreateQuery(::Fusion::Hitbox* hb, int tick, ::System::Nullable_1<int> tickTo, ::System::Nullable_1<float> alpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::PositionRotationQuery::CreateQuery");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.LagCompensation", "PositionRotationQuery", "CreateQuery", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hb), ::il2cpp_utils::ExtractType(tick), ::il2cpp_utils::ExtractType(tickTo), ::il2cpp_utils::ExtractType(alpha)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::LagCompensation::Query, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hb, tick, tickTo, alpha);
}
// Autogenerated method: Fusion.LagCompensation.PositionRotationQuery.CreateQuery
::Fusion::LagCompensation::Query Fusion::LagCompensation::PositionRotationQuery::CreateQuery(::Fusion::Hitbox* hb, ::Fusion::PlayerRef player, bool subTickAccuracy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::LagCompensation::PositionRotationQuery::CreateQuery");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.LagCompensation", "PositionRotationQuery", "CreateQuery", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hb), ::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(subTickAccuracy)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::LagCompensation::Query, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hb, player, subTickAccuracy);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.CodeAnalysis.EmbeddedAttribute
#include "Microsoft/CodeAnalysis/EmbeddedAttribute___.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.IsReadOnlyAttribute
#include "System/Runtime/CompilerServices/IsReadOnlyAttribute__.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.IsUnmanagedAttribute
#include "System/Runtime/CompilerServices/IsUnmanagedAttribute__.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.BitStream
#include "Fusion/Protocol/BitStream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _ptr
[[deprecated("Use field access instead!")]] int& Fusion::Protocol::BitStream::dyn__ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::dyn__ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ptr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _size
[[deprecated("Use field access instead!")]] int& Fusion::Protocol::BitStream::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Fusion::Protocol::BitStream::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _write
[[deprecated("Use field access instead!")]] bool& Fusion::Protocol::BitStream::dyn__write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::dyn__write");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_write"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Protocol.BitStream.get_Position
int Fusion::Protocol::BitStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.BitStream.set_Position
void Fusion::Protocol::BitStream::set_Position(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::set_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Protocol.BitStream.get_BytesRequired
int Fusion::Protocol::BitStream::get_BytesRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::get_BytesRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BytesRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.BitStream.get_Overflowing
bool Fusion::Protocol::BitStream::get_Overflowing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::get_Overflowing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Overflowing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.BitStream.get_Writing
bool Fusion::Protocol::BitStream::get_Writing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::get_Writing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Writing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.BitStream.set_Writing
void Fusion::Protocol::BitStream::set_Writing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::set_Writing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Writing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Protocol.BitStream.get_Reading
bool Fusion::Protocol::BitStream::get_Reading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::get_Reading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Reading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.BitStream.set_Reading
void Fusion::Protocol::BitStream::set_Reading(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::set_Reading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Reading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Protocol.BitStream.get_Data
::ArrayW<uint8_t> Fusion::Protocol::BitStream::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::get_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.BitStream.SetBuffer
void Fusion::Protocol::BitStream::SetBuffer(::ArrayW<uint8_t> arr, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::SetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arr), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arr, size);
}
// Autogenerated method: Fusion.Protocol.BitStream.Expand
void Fusion::Protocol::BitStream::Expand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::Expand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Expand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.BitStream.CanRead
bool Fusion::Protocol::BitStream::CanRead(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::CanRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bits);
}
// Autogenerated method: Fusion.Protocol.BitStream.Reset
void Fusion::Protocol::BitStream::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.BitStream.Reset
void Fusion::Protocol::BitStream::Reset(int byteSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byteSize);
}
// Autogenerated method: Fusion.Protocol.BitStream.WriteBool
bool Fusion::Protocol::BitStream::WriteBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::WriteBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Protocol.BitStream.ReadBool
bool Fusion::Protocol::BitStream::ReadBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::ReadBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.BitStream.WriteByte
void Fusion::Protocol::BitStream::WriteByte(uint8_t value, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::WriteByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(bits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, bits);
}
// Autogenerated method: Fusion.Protocol.BitStream.ReadByte
uint8_t Fusion::Protocol::BitStream::ReadByte(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::ReadByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, bits);
}
// Autogenerated method: Fusion.Protocol.BitStream.WriteByte
void Fusion::Protocol::BitStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::WriteByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Protocol.BitStream.ReadByte
uint8_t Fusion::Protocol::BitStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::ReadByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.BitStream.WriteUShort
void Fusion::Protocol::BitStream::WriteUShort(uint16_t value, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::WriteUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(bits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, bits);
}
// Autogenerated method: Fusion.Protocol.BitStream.ReadUShort
uint16_t Fusion::Protocol::BitStream::ReadUShort(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::ReadUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, bits);
}
// Autogenerated method: Fusion.Protocol.BitStream.WriteUShort
void Fusion::Protocol::BitStream::WriteUShort(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::WriteUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Protocol.BitStream.ReadUShort
uint16_t Fusion::Protocol::BitStream::ReadUShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::ReadUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.BitStream.WriteUInt
void Fusion::Protocol::BitStream::WriteUInt(uint value, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::WriteUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(bits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, bits);
}
// Autogenerated method: Fusion.Protocol.BitStream.ReadUInt
uint Fusion::Protocol::BitStream::ReadUInt(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::ReadUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, bits);
}
// Autogenerated method: Fusion.Protocol.BitStream.WriteInt
void Fusion::Protocol::BitStream::WriteInt(int value, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::WriteInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(bits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, bits);
}
// Autogenerated method: Fusion.Protocol.BitStream.ReadInt
int Fusion::Protocol::BitStream::ReadInt(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::ReadInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bits);
}
// Autogenerated method: Fusion.Protocol.BitStream.WriteULong
void Fusion::Protocol::BitStream::WriteULong(uint64_t value, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::WriteULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(bits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, bits);
}
// Autogenerated method: Fusion.Protocol.BitStream.ReadULong
uint64_t Fusion::Protocol::BitStream::ReadULong(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::ReadULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, bits);
}
// Autogenerated method: Fusion.Protocol.BitStream.WriteULong
void Fusion::Protocol::BitStream::WriteULong(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::WriteULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Protocol.BitStream.ReadULong
uint64_t Fusion::Protocol::BitStream::ReadULong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::ReadULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.BitStream.WriteByteArray
void Fusion::Protocol::BitStream::WriteByteArray(::ArrayW<uint8_t> from) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::WriteByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from);
}
// Autogenerated method: Fusion.Protocol.BitStream.WriteByteArray
void Fusion::Protocol::BitStream::WriteByteArray(::ArrayW<uint8_t> from, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::WriteByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, offset, count);
}
// Autogenerated method: Fusion.Protocol.BitStream.ReadByteArray
void Fusion::Protocol::BitStream::ReadByteArray(::ArrayW<uint8_t> to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::ReadByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, to);
}
// Autogenerated method: Fusion.Protocol.BitStream.ReadByteArray
void Fusion::Protocol::BitStream::ReadByteArray(::ArrayW<uint8_t> to, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::ReadByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, to, offset, count);
}
// Autogenerated method: Fusion.Protocol.BitStream.WriteByteArrayLengthPrefixed
void Fusion::Protocol::BitStream::WriteByteArrayLengthPrefixed(::ArrayW<uint8_t> array, int maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::WriteByteArrayLengthPrefixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByteArrayLengthPrefixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(maxLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, maxLength);
}
// Autogenerated method: Fusion.Protocol.BitStream.ReadByteArrayLengthPrefixed
::ArrayW<uint8_t> Fusion::Protocol::BitStream::ReadByteArrayLengthPrefixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::ReadByteArrayLengthPrefixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByteArrayLengthPrefixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.BitStream.WriteString
void Fusion::Protocol::BitStream::WriteString(::StringW value, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::WriteString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(encoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, encoding);
}
// Autogenerated method: Fusion.Protocol.BitStream.ReadString
::StringW Fusion::Protocol::BitStream::ReadString(::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::ReadString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, encoding);
}
// Autogenerated method: Fusion.Protocol.BitStream.InternalWriteByte
void Fusion::Protocol::BitStream::InternalWriteByte(uint8_t value, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::InternalWriteByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(bits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, bits);
}
// Autogenerated method: Fusion.Protocol.BitStream.WriteByteAt
void Fusion::Protocol::BitStream::WriteByteAt(::ArrayW<uint8_t> data, int ptr, int bits, uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::WriteByteAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Protocol", "BitStream", "WriteByteAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, ptr, bits, value);
}
// Autogenerated method: Fusion.Protocol.BitStream.InternalReadByte
uint8_t Fusion::Protocol::BitStream::InternalReadByte(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::InternalReadByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, bits);
}
// Autogenerated method: Fusion.Protocol.BitStream.Serialize
void Fusion::Protocol::BitStream::Serialize(ByRef<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: Fusion.Protocol.BitStream.Serialize
void Fusion::Protocol::BitStream::Serialize(ByRef<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: Fusion.Protocol.BitStream.Serialize
void Fusion::Protocol::BitStream::Serialize(ByRef<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: Fusion.Protocol.BitStream.Serialize
void Fusion::Protocol::BitStream::Serialize(ByRef<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: Fusion.Protocol.BitStream.Serialize
void Fusion::Protocol::BitStream::Serialize(ByRef<uint> value, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(bits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value), bits);
}
// Autogenerated method: Fusion.Protocol.BitStream.Serialize
void Fusion::Protocol::BitStream::Serialize(ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: Fusion.Protocol.BitStream.Serialize
void Fusion::Protocol::BitStream::Serialize(ByRef<int> value, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(bits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value), bits);
}
// Autogenerated method: Fusion.Protocol.BitStream.Serialize
void Fusion::Protocol::BitStream::Serialize(ByRef<::ArrayW<uint8_t>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: Fusion.Protocol.BitStream.Serialize
void Fusion::Protocol::BitStream::Serialize(ByRef<::ArrayW<uint8_t>> array, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::BitStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(array), byref(length));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.Protocol.CommunicatorBase
#include "Fusion/Protocol/CommunicatorBase.hpp"
// Including type: Fusion.Protocol.CommunicatorBase/<>c__DisplayClass16_0`1
#include "Fusion/Protocol/CommunicatorBase_--c__DisplayClass16_0_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Fusion.Protocol.IMessage
#include "Fusion/Protocol/IMessage.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Fusion.Protocol.Message
#include "Fusion/Protocol/Message.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: Fusion.Protocol.ProtocolSerializer
#include "Fusion/Protocol/ProtocolSerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected readonly System.Collections.Generic.Dictionary`2<System.Type,System.Action`2<System.Int32,Fusion.Protocol.IMessage>> _callbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Action_2<int, ::Fusion::Protocol::IMessage*>*>*& Fusion::Protocol::CommunicatorBase::dyn__callbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::CommunicatorBase::dyn__callbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_callbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Action_2<int, ::Fusion::Protocol::IMessage*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.Collections.Generic.List`1<Fusion.Protocol.Message> _messageList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Fusion::Protocol::Message*>*& Fusion::Protocol::CommunicatorBase::dyn__messageList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::CommunicatorBase::dyn__messageList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_messageList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Fusion::Protocol::Message*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.Collections.Generic.Queue`1<System.ValueTuple`2<System.Int32,Fusion.Protocol.Message>> _messageSendQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::System::ValueTuple_2<int, ::Fusion::Protocol::Message*>>*& Fusion::Protocol::CommunicatorBase::dyn__messageSendQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::CommunicatorBase::dyn__messageSendQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_messageSendQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::System::ValueTuple_2<int, ::Fusion::Protocol::Message*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.Collections.Generic.Queue`1<System.ValueTuple`2<System.Int32,System.Object>> _recvQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::System::ValueTuple_2<int, ::Il2CppObject*>>*& Fusion::Protocol::CommunicatorBase::dyn__recvQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::CommunicatorBase::dyn__recvQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recvQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::System::ValueTuple_2<int, ::Il2CppObject*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Protocol.ProtocolSerializer _protocolSerializer
[[deprecated("Use field access instead!")]] ::Fusion::Protocol::ProtocolSerializer*& Fusion::Protocol::CommunicatorBase::dyn__protocolSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::CommunicatorBase::dyn__protocolSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_protocolSerializer"))->offset;
  return *reinterpret_cast<::Fusion::Protocol::ProtocolSerializer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Protocol.CommunicatorBase.get_CommunicatorID
int Fusion::Protocol::CommunicatorBase::get_CommunicatorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::CommunicatorBase::get_CommunicatorID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::CommunicatorBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.CommunicatorBase.Poll
bool Fusion::Protocol::CommunicatorBase::Poll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::CommunicatorBase::Poll");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::CommunicatorBase*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.CommunicatorBase.PushPackage
void Fusion::Protocol::CommunicatorBase::PushPackage(int senderActor, int eventCode, ::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::CommunicatorBase::PushPackage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::CommunicatorBase*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, senderActor, eventCode, data);
}
// Autogenerated method: Fusion.Protocol.CommunicatorBase.SendMessage
void Fusion::Protocol::CommunicatorBase::SendMessage(int targetActor, ::Fusion::Protocol::IMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::CommunicatorBase::SendMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::CommunicatorBase*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetActor, message);
}
// Autogenerated method: Fusion.Protocol.CommunicatorBase.Service
void Fusion::Protocol::CommunicatorBase::Service() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::CommunicatorBase::Service");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::CommunicatorBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.CommunicatorBase.HandleProtocolPackage
void Fusion::Protocol::CommunicatorBase::HandleProtocolPackage(int actorNr, ::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::CommunicatorBase::HandleProtocolPackage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleProtocolPackage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorNr), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, actorNr, data);
}
// Autogenerated method: Fusion.Protocol.CommunicatorBase.ReceivePackage
int Fusion::Protocol::CommunicatorBase::ReceivePackage(ByRef<int> senderActor, uint8_t* buffer, int bufferLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::CommunicatorBase::ReceivePackage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::CommunicatorBase*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(senderActor), buffer, bufferLength);
}
// Autogenerated method: Fusion.Protocol.CommunicatorBase.SendPackage
bool Fusion::Protocol::CommunicatorBase::SendPackage(uint8_t code, int targetActor, bool reliable, uint8_t* buffer, int bufferLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::CommunicatorBase::SendPackage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::CommunicatorBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, code, targetActor, reliable, buffer, bufferLength);
}
// Autogenerated method: Fusion.Protocol.CommunicatorBase.ConvertData
void Fusion::Protocol::CommunicatorBase::ConvertData(::Il2CppObject* data, ByRef<::ArrayW<uint8_t>> dataBuffer, ByRef<int> maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::CommunicatorBase::ConvertData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::CommunicatorBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, byref(dataBuffer), byref(maxLength));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.Protocol.Message
#include "Fusion/Protocol/Message.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: Fusion.Protocol.BitStream
#include "Fusion/Protocol/BitStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 CUSTOM_DATA_LENGHT
int Fusion::Protocol::Message::_get_CUSTOM_DATA_LENGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Message::_get_CUSTOM_DATA_LENGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.Protocol", "Message", "CUSTOM_DATA_LENGHT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CUSTOM_DATA_LENGHT
void Fusion::Protocol::Message::_set_CUSTOM_DATA_LENGHT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Message::_set_CUSTOM_DATA_LENGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "Message", "CUSTOM_DATA_LENGHT", value));
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Protocol.ProtocolMessageVersion ProtocolVersion
[[deprecated("Use field access instead!")]] ::Fusion::Protocol::ProtocolMessageVersion& Fusion::Protocol::Message::dyn_ProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Message::dyn_ProtocolVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProtocolVersion"))->offset;
  return *reinterpret_cast<::Fusion::Protocol::ProtocolMessageVersion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Version FusionSerializationVersion
[[deprecated("Use field access instead!")]] ::System::Version*& Fusion::Protocol::Message::dyn_FusionSerializationVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Message::dyn_FusionSerializationVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FusionSerializationVersion"))->offset;
  return *reinterpret_cast<::System::Version**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _customData
[[deprecated("Use field access instead!")]] ::StringW& Fusion::Protocol::Message::dyn__customData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Message::dyn__customData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customData"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Protocol.Message.get_CustomData
::StringW Fusion::Protocol::Message::get_CustomData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Message::get_CustomData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.Message.Clone
::Fusion::Protocol::Message* Fusion::Protocol::Message::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Message::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::Message*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Protocol::Message*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.Message.Serialize
void Fusion::Protocol::Message::Serialize(::Fusion::Protocol::BitStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Message::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Fusion.Protocol.Message.SerializeProtected
void Fusion::Protocol::Message::SerializeProtected(::Fusion::Protocol::BitStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Message::SerializeProtected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::Message*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Fusion.Protocol.Message.ToString
::StringW Fusion::Protocol::Message::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Message::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.Disconnect
#include "Fusion/Protocol/Disconnect.hpp"
// Including type: Fusion.Protocol.BitStream
#include "Fusion/Protocol/BitStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Fusion.Protocol.DisconnectReason DisconnectReason
[[deprecated("Use field access instead!")]] ::Fusion::Protocol::DisconnectReason& Fusion::Protocol::Disconnect::dyn_DisconnectReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Disconnect::dyn_DisconnectReason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisconnectReason"))->offset;
  return *reinterpret_cast<::Fusion::Protocol::DisconnectReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Protocol.Disconnect.SerializeProtected
void Fusion::Protocol::Disconnect::SerializeProtected(::Fusion::Protocol::BitStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Disconnect::SerializeProtected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::Message*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Fusion.Protocol.Disconnect.ToString
::StringW Fusion::Protocol::Disconnect::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Disconnect::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::Message*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.DisconnectReason
#include "Fusion/Protocol/DisconnectReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.DisconnectReason None
::Fusion::Protocol::DisconnectReason Fusion::Protocol::DisconnectReason::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::DisconnectReason::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::DisconnectReason>("Fusion.Protocol", "DisconnectReason", "None"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.DisconnectReason None
void Fusion::Protocol::DisconnectReason::_set_None(::Fusion::Protocol::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::DisconnectReason::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "DisconnectReason", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.DisconnectReason ServerLogic
::Fusion::Protocol::DisconnectReason Fusion::Protocol::DisconnectReason::_get_ServerLogic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::DisconnectReason::_get_ServerLogic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::DisconnectReason>("Fusion.Protocol", "DisconnectReason", "ServerLogic"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.DisconnectReason ServerLogic
void Fusion::Protocol::DisconnectReason::_set_ServerLogic(::Fusion::Protocol::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::DisconnectReason::_set_ServerLogic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "DisconnectReason", "ServerLogic", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.DisconnectReason InvalidEventCode
::Fusion::Protocol::DisconnectReason Fusion::Protocol::DisconnectReason::_get_InvalidEventCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::DisconnectReason::_get_InvalidEventCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::DisconnectReason>("Fusion.Protocol", "DisconnectReason", "InvalidEventCode"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.DisconnectReason InvalidEventCode
void Fusion::Protocol::DisconnectReason::_set_InvalidEventCode(::Fusion::Protocol::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::DisconnectReason::_set_InvalidEventCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "DisconnectReason", "InvalidEventCode", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.DisconnectReason InvalidJoinMsgType
::Fusion::Protocol::DisconnectReason Fusion::Protocol::DisconnectReason::_get_InvalidJoinMsgType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::DisconnectReason::_get_InvalidJoinMsgType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::DisconnectReason>("Fusion.Protocol", "DisconnectReason", "InvalidJoinMsgType"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.DisconnectReason InvalidJoinMsgType
void Fusion::Protocol::DisconnectReason::_set_InvalidJoinMsgType(::Fusion::Protocol::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::DisconnectReason::_set_InvalidJoinMsgType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "DisconnectReason", "InvalidJoinMsgType", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.DisconnectReason InvalidJoinGameMode
::Fusion::Protocol::DisconnectReason Fusion::Protocol::DisconnectReason::_get_InvalidJoinGameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::DisconnectReason::_get_InvalidJoinGameMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::DisconnectReason>("Fusion.Protocol", "DisconnectReason", "InvalidJoinGameMode"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.DisconnectReason InvalidJoinGameMode
void Fusion::Protocol::DisconnectReason::_set_InvalidJoinGameMode(::Fusion::Protocol::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::DisconnectReason::_set_InvalidJoinGameMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "DisconnectReason", "InvalidJoinGameMode", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.DisconnectReason IncompatibleConfiguration
::Fusion::Protocol::DisconnectReason Fusion::Protocol::DisconnectReason::_get_IncompatibleConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::DisconnectReason::_get_IncompatibleConfiguration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::DisconnectReason>("Fusion.Protocol", "DisconnectReason", "IncompatibleConfiguration"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.DisconnectReason IncompatibleConfiguration
void Fusion::Protocol::DisconnectReason::_set_IncompatibleConfiguration(::Fusion::Protocol::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::DisconnectReason::_set_IncompatibleConfiguration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "DisconnectReason", "IncompatibleConfiguration", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.DisconnectReason ServerAlreadyInRoom
::Fusion::Protocol::DisconnectReason Fusion::Protocol::DisconnectReason::_get_ServerAlreadyInRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::DisconnectReason::_get_ServerAlreadyInRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::DisconnectReason>("Fusion.Protocol", "DisconnectReason", "ServerAlreadyInRoom"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.DisconnectReason ServerAlreadyInRoom
void Fusion::Protocol::DisconnectReason::_set_ServerAlreadyInRoom(::Fusion::Protocol::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::DisconnectReason::_set_ServerAlreadyInRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "DisconnectReason", "ServerAlreadyInRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.DisconnectReason Error
::Fusion::Protocol::DisconnectReason Fusion::Protocol::DisconnectReason::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::DisconnectReason::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::DisconnectReason>("Fusion.Protocol", "DisconnectReason", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.DisconnectReason Error
void Fusion::Protocol::DisconnectReason::_set_Error(::Fusion::Protocol::DisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::DisconnectReason::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "DisconnectReason", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Fusion::Protocol::DisconnectReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::DisconnectReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.HostMigration
#include "Fusion/Protocol/HostMigration.hpp"
// Including type: Fusion.Protocol.BitStream
#include "Fusion/Protocol/BitStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Fusion.Protocol.PeerMode PeerMode
[[deprecated("Use field access instead!")]] ::Fusion::Protocol::PeerMode& Fusion::Protocol::HostMigration::dyn_PeerMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::HostMigration::dyn_PeerMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PeerMode"))->offset;
  return *reinterpret_cast<::Fusion::Protocol::PeerMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Protocol.HostMigration.get_WaitForSnapshot
bool Fusion::Protocol::HostMigration::get_WaitForSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::HostMigration::get_WaitForSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaitForSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.HostMigration.SerializeProtected
void Fusion::Protocol::HostMigration::SerializeProtected(::Fusion::Protocol::BitStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::HostMigration::SerializeProtected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::Message*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Fusion.Protocol.HostMigration.ToString
::StringW Fusion::Protocol::HostMigration::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::HostMigration::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::Message*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.JoinMessageType
#include "Fusion/Protocol/JoinMessageType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.JoinMessageType Request
::Fusion::Protocol::JoinMessageType Fusion::Protocol::JoinMessageType::_get_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::JoinMessageType::_get_Request");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::JoinMessageType>("Fusion.Protocol", "JoinMessageType", "Request"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.JoinMessageType Request
void Fusion::Protocol::JoinMessageType::_set_Request(::Fusion::Protocol::JoinMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::JoinMessageType::_set_Request");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "JoinMessageType", "Request", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.JoinMessageType Confirmation
::Fusion::Protocol::JoinMessageType Fusion::Protocol::JoinMessageType::_get_Confirmation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::JoinMessageType::_get_Confirmation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::JoinMessageType>("Fusion.Protocol", "JoinMessageType", "Confirmation"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.JoinMessageType Confirmation
void Fusion::Protocol::JoinMessageType::_set_Confirmation(::Fusion::Protocol::JoinMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::JoinMessageType::_set_Confirmation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "JoinMessageType", "Confirmation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Fusion::Protocol::JoinMessageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::JoinMessageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.PeerMode
#include "Fusion/Protocol/PeerMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.PeerMode None
::Fusion::Protocol::PeerMode Fusion::Protocol::PeerMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::PeerMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::PeerMode>("Fusion.Protocol", "PeerMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.PeerMode None
void Fusion::Protocol::PeerMode::_set_None(::Fusion::Protocol::PeerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::PeerMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "PeerMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.PeerMode Server
::Fusion::Protocol::PeerMode Fusion::Protocol::PeerMode::_get_Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::PeerMode::_get_Server");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::PeerMode>("Fusion.Protocol", "PeerMode", "Server"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.PeerMode Server
void Fusion::Protocol::PeerMode::_set_Server(::Fusion::Protocol::PeerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::PeerMode::_set_Server");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "PeerMode", "Server", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.PeerMode Client
::Fusion::Protocol::PeerMode Fusion::Protocol::PeerMode::_get_Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::PeerMode::_get_Client");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::PeerMode>("Fusion.Protocol", "PeerMode", "Client"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.PeerMode Client
void Fusion::Protocol::PeerMode::_set_Client(::Fusion::Protocol::PeerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::PeerMode::_set_Client");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "PeerMode", "Client", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Fusion::Protocol::PeerMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::PeerMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.JoinRequests
#include "Fusion/Protocol/JoinRequests.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.JoinRequests None
::Fusion::Protocol::JoinRequests Fusion::Protocol::JoinRequests::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::JoinRequests::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::JoinRequests>("Fusion.Protocol", "JoinRequests", "None"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.JoinRequests None
void Fusion::Protocol::JoinRequests::_set_None(::Fusion::Protocol::JoinRequests value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::JoinRequests::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "JoinRequests", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.JoinRequests NetworkConfig
::Fusion::Protocol::JoinRequests Fusion::Protocol::JoinRequests::_get_NetworkConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::JoinRequests::_get_NetworkConfig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::JoinRequests>("Fusion.Protocol", "JoinRequests", "NetworkConfig"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.JoinRequests NetworkConfig
void Fusion::Protocol::JoinRequests::_set_NetworkConfig(::Fusion::Protocol::JoinRequests value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::JoinRequests::_set_NetworkConfig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "JoinRequests", "NetworkConfig", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.JoinRequests ReflexiveInfo
::Fusion::Protocol::JoinRequests Fusion::Protocol::JoinRequests::_get_ReflexiveInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::JoinRequests::_get_ReflexiveInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::JoinRequests>("Fusion.Protocol", "JoinRequests", "ReflexiveInfo"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.JoinRequests ReflexiveInfo
void Fusion::Protocol::JoinRequests::_set_ReflexiveInfo(::Fusion::Protocol::JoinRequests value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::JoinRequests::_set_ReflexiveInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "JoinRequests", "ReflexiveInfo", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.JoinRequests DisableNATPunch
::Fusion::Protocol::JoinRequests Fusion::Protocol::JoinRequests::_get_DisableNATPunch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::JoinRequests::_get_DisableNATPunch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::JoinRequests>("Fusion.Protocol", "JoinRequests", "DisableNATPunch"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.JoinRequests DisableNATPunch
void Fusion::Protocol::JoinRequests::_set_DisableNATPunch(::Fusion::Protocol::JoinRequests value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::JoinRequests::_set_DisableNATPunch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "JoinRequests", "DisableNATPunch", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Fusion::Protocol::JoinRequests::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::JoinRequests::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.Join
#include "Fusion/Protocol/Join.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: Fusion.Protocol.BitStream
#include "Fusion/Protocol/BitStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Fusion.Protocol.JoinMessageType Type
[[deprecated("Use field access instead!")]] ::Fusion::Protocol::JoinMessageType& Fusion::Protocol::Join::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Join::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::Fusion::Protocol::JoinMessageType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Protocol.PluginGameMode GameMode
[[deprecated("Use field access instead!")]] ::Fusion::Protocol::PluginGameMode& Fusion::Protocol::Join::dyn_GameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Join::dyn_GameMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameMode"))->offset;
  return *reinterpret_cast<::Fusion::Protocol::PluginGameMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Protocol.PeerMode PeerMode
[[deprecated("Use field access instead!")]] ::Fusion::Protocol::PeerMode& Fusion::Protocol::Join::dyn_PeerMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Join::dyn_PeerMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PeerMode"))->offset;
  return *reinterpret_cast<::Fusion::Protocol::PeerMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Protocol.JoinRequests JoinRequests
[[deprecated("Use field access instead!")]] ::Fusion::Protocol::JoinRequests& Fusion::Protocol::Join::dyn_JoinRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Join::dyn_JoinRequests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JoinRequests"))->offset;
  return *reinterpret_cast<::Fusion::Protocol::JoinRequests*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] UniqueId
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Fusion::Protocol::Join::dyn_UniqueId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Join::dyn_UniqueId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UniqueId"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Protocol.Join.SerializeProtected
void Fusion::Protocol::Join::SerializeProtected(::Fusion::Protocol::BitStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Join::SerializeProtected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::Message*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Fusion.Protocol.Join.ToString
::StringW Fusion::Protocol::Join::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Join::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::Message*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.SyncType
#include "Fusion/Protocol/SyncType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.SyncType Request
::Fusion::Protocol::SyncType Fusion::Protocol::SyncType::_get_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::SyncType::_get_Request");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::SyncType>("Fusion.Protocol", "SyncType", "Request"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.SyncType Request
void Fusion::Protocol::SyncType::_set_Request(::Fusion::Protocol::SyncType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::SyncType::_set_Request");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "SyncType", "Request", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.SyncType Response
::Fusion::Protocol::SyncType Fusion::Protocol::SyncType::_get_Response() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::SyncType::_get_Response");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::SyncType>("Fusion.Protocol", "SyncType", "Response"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.SyncType Response
void Fusion::Protocol::SyncType::_set_Response(::Fusion::Protocol::SyncType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::SyncType::_set_Response");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "SyncType", "Response", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.SyncType Override
::Fusion::Protocol::SyncType Fusion::Protocol::SyncType::_get_Override() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::SyncType::_get_Override");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::SyncType>("Fusion.Protocol", "SyncType", "Override"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.SyncType Override
void Fusion::Protocol::SyncType::_set_Override(::Fusion::Protocol::SyncType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::SyncType::_set_Override");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "SyncType", "Override", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Fusion::Protocol::SyncType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::SyncType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.NetworkConfigSync
#include "Fusion/Protocol/NetworkConfigSync.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: Fusion.Protocol.BitStream
#include "Fusion/Protocol/BitStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Fusion.Protocol.SyncType Type
[[deprecated("Use field access instead!")]] ::Fusion::Protocol::SyncType& Fusion::Protocol::NetworkConfigSync::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::NetworkConfigSync::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::Fusion::Protocol::SyncType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String NetworkConfig
[[deprecated("Use field access instead!")]] ::StringW& Fusion::Protocol::NetworkConfigSync::dyn_NetworkConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::NetworkConfigSync::dyn_NetworkConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NetworkConfig"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Protocol.NetworkConfigSync.SerializeProtected
void Fusion::Protocol::NetworkConfigSync::SerializeProtected(::Fusion::Protocol::BitStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::NetworkConfigSync::SerializeProtected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::Message*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Fusion.Protocol.NetworkConfigSync.ToString
::StringW Fusion::Protocol::NetworkConfigSync::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::NetworkConfigSync::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::Message*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.ReflexiveInfo
#include "Fusion/Protocol/ReflexiveInfo.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: Fusion.Protocol.BitStream
#include "Fusion/Protocol/BitStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 ActorNr
[[deprecated("Use field access instead!")]] int& Fusion::Protocol::ReflexiveInfo::dyn_ActorNr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ReflexiveInfo::dyn_ActorNr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActorNr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetAddress PublicAddr
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetAddress& Fusion::Protocol::ReflexiveInfo::dyn_PublicAddr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ReflexiveInfo::dyn_PublicAddr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublicAddr"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetAddress*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetAddress PrivateAddr
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetAddress& Fusion::Protocol::ReflexiveInfo::dyn_PrivateAddr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ReflexiveInfo::dyn_PrivateAddr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrivateAddr"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetAddress*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.Stun.NATType NatType
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::Stun::NATType& Fusion::Protocol::ReflexiveInfo::dyn_NatType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ReflexiveInfo::dyn_NatType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NatType"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::Stun::NATType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] UniqueId
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Fusion::Protocol::ReflexiveInfo::dyn_UniqueId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ReflexiveInfo::dyn_UniqueId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UniqueId"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Protocol.ReflexiveInfo.SerializeProtected
void Fusion::Protocol::ReflexiveInfo::SerializeProtected(::Fusion::Protocol::BitStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ReflexiveInfo::SerializeProtected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::Message*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Fusion.Protocol.ReflexiveInfo.ToString
::StringW Fusion::Protocol::ReflexiveInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ReflexiveInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::Message*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.SnapshotType
#include "Fusion/Protocol/SnapshotType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.SnapshotType Invalid
::Fusion::Protocol::SnapshotType Fusion::Protocol::SnapshotType::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::SnapshotType::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::SnapshotType>("Fusion.Protocol", "SnapshotType", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.SnapshotType Invalid
void Fusion::Protocol::SnapshotType::_set_Invalid(::Fusion::Protocol::SnapshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::SnapshotType::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "SnapshotType", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.SnapshotType Data
::Fusion::Protocol::SnapshotType Fusion::Protocol::SnapshotType::_get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::SnapshotType::_get_Data");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::SnapshotType>("Fusion.Protocol", "SnapshotType", "Data"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.SnapshotType Data
void Fusion::Protocol::SnapshotType::_set_Data(::Fusion::Protocol::SnapshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::SnapshotType::_set_Data");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "SnapshotType", "Data", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.SnapshotType Confirmation
::Fusion::Protocol::SnapshotType Fusion::Protocol::SnapshotType::_get_Confirmation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::SnapshotType::_get_Confirmation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::SnapshotType>("Fusion.Protocol", "SnapshotType", "Confirmation"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.SnapshotType Confirmation
void Fusion::Protocol::SnapshotType::_set_Confirmation(::Fusion::Protocol::SnapshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::SnapshotType::_set_Confirmation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "SnapshotType", "Confirmation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Fusion::Protocol::SnapshotType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::SnapshotType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.Snapshot
#include "Fusion/Protocol/Snapshot.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: Fusion.Protocol.BitStream
#include "Fusion/Protocol/BitStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Tick>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::Protocol::Snapshot::dyn_$Tick$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::dyn_$Tick$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Tick>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <NetworkID>k__BackingField
[[deprecated("Use field access instead!")]] uint& Fusion::Protocol::Snapshot::dyn_$NetworkID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::dyn_$NetworkID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NetworkID>k__BackingField"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Protocol.SnapshotType <SnapshotType>k__BackingField
[[deprecated("Use field access instead!")]] ::Fusion::Protocol::SnapshotType& Fusion::Protocol::Snapshot::dyn_$SnapshotType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::dyn_$SnapshotType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SnapshotType>k__BackingField"))->offset;
  return *reinterpret_cast<::Fusion::Protocol::SnapshotType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <TotalSize>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::Protocol::Snapshot::dyn_$TotalSize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::dyn_$TotalSize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TotalSize>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <Data>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Fusion::Protocol::Snapshot::dyn_$Data$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::dyn_$Data$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Data>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 <CRC>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& Fusion::Protocol::Snapshot::dyn_$CRC$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::dyn_$CRC$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CRC>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <SnapshotBuffer>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Fusion::Protocol::Snapshot::dyn_$SnapshotBuffer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::dyn_$SnapshotBuffer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SnapshotBuffer>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <SnapshotSize>k__BackingField
[[deprecated("Use field access instead!")]] int& Fusion::Protocol::Snapshot::dyn_$SnapshotSize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::dyn_$SnapshotSize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SnapshotSize>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Protocol.Snapshot.get_Tick
int Fusion::Protocol::Snapshot::get_Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::get_Tick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.Snapshot.set_Tick
void Fusion::Protocol::Snapshot::set_Tick(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::set_Tick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Protocol.Snapshot.get_NetworkID
uint Fusion::Protocol::Snapshot::get_NetworkID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::get_NetworkID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NetworkID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.Snapshot.set_NetworkID
void Fusion::Protocol::Snapshot::set_NetworkID(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::set_NetworkID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NetworkID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Protocol.Snapshot.get_SnapshotType
::Fusion::Protocol::SnapshotType Fusion::Protocol::Snapshot::get_SnapshotType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::get_SnapshotType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SnapshotType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Protocol::SnapshotType, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.Snapshot.set_SnapshotType
void Fusion::Protocol::Snapshot::set_SnapshotType(::Fusion::Protocol::SnapshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::set_SnapshotType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SnapshotType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Protocol.Snapshot.get_TotalSize
int Fusion::Protocol::Snapshot::get_TotalSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::get_TotalSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TotalSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.Snapshot.set_TotalSize
void Fusion::Protocol::Snapshot::set_TotalSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::set_TotalSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TotalSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Protocol.Snapshot.get_IsValid
bool Fusion::Protocol::Snapshot::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.Snapshot.get_Data
::ArrayW<uint8_t> Fusion::Protocol::Snapshot::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::get_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.Snapshot.set_Data
void Fusion::Protocol::Snapshot::set_Data(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::set_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Protocol.Snapshot.get_CRC
uint64_t Fusion::Protocol::Snapshot::get_CRC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::get_CRC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CRC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.Snapshot.set_CRC
void Fusion::Protocol::Snapshot::set_CRC(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::set_CRC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CRC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Protocol.Snapshot.set_SnapshotBuffer
void Fusion::Protocol::Snapshot::set_SnapshotBuffer(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::set_SnapshotBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SnapshotBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Protocol.Snapshot.get_SnapshotSize
int Fusion::Protocol::Snapshot::get_SnapshotSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::get_SnapshotSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SnapshotSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.Snapshot.set_SnapshotSize
void Fusion::Protocol::Snapshot::set_SnapshotSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::set_SnapshotSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SnapshotSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Protocol.Snapshot.ComputeCRC
uint64_t Fusion::Protocol::Snapshot::ComputeCRC(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::ComputeCRC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCRC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, data);
}
// Autogenerated method: Fusion.Protocol.Snapshot.SetData
void Fusion::Protocol::Snapshot::SetData(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Fusion.Protocol.Snapshot.SerializeProtected
void Fusion::Protocol::Snapshot::SerializeProtected(::Fusion::Protocol::BitStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::SerializeProtected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::Message*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Fusion.Protocol.Snapshot.Clone
::Fusion::Protocol::Message* Fusion::Protocol::Snapshot::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::Message*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Protocol::Message*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Protocol.Snapshot.ToString
::StringW Fusion::Protocol::Snapshot::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Snapshot::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::Message*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.StartRequests
#include "Fusion/Protocol/StartRequests.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.StartRequests None
::Fusion::Protocol::StartRequests Fusion::Protocol::StartRequests::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::StartRequests::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::StartRequests>("Fusion.Protocol", "StartRequests", "None"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.StartRequests None
void Fusion::Protocol::StartRequests::_set_None(::Fusion::Protocol::StartRequests value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::StartRequests::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "StartRequests", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.StartRequests ConnectToShared
::Fusion::Protocol::StartRequests Fusion::Protocol::StartRequests::_get_ConnectToShared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::StartRequests::_get_ConnectToShared");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::StartRequests>("Fusion.Protocol", "StartRequests", "ConnectToShared"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.StartRequests ConnectToShared
void Fusion::Protocol::StartRequests::_set_ConnectToShared(::Fusion::Protocol::StartRequests value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::StartRequests::_set_ConnectToShared");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "StartRequests", "ConnectToShared", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.StartRequests WaitForReflexiveInfo
::Fusion::Protocol::StartRequests Fusion::Protocol::StartRequests::_get_WaitForReflexiveInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::StartRequests::_get_WaitForReflexiveInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::StartRequests>("Fusion.Protocol", "StartRequests", "WaitForReflexiveInfo"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.StartRequests WaitForReflexiveInfo
void Fusion::Protocol::StartRequests::_set_WaitForReflexiveInfo(::Fusion::Protocol::StartRequests value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::StartRequests::_set_WaitForReflexiveInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "StartRequests", "WaitForReflexiveInfo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Fusion::Protocol::StartRequests::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::StartRequests::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.Start
#include "Fusion/Protocol/Start.hpp"
// Including type: Fusion.Protocol.BitStream
#include "Fusion/Protocol/BitStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 RemoteServerID
[[deprecated("Use field access instead!")]] int& Fusion::Protocol::Start::dyn_RemoteServerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Start::dyn_RemoteServerID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RemoteServerID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Protocol.StartRequests StartRequests
[[deprecated("Use field access instead!")]] ::Fusion::Protocol::StartRequests& Fusion::Protocol::Start::dyn_StartRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Start::dyn_StartRequests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartRequests"))->offset;
  return *reinterpret_cast<::Fusion::Protocol::StartRequests*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Protocol.Start.SerializeProtected
void Fusion::Protocol::Start::SerializeProtected(::Fusion::Protocol::BitStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Start::SerializeProtected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::Message*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Fusion.Protocol.Start.ToString
::StringW Fusion::Protocol::Start::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Start::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Protocol::Message*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.PluginGameMode
#include "Fusion/Protocol/PluginGameMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.PluginGameMode Invalid
::Fusion::Protocol::PluginGameMode Fusion::Protocol::PluginGameMode::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::PluginGameMode::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::PluginGameMode>("Fusion.Protocol", "PluginGameMode", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.PluginGameMode Invalid
void Fusion::Protocol::PluginGameMode::_set_Invalid(::Fusion::Protocol::PluginGameMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::PluginGameMode::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "PluginGameMode", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.PluginGameMode ClientServer
::Fusion::Protocol::PluginGameMode Fusion::Protocol::PluginGameMode::_get_ClientServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::PluginGameMode::_get_ClientServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::PluginGameMode>("Fusion.Protocol", "PluginGameMode", "ClientServer"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.PluginGameMode ClientServer
void Fusion::Protocol::PluginGameMode::_set_ClientServer(::Fusion::Protocol::PluginGameMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::PluginGameMode::_set_ClientServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "PluginGameMode", "ClientServer", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.PluginGameMode Shared
::Fusion::Protocol::PluginGameMode Fusion::Protocol::PluginGameMode::_get_Shared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::PluginGameMode::_get_Shared");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::PluginGameMode>("Fusion.Protocol", "PluginGameMode", "Shared"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.PluginGameMode Shared
void Fusion::Protocol::PluginGameMode::_set_Shared(::Fusion::Protocol::PluginGameMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::PluginGameMode::_set_Shared");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "PluginGameMode", "Shared", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Fusion::Protocol::PluginGameMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::PluginGameMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.ProtocolSerializer
#include "Fusion/Protocol/ProtocolSerializer.hpp"
// Including type: Fusion.Protocol.BitStream
#include "Fusion/Protocol/BitStream.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Fusion.Protocol.Message
#include "Fusion/Protocol/Message.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Fusion.Protocol.BitStream _writeStream
[[deprecated("Use field access instead!")]] ::Fusion::Protocol::BitStream*& Fusion::Protocol::ProtocolSerializer::dyn__writeStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolSerializer::dyn__writeStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeStream"))->offset;
  return *reinterpret_cast<::Fusion::Protocol::BitStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Fusion.Protocol.BitStream _readStream
[[deprecated("Use field access instead!")]] ::Fusion::Protocol::BitStream*& Fusion::Protocol::ProtocolSerializer::dyn__readStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolSerializer::dyn__readStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readStream"))->offset;
  return *reinterpret_cast<::Fusion::Protocol::BitStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Byte> _typeToId
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Type*, uint8_t>*& Fusion::Protocol::ProtocolSerializer::dyn__typeToId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolSerializer::dyn__typeToId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeToId"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Type*, uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Byte,Fusion.Protocol.Message> _idToType
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint8_t, ::Fusion::Protocol::Message*>*& Fusion::Protocol::ProtocolSerializer::dyn__idToType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolSerializer::dyn__idToType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_idToType"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint8_t, ::Fusion::Protocol::Message*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Protocol.ProtocolSerializer.ConvertToMessages
bool Fusion::Protocol::ProtocolSerializer::ConvertToMessages(::ArrayW<uint8_t> data, ::System::Collections::Generic::List_1<::Fusion::Protocol::Message*>* messages) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolSerializer::ConvertToMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(messages)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, messages);
}
// Autogenerated method: Fusion.Protocol.ProtocolSerializer.ConvertToBuffer
bool Fusion::Protocol::ProtocolSerializer::ConvertToBuffer(::Fusion::Protocol::Message* message, ByRef<::Fusion::Protocol::BitStream*> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolSerializer::ConvertToBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractIndependentType<::Fusion::Protocol::BitStream*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message, byref(buffer));
}
// Autogenerated method: Fusion.Protocol.ProtocolSerializer.RegisterProtocolMsg
void Fusion::Protocol::ProtocolSerializer::RegisterProtocolMsg(uint8_t id, ::Fusion::Protocol::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolSerializer::RegisterProtocolMsg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterProtocolMsg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, message);
}
// Autogenerated method: Fusion.Protocol.ProtocolSerializer.PackNext
bool Fusion::Protocol::ProtocolSerializer::PackNext(::Fusion::Protocol::Message* msg, ::Fusion::Protocol::BitStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolSerializer::PackNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, msg, stream);
}
// Autogenerated method: Fusion.Protocol.ProtocolSerializer.ReadNext
bool Fusion::Protocol::ProtocolSerializer::ReadNext(::Fusion::Protocol::BitStream* stream, ByRef<::Fusion::Protocol::Message*> msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolSerializer::ReadNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::Fusion::Protocol::Message*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stream, byref(msg));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.Versioning
#include "Fusion/Protocol/Versioning.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version InvalidVersion
::System::Version* Fusion::Protocol::Versioning::_get_InvalidVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Versioning::_get_InvalidVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("Fusion.Protocol", "Versioning", "InvalidVersion"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version InvalidVersion
void Fusion::Protocol::Versioning::_set_InvalidVersion(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Versioning::_set_InvalidVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "Versioning", "InvalidVersion", value));
}
// Autogenerated method: Fusion.Protocol.Versioning.get_GetCurrentVersion
::System::Version* Fusion::Protocol::Versioning::get_GetCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Versioning::get_GetCurrentVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Protocol", "Versioning", "get_GetCurrentVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Fusion.Protocol.Versioning..cctor
void Fusion::Protocol::Versioning::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::Versioning::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Protocol", "Versioning", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Protocol.ProtocolMessageVersion
#include "Fusion/Protocol/ProtocolMessageVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.ProtocolMessageVersion Invalid
::Fusion::Protocol::ProtocolMessageVersion Fusion::Protocol::ProtocolMessageVersion::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolMessageVersion::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::ProtocolMessageVersion>("Fusion.Protocol", "ProtocolMessageVersion", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.ProtocolMessageVersion Invalid
void Fusion::Protocol::ProtocolMessageVersion::_set_Invalid(::Fusion::Protocol::ProtocolMessageVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolMessageVersion::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "ProtocolMessageVersion", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.ProtocolMessageVersion V1_0_0
::Fusion::Protocol::ProtocolMessageVersion Fusion::Protocol::ProtocolMessageVersion::_get_V1_0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolMessageVersion::_get_V1_0_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::ProtocolMessageVersion>("Fusion.Protocol", "ProtocolMessageVersion", "V1_0_0"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.ProtocolMessageVersion V1_0_0
void Fusion::Protocol::ProtocolMessageVersion::_set_V1_0_0(::Fusion::Protocol::ProtocolMessageVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolMessageVersion::_set_V1_0_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "ProtocolMessageVersion", "V1_0_0", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.ProtocolMessageVersion V1_1_0
::Fusion::Protocol::ProtocolMessageVersion Fusion::Protocol::ProtocolMessageVersion::_get_V1_1_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolMessageVersion::_get_V1_1_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::ProtocolMessageVersion>("Fusion.Protocol", "ProtocolMessageVersion", "V1_1_0"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.ProtocolMessageVersion V1_1_0
void Fusion::Protocol::ProtocolMessageVersion::_set_V1_1_0(::Fusion::Protocol::ProtocolMessageVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolMessageVersion::_set_V1_1_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "ProtocolMessageVersion", "V1_1_0", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.ProtocolMessageVersion V1_2_0
::Fusion::Protocol::ProtocolMessageVersion Fusion::Protocol::ProtocolMessageVersion::_get_V1_2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolMessageVersion::_get_V1_2_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::ProtocolMessageVersion>("Fusion.Protocol", "ProtocolMessageVersion", "V1_2_0"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.ProtocolMessageVersion V1_2_0
void Fusion::Protocol::ProtocolMessageVersion::_set_V1_2_0(::Fusion::Protocol::ProtocolMessageVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolMessageVersion::_set_V1_2_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "ProtocolMessageVersion", "V1_2_0", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.ProtocolMessageVersion V1_2_1
::Fusion::Protocol::ProtocolMessageVersion Fusion::Protocol::ProtocolMessageVersion::_get_V1_2_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolMessageVersion::_get_V1_2_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::ProtocolMessageVersion>("Fusion.Protocol", "ProtocolMessageVersion", "V1_2_1"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.ProtocolMessageVersion V1_2_1
void Fusion::Protocol::ProtocolMessageVersion::_set_V1_2_1(::Fusion::Protocol::ProtocolMessageVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolMessageVersion::_set_V1_2_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "ProtocolMessageVersion", "V1_2_1", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.ProtocolMessageVersion V1_2_2
::Fusion::Protocol::ProtocolMessageVersion Fusion::Protocol::ProtocolMessageVersion::_get_V1_2_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolMessageVersion::_get_V1_2_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::ProtocolMessageVersion>("Fusion.Protocol", "ProtocolMessageVersion", "V1_2_2"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.ProtocolMessageVersion V1_2_2
void Fusion::Protocol::ProtocolMessageVersion::_set_V1_2_2(::Fusion::Protocol::ProtocolMessageVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolMessageVersion::_set_V1_2_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "ProtocolMessageVersion", "V1_2_2", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.ProtocolMessageVersion V1_2_3
::Fusion::Protocol::ProtocolMessageVersion Fusion::Protocol::ProtocolMessageVersion::_get_V1_2_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolMessageVersion::_get_V1_2_3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::ProtocolMessageVersion>("Fusion.Protocol", "ProtocolMessageVersion", "V1_2_3"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.ProtocolMessageVersion V1_2_3
void Fusion::Protocol::ProtocolMessageVersion::_set_V1_2_3(::Fusion::Protocol::ProtocolMessageVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolMessageVersion::_set_V1_2_3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "ProtocolMessageVersion", "V1_2_3", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Protocol.ProtocolMessageVersion LATEST
::Fusion::Protocol::ProtocolMessageVersion Fusion::Protocol::ProtocolMessageVersion::_get_LATEST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolMessageVersion::_get_LATEST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Protocol::ProtocolMessageVersion>("Fusion.Protocol", "ProtocolMessageVersion", "LATEST"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Protocol.ProtocolMessageVersion LATEST
void Fusion::Protocol::ProtocolMessageVersion::_set_LATEST(::Fusion::Protocol::ProtocolMessageVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolMessageVersion::_set_LATEST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Protocol", "ProtocolMessageVersion", "LATEST", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Fusion::Protocol::ProtocolMessageVersion::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Protocol::ProtocolMessageVersion::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.INetBitWriteStream
#include "Fusion/Sockets/INetBitWriteStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Fusion.Sockets.INetBitWriteStream.get_OffsetBits
int Fusion::Sockets::INetBitWriteStream::get_OffsetBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetBitWriteStream::get_OffsetBits");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetBitWriteStream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.INetBitWriteStream.WriteInt32
void Fusion::Sockets::INetBitWriteStream::WriteInt32(int value, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetBitWriteStream::WriteInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetBitWriteStream*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, bits);
}
// Autogenerated method: Fusion.Sockets.INetBitWriteStream.WriteInt32VarLength
void Fusion::Sockets::INetBitWriteStream::WriteInt32VarLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetBitWriteStream::WriteInt32VarLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetBitWriteStream*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Sockets.INetBitWriteStream.WriteInt32VarLength
void Fusion::Sockets::INetBitWriteStream::WriteInt32VarLength(int value, int blockSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetBitWriteStream::WriteInt32VarLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetBitWriteStream*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, blockSize);
}
// Autogenerated method: Fusion.Sockets.INetBitWriteStream.WriteUInt64VarLength
void Fusion::Sockets::INetBitWriteStream::WriteUInt64VarLength(uint64_t value, int blockSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetBitWriteStream::WriteUInt64VarLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetBitWriteStream*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, blockSize);
}
// Autogenerated method: Fusion.Sockets.INetBitWriteStream.WriteBoolean
bool Fusion::Sockets::INetBitWriteStream::WriteBoolean(bool b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetBitWriteStream::WriteBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetBitWriteStream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, b);
}
// Autogenerated method: Fusion.Sockets.INetBitWriteStream.WriteBytesAligned
void Fusion::Sockets::INetBitWriteStream::WriteBytesAligned(void* buffer, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetBitWriteStream::WriteBytesAligned");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetBitWriteStream*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, length);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.Sockets.NetAddress
#include "Fusion/Sockets/NetAddress.hpp"
// Including type: Fusion.Sockets.NetAddress/SubnetMask
#include "Fusion/Sockets/NetAddress_SubnetMask.hpp"
// Including type: Fusion.Protocol.BitStream
#include "Fusion/Protocol/BitStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static Fusion.Sockets.NetAddress AnyIPv4Addr
::Fusion::Sockets::NetAddress Fusion::Sockets::NetAddress::_get_AnyIPv4Addr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::_get_AnyIPv4Addr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetAddress>("Fusion.Sockets", "NetAddress", "AnyIPv4Addr"));
}
// Autogenerated static field setter
// Set static field: static Fusion.Sockets.NetAddress AnyIPv4Addr
void Fusion::Sockets::NetAddress::_set_AnyIPv4Addr(::Fusion::Sockets::NetAddress value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::_set_AnyIPv4Addr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetAddress", "AnyIPv4Addr", value));
}
// Autogenerated static field getter
// Get static field: static Fusion.Sockets.NetAddress AnyIPv6Addr
::Fusion::Sockets::NetAddress Fusion::Sockets::NetAddress::_get_AnyIPv6Addr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::_get_AnyIPv6Addr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetAddress>("Fusion.Sockets", "NetAddress", "AnyIPv6Addr"));
}
// Autogenerated static field setter
// Set static field: static Fusion.Sockets.NetAddress AnyIPv6Addr
void Fusion::Sockets::NetAddress::_set_AnyIPv6Addr(::Fusion::Sockets::NetAddress value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::_set_AnyIPv6Addr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetAddress", "AnyIPv6Addr", value));
}
// Autogenerated instance field getter
// Get instance field: NanoSockets.Address NativeAddress
[[deprecated("Use field access instead!")]] ::NanoSockets::Address& Fusion::Sockets::NetAddress::dyn_NativeAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::dyn_NativeAddress");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NativeAddress"))->offset;
  return *reinterpret_cast<::NanoSockets::Address*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 Block0
[[deprecated("Use field access instead!")]] uint64_t& Fusion::Sockets::NetAddress::dyn_Block0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::dyn_Block0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Block0"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 Block1
[[deprecated("Use field access instead!")]] uint64_t& Fusion::Sockets::NetAddress::dyn_Block1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::dyn_Block1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Block1"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 Block2
[[deprecated("Use field access instead!")]] uint64_t& Fusion::Sockets::NetAddress::dyn_Block2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::dyn_Block2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Block2"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _actorId
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetAddress::dyn__actorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::dyn__actorId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actorId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetAddress.get_ActorId
int Fusion::Sockets::NetAddress::get_ActorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::get_ActorId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ActorId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetAddress.get_IsRelayAddr
bool Fusion::Sockets::NetAddress::get_IsRelayAddr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::get_IsRelayAddr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsRelayAddr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetAddress.get_IsIPv6
bool Fusion::Sockets::NetAddress::get_IsIPv6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::get_IsIPv6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsIPv6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetAddress.get_IsValid
bool Fusion::Sockets::NetAddress::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetAddress.FromActorId
::Fusion::Sockets::NetAddress Fusion::Sockets::NetAddress::FromActorId(int actorId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::FromActorId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetAddress", "FromActorId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorId)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetAddress, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, actorId);
}
// Autogenerated method: Fusion.Sockets.NetAddress.Hash64
uint64_t Fusion::Sockets::NetAddress::Hash64(::Fusion::Sockets::NetAddress address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::Hash64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetAddress", "Hash64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address);
}
// Autogenerated method: Fusion.Sockets.NetAddress.Any
::Fusion::Sockets::NetAddress Fusion::Sockets::NetAddress::Any(uint16_t port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::Any");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetAddress", "Any", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetAddress, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, port);
}
// Autogenerated method: Fusion.Sockets.NetAddress.CreateFromIpPort
::Fusion::Sockets::NetAddress Fusion::Sockets::NetAddress::CreateFromIpPort(::StringW ip, uint16_t port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::CreateFromIpPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetAddress", "CreateFromIpPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ip), ::il2cpp_utils::ExtractType(port)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetAddress, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ip, port);
}
// Autogenerated method: Fusion.Sockets.NetAddress.Serialize
void Fusion::Sockets::NetAddress::Serialize(::Fusion::Protocol::BitStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Fusion.Sockets.NetAddress.Equals
bool Fusion::Sockets::NetAddress::Equals(::Fusion::Sockets::NetAddress other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetAddress), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Fusion.Sockets.NetAddress..cctor
void Fusion::Sockets::NetAddress::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetAddress", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetAddress.Equals
bool Fusion::Sockets::NetAddress::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Fusion.Sockets.NetAddress.GetHashCode
int Fusion::Sockets::NetAddress::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetAddress.ToString
::StringW Fusion::Sockets::NetAddress::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetAddress/SubnetMask
#include "Fusion/Sockets/NetAddress_SubnetMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Fusion.Sockets.NetAddress[] <SubnetMasks>k__BackingField
::ArrayW<::Fusion::Sockets::NetAddress> Fusion::Sockets::NetAddress::SubnetMask::_get_$SubnetMasks$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::SubnetMask::_get_$SubnetMasks$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::ArrayW<::Fusion::Sockets::NetAddress>>("Fusion.Sockets", "NetAddress/SubnetMask", "<SubnetMasks>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Fusion.Sockets.NetAddress[] <SubnetMasks>k__BackingField
void Fusion::Sockets::NetAddress::SubnetMask::_set_$SubnetMasks$k__BackingField(::ArrayW<::Fusion::Sockets::NetAddress> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::SubnetMask::_set_$SubnetMasks$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetAddress/SubnetMask", "<SubnetMasks>k__BackingField", value));
}
// Autogenerated method: Fusion.Sockets.NetAddress/SubnetMask.get_SubnetMasks
::ArrayW<::Fusion::Sockets::NetAddress> Fusion::Sockets::NetAddress::SubnetMask::get_SubnetMasks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::SubnetMask::get_SubnetMasks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetAddress/SubnetMask", "get_SubnetMasks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Fusion::Sockets::NetAddress>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetAddress/SubnetMask.IsSameSubNet
bool Fusion::Sockets::NetAddress::SubnetMask::IsSameSubNet(::Fusion::Sockets::NetAddress addressA, ::Fusion::Sockets::NetAddress addressB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::SubnetMask::IsSameSubNet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetAddress/SubnetMask", "IsSameSubNet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(addressA), ::il2cpp_utils::ExtractType(addressB)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, addressA, addressB);
}
// Autogenerated method: Fusion.Sockets.NetAddress/SubnetMask.GetNetworkAddress
::Fusion::Sockets::NetAddress Fusion::Sockets::NetAddress::SubnetMask::GetNetworkAddress(::Fusion::Sockets::NetAddress netAddress, ::Fusion::Sockets::NetAddress subnetMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::SubnetMask::GetNetworkAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetAddress/SubnetMask", "GetNetworkAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(netAddress), ::il2cpp_utils::ExtractType(subnetMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetAddress, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, netAddress, subnetMask);
}
// Autogenerated method: Fusion.Sockets.NetAddress/SubnetMask..cctor
void Fusion::Sockets::NetAddress::SubnetMask::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetAddress::SubnetMask::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetAddress/SubnetMask", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetBitBuffer
#include "Fusion/Sockets/NetBitBuffer.hpp"
// Including type: Fusion.Sockets.NetBitBufferBlock
#include "Fusion/Sockets/NetBitBufferBlock.hpp"
// Including type: Fusion.Sockets.NetPacketType
#include "Fusion/Sockets/NetPacketType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Fusion.LogOptions
#include "Fusion/LogOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 BITCOUNT
int Fusion::Sockets::NetBitBuffer::_get_BITCOUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::_get_BITCOUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.Sockets", "NetBitBuffer", "BITCOUNT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BITCOUNT
void Fusion::Sockets::NetBitBuffer::_set_BITCOUNT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::_set_BITCOUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetBitBuffer", "BITCOUNT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 USEDMASK
int Fusion::Sockets::NetBitBuffer::_get_USEDMASK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::_get_USEDMASK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.Sockets", "NetBitBuffer", "USEDMASK"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 USEDMASK
void Fusion::Sockets::NetBitBuffer::_set_USEDMASK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::_set_USEDMASK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetBitBuffer", "USEDMASK", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 INDEXSHIFT
int Fusion::Sockets::NetBitBuffer::_get_INDEXSHIFT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::_get_INDEXSHIFT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.Sockets", "NetBitBuffer", "INDEXSHIFT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 INDEXSHIFT
void Fusion::Sockets::NetBitBuffer::_set_INDEXSHIFT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::_set_INDEXSHIFT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetBitBuffer", "INDEXSHIFT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 BYTESHIFT
int Fusion::Sockets::NetBitBuffer::_get_BYTESHIFT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::_get_BYTESHIFT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.Sockets", "NetBitBuffer", "BYTESHIFT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BYTESHIFT
void Fusion::Sockets::NetBitBuffer::_set_BYTESHIFT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::_set_BYTESHIFT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetBitBuffer", "BYTESHIFT", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt64 MAXVALUE
uint64_t Fusion::Sockets::NetBitBuffer::_get_MAXVALUE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::_get_MAXVALUE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("Fusion.Sockets", "NetBitBuffer", "MAXVALUE"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt64 MAXVALUE
void Fusion::Sockets::NetBitBuffer::_set_MAXVALUE(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::_set_MAXVALUE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetBitBuffer", "MAXVALUE", value));
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetAddress Address
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetAddress& Fusion::Sockets::NetBitBuffer::dyn_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::dyn_Address");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Address"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetAddress*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Mtu
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetBitBuffer::dyn_Mtu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::dyn_Mtu");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Mtu"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.NetBitBuffer* Prev
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetBitBuffer*& Fusion::Sockets::NetBitBuffer::dyn_Prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::dyn_Prev");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Prev"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetBitBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.NetBitBuffer* Next
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetBitBuffer*& Fusion::Sockets::NetBitBuffer::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::dyn_Next");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetBitBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.NetBitBufferBlock* _block
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetBitBufferBlock*& Fusion::Sockets::NetBitBuffer::dyn__block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::dyn__block");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_block"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetBitBufferBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.NetBitBuffer* _allocNext
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetBitBuffer*& Fusion::Sockets::NetBitBuffer::dyn__allocNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::dyn__allocNext");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allocNext"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetBitBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _group
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetBitBuffer::dyn__group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::dyn__group");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_group"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64* _data
[[deprecated("Use field access instead!")]] uint64_t*& Fusion::Sockets::NetBitBuffer::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::dyn__data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<uint64_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64* _dataBlockOriginal
[[deprecated("Use field access instead!")]] uint64_t*& Fusion::Sockets::NetBitBuffer::dyn__dataBlockOriginal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::dyn__dataBlockOriginal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataBlockOriginal"))->offset;
  return *reinterpret_cast<uint64_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _offsetBits
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetBitBuffer::dyn__offsetBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::dyn__offsetBits");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offsetBits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lengthBits
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetBitBuffer::dyn__lengthBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::dyn__lengthBits");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lengthBits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lengthBytes
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetBitBuffer::dyn__lengthBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::dyn__lengthBytes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lengthBytes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.get_Group
int16_t Fusion::Sockets::NetBitBuffer::get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::get_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.set_Group
void Fusion::Sockets::NetBitBuffer::set_Group(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::set_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.get_Data
uint64_t* Fusion::Sockets::NetBitBuffer::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::get_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.set_Data
void Fusion::Sockets::NetBitBuffer::set_Data(uint64_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::set_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.get_LengthBits
int Fusion::Sockets::NetBitBuffer::get_LengthBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::get_LengthBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LengthBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.get_BytesRemaining
int Fusion::Sockets::NetBitBuffer::get_BytesRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::get_BytesRemaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_BytesRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.get_LengthBytes
int Fusion::Sockets::NetBitBuffer::get_LengthBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::get_LengthBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LengthBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.set_LengthBytes
void Fusion::Sockets::NetBitBuffer::set_LengthBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::set_LengthBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_LengthBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.get_OffsetBits
int Fusion::Sockets::NetBitBuffer::get_OffsetBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::get_OffsetBits");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetBitBuffer), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.set_OffsetBits
void Fusion::Sockets::NetBitBuffer::set_OffsetBits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::set_OffsetBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_OffsetBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.get_OverflowOrLessThanOneByteRemaining
bool Fusion::Sockets::NetBitBuffer::get_OverflowOrLessThanOneByteRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::get_OverflowOrLessThanOneByteRemaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_OverflowOrLessThanOneByteRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.get_DoneOrOverflow
bool Fusion::Sockets::NetBitBuffer::get_DoneOrOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::get_DoneOrOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DoneOrOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.get_PacketType
::Fusion::Sockets::NetPacketType Fusion::Sockets::NetBitBuffer::get_PacketType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::get_PacketType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_PacketType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetPacketType, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.set_PacketType
void Fusion::Sockets::NetBitBuffer::set_PacketType(::Fusion::Sockets::NetPacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::set_PacketType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_PacketType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.ReplaceDataFromBlockWithTemp
void Fusion::Sockets::NetBitBuffer::ReplaceDataFromBlockWithTemp(int tempSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::ReplaceDataFromBlockWithTemp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReplaceDataFromBlockWithTemp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tempSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tempSize);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.Allocate
::Fusion::Sockets::NetBitBuffer* Fusion::Sockets::NetBitBuffer::Allocate(int group, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::Allocate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetBitBuffer", "Allocate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetBitBuffer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, group, size);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.Release
void Fusion::Sockets::NetBitBuffer::Release(::Fusion::Sockets::NetBitBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetBitBuffer", "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.SetBufferLengthBytes
void Fusion::Sockets::NetBitBuffer::SetBufferLengthBytes(uint64_t* buffer, int lenghtInBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::SetBufferLengthBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetBufferLengthBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(lenghtInBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, lenghtInBytes);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.WriteBoolean
bool Fusion::Sockets::NetBitBuffer::WriteBoolean(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::WriteBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetBitBuffer), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.ReadBoolean
bool Fusion::Sockets::NetBitBuffer::ReadBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::ReadBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.WriteByte
void Fusion::Sockets::NetBitBuffer::WriteByte(uint8_t value, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::WriteByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(bits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, bits);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.WriteInt32
void Fusion::Sockets::NetBitBuffer::WriteInt32(int value, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::WriteInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetBitBuffer), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, bits);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.ReadInt32
int Fusion::Sockets::NetBitBuffer::ReadInt32(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::ReadInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bits);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.WriteUInt32
void Fusion::Sockets::NetBitBuffer::WriteUInt32(uint value, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::WriteUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(bits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, bits);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.CanRead
bool Fusion::Sockets::NetBitBuffer::CanRead(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::CanRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bits);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.get_OffsetBytes
int Fusion::Sockets::NetBitBuffer::get_OffsetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::get_OffsetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_OffsetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.PadToByteBoundary
void Fusion::Sockets::NetBitBuffer::PadToByteBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::PadToByteBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PadToByteBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.GetDataPointer
uint8_t* Fusion::Sockets::NetBitBuffer::GetDataPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::GetDataPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDataPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.PadToByteBoundaryAndGetPtr
uint8_t* Fusion::Sockets::NetBitBuffer::PadToByteBoundaryAndGetPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::PadToByteBoundaryAndGetPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PadToByteBoundaryAndGetPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.CheckBitCount
bool Fusion::Sockets::NetBitBuffer::CheckBitCount(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::CheckBitCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckBitCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, count);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.SeekToByteBoundary
void Fusion::Sockets::NetBitBuffer::SeekToByteBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::SeekToByteBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SeekToByteBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.WriteBytesAligned
void Fusion::Sockets::NetBitBuffer::WriteBytesAligned(void* buffer, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::WriteBytesAligned");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetBitBuffer), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, length);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.ReadBytesAligned
void Fusion::Sockets::NetBitBuffer::ReadBytesAligned(void* buffer, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::ReadBytesAligned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadBytesAligned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, length);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.WriteInt64VarLength
void Fusion::Sockets::NetBitBuffer::WriteInt64VarLength(int64_t value, int blockSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::WriteInt64VarLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteInt64VarLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(blockSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, blockSize);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.WriteInt32VarLength
void Fusion::Sockets::NetBitBuffer::WriteInt32VarLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::WriteInt32VarLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetBitBuffer), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.WriteInt32VarLength
void Fusion::Sockets::NetBitBuffer::WriteInt32VarLength(int value, int blockSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::WriteInt32VarLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetBitBuffer), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, blockSize);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.ReadInt32VarLength
int Fusion::Sockets::NetBitBuffer::ReadInt32VarLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::ReadInt32VarLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadInt32VarLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.ReadInt64VarLength
int64_t Fusion::Sockets::NetBitBuffer::ReadInt64VarLength(int blockSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::ReadInt64VarLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadInt64VarLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blockSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, blockSize);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.ReadInt32VarLength
int Fusion::Sockets::NetBitBuffer::ReadInt32VarLength(int blockSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::ReadInt32VarLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadInt32VarLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blockSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, blockSize);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.ReadUInt32VarLength
uint Fusion::Sockets::NetBitBuffer::ReadUInt32VarLength(int blockSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::ReadUInt32VarLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadUInt32VarLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blockSize)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, blockSize);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.ReadUInt64VarLength
uint64_t Fusion::Sockets::NetBitBuffer::ReadUInt64VarLength(int blockSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::ReadUInt64VarLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadUInt64VarLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blockSize)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, blockSize);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.WriteUInt32VarLength
void Fusion::Sockets::NetBitBuffer::WriteUInt32VarLength(uint value, int blockSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::WriteUInt32VarLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteUInt32VarLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(blockSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, blockSize);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.WriteUInt64VarLength
void Fusion::Sockets::NetBitBuffer::WriteUInt64VarLength(uint64_t value, int blockSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::WriteUInt64VarLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetBitBuffer), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, blockSize);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.WriteUInt32VarLength
void Fusion::Sockets::NetBitBuffer::WriteUInt32VarLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::WriteUInt32VarLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteUInt32VarLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.ReadUInt32VarLength
uint Fusion::Sockets::NetBitBuffer::ReadUInt32VarLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::ReadUInt32VarLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadUInt32VarLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.ReadUInt32
uint Fusion::Sockets::NetBitBuffer::ReadUInt32(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::ReadUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, bits);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.WriteUInt64
void Fusion::Sockets::NetBitBuffer::WriteUInt64(uint64_t value, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::WriteUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(bits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, bits);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.ReadUInt64
uint64_t Fusion::Sockets::NetBitBuffer::ReadUInt64(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::ReadUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, bits);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.WriteSingle
void Fusion::Sockets::NetBitBuffer::WriteSingle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::WriteSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.ReadSingle
float Fusion::Sockets::NetBitBuffer::ReadSingle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::ReadSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.WriteDouble
void Fusion::Sockets::NetBitBuffer::WriteDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::WriteDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.ReadDouble
double Fusion::Sockets::NetBitBuffer::ReadDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::ReadDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.WriteInt32AtOffset
void Fusion::Sockets::NetBitBuffer::WriteInt32AtOffset(int value, int offset, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::WriteInt32AtOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteInt32AtOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(bits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, offset, bits);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.Write
void Fusion::Sockets::NetBitBuffer::Write(uint64_t value, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(bits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, bits);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.WriteSlow
void Fusion::Sockets::NetBitBuffer::WriteSlow(uint64_t value, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::WriteSlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteSlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(bits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, bits);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.Read
uint64_t Fusion::Sockets::NetBitBuffer::Read(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, bits);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.Peek
uint64_t Fusion::Sockets::NetBitBuffer::Peek(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::Peek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, bits);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.Advance
int Fusion::Sockets::NetBitBuffer::Advance(int bits, bool writing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::Advance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Advance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(writing)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bits, writing);
}
// Autogenerated method: Fusion.Sockets.NetBitBuffer.Fusion.ILogBuilder.BuildLogMessage
void Fusion::Sockets::NetBitBuffer::Fusion_ILogBuilder_BuildLogMessage(::System::Text::StringBuilder* builder, ::StringW message, ByRef<::Fusion::LogOptions> options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBuffer::Fusion.ILogBuilder.BuildLogMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetBitBuffer), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, builder, message, byref(options));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetBitBufferBlock
#include "Fusion/Sockets/NetBitBufferBlock.hpp"
// Including type: Fusion.Sockets.NetBitBuffer
#include "Fusion/Sockets/NetBitBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _packetSize
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetBitBufferBlock::dyn__packetSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferBlock::dyn__packetSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packetSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _freeHead
[[deprecated("Use field access instead!")]] ::System::IntPtr& Fusion::Sockets::NetBitBufferBlock::dyn__freeHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferBlock::dyn__freeHead");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_freeHead"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetBitBufferBlock* _self
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetBitBufferBlock*& Fusion::Sockets::NetBitBufferBlock::dyn__self() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferBlock::dyn__self");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_self"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetBitBufferBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetBitBuffer* _allocatedHead
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetBitBuffer*& Fusion::Sockets::NetBitBufferBlock::dyn__allocatedHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferBlock::dyn__allocatedHead");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allocatedHead"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetBitBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferBlock.Dispose
void Fusion::Sockets::NetBitBufferBlock::Dispose(::Fusion::Sockets::NetBitBufferBlock* block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferBlock::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetBitBufferBlock", "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, block);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferBlock.Create
::Fusion::Sockets::NetBitBufferBlock* Fusion::Sockets::NetBitBufferBlock::Create(int packetSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferBlock::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetBitBufferBlock", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packetSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetBitBufferBlock*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packetSize);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferBlock.Release
void Fusion::Sockets::NetBitBufferBlock::Release(::Fusion::Sockets::NetBitBuffer* ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferBlock::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ptr);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferBlock.TryAcquire
::Fusion::Sockets::NetBitBuffer* Fusion::Sockets::NetBitBufferBlock::TryAcquire() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferBlock::TryAcquire");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryAcquire", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetBitBuffer*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferBlock.TryAcquire
bool Fusion::Sockets::NetBitBufferBlock::TryAcquire(ByRef<::Fusion::Sockets::NetBitBuffer*> ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferBlock::TryAcquire");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryAcquire", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Fusion::Sockets::NetBitBuffer*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ptr));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetBitBufferNull
#include "Fusion/Sockets/NetBitBufferNull.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _offsetBits
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetBitBufferNull::dyn__offsetBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferNull::dyn__offsetBits");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offsetBits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferNull.get_OffsetBits
int Fusion::Sockets::NetBitBufferNull::get_OffsetBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferNull::get_OffsetBits");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetBitBufferNull), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferNull.set_OffsetBits
void Fusion::Sockets::NetBitBufferNull::set_OffsetBits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferNull::set_OffsetBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_OffsetBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferNull.PadToByteBoundary
void Fusion::Sockets::NetBitBufferNull::PadToByteBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferNull::PadToByteBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PadToByteBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferNull.WriteByte
void Fusion::Sockets::NetBitBufferNull::WriteByte(uint8_t value, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferNull::WriteByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(bits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, bits);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferNull.WriteInt32
void Fusion::Sockets::NetBitBufferNull::WriteInt32(int value, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferNull::WriteInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetBitBufferNull), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, bits);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferNull.WriteInt32VarLength
void Fusion::Sockets::NetBitBufferNull::WriteInt32VarLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferNull::WriteInt32VarLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetBitBufferNull), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferNull.WriteInt32VarLength
void Fusion::Sockets::NetBitBufferNull::WriteInt32VarLength(int value, int blockSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferNull::WriteInt32VarLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetBitBufferNull), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, blockSize);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferNull.WriteUInt32VarLength
void Fusion::Sockets::NetBitBufferNull::WriteUInt32VarLength(uint value, int blockSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferNull::WriteUInt32VarLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteUInt32VarLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(blockSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, blockSize);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferNull.WriteUInt64VarLength
void Fusion::Sockets::NetBitBufferNull::WriteUInt64VarLength(uint64_t value, int blockSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferNull::WriteUInt64VarLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetBitBufferNull), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, blockSize);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferNull.WriteUInt32VarLength
void Fusion::Sockets::NetBitBufferNull::WriteUInt32VarLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferNull::WriteUInt32VarLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteUInt32VarLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferNull.WriteBoolean
bool Fusion::Sockets::NetBitBufferNull::WriteBoolean(bool b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferNull::WriteBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetBitBufferNull), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, b);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferNull.WriteBytesAligned
void Fusion::Sockets::NetBitBufferNull::WriteBytesAligned(void* buffer, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferNull::WriteBytesAligned");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetBitBufferNull), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, length);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetBitBufferSerializer
#include "Fusion/Sockets/NetBitBufferSerializer.hpp"
// Including type: Fusion.Sockets.NetBitBuffer
#include "Fusion/Sockets/NetBitBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _write
[[deprecated("Use field access instead!")]] bool& Fusion::Sockets::NetBitBufferSerializer::dyn__write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferSerializer::dyn__write");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_write"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetBitBuffer* _buffer
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetBitBuffer*& Fusion::Sockets::NetBitBufferSerializer::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferSerializer::dyn__buffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetBitBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferSerializer.get_Writing
bool Fusion::Sockets::NetBitBufferSerializer::get_Writing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferSerializer::get_Writing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Writing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferSerializer.get_Buffer
::Fusion::Sockets::NetBitBuffer* Fusion::Sockets::NetBitBufferSerializer::get_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferSerializer::get_Buffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Buffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetBitBuffer*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferSerializer..ctor
Fusion::Sockets::NetBitBufferSerializer::NetBitBufferSerializer(::Fusion::Sockets::NetBitBuffer* buffer, bool write) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferSerializer::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(write)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, write);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferSerializer.Writer
::Fusion::Sockets::NetBitBufferSerializer Fusion::Sockets::NetBitBufferSerializer::Writer(::Fusion::Sockets::NetBitBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferSerializer::Writer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetBitBufferSerializer", "Writer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetBitBufferSerializer, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferSerializer.Reader
::Fusion::Sockets::NetBitBufferSerializer Fusion::Sockets::NetBitBufferSerializer::Reader(::Fusion::Sockets::NetBitBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferSerializer::Reader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetBitBufferSerializer", "Reader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetBitBufferSerializer, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetBitBufferStack
#include "Fusion/Sockets/NetBitBufferStack.hpp"
// Including type: Fusion.Sockets.NetBitBuffer
#include "Fusion/Sockets/NetBitBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _capacity
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetBitBufferStack::dyn__capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferStack::dyn__capacity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capacity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetBitBuffer** Stack
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetBitBuffer**& Fusion::Sockets::NetBitBufferStack::dyn_Stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferStack::dyn_Stack");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Stack"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetBitBuffer***>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Count
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetBitBufferStack::dyn_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferStack::dyn_Count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferStack.TryPop
bool Fusion::Sockets::NetBitBufferStack::TryPop(::Fusion::Sockets::NetBitBuffer** result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferStack::TryPop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryPop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferStack.Create
::Fusion::Sockets::NetBitBufferStack Fusion::Sockets::NetBitBufferStack::Create(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferStack::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetBitBufferStack", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetBitBufferStack, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, capacity);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferStack.Free
void Fusion::Sockets::NetBitBufferStack::Free(::Fusion::Sockets::NetBitBufferStack stack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferStack::Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetBitBufferStack", "Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stack)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stack);
}
// Autogenerated method: Fusion.Sockets.NetBitBufferStack.PushFromHead
void Fusion::Sockets::NetBitBufferStack::PushFromHead(::Fusion::Sockets::NetBitBuffer* head) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetBitBufferStack::PushFromHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PushFromHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(head)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, head);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetCommands
#include "Fusion/Sockets/NetCommands.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetCommands Connect
::Fusion::Sockets::NetCommands Fusion::Sockets::NetCommands::_get_Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommands::_get_Connect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetCommands>("Fusion.Sockets", "NetCommands", "Connect"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetCommands Connect
void Fusion::Sockets::NetCommands::_set_Connect(::Fusion::Sockets::NetCommands value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommands::_set_Connect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetCommands", "Connect", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetCommands Accepted
::Fusion::Sockets::NetCommands Fusion::Sockets::NetCommands::_get_Accepted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommands::_get_Accepted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetCommands>("Fusion.Sockets", "NetCommands", "Accepted"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetCommands Accepted
void Fusion::Sockets::NetCommands::_set_Accepted(::Fusion::Sockets::NetCommands value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommands::_set_Accepted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetCommands", "Accepted", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetCommands Refused
::Fusion::Sockets::NetCommands Fusion::Sockets::NetCommands::_get_Refused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommands::_get_Refused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetCommands>("Fusion.Sockets", "NetCommands", "Refused"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetCommands Refused
void Fusion::Sockets::NetCommands::_set_Refused(::Fusion::Sockets::NetCommands value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommands::_set_Refused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetCommands", "Refused", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetCommands Disconnect
::Fusion::Sockets::NetCommands Fusion::Sockets::NetCommands::_get_Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommands::_get_Disconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetCommands>("Fusion.Sockets", "NetCommands", "Disconnect"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetCommands Disconnect
void Fusion::Sockets::NetCommands::_set_Disconnect(::Fusion::Sockets::NetCommands value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommands::_set_Disconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetCommands", "Disconnect", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetCommands Ping
::Fusion::Sockets::NetCommands Fusion::Sockets::NetCommands::_get_Ping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommands::_get_Ping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetCommands>("Fusion.Sockets", "NetCommands", "Ping"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetCommands Ping
void Fusion::Sockets::NetCommands::_set_Ping(::Fusion::Sockets::NetCommands value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommands::_set_Ping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetCommands", "Ping", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Fusion::Sockets::NetCommands::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommands::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetCommandHeader
#include "Fusion/Sockets/NetCommandHeader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 SIZE_BYTES
int Fusion::Sockets::NetCommandHeader::_get_SIZE_BYTES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandHeader::_get_SIZE_BYTES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.Sockets", "NetCommandHeader", "SIZE_BYTES"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SIZE_BYTES
void Fusion::Sockets::NetCommandHeader::_set_SIZE_BYTES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandHeader::_set_SIZE_BYTES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetCommandHeader", "SIZE_BYTES", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SIZE_BITS
int Fusion::Sockets::NetCommandHeader::_get_SIZE_BITS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandHeader::_get_SIZE_BITS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.Sockets", "NetCommandHeader", "SIZE_BITS"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SIZE_BITS
void Fusion::Sockets::NetCommandHeader::_set_SIZE_BITS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandHeader::_set_SIZE_BITS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetCommandHeader", "SIZE_BITS", value));
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetPacketType PacketType
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetPacketType& Fusion::Sockets::NetCommandHeader::dyn_PacketType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandHeader::dyn_PacketType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PacketType"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetPacketType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetCommands Command
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetCommands& Fusion::Sockets::NetCommandHeader::dyn_Command() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandHeader::dyn_Command");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Command"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetCommands*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetCommandHeader.Create
::Fusion::Sockets::NetCommandHeader Fusion::Sockets::NetCommandHeader::Create(::Fusion::Sockets::NetCommands command) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandHeader::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetCommandHeader", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(command)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetCommandHeader, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, command);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetCommandConnect
#include "Fusion/Sockets/NetCommandConnect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetCommandHeader Header
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetCommandHeader& Fusion::Sockets::NetCommandConnect::dyn_Header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandConnect::dyn_Header");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Header"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetCommandHeader*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 TokenLength
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetCommandConnect::dyn_TokenLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandConnect::dyn_TokenLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TokenLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetConnectionId ConnectionId
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnectionId& Fusion::Sockets::NetCommandConnect::dyn_ConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandConnect::dyn_ConnectionId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionId"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnectionId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetCommandConnect/<TokenData>e__FixedBuffer TokenData
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetCommandConnect::$TokenData$e__FixedBuffer& Fusion::Sockets::NetCommandConnect::dyn_TokenData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandConnect::dyn_TokenData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TokenData"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetCommandConnect::$TokenData$e__FixedBuffer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetCommandConnect/<UniqueId>e__FixedBuffer UniqueId
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetCommandConnect::$UniqueId$e__FixedBuffer& Fusion::Sockets::NetCommandConnect::dyn_UniqueId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandConnect::dyn_UniqueId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UniqueId"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetCommandConnect::$UniqueId$e__FixedBuffer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetCommandConnect.ClampTokenLength
int Fusion::Sockets::NetCommandConnect::ClampTokenLength(int tokenLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandConnect::ClampTokenLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetCommandConnect", "ClampTokenLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tokenLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tokenLength);
}
// Autogenerated method: Fusion.Sockets.NetCommandConnect.GetTokenDataAsArray
::ArrayW<uint8_t> Fusion::Sockets::NetCommandConnect::GetTokenDataAsArray(::Fusion::Sockets::NetCommandConnect command) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandConnect::GetTokenDataAsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetCommandConnect", "GetTokenDataAsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(command)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, command);
}
// Autogenerated method: Fusion.Sockets.NetCommandConnect.GetUniqueIdAsArray
::ArrayW<uint8_t> Fusion::Sockets::NetCommandConnect::GetUniqueIdAsArray(::Fusion::Sockets::NetCommandConnect command) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandConnect::GetUniqueIdAsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetCommandConnect", "GetUniqueIdAsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(command)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, command);
}
// Autogenerated method: Fusion.Sockets.NetCommandConnect.Create
::Fusion::Sockets::NetCommandConnect Fusion::Sockets::NetCommandConnect::Create(::Fusion::Sockets::NetConnectionId id, uint8_t* token, int tokenLength, uint8_t* uniqueId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandConnect::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetCommandConnect", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(tokenLength), ::il2cpp_utils::ExtractType(uniqueId)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetCommandConnect, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id, token, tokenLength, uniqueId);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetCommandAccepted
#include "Fusion/Sockets/NetCommandAccepted.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetCommandHeader Header
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetCommandHeader& Fusion::Sockets::NetCommandAccepted::dyn_Header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandAccepted::dyn_Header");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Header"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetCommandHeader*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetConnectionId AcceptedLocalId
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnectionId& Fusion::Sockets::NetCommandAccepted::dyn_AcceptedLocalId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandAccepted::dyn_AcceptedLocalId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AcceptedLocalId"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnectionId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetConnectionId AcceptedRemoteId
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnectionId& Fusion::Sockets::NetCommandAccepted::dyn_AcceptedRemoteId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandAccepted::dyn_AcceptedRemoteId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AcceptedRemoteId"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnectionId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Counter
[[deprecated("Use field access instead!")]] uint& Fusion::Sockets::NetCommandAccepted::dyn_Counter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandAccepted::dyn_Counter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Counter"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetCommandAccepted.Create
::Fusion::Sockets::NetCommandAccepted Fusion::Sockets::NetCommandAccepted::Create(::Fusion::Sockets::NetConnectionId localId, ::Fusion::Sockets::NetConnectionId remoteId, uint counter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandAccepted::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetCommandAccepted", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localId), ::il2cpp_utils::ExtractType(remoteId), ::il2cpp_utils::ExtractType(counter)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetCommandAccepted, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, localId, remoteId, counter);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetCommandRefused
#include "Fusion/Sockets/NetCommandRefused.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 SIZE_IN_BYTES
int Fusion::Sockets::NetCommandRefused::_get_SIZE_IN_BYTES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandRefused::_get_SIZE_IN_BYTES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.Sockets", "NetCommandRefused", "SIZE_IN_BYTES"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SIZE_IN_BYTES
void Fusion::Sockets::NetCommandRefused::_set_SIZE_IN_BYTES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandRefused::_set_SIZE_IN_BYTES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetCommandRefused", "SIZE_IN_BYTES", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SIZE_IN_BITS
int Fusion::Sockets::NetCommandRefused::_get_SIZE_IN_BITS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandRefused::_get_SIZE_IN_BITS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.Sockets", "NetCommandRefused", "SIZE_IN_BITS"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SIZE_IN_BITS
void Fusion::Sockets::NetCommandRefused::_set_SIZE_IN_BITS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandRefused::_set_SIZE_IN_BITS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetCommandRefused", "SIZE_IN_BITS", value));
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetCommandHeader Header
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetCommandHeader& Fusion::Sockets::NetCommandRefused::dyn_Header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandRefused::dyn_Header");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Header"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetCommandHeader*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetConnectFailedReason Reason
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnectFailedReason& Fusion::Sockets::NetCommandRefused::dyn_Reason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandRefused::dyn_Reason");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reason"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnectFailedReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetCommandRefused.Create
::Fusion::Sockets::NetCommandRefused Fusion::Sockets::NetCommandRefused::Create(::Fusion::Sockets::NetConnectFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandRefused::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetCommandRefused", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetCommandRefused, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reason);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetCommandDisconnect
#include "Fusion/Sockets/NetCommandDisconnect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetCommandHeader Header
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetCommandHeader& Fusion::Sockets::NetCommandDisconnect::dyn_Header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandDisconnect::dyn_Header");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Header"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetCommandHeader*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetDisconnectReason Reason
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetDisconnectReason& Fusion::Sockets::NetCommandDisconnect::dyn_Reason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandDisconnect::dyn_Reason");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reason"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetDisconnectReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetCommandDisconnect.Create
::Fusion::Sockets::NetCommandDisconnect Fusion::Sockets::NetCommandDisconnect::Create(::Fusion::Sockets::NetDisconnectReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetCommandDisconnect::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetCommandDisconnect", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetCommandDisconnect, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reason);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetConfig
#include "Fusion/Sockets/NetConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 ConnectionSendBuffers
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConfig::dyn_ConnectionSendBuffers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::dyn_ConnectionSendBuffers");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionSendBuffers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ConnectionGroups
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConfig::dyn_ConnectionGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::dyn_ConnectionGroups");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionGroups"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxConnections
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConfig::dyn_MaxConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::dyn_MaxConnections");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxConnections"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SocketSendBuffer
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConfig::dyn_SocketSendBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::dyn_SocketSendBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SocketSendBuffer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SocketRecvBuffer
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConfig::dyn_SocketRecvBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::dyn_SocketRecvBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SocketRecvBuffer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 DefaultMtu
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConfig::dyn_DefaultMtu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::dyn_DefaultMtu");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DefaultMtu"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PacketSize
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConfig::dyn_PacketSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::dyn_PacketSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PacketSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ConnectAttempts
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConfig::dyn_ConnectAttempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::dyn_ConnectAttempts");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectAttempts"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double ConnectInterval
[[deprecated("Use field access instead!")]] double& Fusion::Sockets::NetConfig::dyn_ConnectInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::dyn_ConnectInterval");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectInterval"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double OperationExpireTime
[[deprecated("Use field access instead!")]] double& Fusion::Sockets::NetConfig::dyn_OperationExpireTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::dyn_OperationExpireTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OperationExpireTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double ConnectionDefaultRtt
[[deprecated("Use field access instead!")]] double& Fusion::Sockets::NetConfig::dyn_ConnectionDefaultRtt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::dyn_ConnectionDefaultRtt");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionDefaultRtt"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double ConnectionTimeout
[[deprecated("Use field access instead!")]] double& Fusion::Sockets::NetConfig::dyn_ConnectionTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::dyn_ConnectionTimeout");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionTimeout"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double ConnectionPingInterval
[[deprecated("Use field access instead!")]] double& Fusion::Sockets::NetConfig::dyn_ConnectionPingInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::dyn_ConnectionPingInterval");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionPingInterval"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double ConnectionShutdownTime
[[deprecated("Use field access instead!")]] double& Fusion::Sockets::NetConfig::dyn_ConnectionShutdownTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::dyn_ConnectionShutdownTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionShutdownTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetAddress Address
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetAddress& Fusion::Sockets::NetConfig::dyn_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::dyn_Address");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Address"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetAddress*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetConfigNotify Notify
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConfigNotify& Fusion::Sockets::NetConfig::dyn_Notify() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::dyn_Notify");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Notify"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConfigNotify*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetConfigSimulation Simulation
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConfigSimulation& Fusion::Sockets::NetConfig::dyn_Simulation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::dyn_Simulation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Simulation"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConfigSimulation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetConfig.get_ConnectionsPerGroup
int Fusion::Sockets::NetConfig::get_ConnectionsPerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::get_ConnectionsPerGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ConnectionsPerGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConfig.get_Defaults
::Fusion::Sockets::NetConfig Fusion::Sockets::NetConfig::get_Defaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfig::get_Defaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetConfig", "get_Defaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetConfig, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetConfigNotify
#include "Fusion/Sockets/NetConfigNotify.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 AckMaskBytes
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConfigNotify::dyn_AckMaskBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigNotify::dyn_AckMaskBytes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AckMaskBytes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 AckForceCount
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConfigNotify::dyn_AckForceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigNotify::dyn_AckForceCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AckForceCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double AckForceTimeout
[[deprecated("Use field access instead!")]] double& Fusion::Sockets::NetConfigNotify::dyn_AckForceTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigNotify::dyn_AckForceTimeout");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AckForceTimeout"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 WindowSize
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConfigNotify::dyn_WindowSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigNotify::dyn_WindowSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WindowSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SequenceBytes
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConfigNotify::dyn_SequenceBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigNotify::dyn_SequenceBytes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SequenceBytes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetConfigNotify.get_AckMaskBits
int Fusion::Sockets::NetConfigNotify::get_AckMaskBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigNotify::get_AckMaskBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_AckMaskBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConfigNotify.get_Defaults
::Fusion::Sockets::NetConfigNotify Fusion::Sockets::NetConfigNotify::get_Defaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigNotify::get_Defaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetConfigNotify", "get_Defaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetConfigNotify, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetConfigSimulation
#include "Fusion/Sockets/NetConfigSimulation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int16* LossNotifySequences
[[deprecated("Use field access instead!")]] int16_t*& Fusion::Sockets::NetConfigSimulation::dyn_LossNotifySequences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulation::dyn_LossNotifySequences");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LossNotifySequences"))->offset;
  return *reinterpret_cast<int16_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 LossNotifySequencesLength
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConfigSimulation::dyn_LossNotifySequencesLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulation::dyn_LossNotifySequencesLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LossNotifySequencesLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetConfigSimulationOscillator DelayOscillator
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConfigSimulationOscillator& Fusion::Sockets::NetConfigSimulation::dyn_DelayOscillator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulation::dyn_DelayOscillator");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DelayOscillator"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConfigSimulationOscillator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetConfigSimulationOscillator LossOscillator
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConfigSimulationOscillator& Fusion::Sockets::NetConfigSimulation::dyn_LossOscillator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulation::dyn_LossOscillator");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LossOscillator"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConfigSimulationOscillator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double DuplicateChance
[[deprecated("Use field access instead!")]] double& Fusion::Sockets::NetConfigSimulation::dyn_DuplicateChance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulation::dyn_DuplicateChance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DuplicateChance"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetConfigSimulation.get_Defaults
::Fusion::Sockets::NetConfigSimulation Fusion::Sockets::NetConfigSimulation::get_Defaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulation::get_Defaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetConfigSimulation", "get_Defaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetConfigSimulation, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetConfigSimulationOscillator/WaveShape
#include "Fusion/Sockets/NetConfigSimulationOscillator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetConfigSimulationOscillator/WaveShape Noise
::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_get_Noise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_get_Noise");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape>("Fusion.Sockets", "NetConfigSimulationOscillator/WaveShape", "Noise"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetConfigSimulationOscillator/WaveShape Noise
void Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_set_Noise(::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_set_Noise");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetConfigSimulationOscillator/WaveShape", "Noise", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetConfigSimulationOscillator/WaveShape Sine
::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_get_Sine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_get_Sine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape>("Fusion.Sockets", "NetConfigSimulationOscillator/WaveShape", "Sine"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetConfigSimulationOscillator/WaveShape Sine
void Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_set_Sine(::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_set_Sine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetConfigSimulationOscillator/WaveShape", "Sine", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetConfigSimulationOscillator/WaveShape Square
::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_get_Square() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_get_Square");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape>("Fusion.Sockets", "NetConfigSimulationOscillator/WaveShape", "Square"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetConfigSimulationOscillator/WaveShape Square
void Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_set_Square(::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_set_Square");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetConfigSimulationOscillator/WaveShape", "Square", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetConfigSimulationOscillator/WaveShape Triangle
::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_get_Triangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_get_Triangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape>("Fusion.Sockets", "NetConfigSimulationOscillator/WaveShape", "Triangle"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetConfigSimulationOscillator/WaveShape Triangle
void Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_set_Triangle(::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_set_Triangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetConfigSimulationOscillator/WaveShape", "Triangle", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetConfigSimulationOscillator/WaveShape Saw
::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_get_Saw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_get_Saw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape>("Fusion.Sockets", "NetConfigSimulationOscillator/WaveShape", "Saw"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetConfigSimulationOscillator/WaveShape Saw
void Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_set_Saw(::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_set_Saw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetConfigSimulationOscillator/WaveShape", "Saw", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetConfigSimulationOscillator/WaveShape ReverseSaw
::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_get_ReverseSaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_get_ReverseSaw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape>("Fusion.Sockets", "NetConfigSimulationOscillator/WaveShape", "ReverseSaw"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetConfigSimulationOscillator/WaveShape ReverseSaw
void Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_set_ReverseSaw(::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::_set_ReverseSaw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetConfigSimulationOscillator/WaveShape", "ReverseSaw", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConfigSimulationOscillator::WaveShape::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetConnectFailedReason
#include "Fusion/Sockets/NetConnectFailedReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetConnectFailedReason Timeout
::Fusion::Sockets::NetConnectFailedReason Fusion::Sockets::NetConnectFailedReason::_get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectFailedReason::_get_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetConnectFailedReason>("Fusion.Sockets", "NetConnectFailedReason", "Timeout"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetConnectFailedReason Timeout
void Fusion::Sockets::NetConnectFailedReason::_set_Timeout(::Fusion::Sockets::NetConnectFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectFailedReason::_set_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetConnectFailedReason", "Timeout", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetConnectFailedReason ServerFull
::Fusion::Sockets::NetConnectFailedReason Fusion::Sockets::NetConnectFailedReason::_get_ServerFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectFailedReason::_get_ServerFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetConnectFailedReason>("Fusion.Sockets", "NetConnectFailedReason", "ServerFull"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetConnectFailedReason ServerFull
void Fusion::Sockets::NetConnectFailedReason::_set_ServerFull(::Fusion::Sockets::NetConnectFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectFailedReason::_set_ServerFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetConnectFailedReason", "ServerFull", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetConnectFailedReason ServerRefused
::Fusion::Sockets::NetConnectFailedReason Fusion::Sockets::NetConnectFailedReason::_get_ServerRefused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectFailedReason::_get_ServerRefused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetConnectFailedReason>("Fusion.Sockets", "NetConnectFailedReason", "ServerRefused"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetConnectFailedReason ServerRefused
void Fusion::Sockets::NetConnectFailedReason::_set_ServerRefused(::Fusion::Sockets::NetConnectFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectFailedReason::_set_ServerRefused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetConnectFailedReason", "ServerRefused", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Fusion::Sockets::NetConnectFailedReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectFailedReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetConnection
#include "Fusion/Sockets/NetConnection.hpp"
// Including type: Fusion.Sockets.NetConfig
#include "Fusion/Sockets/NetConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Byte UNIQUE_ID_SIZE
uint8_t Fusion::Sockets::NetConnection::_get_UNIQUE_ID_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::_get_UNIQUE_ID_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Fusion.Sockets", "NetConnection", "UNIQUE_ID_SIZE"));
}
// Autogenerated static field setter
// Set static field: static System.Byte UNIQUE_ID_SIZE
void Fusion::Sockets::NetConnection::_set_UNIQUE_ID_SIZE(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::_set_UNIQUE_ID_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetConnection", "UNIQUE_ID_SIZE", value));
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 MapHash
[[deprecated("Use field access instead!")]] uint64_t& Fusion::Sockets::NetConnection::dyn_MapHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_MapHash");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MapHash"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.NetConnection* MapNext
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnection*& Fusion::Sockets::NetConnection::dyn_MapNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_MapNext");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MapNext"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.NetConnectionMap/EntryState MapState
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnectionMap::EntryState& Fusion::Sockets::NetConnection::dyn_MapState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_MapState");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MapState"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnectionMap::EntryState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.NetConnectionId LocalId
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnectionId& Fusion::Sockets::NetConnection::dyn_LocalId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_LocalId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LocalId"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnectionId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.NetConnectionId RemoteId
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnectionId& Fusion::Sockets::NetConnection::dyn_RemoteId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_RemoteId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RemoteId"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnectionId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.NetAddress Address
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetAddress& Fusion::Sockets::NetConnection::dyn_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_Address");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Address"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetAddress*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.NetConnectionStatus Status
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnectionStatus& Fusion::Sockets::NetConnection::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_Status");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnectionStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Double Rtt
[[deprecated("Use field access instead!")]] double& Fusion::Sockets::NetConnection::dyn_Rtt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_Rtt");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rtt"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Double SendTime
[[deprecated("Use field access instead!")]] double& Fusion::Sockets::NetConnection::dyn_SendTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_SendTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SendTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Double RecvTime
[[deprecated("Use field access instead!")]] double& Fusion::Sockets::NetConnection::dyn_RecvTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_RecvTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RecvTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.NetConnection/StateConnectingData StateConnecting
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnection::StateConnectingData& Fusion::Sockets::NetConnection::dyn_StateConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_StateConnecting");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StateConnecting"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnection::StateConnectingData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.NetConnection/StateDisconnectedData StateDisconnected
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnection::StateDisconnectedData& Fusion::Sockets::NetConnection::dyn_StateDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_StateDisconnected");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StateDisconnected"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnection::StateDisconnectedData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.NetConnection/StateShutdownData StateShutdown
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnection::StateShutdownData& Fusion::Sockets::NetConnection::dyn_StateShutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_StateShutdown");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StateShutdown"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnection::StateShutdownData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.NetSendEnvelopeRingBuffer NotifySendWindow
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetSendEnvelopeRingBuffer& Fusion::Sockets::NetConnection::dyn_NotifySendWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_NotifySendWindow");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NotifySendWindow"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetSendEnvelopeRingBuffer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.NetSequencer NotifySendSequencer
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetSequencer& Fusion::Sockets::NetConnection::dyn_NotifySendSequencer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_NotifySendSequencer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NotifySendSequencer"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetSequencer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Double NotifySendTime
[[deprecated("Use field access instead!")]] double& Fusion::Sockets::NetConnection::dyn_NotifySendTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_NotifySendTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NotifySendTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Double NotifyRecvAckTime
[[deprecated("Use field access instead!")]] double& Fusion::Sockets::NetConnection::dyn_NotifyRecvAckTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_NotifyRecvAckTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NotifyRecvAckTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 NotifyRecvAckOutdatedCount
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConnection::dyn_NotifyRecvAckOutdatedCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_NotifyRecvAckOutdatedCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NotifyRecvAckOutdatedCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Double NotifyRecvTime
[[deprecated("Use field access instead!")]] double& Fusion::Sockets::NetConnection::dyn_NotifyRecvTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_NotifyRecvTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NotifyRecvTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 NotifyRecvMask
[[deprecated("Use field access instead!")]] uint64_t& Fusion::Sockets::NetConnection::dyn_NotifyRecvMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_NotifyRecvMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NotifyRecvMask"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt16 NotifyRecvSequence
[[deprecated("Use field access instead!")]] uint16_t& Fusion::Sockets::NetConnection::dyn_NotifyRecvSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_NotifyRecvSequence");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NotifyRecvSequence"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 NotifyRecvUnackedCount
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConnection::dyn_NotifyRecvUnackedCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_NotifyRecvUnackedCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NotifyRecvUnackedCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 NotifyRecvFragment
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConnection::dyn_NotifyRecvFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_NotifyRecvFragment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NotifyRecvFragment"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte* NotifyRecvFragmentBuffer
[[deprecated("Use field access instead!")]] uint8_t*& Fusion::Sockets::NetConnection::dyn_NotifyRecvFragmentBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_NotifyRecvFragmentBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NotifyRecvFragmentBuffer"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 NotifyRecvFragmentBufferLength
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConnection::dyn_NotifyRecvFragmentBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_NotifyRecvFragmentBufferLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NotifyRecvFragmentBufferLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 NotifyRecvFragmentSequenceDistance
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConnection::dyn_NotifyRecvFragmentSequenceDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_NotifyRecvFragmentSequenceDistance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NotifyRecvFragmentSequenceDistance"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte* ConnectionToken
[[deprecated("Use field access instead!")]] uint8_t*& Fusion::Sockets::NetConnection::dyn_ConnectionToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_ConnectionToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionToken"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 ConnectionTokenLength
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConnection::dyn_ConnectionTokenLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_ConnectionTokenLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionTokenLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int64 UniqueIdHash
[[deprecated("Use field access instead!")]] int64_t& Fusion::Sockets::NetConnection::dyn_UniqueIdHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_UniqueIdHash");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UniqueIdHash"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte* UniqueId
[[deprecated("Use field access instead!")]] uint8_t*& Fusion::Sockets::NetConnection::dyn_UniqueId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_UniqueId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UniqueId"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Mtu
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConnection::dyn_Mtu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_Mtu");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Mtu"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 Counter
[[deprecated("Use field access instead!")]] uint& Fusion::Sockets::NetConnection::dyn_Counter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_Counter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Counter"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.ReliableBuffer ReliableBuffer
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::ReliableBuffer& Fusion::Sockets::NetConnection::dyn_ReliableBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_ReliableBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReliableBuffer"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::ReliableBuffer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.ReliableList ReliableSendList
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::ReliableList& Fusion::Sockets::NetConnection::dyn_ReliableSendList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_ReliableSendList");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReliableSendList"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::ReliableList*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.TimerDelta ReliableSendTimer
[[deprecated("Use field access instead!")]] ::Fusion::TimerDelta& Fusion::Sockets::NetConnection::dyn_ReliableSendTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_ReliableSendTimer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReliableSendTimer"))->offset;
  return *reinterpret_cast<::Fusion::TimerDelta*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetConnectionStats StatsRoundTripTime
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnectionStats& Fusion::Sockets::NetConnection::dyn_StatsRoundTripTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_StatsRoundTripTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StatsRoundTripTime"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnectionStats*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetConnectionStats StatsSentPacketSizes
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnectionStats& Fusion::Sockets::NetConnection::dyn_StatsSentPacketSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_StatsSentPacketSizes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StatsSentPacketSizes"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnectionStats*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetConnectionStats StatsReceivedPacketSizes
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnectionStats& Fusion::Sockets::NetConnection::dyn_StatsReceivedPacketSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::dyn_StatsReceivedPacketSizes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StatsReceivedPacketSizes"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnectionStats*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetConnection.get_Active
bool Fusion::Sockets::NetConnection::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::get_Active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnection.get_RoundTripTime
double Fusion::Sockets::NetConnection::get_RoundTripTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::get_RoundTripTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_RoundTripTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnection.get_RemoteAddress
::Fusion::Sockets::NetAddress Fusion::Sockets::NetConnection::get_RemoteAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::get_RemoteAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_RemoteAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetAddress, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnection.get_ConnectionStatus
::Fusion::Sockets::NetConnectionStatus Fusion::Sockets::NetConnection::get_ConnectionStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::get_ConnectionStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ConnectionStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetConnectionStatus, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnection.get_LocalConnectionId
::Fusion::Sockets::NetConnectionId Fusion::Sockets::NetConnection::get_LocalConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::get_LocalConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LocalConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetConnectionId, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnection.get_RemoteConnectionId
::Fusion::Sockets::NetConnectionId Fusion::Sockets::NetConnection::get_RemoteConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::get_RemoteConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_RemoteConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetConnectionId, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnection.NextNotifySendSequence
uint16_t Fusion::Sockets::NetConnection::NextNotifySendSequence(::Fusion::Sockets::NetConnection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::NextNotifySendSequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetConnection", "NextNotifySendSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Fusion.Sockets.NetConnection.Initialize
void Fusion::Sockets::NetConnection::Initialize(::Fusion::Sockets::NetConnection* c, int16_t group, int16_t index, ::Fusion::Sockets::NetConfig* config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetConnection", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(config)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c, group, index, config);
}
// Autogenerated method: Fusion.Sockets.NetConnection.Reset
void Fusion::Sockets::NetConnection::Reset(::Fusion::Sockets::NetConnection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetConnection", "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Fusion.Sockets.NetConnection.ToString
::StringW Fusion::Sockets::NetConnection::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnection::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Fusion.Sockets.NetConnectionId
#include "Fusion/Sockets/NetConnectionId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.UInt64 Raw
[[deprecated("Use field access instead!")]] uint64_t& Fusion::Sockets::NetConnectionId::dyn_Raw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionId::dyn_Raw");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Raw"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int16 Group
[[deprecated("Use field access instead!")]] int16_t& Fusion::Sockets::NetConnectionId::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionId::dyn_Group");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int16 GroupIndex
[[deprecated("Use field access instead!")]] int16_t& Fusion::Sockets::NetConnectionId::dyn_GroupIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionId::dyn_GroupIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GroupIndex"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 Generation
[[deprecated("Use field access instead!")]] uint& Fusion::Sockets::NetConnectionId::dyn_Generation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionId::dyn_Generation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Generation"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetConnectionId.Equals
bool Fusion::Sockets::NetConnectionId::Equals(::Fusion::Sockets::NetConnectionId other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionId::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetConnectionId), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Fusion.Sockets.NetConnectionId.Equals
bool Fusion::Sockets::NetConnectionId::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionId::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Fusion.Sockets.NetConnectionId.GetHashCode
int Fusion::Sockets::NetConnectionId::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionId::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnectionId.op_Equality
bool Fusion::Sockets::operator ==(const ::Fusion::Sockets::NetConnectionId& a, const ::Fusion::Sockets::NetConnectionId& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionId::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetConnectionId", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetConnectionMap
#include "Fusion/Sockets/NetConnectionMap.hpp"
// Including type: Fusion.Sockets.NetConnectionMap/EntryState
#include "Fusion/Sockets/NetConnectionMap_EntryState.hpp"
// Including type: Fusion.Sockets.NetConnectionMap/Iterator
#include "Fusion/Sockets/NetConnectionMap_Iterator.hpp"
// Including type: Fusion.Sockets.NetConnection
#include "Fusion/Sockets/NetConnection.hpp"
// Including type: Fusion.Sockets.INetPeerGroupCallbacks
#include "Fusion/Sockets/INetPeerGroupCallbacks.hpp"
// Including type: Fusion.Sockets.NetConfig
#include "Fusion/Sockets/NetConfig.hpp"
// Including type: Fusion.Sockets.NetAddress
#include "Fusion/Sockets/NetAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetConnection** Buckets
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnection**& Fusion::Sockets::NetConnectionMap::dyn_Buckets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::dyn_Buckets");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buckets"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnection***>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetConnection* FreeHead
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnection*& Fusion::Sockets::NetConnectionMap::dyn_FreeHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::dyn_FreeHead");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FreeHead"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.NetConnection* Connections
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnection*& Fusion::Sockets::NetConnectionMap::dyn_Connections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::dyn_Connections");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Connections"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 Group
[[deprecated("Use field access instead!")]] int16_t& Fusion::Sockets::NetConnectionMap::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::dyn_Group");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 UsedCount
[[deprecated("Use field access instead!")]] uint64_t& Fusion::Sockets::NetConnectionMap::dyn_UsedCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::dyn_UsedCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UsedCount"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 FreeCount
[[deprecated("Use field access instead!")]] uint64_t& Fusion::Sockets::NetConnectionMap::dyn_FreeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::dyn_FreeCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FreeCount"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 CapacityAllocated
[[deprecated("Use field access instead!")]] uint64_t& Fusion::Sockets::NetConnectionMap::dyn_CapacityAllocated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::dyn_CapacityAllocated");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CapacityAllocated"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 CapacityUsable
[[deprecated("Use field access instead!")]] uint64_t& Fusion::Sockets::NetConnectionMap::dyn_CapacityUsable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::dyn_CapacityUsable");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CapacityUsable"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetConnectionMap.Dispose
void Fusion::Sockets::NetConnectionMap::Dispose(::Fusion::Sockets::NetConnectionMap* map, ::Fusion::Sockets::INetPeerGroupCallbacks* callbacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetConnectionMap", "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map), ::il2cpp_utils::ExtractType(callbacks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, map, callbacks);
}
// Autogenerated method: Fusion.Sockets.NetConnectionMap.Allocate
::Fusion::Sockets::NetConnectionMap* Fusion::Sockets::NetConnectionMap::Allocate(int capacity, int16_t groupIndex, ByRef<::Fusion::Sockets::NetConfig*> config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::Allocate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetConnectionMap", "Allocate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity), ::il2cpp_utils::ExtractType(groupIndex), ::il2cpp_utils::ExtractType(config)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetConnectionMap*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, capacity, groupIndex, byref(config));
}
// Autogenerated method: Fusion.Sockets.NetConnectionMap.get_CountUsed
int Fusion::Sockets::NetConnectionMap::get_CountUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::get_CountUsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CountUsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnectionMap.get_ConnectionsBuffer
::Fusion::Sockets::NetConnection* Fusion::Sockets::NetConnectionMap::get_ConnectionsBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::get_ConnectionsBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ConnectionsBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetConnection*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnectionMap.Remap
void Fusion::Sockets::NetConnectionMap::Remap(::Fusion::Sockets::NetAddress oldAddress, ::Fusion::Sockets::NetAddress newAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::Remap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldAddress), ::il2cpp_utils::ExtractType(newAddress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldAddress, newAddress);
}
// Autogenerated method: Fusion.Sockets.NetConnectionMap.Remove
bool Fusion::Sockets::NetConnectionMap::Remove(::Fusion::Sockets::NetAddress address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, address);
}
// Autogenerated method: Fusion.Sockets.NetConnectionMap.Insert
::Fusion::Sockets::NetConnection* Fusion::Sockets::NetConnectionMap::Insert(::Fusion::Sockets::NetAddress address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetConnection*, false>(this, ___internal__method, address);
}
// Autogenerated method: Fusion.Sockets.NetConnectionMap.FindByIndex
::Fusion::Sockets::NetConnection* Fusion::Sockets::NetConnectionMap::FindByIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::FindByIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FindByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetConnection*, false>(this, ___internal__method, index);
}
// Autogenerated method: Fusion.Sockets.NetConnectionMap.TryFindByIndex
bool Fusion::Sockets::NetConnectionMap::TryFindByIndex(int index, ByRef<::Fusion::Sockets::NetConnection*> connection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::TryFindByIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryFindByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::Fusion::Sockets::NetConnection*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index, byref(connection));
}
// Autogenerated method: Fusion.Sockets.NetConnectionMap.Find
::Fusion::Sockets::NetConnection* Fusion::Sockets::NetConnectionMap::Find(::Fusion::Sockets::NetAddress address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetConnection*, false>(this, ___internal__method, address);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetConnectionMap/EntryState
#include "Fusion/Sockets/NetConnectionMap_EntryState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetConnectionMap/EntryState None
::Fusion::Sockets::NetConnectionMap::EntryState Fusion::Sockets::NetConnectionMap::EntryState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::EntryState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetConnectionMap::EntryState>("Fusion.Sockets", "NetConnectionMap/EntryState", "None"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetConnectionMap/EntryState None
void Fusion::Sockets::NetConnectionMap::EntryState::_set_None(::Fusion::Sockets::NetConnectionMap::EntryState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::EntryState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetConnectionMap/EntryState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetConnectionMap/EntryState Free
::Fusion::Sockets::NetConnectionMap::EntryState Fusion::Sockets::NetConnectionMap::EntryState::_get_Free() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::EntryState::_get_Free");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetConnectionMap::EntryState>("Fusion.Sockets", "NetConnectionMap/EntryState", "Free"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetConnectionMap/EntryState Free
void Fusion::Sockets::NetConnectionMap::EntryState::_set_Free(::Fusion::Sockets::NetConnectionMap::EntryState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::EntryState::_set_Free");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetConnectionMap/EntryState", "Free", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetConnectionMap/EntryState Used
::Fusion::Sockets::NetConnectionMap::EntryState Fusion::Sockets::NetConnectionMap::EntryState::_get_Used() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::EntryState::_get_Used");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetConnectionMap::EntryState>("Fusion.Sockets", "NetConnectionMap/EntryState", "Used"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetConnectionMap/EntryState Used
void Fusion::Sockets::NetConnectionMap::EntryState::_set_Used(::Fusion::Sockets::NetConnectionMap::EntryState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::EntryState::_set_Used");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetConnectionMap/EntryState", "Used", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConnectionMap::EntryState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::EntryState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetConnectionMap/Iterator
#include "Fusion/Sockets/NetConnectionMap_Iterator.hpp"
// Including type: Fusion.Sockets.NetConnection
#include "Fusion/Sockets/NetConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetConnectionMap* _map
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnectionMap*& Fusion::Sockets::NetConnectionMap::Iterator::dyn__map() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::Iterator::dyn__map");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_map"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnectionMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConnectionMap::Iterator::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::Iterator::dyn__index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _count
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConnectionMap::Iterator::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::Iterator::dyn__count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetConnectionMap/Iterator.get_Current
::Fusion::Sockets::NetConnection* Fusion::Sockets::NetConnectionMap::Iterator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::Iterator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetConnection*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnectionMap/Iterator..ctor
Fusion::Sockets::NetConnectionMap::Iterator::Iterator(::Fusion::Sockets::NetConnectionMap* map) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::Iterator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, map);
}
// Autogenerated method: Fusion.Sockets.NetConnectionMap/Iterator.get_IsValid
bool Fusion::Sockets::NetConnectionMap::Iterator::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::Iterator::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnectionMap/Iterator.Next
bool Fusion::Sockets::NetConnectionMap::Iterator::Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionMap::Iterator::Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetConnectionStats
#include "Fusion/Sockets/NetConnectionStats.hpp"
// Including type: Fusion.Sockets.NetConnectionStats/Entry
#include "Fusion/Sockets/NetConnectionStats_Entry.hpp"
// Including type: Collections.Unsafe.UnsafeRingBuffer
#include "Collections/Unsafe/UnsafeRingBuffer.hpp"
// Including type: Fusion.FusionGraphVisualization
#include "Fusion/FusionGraphVisualization.hpp"
// Including type: Fusion.ISampleData
#include "Fusion/ISampleData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Collections.Unsafe.UnsafeRingBuffer* _buffer
[[deprecated("Use field access instead!")]] ::Collections::Unsafe::UnsafeRingBuffer*& Fusion::Sockets::NetConnectionStats::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStats::dyn__buffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::Collections::Unsafe::UnsafeRingBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetConnectionStats.get_Count
int Fusion::Sockets::NetConnectionStats::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStats::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetConnectionStats), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnectionStats.get_Capacity
int Fusion::Sockets::NetConnectionStats::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStats::get_Capacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetConnectionStats), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnectionStats.get_Item
::Fusion::Sockets::NetConnectionStats::Entry Fusion::Sockets::NetConnectionStats::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStats::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetConnectionStats::Entry, false>(this, ___internal__method, index);
}
// Autogenerated method: Fusion.Sockets.NetConnectionStats.get_DefaultVisualization
::Fusion::FusionGraphVisualization Fusion::Sockets::NetConnectionStats::get_DefaultVisualization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStats::get_DefaultVisualization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetConnectionStats), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::FusionGraphVisualization, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnectionStats.get_VisualizationFlags
::Fusion::FusionGraphVisualization Fusion::Sockets::NetConnectionStats::get_VisualizationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStats::get_VisualizationFlags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetConnectionStats), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::FusionGraphVisualization, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnectionStats.Clear
void Fusion::Sockets::NetConnectionStats::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStats::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnectionStats.Free
void Fusion::Sockets::NetConnectionStats::Free() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStats::Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnectionStats..ctor
Fusion::Sockets::NetConnectionStats::NetConnectionStats(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStats::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: Fusion.Sockets.NetConnectionStats.Push
void Fusion::Sockets::NetConnectionStats::Push(double time, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStats::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, value);
}
// Autogenerated method: Fusion.Sockets.NetConnectionStats.GetSampleAtIndex
::Fusion::ISampleData* Fusion::Sockets::NetConnectionStats::GetSampleAtIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStats::GetSampleAtIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetConnectionStats), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::ISampleData*, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetConnectionStats/Entry
#include "Fusion/Sockets/NetConnectionStats_Entry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double Time
[[deprecated("Use field access instead!")]] double& Fusion::Sockets::NetConnectionStats::Entry::dyn_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStats::Entry::dyn_Time");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Time"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double Value
[[deprecated("Use field access instead!")]] double& Fusion::Sockets::NetConnectionStats::Entry::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStats::Entry::dyn_Value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetConnectionStats/Entry.get_TickValue
int Fusion::Sockets::NetConnectionStats::Entry::get_TickValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStats::Entry::get_TickValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetConnectionStats::Entry), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnectionStats/Entry.get_TimeValue
float Fusion::Sockets::NetConnectionStats::Entry::get_TimeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStats::Entry::get_TimeValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetConnectionStats::Entry), 5));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetConnectionStats/Entry.get_FloatValue
float Fusion::Sockets::NetConnectionStats::Entry::get_FloatValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStats::Entry::get_FloatValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::Sockets::NetConnectionStats::Entry), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetConnectionStatus
#include "Fusion/Sockets/NetConnectionStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetConnectionStatus Created
::Fusion::Sockets::NetConnectionStatus Fusion::Sockets::NetConnectionStatus::_get_Created() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStatus::_get_Created");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetConnectionStatus>("Fusion.Sockets", "NetConnectionStatus", "Created"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetConnectionStatus Created
void Fusion::Sockets::NetConnectionStatus::_set_Created(::Fusion::Sockets::NetConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStatus::_set_Created");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetConnectionStatus", "Created", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetConnectionStatus Connecting
::Fusion::Sockets::NetConnectionStatus Fusion::Sockets::NetConnectionStatus::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStatus::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetConnectionStatus>("Fusion.Sockets", "NetConnectionStatus", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetConnectionStatus Connecting
void Fusion::Sockets::NetConnectionStatus::_set_Connecting(::Fusion::Sockets::NetConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStatus::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetConnectionStatus", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetConnectionStatus Connected
::Fusion::Sockets::NetConnectionStatus Fusion::Sockets::NetConnectionStatus::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStatus::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetConnectionStatus>("Fusion.Sockets", "NetConnectionStatus", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetConnectionStatus Connected
void Fusion::Sockets::NetConnectionStatus::_set_Connected(::Fusion::Sockets::NetConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStatus::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetConnectionStatus", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetConnectionStatus Disconnected
::Fusion::Sockets::NetConnectionStatus Fusion::Sockets::NetConnectionStatus::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStatus::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetConnectionStatus>("Fusion.Sockets", "NetConnectionStatus", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetConnectionStatus Disconnected
void Fusion::Sockets::NetConnectionStatus::_set_Disconnected(::Fusion::Sockets::NetConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStatus::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetConnectionStatus", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetConnectionStatus Shutdown
::Fusion::Sockets::NetConnectionStatus Fusion::Sockets::NetConnectionStatus::_get_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStatus::_get_Shutdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetConnectionStatus>("Fusion.Sockets", "NetConnectionStatus", "Shutdown"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetConnectionStatus Shutdown
void Fusion::Sockets::NetConnectionStatus::_set_Shutdown(::Fusion::Sockets::NetConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStatus::_set_Shutdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetConnectionStatus", "Shutdown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetConnectionStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetConnectionStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetDisconnectReason
#include "Fusion/Sockets/NetDisconnectReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetDisconnectReason Unknown
::Fusion::Sockets::NetDisconnectReason Fusion::Sockets::NetDisconnectReason::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetDisconnectReason::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetDisconnectReason>("Fusion.Sockets", "NetDisconnectReason", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetDisconnectReason Unknown
void Fusion::Sockets::NetDisconnectReason::_set_Unknown(::Fusion::Sockets::NetDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetDisconnectReason::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetDisconnectReason", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetDisconnectReason Timeout
::Fusion::Sockets::NetDisconnectReason Fusion::Sockets::NetDisconnectReason::_get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetDisconnectReason::_get_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetDisconnectReason>("Fusion.Sockets", "NetDisconnectReason", "Timeout"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetDisconnectReason Timeout
void Fusion::Sockets::NetDisconnectReason::_set_Timeout(::Fusion::Sockets::NetDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetDisconnectReason::_set_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetDisconnectReason", "Timeout", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetDisconnectReason Requested
::Fusion::Sockets::NetDisconnectReason Fusion::Sockets::NetDisconnectReason::_get_Requested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetDisconnectReason::_get_Requested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetDisconnectReason>("Fusion.Sockets", "NetDisconnectReason", "Requested"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetDisconnectReason Requested
void Fusion::Sockets::NetDisconnectReason::_set_Requested(::Fusion::Sockets::NetDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetDisconnectReason::_set_Requested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetDisconnectReason", "Requested", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetDisconnectReason SequenceOutOfBounds
::Fusion::Sockets::NetDisconnectReason Fusion::Sockets::NetDisconnectReason::_get_SequenceOutOfBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetDisconnectReason::_get_SequenceOutOfBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetDisconnectReason>("Fusion.Sockets", "NetDisconnectReason", "SequenceOutOfBounds"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetDisconnectReason SequenceOutOfBounds
void Fusion::Sockets::NetDisconnectReason::_set_SequenceOutOfBounds(::Fusion::Sockets::NetDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetDisconnectReason::_set_SequenceOutOfBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetDisconnectReason", "SequenceOutOfBounds", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetDisconnectReason SendWindowFull
::Fusion::Sockets::NetDisconnectReason Fusion::Sockets::NetDisconnectReason::_get_SendWindowFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetDisconnectReason::_get_SendWindowFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetDisconnectReason>("Fusion.Sockets", "NetDisconnectReason", "SendWindowFull"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetDisconnectReason SendWindowFull
void Fusion::Sockets::NetDisconnectReason::_set_SendWindowFull(::Fusion::Sockets::NetDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetDisconnectReason::_set_SendWindowFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetDisconnectReason", "SendWindowFull", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetDisconnectReason ByRemote
::Fusion::Sockets::NetDisconnectReason Fusion::Sockets::NetDisconnectReason::_get_ByRemote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetDisconnectReason::_get_ByRemote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetDisconnectReason>("Fusion.Sockets", "NetDisconnectReason", "ByRemote"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetDisconnectReason ByRemote
void Fusion::Sockets::NetDisconnectReason::_set_ByRemote(::Fusion::Sockets::NetDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetDisconnectReason::_set_ByRemote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetDisconnectReason", "ByRemote", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Fusion::Sockets::NetDisconnectReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetDisconnectReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetNotifyHeader
#include "Fusion/Sockets/NetNotifyHeader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetPacketType PacketType
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetPacketType& Fusion::Sockets::NetNotifyHeader::dyn_PacketType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetNotifyHeader::dyn_PacketType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PacketType"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetPacketType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Fragment
[[deprecated("Use field access instead!")]] uint8_t& Fusion::Sockets::NetNotifyHeader::dyn_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetNotifyHeader::dyn_Fragment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Fragment"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 Sequence
[[deprecated("Use field access instead!")]] uint16_t& Fusion::Sockets::NetNotifyHeader::dyn_Sequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetNotifyHeader::dyn_Sequence");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sequence"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 AckSequence
[[deprecated("Use field access instead!")]] uint16_t& Fusion::Sockets::NetNotifyHeader::dyn_AckSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetNotifyHeader::dyn_AckSequence");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AckSequence"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 AckMask
[[deprecated("Use field access instead!")]] uint64_t& Fusion::Sockets::NetNotifyHeader::dyn_AckMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetNotifyHeader::dyn_AckMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AckMask"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetNotifyHeader.CreateData
::Fusion::Sockets::NetNotifyHeader Fusion::Sockets::NetNotifyHeader::CreateData(uint16_t sequence, uint16_t ackSequence, uint64_t ackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetNotifyHeader::CreateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetNotifyHeader", "CreateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequence), ::il2cpp_utils::ExtractType(ackSequence), ::il2cpp_utils::ExtractType(ackMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetNotifyHeader, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sequence, ackSequence, ackMask);
}
// Autogenerated method: Fusion.Sockets.NetNotifyHeader.CreateAcks
::Fusion::Sockets::NetNotifyHeader Fusion::Sockets::NetNotifyHeader::CreateAcks(uint16_t ackSequence, uint64_t ackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetNotifyHeader::CreateAcks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetNotifyHeader", "CreateAcks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ackSequence), ::il2cpp_utils::ExtractType(ackMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetNotifyHeader, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ackSequence, ackMask);
}
// Autogenerated method: Fusion.Sockets.NetNotifyHeader.ToString
::StringW Fusion::Sockets::NetNotifyHeader::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetNotifyHeader::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetPacketType
#include "Fusion/Sockets/NetPacketType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetPacketType Command
::Fusion::Sockets::NetPacketType Fusion::Sockets::NetPacketType::_get_Command() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPacketType::_get_Command");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetPacketType>("Fusion.Sockets", "NetPacketType", "Command"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetPacketType Command
void Fusion::Sockets::NetPacketType::_set_Command(::Fusion::Sockets::NetPacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPacketType::_set_Command");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPacketType", "Command", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetPacketType UnreliableData
::Fusion::Sockets::NetPacketType Fusion::Sockets::NetPacketType::_get_UnreliableData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPacketType::_get_UnreliableData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetPacketType>("Fusion.Sockets", "NetPacketType", "UnreliableData"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetPacketType UnreliableData
void Fusion::Sockets::NetPacketType::_set_UnreliableData(::Fusion::Sockets::NetPacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPacketType::_set_UnreliableData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPacketType", "UnreliableData", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetPacketType NotifyData
::Fusion::Sockets::NetPacketType Fusion::Sockets::NetPacketType::_get_NotifyData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPacketType::_get_NotifyData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetPacketType>("Fusion.Sockets", "NetPacketType", "NotifyData"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetPacketType NotifyData
void Fusion::Sockets::NetPacketType::_set_NotifyData(::Fusion::Sockets::NetPacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPacketType::_set_NotifyData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPacketType", "NotifyData", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetPacketType NotifyAcks
::Fusion::Sockets::NetPacketType Fusion::Sockets::NetPacketType::_get_NotifyAcks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPacketType::_get_NotifyAcks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetPacketType>("Fusion.Sockets", "NetPacketType", "NotifyAcks"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetPacketType NotifyAcks
void Fusion::Sockets::NetPacketType::_set_NotifyAcks(::Fusion::Sockets::NetPacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPacketType::_set_NotifyAcks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPacketType", "NotifyAcks", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetPacketType Unconnected
::Fusion::Sockets::NetPacketType Fusion::Sockets::NetPacketType::_get_Unconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPacketType::_get_Unconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetPacketType>("Fusion.Sockets", "NetPacketType", "Unconnected"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetPacketType Unconnected
void Fusion::Sockets::NetPacketType::_set_Unconnected(::Fusion::Sockets::NetPacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPacketType::_set_Unconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPacketType", "Unconnected", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetPacketType MtuDiscoveryReq
::Fusion::Sockets::NetPacketType Fusion::Sockets::NetPacketType::_get_MtuDiscoveryReq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPacketType::_get_MtuDiscoveryReq");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetPacketType>("Fusion.Sockets", "NetPacketType", "MtuDiscoveryReq"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetPacketType MtuDiscoveryReq
void Fusion::Sockets::NetPacketType::_set_MtuDiscoveryReq(::Fusion::Sockets::NetPacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPacketType::_set_MtuDiscoveryReq");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPacketType", "MtuDiscoveryReq", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetPacketType MtuDiscoveryRep
::Fusion::Sockets::NetPacketType Fusion::Sockets::NetPacketType::_get_MtuDiscoveryRep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPacketType::_get_MtuDiscoveryRep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetPacketType>("Fusion.Sockets", "NetPacketType", "MtuDiscoveryRep"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetPacketType MtuDiscoveryRep
void Fusion::Sockets::NetPacketType::_set_MtuDiscoveryRep(::Fusion::Sockets::NetPacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPacketType::_set_MtuDiscoveryRep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPacketType", "MtuDiscoveryRep", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetPacketType NotifyReliableData
::Fusion::Sockets::NetPacketType Fusion::Sockets::NetPacketType::_get_NotifyReliableData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPacketType::_get_NotifyReliableData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetPacketType>("Fusion.Sockets", "NetPacketType", "NotifyReliableData"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetPacketType NotifyReliableData
void Fusion::Sockets::NetPacketType::_set_NotifyReliableData(::Fusion::Sockets::NetPacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPacketType::_set_NotifyReliableData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPacketType", "NotifyReliableData", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Fusion::Sockets::NetPacketType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPacketType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetPeer
#include "Fusion/Sockets/NetPeer.hpp"
// Including type: Fusion.Sockets.NetPeerGroup
#include "Fusion/Sockets/NetPeerGroup.hpp"
// Including type: Fusion.Sockets.NetPeerGroupMap
#include "Fusion/Sockets/NetPeerGroupMap.hpp"
// Including type: Fusion.Sockets.NetCommandRefused
#include "Fusion/Sockets/NetCommandRefused.hpp"
// Including type: Fusion.Sockets.NetBitBuffer
#include "Fusion/Sockets/NetBitBuffer.hpp"
// Including type: Fusion.Sockets.NetBitBufferBlock
#include "Fusion/Sockets/NetBitBufferBlock.hpp"
// Including type: Fusion.Sockets.INetSocket
#include "Fusion/Sockets/INetSocket.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: Fusion.Sockets.INetPeerGroupCallbacks
#include "Fusion/Sockets/INetPeerGroupCallbacks.hpp"
// Including type: Fusion.Profiling.FusionSampler
#include "Fusion/Profiling/FusionSampler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 DEFAULT_HEADERS
int Fusion::Sockets::NetPeer::_get_DEFAULT_HEADERS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::_get_DEFAULT_HEADERS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.Sockets", "NetPeer", "DEFAULT_HEADERS"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DEFAULT_HEADERS
void Fusion::Sockets::NetPeer::_set_DEFAULT_HEADERS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::_set_DEFAULT_HEADERS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPeer", "DEFAULT_HEADERS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MIN_MTU_BYTES
int Fusion::Sockets::NetPeer::_get_MIN_MTU_BYTES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::_get_MIN_MTU_BYTES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.Sockets", "NetPeer", "MIN_MTU_BYTES"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MIN_MTU_BYTES
void Fusion::Sockets::NetPeer::_set_MIN_MTU_BYTES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::_set_MIN_MTU_BYTES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPeer", "MIN_MTU_BYTES", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MIN_MTU_BITS
int Fusion::Sockets::NetPeer::_get_MIN_MTU_BITS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::_get_MIN_MTU_BITS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.Sockets", "NetPeer", "MIN_MTU_BITS"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MIN_MTU_BITS
void Fusion::Sockets::NetPeer::_set_MIN_MTU_BITS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::_set_MIN_MTU_BITS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPeer", "MIN_MTU_BITS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MAX_MTU_BYTES
int Fusion::Sockets::NetPeer::_get_MAX_MTU_BYTES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::_get_MAX_MTU_BYTES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.Sockets", "NetPeer", "MAX_MTU_BYTES"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MAX_MTU_BYTES
void Fusion::Sockets::NetPeer::_set_MAX_MTU_BYTES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::_set_MAX_MTU_BYTES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPeer", "MAX_MTU_BYTES", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MAX_MTU_BITS
int Fusion::Sockets::NetPeer::_get_MAX_MTU_BITS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::_get_MAX_MTU_BITS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.Sockets", "NetPeer", "MAX_MTU_BITS"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MAX_MTU_BITS
void Fusion::Sockets::NetPeer::_set_MAX_MTU_BITS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::_set_MAX_MTU_BITS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPeer", "MAX_MTU_BITS", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 FRAG_MAX_COUNT
int Fusion::Sockets::NetPeer::_get_FRAG_MAX_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::_get_FRAG_MAX_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.Sockets", "NetPeer", "FRAG_MAX_COUNT"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 FRAG_MAX_COUNT
void Fusion::Sockets::NetPeer::_set_FRAG_MAX_COUNT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::_set_FRAG_MAX_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPeer", "FRAG_MAX_COUNT", value));
}
// Autogenerated static field getter
// Get static field: static System.Byte FRAG_END_BIT
uint8_t Fusion::Sockets::NetPeer::_get_FRAG_END_BIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::_get_FRAG_END_BIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Fusion.Sockets", "NetPeer", "FRAG_END_BIT"));
}
// Autogenerated static field setter
// Set static field: static System.Byte FRAG_END_BIT
void Fusion::Sockets::NetPeer::_set_FRAG_END_BIT(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::_set_FRAG_END_BIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPeer", "FRAG_END_BIT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 STATE_RUNNING
int Fusion::Sockets::NetPeer::_get_STATE_RUNNING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::_get_STATE_RUNNING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.Sockets", "NetPeer", "STATE_RUNNING"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 STATE_RUNNING
void Fusion::Sockets::NetPeer::_set_STATE_RUNNING(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::_set_STATE_RUNNING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPeer", "STATE_RUNNING", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 STATE_SHUTDOWN
int Fusion::Sockets::NetPeer::_get_STATE_SHUTDOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::_get_STATE_SHUTDOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Fusion.Sockets", "NetPeer", "STATE_SHUTDOWN"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 STATE_SHUTDOWN
void Fusion::Sockets::NetPeer::_set_STATE_SHUTDOWN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::_set_STATE_SHUTDOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPeer", "STATE_SHUTDOWN", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _state
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetPeer::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::dyn__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetConfig _config
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConfig& Fusion::Sockets::NetPeer::dyn__config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::dyn__config");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_config"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConfig*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Timer _recvTimer
[[deprecated("Use field access instead!")]] ::Fusion::Timer& Fusion::Sockets::NetPeer::dyn__recvTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::dyn__recvTimer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recvTimer"))->offset;
  return *reinterpret_cast<::Fusion::Timer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte* _fragmentBuffer
[[deprecated("Use field access instead!")]] uint8_t*& Fusion::Sockets::NetPeer::dyn__fragmentBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::dyn__fragmentBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fragmentBuffer"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Fusion.Sockets.NetSocket _socket
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetSocket& Fusion::Sockets::NetPeer::dyn__socket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::dyn__socket");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_socket"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetSocket*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetAddress _address
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetAddress& Fusion::Sockets::NetPeer::dyn__address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::dyn__address");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_address"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetAddress*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetBitBufferStack _sendStack
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetBitBufferStack& Fusion::Sockets::NetPeer::dyn__sendStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::dyn__sendStack");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sendStack"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetBitBufferStack*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetPeerGroup* _groups
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetPeerGroup*& Fusion::Sockets::NetPeer::dyn__groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::dyn__groups");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groups"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetPeerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetPeerGroupMap* _groupsMap
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetPeerGroupMap*& Fusion::Sockets::NetPeer::dyn__groupsMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::dyn__groupsMap");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groupsMap"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetPeerGroupMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32* _groupsAssigned
[[deprecated("Use field access instead!")]] int*& Fusion::Sockets::NetPeer::dyn__groupsAssigned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::dyn__groupsAssigned");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groupsAssigned"))->offset;
  return *reinterpret_cast<int**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetCommandRefused* _refusedCommand
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetCommandRefused*& Fusion::Sockets::NetPeer::dyn__refusedCommand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::dyn__refusedCommand");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refusedCommand"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetCommandRefused**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetBitBuffer* _recv
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetBitBuffer*& Fusion::Sockets::NetPeer::dyn__recv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::dyn__recv");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recv"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetBitBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetBitBufferBlock* _recvBlock
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetBitBufferBlock*& Fusion::Sockets::NetPeer::dyn__recvBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::dyn__recvBlock");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recvBlock"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetBitBufferBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetPeer.get_Address
::Fusion::Sockets::NetAddress Fusion::Sockets::NetPeer::get_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::get_Address");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Address", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetAddress, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetPeer.get_GroupCount
int Fusion::Sockets::NetPeer::get_GroupCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::get_GroupCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_GroupCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetPeer.GetConfigPointer
::Fusion::Sockets::NetConfig* Fusion::Sockets::NetPeer::GetConfigPointer(::Fusion::Sockets::NetPeer* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::GetConfigPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeer", "GetConfigPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetConfig*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p);
}
// Autogenerated method: Fusion.Sockets.NetPeer.GetGroup
::Fusion::Sockets::NetPeerGroup* Fusion::Sockets::NetPeer::GetGroup(::Fusion::Sockets::NetPeer* p, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::GetGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeer", "GetGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetPeerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, index);
}
// Autogenerated method: Fusion.Sockets.NetPeer.Recv
void Fusion::Sockets::NetPeer::Recv(::Fusion::Sockets::NetPeer* p, ::Fusion::Sockets::INetSocket* socket, ::System::Random* rng) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::Recv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeer", "Recv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(rng)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, socket, rng);
}
// Autogenerated method: Fusion.Sockets.NetPeer.Recv
void Fusion::Sockets::NetPeer::Recv(::Fusion::Sockets::NetPeer* p, ::Fusion::Sockets::INetSocket* socket, bool* work, ::System::Random* rng) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::Recv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeer", "Recv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(work), ::il2cpp_utils::ExtractType(rng)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, socket, work, rng);
}
// Autogenerated method: Fusion.Sockets.NetPeer.RemapAddress
void Fusion::Sockets::NetPeer::RemapAddress(::Fusion::Sockets::NetPeer* p, ::Fusion::Sockets::NetAddress oldAddress, ::Fusion::Sockets::NetAddress newAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::RemapAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeer", "RemapAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(oldAddress), ::il2cpp_utils::ExtractType(newAddress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, oldAddress, newAddress);
}
// Autogenerated method: Fusion.Sockets.NetPeer.Send
void Fusion::Sockets::NetPeer::Send(::Fusion::Sockets::NetPeer* p, ::Fusion::Sockets::INetSocket* socket) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::Send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeer", "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(socket)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, socket);
}
// Autogenerated method: Fusion.Sockets.NetPeer.Send
void Fusion::Sockets::NetPeer::Send(::Fusion::Sockets::NetPeer* p, ::Fusion::Sockets::INetSocket* socket, bool* work) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::Send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeer", "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(work)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, socket, work);
}
// Autogenerated method: Fusion.Sockets.NetPeer.Initialize
::Fusion::Sockets::NetPeer* Fusion::Sockets::NetPeer::Initialize(::Fusion::Sockets::NetConfig config, ::Fusion::Sockets::INetSocket* socket) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeer", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(config), ::il2cpp_utils::ExtractType(socket)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetPeer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, config, socket);
}
// Autogenerated method: Fusion.Sockets.NetPeer.Initialize
void Fusion::Sockets::NetPeer::Initialize(::Fusion::Sockets::NetPeer* p, ::Fusion::Sockets::NetConfig config, ::Fusion::Sockets::INetSocket* socket) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeer", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(config), ::il2cpp_utils::ExtractType(socket)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, config, socket);
}
// Autogenerated method: Fusion.Sockets.NetPeer.Destroy
void Fusion::Sockets::NetPeer::Destroy(::Fusion::Sockets::NetPeer* p, ::Fusion::Sockets::INetSocket* socket, ::Fusion::Sockets::INetPeerGroupCallbacks* callbacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeer", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(callbacks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, socket, callbacks);
}
// Autogenerated method: Fusion.Sockets.NetPeer.DestroySocket
void Fusion::Sockets::NetPeer::DestroySocket(::Fusion::Sockets::NetPeer* p, ::Fusion::Sockets::INetSocket* socket, ::Fusion::Sockets::INetPeerGroupCallbacks* callbacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::DestroySocket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeer", "DestroySocket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(callbacks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, socket, callbacks);
}
// Autogenerated method: Fusion.Sockets.NetPeer.FindGroupWithLeastAssignedAddresses
int16_t Fusion::Sockets::NetPeer::FindGroupWithLeastAssignedAddresses(::Fusion::Sockets::NetPeer* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::FindGroupWithLeastAssignedAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeer", "FindGroupWithLeastAssignedAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p);
}
// Autogenerated method: Fusion.Sockets.NetPeer.RecvInternal
void Fusion::Sockets::NetPeer::RecvInternal(::Fusion::Sockets::NetPeer* p, ::Fusion::Sockets::INetSocket* socket, bool* work, ::System::Random* rng, ::Fusion::Profiling::FusionSampler* sampler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::RecvInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeer", "RecvInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(work), ::il2cpp_utils::ExtractType(rng), ::il2cpp_utils::ExtractType(sampler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, socket, work, rng, sampler);
}
// Autogenerated method: Fusion.Sockets.NetPeer.RecvBufferPushToGroup
void Fusion::Sockets::NetPeer::RecvBufferPushToGroup(::Fusion::Sockets::NetPeer* p, ::Fusion::Sockets::INetSocket* socket, ::System::Random* rng) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::RecvBufferPushToGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeer", "RecvBufferPushToGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(rng)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, socket, rng);
}
// Autogenerated method: Fusion.Sockets.NetPeer.SendInternal
void Fusion::Sockets::NetPeer::SendInternal(::Fusion::Sockets::NetPeer* p, ::Fusion::Sockets::INetSocket* socket, bool* work) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::SendInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeer", "SendInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(work)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, socket, work);
}
// Autogenerated method: Fusion.Sockets.NetPeer.SendFromStack
void Fusion::Sockets::NetPeer::SendFromStack(::Fusion::Sockets::NetPeer* p, ::Fusion::Sockets::INetSocket* socket, bool* work) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::SendFromStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeer", "SendFromStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(work)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, socket, work);
}
// Autogenerated method: Fusion.Sockets.NetPeer.RecvBufferAvailable
bool Fusion::Sockets::NetPeer::RecvBufferAvailable(::Fusion::Sockets::NetPeer* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::RecvBufferAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeer", "RecvBufferAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p);
}
// Autogenerated method: Fusion.Sockets.NetPeer.RecvExpired
bool Fusion::Sockets::NetPeer::RecvExpired(::Fusion::Sockets::NetPeer* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeer::RecvExpired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeer", "RecvExpired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetPeerGroup
#include "Fusion/Sockets/NetPeerGroup.hpp"
// Including type: Fusion.Sockets.NetPeer
#include "Fusion/Sockets/NetPeer.hpp"
// Including type: Fusion.Sockets.NetBitBufferBlock
#include "Fusion/Sockets/NetBitBufferBlock.hpp"
// Including type: Fusion.Sockets.NetConnectionStatus
#include "Fusion/Sockets/NetConnectionStatus.hpp"
// Including type: Fusion.Sockets.INetPeerGroupCallbacks
#include "Fusion/Sockets/INetPeerGroupCallbacks.hpp"
// Including type: Fusion.Sockets.NetConnection
#include "Fusion/Sockets/NetConnection.hpp"
// Including type: Fusion.Sockets.NetDisconnectReason
#include "Fusion/Sockets/NetDisconnectReason.hpp"
// Including type: Fusion.Sockets.NetBitBuffer
#include "Fusion/Sockets/NetBitBuffer.hpp"
// Including type: Fusion.Sockets.NetNotifyHeader
#include "Fusion/Sockets/NetNotifyHeader.hpp"
// Including type: Fusion.Sockets.NetSendEnvelope
#include "Fusion/Sockets/NetSendEnvelope.hpp"
// Including type: Fusion.Sockets.NetCommandRefused
#include "Fusion/Sockets/NetCommandRefused.hpp"
// Including type: Fusion.Sockets.NetCommandDisconnect
#include "Fusion/Sockets/NetCommandDisconnect.hpp"
// Including type: Fusion.Sockets.NetCommandConnect
#include "Fusion/Sockets/NetCommandConnect.hpp"
// Including type: Fusion.Sockets.NetCommandAccepted
#include "Fusion/Sockets/NetCommandAccepted.hpp"
// Including type: Fusion.Sockets.NetConnectionMap/Iterator
#include "Fusion/Sockets/NetConnectionMap_Iterator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Double RELIABLE_SEND_INTERVAL
double Fusion::Sockets::NetPeerGroup::_get_RELIABLE_SEND_INTERVAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::_get_RELIABLE_SEND_INTERVAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("Fusion.Sockets", "NetPeerGroup", "RELIABLE_SEND_INTERVAL"));
}
// Autogenerated static field setter
// Set static field: static private System.Double RELIABLE_SEND_INTERVAL
void Fusion::Sockets::NetPeerGroup::_set_RELIABLE_SEND_INTERVAL(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::_set_RELIABLE_SEND_INTERVAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPeerGroup", "RELIABLE_SEND_INTERVAL", value));
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetPeer* _peer
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetPeer*& Fusion::Sockets::NetPeerGroup::dyn__peer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::dyn__peer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_peer"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetPeer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 _group
[[deprecated("Use field access instead!")]] int16_t& Fusion::Sockets::NetPeerGroup::dyn__group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::dyn__group");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_group"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Timer _clock
[[deprecated("Use field access instead!")]] ::Fusion::Timer& Fusion::Sockets::NetPeerGroup::dyn__clock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::dyn__clock");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clock"))->offset;
  return *reinterpret_cast<::Fusion::Timer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetConfig _config
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConfig& Fusion::Sockets::NetPeerGroup::dyn__config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::dyn__config");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_config"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConfig*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _counter
[[deprecated("Use field access instead!")]] uint& Fusion::Sockets::NetPeerGroup::dyn__counter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::dyn__counter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_counter"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _sendHead
[[deprecated("Use field access instead!")]] ::System::IntPtr& Fusion::Sockets::NetPeerGroup::dyn__sendHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::dyn__sendHead");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sendHead"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _recvHead
[[deprecated("Use field access instead!")]] ::System::IntPtr& Fusion::Sockets::NetPeerGroup::dyn__recvHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::dyn__recvHead");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recvHead"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetBitBufferStack _recvStack
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetBitBufferStack& Fusion::Sockets::NetPeerGroup::dyn__recvStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::dyn__recvStack");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recvStack"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetBitBufferStack*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetBitBufferBlock* _sendBlock
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetBitBufferBlock*& Fusion::Sockets::NetPeerGroup::dyn__sendBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::dyn__sendBlock");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sendBlock"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetBitBufferBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Sockets.NetConnectionMap* _connectionsMap
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetConnectionMap*& Fusion::Sockets::NetPeerGroup::dyn__connectionsMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::dyn__connectionsMap");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionsMap"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetConnectionMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.get_Time
double Fusion::Sockets::NetPeerGroup::get_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::get_Time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.get_Group
int Fusion::Sockets::NetPeerGroup::get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::get_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.Dispose
void Fusion::Sockets::NetPeerGroup::Dispose(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* callbacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(callbacks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, callbacks);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.GetConnectionByIndex
::Fusion::Sockets::NetConnection* Fusion::Sockets::NetPeerGroup::GetConnectionByIndex(::Fusion::Sockets::NetPeerGroup* g, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::GetConnectionByIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "GetConnectionByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetConnection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, index);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.TryGetConnectionByIndex
bool Fusion::Sockets::NetPeerGroup::TryGetConnectionByIndex(::Fusion::Sockets::NetPeerGroup* g, int index, ByRef<::Fusion::Sockets::NetConnection*> connection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::TryGetConnectionByIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "TryGetConnectionByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::Fusion::Sockets::NetConnection*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, index, byref(connection));
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.ConnectionIterator
::Fusion::Sockets::NetConnectionMap::Iterator Fusion::Sockets::NetPeerGroup::ConnectionIterator(::Fusion::Sockets::NetPeerGroup* g) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::ConnectionIterator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "ConnectionIterator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetConnectionMap::Iterator, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.Connect
void Fusion::Sockets::NetPeerGroup::Connect(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::NetAddress address, ::ArrayW<uint8_t> token, ::ArrayW<uint8_t> uniqueId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(uniqueId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, address, token, uniqueId);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.Connect
void Fusion::Sockets::NetPeerGroup::Connect(::Fusion::Sockets::NetPeerGroup* g, ::StringW ip, uint16_t port, ::ArrayW<uint8_t> token, ::ArrayW<uint8_t> uniqueId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(ip), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(uniqueId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, ip, port, token, uniqueId);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.Disconnect
void Fusion::Sockets::NetPeerGroup::Disconnect(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::NetConnection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, c);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.DisconnectInternal
void Fusion::Sockets::NetPeerGroup::DisconnectInternal(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::NetConnection* c, ::Fusion::Sockets::NetDisconnectReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::DisconnectInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "DisconnectInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, c, reason);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.Update
void Fusion::Sockets::NetPeerGroup::Update(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.Initialize
void Fusion::Sockets::NetPeerGroup::Initialize(int16_t groupIndex, ::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::NetPeer* p, ::Fusion::Sockets::NetConfig config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupIndex), ::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(config)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groupIndex, g, p, config);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.PopSendHead
::System::IntPtr Fusion::Sockets::NetPeerGroup::PopSendHead(::Fusion::Sockets::NetPeerGroup* g) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::PopSendHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "PopSendHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.PushOnRecvHead
void Fusion::Sockets::NetPeerGroup::PushOnRecvHead(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::NetBitBuffer* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::PushOnRecvHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "PushOnRecvHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, b);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.UpdateConnections
void Fusion::Sockets::NetPeerGroup::UpdateConnections(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::UpdateConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "UpdateConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.SendReliable
void Fusion::Sockets::NetPeerGroup::SendReliable(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::NetConnection* c, int dataKey, uint8_t* data, int dataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::SendReliable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "SendReliable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(dataKey), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, c, dataKey, data, dataLength);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.ChangeConnectionAddressDuringConnecting
void Fusion::Sockets::NetPeerGroup::ChangeConnectionAddressDuringConnecting(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::NetConnection* c, ::Fusion::Sockets::NetAddress newAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::ChangeConnectionAddressDuringConnecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "ChangeConnectionAddressDuringConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(newAddress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, c, newAddress);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.SendCommandConnect
void Fusion::Sockets::NetPeerGroup::SendCommandConnect(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::SendCommandConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "SendCommandConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb, c);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.UpdateConnecting
void Fusion::Sockets::NetPeerGroup::UpdateConnecting(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::UpdateConnecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "UpdateConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb, c);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.UpdateConnected
void Fusion::Sockets::NetPeerGroup::UpdateConnected(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::UpdateConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "UpdateConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb, c);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.UpdateDisconnected
void Fusion::Sockets::NetPeerGroup::UpdateDisconnected(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::UpdateDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "UpdateDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb, c);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.UpdateShutdown
void Fusion::Sockets::NetPeerGroup::UpdateShutdown(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::UpdateShutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "UpdateShutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb, c);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.SendUnconnected
void Fusion::Sockets::NetPeerGroup::SendUnconnected(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::NetBitBuffer* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::SendUnconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "SendUnconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, b);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.Send
void Fusion::Sockets::NetPeerGroup::Send(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::NetConnection* c, ::Fusion::Sockets::NetBitBuffer* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::Send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, c, b);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.GetConnectionSendBuffer
bool Fusion::Sockets::NetPeerGroup::GetConnectionSendBuffer(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::NetConnection* c, ByRef<::Fusion::Sockets::NetBitBuffer*> b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::GetConnectionSendBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "GetConnectionSendBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractIndependentType<::Fusion::Sockets::NetBitBuffer*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, c, byref(b));
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.SendUnconnectedData
bool Fusion::Sockets::NetPeerGroup::SendUnconnectedData(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::NetAddress address, void* data, int dataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::SendUnconnectedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "SendUnconnectedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, address, data, dataLength);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.GetNotifyDataBuffer
bool Fusion::Sockets::NetPeerGroup::GetNotifyDataBuffer(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::NetConnection* c, ByRef<::Fusion::Sockets::NetBitBuffer*> b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::GetNotifyDataBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "GetNotifyDataBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractIndependentType<::Fusion::Sockets::NetBitBuffer*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, c, byref(b));
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.SendNotifyDataBuffer
bool Fusion::Sockets::NetPeerGroup::SendNotifyDataBuffer(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::NetConnection* c, ::Fusion::Sockets::NetBitBuffer* b, void* userData, ::Fusion::Sockets::INetPeerGroupCallbacks* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::SendNotifyDataBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "SendNotifyDataBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(cb)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, c, b, userData, cb);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.Receive
void Fusion::Sockets::NetPeerGroup::Receive(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::Receive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "Receive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.HandlePacketUnconnected
void Fusion::Sockets::NetPeerGroup::HandlePacketUnconnected(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetBitBuffer* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::HandlePacketUnconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "HandlePacketUnconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb, b);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.HandlePacket
void Fusion::Sockets::NetPeerGroup::HandlePacket(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c, ::Fusion::Sockets::NetBitBuffer* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::HandlePacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "HandlePacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb, c, b);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.HandlePacketNotifyAcks
void Fusion::Sockets::NetPeerGroup::HandlePacketNotifyAcks(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c, ::Fusion::Sockets::NetBitBuffer* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::HandlePacketNotifyAcks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "HandlePacketNotifyAcks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb, c, b);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.HandlePacketNotifyData
void Fusion::Sockets::NetPeerGroup::HandlePacketNotifyData(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c, ::Fusion::Sockets::NetBitBuffer* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::HandlePacketNotifyData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "HandlePacketNotifyData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb, c, b);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.HandlePacketNotifyData_Part2
void Fusion::Sockets::NetPeerGroup::HandlePacketNotifyData_Part2(::Fusion::Sockets::NetNotifyHeader header, int sequenceDistance, ::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c, ::Fusion::Sockets::NetBitBuffer* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::HandlePacketNotifyData_Part2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "HandlePacketNotifyData_Part2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(header), ::il2cpp_utils::ExtractType(sequenceDistance), ::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, header, sequenceDistance, g, cb, c, b);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.HandlePacketAcks
void Fusion::Sockets::NetPeerGroup::HandlePacketAcks(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c, ::Fusion::Sockets::NetNotifyHeader h) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::HandlePacketAcks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "HandlePacketAcks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(h)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb, c, h);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.LostEnvelope
void Fusion::Sockets::NetPeerGroup::LostEnvelope(::Fusion::Sockets::NetSendEnvelope envelope, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::LostEnvelope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "LostEnvelope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(envelope), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, envelope, cb, c);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.HandlePacketUnreliableData
void Fusion::Sockets::NetPeerGroup::HandlePacketUnreliableData(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c, ::Fusion::Sockets::NetBitBuffer* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::HandlePacketUnreliableData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "HandlePacketUnreliableData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb, c, b);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.HandlePacketCommand
void Fusion::Sockets::NetPeerGroup::HandlePacketCommand(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c, ::Fusion::Sockets::NetBitBuffer* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::HandlePacketCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "HandlePacketCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb, c, b);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.HandleCommandRefused
void Fusion::Sockets::NetPeerGroup::HandleCommandRefused(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c, ::Fusion::Sockets::NetCommandRefused cmd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::HandleCommandRefused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "HandleCommandRefused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(cmd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb, c, cmd);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.HandleCommandDisconnect
void Fusion::Sockets::NetPeerGroup::HandleCommandDisconnect(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c, ::Fusion::Sockets::NetCommandDisconnect cmd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::HandleCommandDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "HandleCommandDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(cmd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb, c, cmd);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.HandleCommandConnect
void Fusion::Sockets::NetPeerGroup::HandleCommandConnect(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c, ::Fusion::Sockets::NetCommandConnect cmd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::HandleCommandConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "HandleCommandConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(cmd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb, c, cmd);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.HandleCommandAccepted
void Fusion::Sockets::NetPeerGroup::HandleCommandAccepted(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c, ::Fusion::Sockets::NetCommandAccepted cmd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::HandleCommandAccepted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "HandleCommandAccepted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(cmd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb, c, cmd);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.QueueAddressUnmap
void Fusion::Sockets::NetPeerGroup::QueueAddressUnmap(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::NetConnection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::QueueAddressUnmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "QueueAddressUnmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, c);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.ChangeConnectionStatus
void Fusion::Sockets::NetPeerGroup::ChangeConnectionStatus(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c, ::Fusion::Sockets::NetConnectionStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::ChangeConnectionStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "ChangeConnectionStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(status)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb, c, status);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.ReleaseConnection
void Fusion::Sockets::NetPeerGroup::ReleaseConnection(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::INetPeerGroupCallbacks* cb, ::Fusion::Sockets::NetConnection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::ReleaseConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "ReleaseConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, cb, c);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroup.AllocateConnection
::Fusion::Sockets::NetConnection* Fusion::Sockets::NetPeerGroup::AllocateConnection(::Fusion::Sockets::NetPeerGroup* g, ::Fusion::Sockets::NetAddress address, ::ArrayW<uint8_t> token, ::ArrayW<uint8_t> uniqueId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroup::AllocateConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroup", "AllocateConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(uniqueId)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetConnection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g, address, token, uniqueId);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.INetPeerGroupCallbacks
#include "Fusion/Sockets/INetPeerGroupCallbacks.hpp"
// Including type: Fusion.Sockets.NetConnection
#include "Fusion/Sockets/NetConnection.hpp"
// Including type: Fusion.Sockets.NetDisconnectReason
#include "Fusion/Sockets/NetDisconnectReason.hpp"
// Including type: Fusion.Sockets.NetBitBuffer
#include "Fusion/Sockets/NetBitBuffer.hpp"
// Including type: Fusion.Sockets.NetSendEnvelope
#include "Fusion/Sockets/NetSendEnvelope.hpp"
// Including type: Fusion.Sockets.NetAddress
#include "Fusion/Sockets/NetAddress.hpp"
// Including type: Fusion.Sockets.NetConnectFailedReason
#include "Fusion/Sockets/NetConnectFailedReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Fusion.Sockets.INetPeerGroupCallbacks.OnConnected
void Fusion::Sockets::INetPeerGroupCallbacks::OnConnected(::Fusion::Sockets::NetConnection* connection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetPeerGroupCallbacks::OnConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetPeerGroupCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connection);
}
// Autogenerated method: Fusion.Sockets.INetPeerGroupCallbacks.OnDisconnected
void Fusion::Sockets::INetPeerGroupCallbacks::OnDisconnected(::Fusion::Sockets::NetConnection* connection, ::Fusion::Sockets::NetDisconnectReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetPeerGroupCallbacks::OnDisconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetPeerGroupCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connection, reason);
}
// Autogenerated method: Fusion.Sockets.INetPeerGroupCallbacks.OnUnreliableData
void Fusion::Sockets::INetPeerGroupCallbacks::OnUnreliableData(::Fusion::Sockets::NetConnection* connection, ::Fusion::Sockets::NetBitBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetPeerGroupCallbacks::OnUnreliableData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetPeerGroupCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connection, buffer);
}
// Autogenerated method: Fusion.Sockets.INetPeerGroupCallbacks.OnUnconnectedData
void Fusion::Sockets::INetPeerGroupCallbacks::OnUnconnectedData(::Fusion::Sockets::NetBitBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetPeerGroupCallbacks::OnUnconnectedData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetPeerGroupCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: Fusion.Sockets.INetPeerGroupCallbacks.OnNotifyData
void Fusion::Sockets::INetPeerGroupCallbacks::OnNotifyData(::Fusion::Sockets::NetConnection* connection, ::Fusion::Sockets::NetBitBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetPeerGroupCallbacks::OnNotifyData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetPeerGroupCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connection, buffer);
}
// Autogenerated method: Fusion.Sockets.INetPeerGroupCallbacks.OnNotifyLost
void Fusion::Sockets::INetPeerGroupCallbacks::OnNotifyLost(::Fusion::Sockets::NetConnection* connection, ::Fusion::Sockets::NetSendEnvelope envelope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetPeerGroupCallbacks::OnNotifyLost");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetPeerGroupCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connection, envelope);
}
// Autogenerated method: Fusion.Sockets.INetPeerGroupCallbacks.OnNotifyDelivered
void Fusion::Sockets::INetPeerGroupCallbacks::OnNotifyDelivered(::Fusion::Sockets::NetConnection* connection, ::Fusion::Sockets::NetSendEnvelope envelope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetPeerGroupCallbacks::OnNotifyDelivered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetPeerGroupCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connection, envelope);
}
// Autogenerated method: Fusion.Sockets.INetPeerGroupCallbacks.OnNotifyDispose
void Fusion::Sockets::INetPeerGroupCallbacks::OnNotifyDispose(::Fusion::Sockets::NetSendEnvelope envelope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetPeerGroupCallbacks::OnNotifyDispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetPeerGroupCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, envelope);
}
// Autogenerated method: Fusion.Sockets.INetPeerGroupCallbacks.OnReliableData
void Fusion::Sockets::INetPeerGroupCallbacks::OnReliableData(::Fusion::Sockets::NetConnection* connection, int key, uint8_t* data, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetPeerGroupCallbacks::OnReliableData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetPeerGroupCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connection, key, data, length);
}
// Autogenerated method: Fusion.Sockets.INetPeerGroupCallbacks.OnConnectionRequest
bool Fusion::Sockets::INetPeerGroupCallbacks::OnConnectionRequest(::Fusion::Sockets::NetAddress remoteAddress, ::ArrayW<uint8_t> token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetPeerGroupCallbacks::OnConnectionRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetPeerGroupCallbacks*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, remoteAddress, token);
}
// Autogenerated method: Fusion.Sockets.INetPeerGroupCallbacks.OnConnectionFailed
void Fusion::Sockets::INetPeerGroupCallbacks::OnConnectionFailed(::Fusion::Sockets::NetAddress address, ::Fusion::Sockets::NetConnectFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetPeerGroupCallbacks::OnConnectionFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetPeerGroupCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, address, reason);
}
// Autogenerated method: Fusion.Sockets.INetPeerGroupCallbacks.OnConnectionAttempt
void Fusion::Sockets::INetPeerGroupCallbacks::OnConnectionAttempt(::Fusion::Sockets::NetConnection* connection, int attempts, int totalConnectAttempts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::INetPeerGroupCallbacks::OnConnectionAttempt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::Sockets::INetPeerGroupCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connection, attempts, totalConnectAttempts);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetPeerGroupMap
#include "Fusion/Sockets/NetPeerGroupMap.hpp"
// Including type: Fusion.Sockets.NetPeerGroupMap/EntryState
#include "Fusion/Sockets/NetPeerGroupMap_EntryState.hpp"
// Including type: Fusion.Sockets.NetPeerGroupMap/Entry
#include "Fusion/Sockets/NetPeerGroupMap_Entry.hpp"
// Including type: Fusion.Sockets.NetAddress
#include "Fusion/Sockets/NetAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetPeerGroupMap/Entry** Buckets
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetPeerGroupMap::Entry**& Fusion::Sockets::NetPeerGroupMap::dyn_Buckets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::dyn_Buckets");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buckets"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetPeerGroupMap::Entry***>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetPeerGroupMap/Entry* Entries
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetPeerGroupMap::Entry*& Fusion::Sockets::NetPeerGroupMap::dyn_Entries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::dyn_Entries");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entries"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetPeerGroupMap::Entry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Sockets.NetPeerGroupMap/Entry* FreeHead
[[deprecated("Use field access instead!")]] ::Fusion::Sockets::NetPeerGroupMap::Entry*& Fusion::Sockets::NetPeerGroupMap::dyn_FreeHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::dyn_FreeHead");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FreeHead"))->offset;
  return *reinterpret_cast<::Fusion::Sockets::NetPeerGroupMap::Entry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 UsedCount
[[deprecated("Use field access instead!")]] uint64_t& Fusion::Sockets::NetPeerGroupMap::dyn_UsedCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::dyn_UsedCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UsedCount"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 FreeCount
[[deprecated("Use field access instead!")]] uint64_t& Fusion::Sockets::NetPeerGroupMap::dyn_FreeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::dyn_FreeCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FreeCount"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 CapacityUsable
[[deprecated("Use field access instead!")]] uint64_t& Fusion::Sockets::NetPeerGroupMap::dyn_CapacityUsable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::dyn_CapacityUsable");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CapacityUsable"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 CapacityAllocated
[[deprecated("Use field access instead!")]] uint64_t& Fusion::Sockets::NetPeerGroupMap::dyn_CapacityAllocated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::dyn_CapacityAllocated");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CapacityAllocated"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroupMap.Dispose
void Fusion::Sockets::NetPeerGroupMap::Dispose(::Fusion::Sockets::NetPeerGroupMap* map) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroupMap", "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, map);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroupMap.Allocate
::Fusion::Sockets::NetPeerGroupMap* Fusion::Sockets::NetPeerGroupMap::Allocate(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::Allocate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.Sockets", "NetPeerGroupMap", "Allocate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Sockets::NetPeerGroupMap*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, capacity);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroupMap.Remove
int Fusion::Sockets::NetPeerGroupMap::Remove(::Fusion::Sockets::NetAddress address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, address);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroupMap.Insert
bool Fusion::Sockets::NetPeerGroupMap::Insert(::Fusion::Sockets::NetAddress address, int16_t group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(group)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, address, group);
}
// Autogenerated method: Fusion.Sockets.NetPeerGroupMap.Find
int16_t Fusion::Sockets::NetPeerGroupMap::Find(::Fusion::Sockets::NetAddress address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, address);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.Sockets.NetPeerGroupMap/EntryState
#include "Fusion/Sockets/NetPeerGroupMap_EntryState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetPeerGroupMap/EntryState None
::Fusion::Sockets::NetPeerGroupMap::EntryState Fusion::Sockets::NetPeerGroupMap::EntryState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::EntryState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetPeerGroupMap::EntryState>("Fusion.Sockets", "NetPeerGroupMap/EntryState", "None"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetPeerGroupMap/EntryState None
void Fusion::Sockets::NetPeerGroupMap::EntryState::_set_None(::Fusion::Sockets::NetPeerGroupMap::EntryState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::EntryState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPeerGroupMap/EntryState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetPeerGroupMap/EntryState Free
::Fusion::Sockets::NetPeerGroupMap::EntryState Fusion::Sockets::NetPeerGroupMap::EntryState::_get_Free() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::EntryState::_get_Free");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetPeerGroupMap::EntryState>("Fusion.Sockets", "NetPeerGroupMap/EntryState", "Free"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetPeerGroupMap/EntryState Free
void Fusion::Sockets::NetPeerGroupMap::EntryState::_set_Free(::Fusion::Sockets::NetPeerGroupMap::EntryState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::EntryState::_set_Free");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPeerGroupMap/EntryState", "Free", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Sockets.NetPeerGroupMap/EntryState Used
::Fusion::Sockets::NetPeerGroupMap::EntryState Fusion::Sockets::NetPeerGroupMap::EntryState::_get_Used() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::EntryState::_get_Used");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Sockets::NetPeerGroupMap::EntryState>("Fusion.Sockets", "NetPeerGroupMap/EntryState", "Used"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Sockets.NetPeerGroupMap/EntryState Used
void Fusion::Sockets::NetPeerGroupMap::EntryState::_set_Used(::Fusion::Sockets::NetPeerGroupMap::EntryState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::EntryState::_set_Used");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.Sockets", "NetPeerGroupMap/EntryState", "Used", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Fusion::Sockets::NetPeerGroupMap::EntryState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::Sockets::NetPeerGroupMap::EntryState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
