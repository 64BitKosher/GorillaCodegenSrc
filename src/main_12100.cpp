// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.ProxyChain
#include "System/Net/ProxyChain.hpp"
// Including type: System.Net.ProxyChain/ProxyEnumerator
#include "System/Net/ProxyChain_ProxyEnumerator.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.HttpAbortDelegate
#include "System/Net/HttpAbortDelegate.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Net.WebException
#include "System/Net/WebException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Uri> m_Cache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Uri*>*& System::Net::ProxyChain::dyn_m_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::dyn_m_Cache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Cache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Uri*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CacheComplete
[[deprecated("Use field access instead!")]] bool& System::Net::ProxyChain::dyn_m_CacheComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::dyn_m_CacheComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CacheComplete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ProxyChain/ProxyEnumerator m_MainEnumerator
[[deprecated("Use field access instead!")]] ::System::Net::ProxyChain::ProxyEnumerator*& System::Net::ProxyChain::dyn_m_MainEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::dyn_m_MainEnumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MainEnumerator"))->offset;
  return *reinterpret_cast<::System::Net::ProxyChain::ProxyEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri m_Destination
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::ProxyChain::dyn_m_Destination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::dyn_m_Destination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Destination"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpAbortDelegate m_HttpAbortDelegate
[[deprecated("Use field access instead!")]] ::System::Net::HttpAbortDelegate*& System::Net::ProxyChain::dyn_m_HttpAbortDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::dyn_m_HttpAbortDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HttpAbortDelegate"))->offset;
  return *reinterpret_cast<::System::Net::HttpAbortDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.ProxyChain.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Uri*>* System::Net::ProxyChain::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::ProxyChain*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Uri*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ProxyChain.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Net::ProxyChain::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::ProxyChain*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ProxyChain.Dispose
void System::Net::ProxyChain::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::ProxyChain*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ProxyChain.get_Enumerator
::System::Collections::Generic::IEnumerator_1<::System::Uri*>* System::Net::ProxyChain::get_Enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::get_Enumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Enumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Uri*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ProxyChain.get_Destination
::System::Uri* System::Net::ProxyChain::get_Destination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::get_Destination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Destination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ProxyChain.Abort
void System::Net::ProxyChain::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::Abort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::ProxyChain*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ProxyChain.HttpAbort
bool System::Net::ProxyChain::HttpAbort(::System::Net::HttpWebRequest* request, ::System::Net::WebException* webException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::HttpAbort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HttpAbort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(webException)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, request, webException);
}
// Autogenerated method: System.Net.ProxyChain.get_HttpAbortDelegate
::System::Net::HttpAbortDelegate* System::Net::ProxyChain::get_HttpAbortDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::get_HttpAbortDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HttpAbortDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpAbortDelegate*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ProxyChain.GetNextProxy
bool System::Net::ProxyChain::GetNextProxy(ByRef<::System::Uri*> proxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::GetNextProxy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::ProxyChain*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(proxy));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ProxyChain/ProxyEnumerator
#include "System/Net/ProxyChain_ProxyEnumerator.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.ProxyChain m_Chain
[[deprecated("Use field access instead!")]] ::System::Net::ProxyChain*& System::Net::ProxyChain::ProxyEnumerator::dyn_m_Chain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::ProxyEnumerator::dyn_m_Chain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Chain"))->offset;
  return *reinterpret_cast<::System::Net::ProxyChain**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Finished
[[deprecated("Use field access instead!")]] bool& System::Net::ProxyChain::ProxyEnumerator::dyn_m_Finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::ProxyEnumerator::dyn_m_Finished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Finished"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_CurrentIndex
[[deprecated("Use field access instead!")]] int& System::Net::ProxyChain::ProxyEnumerator::dyn_m_CurrentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::ProxyEnumerator::dyn_m_CurrentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TriedDirect
[[deprecated("Use field access instead!")]] bool& System::Net::ProxyChain::ProxyEnumerator::dyn_m_TriedDirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::ProxyEnumerator::dyn_m_TriedDirect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TriedDirect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.ProxyChain/ProxyEnumerator.get_Current
::System::Uri* System::Net::ProxyChain::ProxyEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::ProxyEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::ProxyChain::ProxyEnumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ProxyChain/ProxyEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Net::ProxyChain::ProxyEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::ProxyEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::ProxyChain::ProxyEnumerator*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ProxyChain/ProxyEnumerator.MoveNext
bool System::Net::ProxyChain::ProxyEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::ProxyEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::ProxyChain::ProxyEnumerator*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ProxyChain/ProxyEnumerator.Reset
void System::Net::ProxyChain::ProxyEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::ProxyEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::ProxyChain::ProxyEnumerator*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ProxyChain/ProxyEnumerator.Dispose
void System::Net::ProxyChain::ProxyEnumerator::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyChain::ProxyEnumerator::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::ProxyChain::ProxyEnumerator*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.ProxyScriptChain
#include "System/Net/ProxyScriptChain.hpp"
// Including type: System.Net.WebProxy
#include "System/Net/WebProxy.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.WebProxy m_Proxy
[[deprecated("Use field access instead!")]] ::System::Net::WebProxy*& System::Net::ProxyScriptChain::dyn_m_Proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyScriptChain::dyn_m_Proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Proxy"))->offset;
  return *reinterpret_cast<::System::Net::WebProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri[] m_ScriptProxies
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Uri*>& System::Net::ProxyScriptChain::dyn_m_ScriptProxies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyScriptChain::dyn_m_ScriptProxies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScriptProxies"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Uri*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_CurrentIndex
[[deprecated("Use field access instead!")]] int& System::Net::ProxyScriptChain::dyn_m_CurrentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyScriptChain::dyn_m_CurrentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_SyncStatus
[[deprecated("Use field access instead!")]] int& System::Net::ProxyScriptChain::dyn_m_SyncStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyScriptChain::dyn_m_SyncStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SyncStatus"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.ProxyScriptChain.GetNextProxy
bool System::Net::ProxyScriptChain::GetNextProxy(ByRef<::System::Uri*> proxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyScriptChain::GetNextProxy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::ProxyChain*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(proxy));
}
// Autogenerated method: System.Net.ProxyScriptChain.Abort
void System::Net::ProxyScriptChain::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProxyScriptChain::Abort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::ProxyChain*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.DirectProxy
#include "System/Net/DirectProxy.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ProxyRetrieved
[[deprecated("Use field access instead!")]] bool& System::Net::DirectProxy::dyn_m_ProxyRetrieved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DirectProxy::dyn_m_ProxyRetrieved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ProxyRetrieved"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.DirectProxy.GetNextProxy
bool System::Net::DirectProxy::GetNextProxy(ByRef<::System::Uri*> proxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DirectProxy::GetNextProxy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::ProxyChain*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(proxy));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.StaticProxy
#include "System/Net/StaticProxy.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Uri m_Proxy
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::StaticProxy::dyn_m_Proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::StaticProxy::dyn_m_Proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Proxy"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.StaticProxy.GetNextProxy
bool System::Net::StaticProxy::GetNextProxy(ByRef<::System::Uri*> proxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::StaticProxy::GetNextProxy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::ProxyChain*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(proxy));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.ScatterGatherBuffers
#include "System/Net/ScatterGatherBuffers.hpp"
// Including type: System.Net.ScatterGatherBuffers/MemoryChunk
#include "System/Net/ScatterGatherBuffers_MemoryChunk.hpp"
// Including type: System.Net.BufferOffsetSize
#include "System/Net/BufferOffsetSize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.ScatterGatherBuffers/MemoryChunk headChunk
[[deprecated("Use field access instead!")]] ::System::Net::ScatterGatherBuffers::MemoryChunk*& System::Net::ScatterGatherBuffers::dyn_headChunk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ScatterGatherBuffers::dyn_headChunk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headChunk"))->offset;
  return *reinterpret_cast<::System::Net::ScatterGatherBuffers::MemoryChunk**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ScatterGatherBuffers/MemoryChunk currentChunk
[[deprecated("Use field access instead!")]] ::System::Net::ScatterGatherBuffers::MemoryChunk*& System::Net::ScatterGatherBuffers::dyn_currentChunk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ScatterGatherBuffers::dyn_currentChunk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentChunk"))->offset;
  return *reinterpret_cast<::System::Net::ScatterGatherBuffers::MemoryChunk**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nextChunkLength
[[deprecated("Use field access instead!")]] int& System::Net::ScatterGatherBuffers::dyn_nextChunkLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ScatterGatherBuffers::dyn_nextChunkLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextChunkLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 totalLength
[[deprecated("Use field access instead!")]] int& System::Net::ScatterGatherBuffers::dyn_totalLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ScatterGatherBuffers::dyn_totalLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 chunkCount
[[deprecated("Use field access instead!")]] int& System::Net::ScatterGatherBuffers::dyn_chunkCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ScatterGatherBuffers::dyn_chunkCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chunkCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.ScatterGatherBuffers.GetBuffers
::ArrayW<::System::Net::BufferOffsetSize*> System::Net::ScatterGatherBuffers::GetBuffers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ScatterGatherBuffers::GetBuffers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBuffers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Net::BufferOffsetSize*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ScatterGatherBuffers.get_Empty
bool System::Net::ScatterGatherBuffers::get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ScatterGatherBuffers::get_Empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ScatterGatherBuffers.get_Length
int System::Net::ScatterGatherBuffers::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ScatterGatherBuffers::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ScatterGatherBuffers.Write
void System::Net::ScatterGatherBuffers::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ScatterGatherBuffers::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Net.ScatterGatherBuffers.AllocateMemoryChunk
::System::Net::ScatterGatherBuffers::MemoryChunk* System::Net::ScatterGatherBuffers::AllocateMemoryChunk(int newSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ScatterGatherBuffers::AllocateMemoryChunk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllocateMemoryChunk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ScatterGatherBuffers::MemoryChunk*, false>(this, ___internal__method, newSize);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.ScatterGatherBuffers/MemoryChunk
#include "System/Net/ScatterGatherBuffers_MemoryChunk.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Byte[] Buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::ScatterGatherBuffers::MemoryChunk::dyn_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ScatterGatherBuffers::MemoryChunk::dyn_Buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 FreeOffset
[[deprecated("Use field access instead!")]] int& System::Net::ScatterGatherBuffers::MemoryChunk::dyn_FreeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ScatterGatherBuffers::MemoryChunk::dyn_FreeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FreeOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Net.ScatterGatherBuffers/MemoryChunk Next
[[deprecated("Use field access instead!")]] ::System::Net::ScatterGatherBuffers::MemoryChunk*& System::Net::ScatterGatherBuffers::MemoryChunk::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ScatterGatherBuffers::MemoryChunk::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::System::Net::ScatterGatherBuffers::MemoryChunk**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.Semaphore
#include "System/Net/Semaphore.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Semaphore.ReleaseSemaphore
bool System::Net::Semaphore::ReleaseSemaphore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Semaphore::ReleaseSemaphore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseSemaphore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.ServiceNameStore
#include "System/Net/ServiceNameStore.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Security.Authentication.ExtendedProtection.ServiceNameCollection
#include "System/Security/Authentication/ExtendedProtection/ServiceNameCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> serviceNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Net::ServiceNameStore::dyn_serviceNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServiceNameStore::dyn_serviceNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serviceNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Authentication.ExtendedProtection.ServiceNameCollection serviceNameCollection
[[deprecated("Use field access instead!")]] ::System::Security::Authentication::ExtendedProtection::ServiceNameCollection*& System::Net::ServiceNameStore::dyn_serviceNameCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServiceNameStore::dyn_serviceNameCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serviceNameCollection"))->offset;
  return *reinterpret_cast<::System::Security::Authentication::ExtendedProtection::ServiceNameCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.ServiceNameStore.get_ServiceNames
::System::Security::Authentication::ExtendedProtection::ServiceNameCollection* System::Net::ServiceNameStore::get_ServiceNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServiceNameStore::get_ServiceNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServiceNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Authentication::ExtendedProtection::ServiceNameCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ServiceNameStore.AddSingleServiceName
bool System::Net::ServiceNameStore::AddSingleServiceName(::StringW spn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServiceNameStore::AddSingleServiceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSingleServiceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spn)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, spn);
}
// Autogenerated method: System.Net.ServiceNameStore.Add
bool System::Net::ServiceNameStore::Add(::StringW uriPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServiceNameStore::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriPrefix)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uriPrefix);
}
// Autogenerated method: System.Net.ServiceNameStore.Remove
bool System::Net::ServiceNameStore::Remove(::StringW uriPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServiceNameStore::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriPrefix)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uriPrefix);
}
// Autogenerated method: System.Net.ServiceNameStore.Contains
bool System::Net::ServiceNameStore::Contains(::StringW newServiceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServiceNameStore::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newServiceName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, newServiceName);
}
// Autogenerated method: System.Net.ServiceNameStore.Clear
void System::Net::ServiceNameStore::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServiceNameStore::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ServiceNameStore.ExtractHostname
::StringW System::Net::ServiceNameStore::ExtractHostname(::StringW uriPrefix, bool allowInvalidUriStrings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServiceNameStore::ExtractHostname");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExtractHostname", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriPrefix), ::il2cpp_utils::ExtractType(allowInvalidUriStrings)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uriPrefix, allowInvalidUriStrings);
}
// Autogenerated method: System.Net.ServiceNameStore.BuildSimpleServiceName
::StringW System::Net::ServiceNameStore::BuildSimpleServiceName(::StringW uriPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServiceNameStore::BuildSimpleServiceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildSimpleServiceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriPrefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uriPrefix);
}
// Autogenerated method: System.Net.ServiceNameStore.BuildServiceNames
::ArrayW<::StringW> System::Net::ServiceNameStore::BuildServiceNames(::StringW uriPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServiceNameStore::BuildServiceNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildServiceNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriPrefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, uriPrefix);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.TimerThread
#include "System/Net/TimerThread.hpp"
// Including type: System.Net.TimerThread/Queue
#include "System/Net/TimerThread_Queue.hpp"
// Including type: System.Net.TimerThread/Timer
#include "System/Net/TimerThread_Timer.hpp"
// Including type: System.Net.TimerThread/Callback
#include "System/Net/TimerThread_Callback.hpp"
// Including type: System.Net.TimerThread/TimerThreadState
#include "System/Net/TimerThread_TimerThreadState.hpp"
// Including type: System.Net.TimerThread/TimerQueue
#include "System/Net/TimerThread_TimerQueue.hpp"
// Including type: System.Net.TimerThread/InfiniteTimerQueue
#include "System/Net/TimerThread_InfiniteTimerQueue.hpp"
// Including type: System.Net.TimerThread/TimerNode
#include "System/Net/TimerThread_TimerNode.hpp"
// Including type: System.Net.TimerThread/InfiniteTimer
#include "System/Net/TimerThread_InfiniteTimer.hpp"
// Including type: System.Collections.Generic.LinkedList`1
#include "System/Collections/Generic/LinkedList_1.hpp"
// Including type: System.WeakReference
#include "System/WeakReference.hpp"
// Including type: System.Threading.AutoResetEvent
#include "System/Threading/AutoResetEvent.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 c_ThreadIdleTimeoutMilliseconds
int System::Net::TimerThread::_get_c_ThreadIdleTimeoutMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_get_c_ThreadIdleTimeoutMilliseconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "TimerThread", "c_ThreadIdleTimeoutMilliseconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 c_ThreadIdleTimeoutMilliseconds
void System::Net::TimerThread::_set_c_ThreadIdleTimeoutMilliseconds(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_set_c_ThreadIdleTimeoutMilliseconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread", "c_ThreadIdleTimeoutMilliseconds", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 c_CacheScanPerIterations
int System::Net::TimerThread::_get_c_CacheScanPerIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_get_c_CacheScanPerIterations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "TimerThread", "c_CacheScanPerIterations"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 c_CacheScanPerIterations
void System::Net::TimerThread::_set_c_CacheScanPerIterations(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_set_c_CacheScanPerIterations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread", "c_CacheScanPerIterations", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 c_TickCountResolution
int System::Net::TimerThread::_get_c_TickCountResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_get_c_TickCountResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "TimerThread", "c_TickCountResolution"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 c_TickCountResolution
void System::Net::TimerThread::_set_c_TickCountResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_set_c_TickCountResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread", "c_TickCountResolution", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.LinkedList`1<System.WeakReference> s_Queues
::System::Collections::Generic::LinkedList_1<::System::WeakReference*>* System::Net::TimerThread::_get_s_Queues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_get_s_Queues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::LinkedList_1<::System::WeakReference*>*>("System.Net", "TimerThread", "s_Queues"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.LinkedList`1<System.WeakReference> s_Queues
void System::Net::TimerThread::_set_s_Queues(::System::Collections::Generic::LinkedList_1<::System::WeakReference*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_set_s_Queues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread", "s_Queues", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.LinkedList`1<System.WeakReference> s_NewQueues
::System::Collections::Generic::LinkedList_1<::System::WeakReference*>* System::Net::TimerThread::_get_s_NewQueues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_get_s_NewQueues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::LinkedList_1<::System::WeakReference*>*>("System.Net", "TimerThread", "s_NewQueues"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.LinkedList`1<System.WeakReference> s_NewQueues
void System::Net::TimerThread::_set_s_NewQueues(::System::Collections::Generic::LinkedList_1<::System::WeakReference*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_set_s_NewQueues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread", "s_NewQueues", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_ThreadState
int System::Net::TimerThread::_get_s_ThreadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_get_s_ThreadState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "TimerThread", "s_ThreadState"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_ThreadState
void System::Net::TimerThread::_set_s_ThreadState(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_set_s_ThreadState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread", "s_ThreadState", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.AutoResetEvent s_ThreadReadyEvent
::System::Threading::AutoResetEvent* System::Net::TimerThread::_get_s_ThreadReadyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_get_s_ThreadReadyEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::AutoResetEvent*>("System.Net", "TimerThread", "s_ThreadReadyEvent"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.AutoResetEvent s_ThreadReadyEvent
void System::Net::TimerThread::_set_s_ThreadReadyEvent(::System::Threading::AutoResetEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_set_s_ThreadReadyEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread", "s_ThreadReadyEvent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.ManualResetEvent s_ThreadShutdownEvent
::System::Threading::ManualResetEvent* System::Net::TimerThread::_get_s_ThreadShutdownEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_get_s_ThreadShutdownEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ManualResetEvent*>("System.Net", "TimerThread", "s_ThreadShutdownEvent"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ManualResetEvent s_ThreadShutdownEvent
void System::Net::TimerThread::_set_s_ThreadShutdownEvent(::System::Threading::ManualResetEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_set_s_ThreadShutdownEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread", "s_ThreadShutdownEvent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.WaitHandle[] s_ThreadEvents
::ArrayW<::System::Threading::WaitHandle*> System::Net::TimerThread::_get_s_ThreadEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_get_s_ThreadEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Threading::WaitHandle*>>("System.Net", "TimerThread", "s_ThreadEvents"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.WaitHandle[] s_ThreadEvents
void System::Net::TimerThread::_set_s_ThreadEvents(::ArrayW<::System::Threading::WaitHandle*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_set_s_ThreadEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread", "s_ThreadEvents", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_CacheScanIteration
int System::Net::TimerThread::_get_s_CacheScanIteration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_get_s_CacheScanIteration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "TimerThread", "s_CacheScanIteration"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_CacheScanIteration
void System::Net::TimerThread::_set_s_CacheScanIteration(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_set_s_CacheScanIteration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread", "s_CacheScanIteration", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable s_QueuesCache
::System::Collections::Hashtable* System::Net::TimerThread::_get_s_QueuesCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_get_s_QueuesCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Net", "TimerThread", "s_QueuesCache"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable s_QueuesCache
void System::Net::TimerThread::_set_s_QueuesCache(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_set_s_QueuesCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread", "s_QueuesCache", value));
}
// Autogenerated method: System.Net.TimerThread..cctor
void System::Net::TimerThread::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "TimerThread", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.TimerThread.CreateQueue
::System::Net::TimerThread::Queue* System::Net::TimerThread::CreateQueue(int durationMilliseconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::CreateQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "TimerThread", "CreateQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(durationMilliseconds)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::TimerThread::Queue*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, durationMilliseconds);
}
// Autogenerated method: System.Net.TimerThread.GetOrCreateQueue
::System::Net::TimerThread::Queue* System::Net::TimerThread::GetOrCreateQueue(int durationMilliseconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::GetOrCreateQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "TimerThread", "GetOrCreateQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(durationMilliseconds)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::TimerThread::Queue*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, durationMilliseconds);
}
// Autogenerated method: System.Net.TimerThread.Prod
void System::Net::TimerThread::Prod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Prod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "TimerThread", "Prod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.TimerThread.ThreadProc
void System::Net::TimerThread::ThreadProc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::ThreadProc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "TimerThread", "ThreadProc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.TimerThread.StopTimerThread
void System::Net::TimerThread::StopTimerThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::StopTimerThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "TimerThread", "StopTimerThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.TimerThread.IsTickBetween
bool System::Net::TimerThread::IsTickBetween(int start, int end, int comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::IsTickBetween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "TimerThread", "IsTickBetween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(comparand)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, comparand);
}
// Autogenerated method: System.Net.TimerThread.OnDomainUnload
void System::Net::TimerThread::OnDomainUnload(::Il2CppObject* sender, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::OnDomainUnload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "TimerThread", "OnDomainUnload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sender, e);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.TimerThread/Queue
#include "System/Net/TimerThread_Queue.hpp"
// Including type: System.Net.TimerThread/Timer
#include "System/Net/TimerThread_Timer.hpp"
// Including type: System.Net.TimerThread/Callback
#include "System/Net/TimerThread_Callback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 m_DurationMilliseconds
[[deprecated("Use field access instead!")]] int& System::Net::TimerThread::Queue::dyn_m_DurationMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Queue::dyn_m_DurationMilliseconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DurationMilliseconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.TimerThread/Queue.get_Duration
int System::Net::TimerThread::Queue::get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Queue::get_Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.TimerThread/Queue.CreateTimer
::System::Net::TimerThread::Timer* System::Net::TimerThread::Queue::CreateTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Queue::CreateTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::TimerThread::Timer*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.TimerThread/Queue.CreateTimer
::System::Net::TimerThread::Timer* System::Net::TimerThread::Queue::CreateTimer(::System::Net::TimerThread::Callback* callback, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Queue::CreateTimer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::TimerThread::Queue*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::TimerThread::Timer*, false>(this, ___internal__method, callback, context);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.TimerThread/Timer
#include "System/Net/TimerThread_Timer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 m_StartTimeMilliseconds
[[deprecated("Use field access instead!")]] int& System::Net::TimerThread::Timer::dyn_m_StartTimeMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Timer::dyn_m_StartTimeMilliseconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartTimeMilliseconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 m_DurationMilliseconds
[[deprecated("Use field access instead!")]] int& System::Net::TimerThread::Timer::dyn_m_DurationMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Timer::dyn_m_DurationMilliseconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DurationMilliseconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.TimerThread/Timer.get_Duration
int System::Net::TimerThread::Timer::get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Timer::get_Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.TimerThread/Timer.get_StartTime
int System::Net::TimerThread::Timer::get_StartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Timer::get_StartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.TimerThread/Timer.get_Expiration
int System::Net::TimerThread::Timer::get_Expiration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Timer::get_Expiration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Expiration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.TimerThread/Timer.get_TimeRemaining
int System::Net::TimerThread::Timer::get_TimeRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Timer::get_TimeRemaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TimeRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.TimerThread/Timer.Cancel
bool System::Net::TimerThread::Timer::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Timer::Cancel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::TimerThread::Timer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.TimerThread/Timer.get_HasExpired
bool System::Net::TimerThread::Timer::get_HasExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Timer::get_HasExpired");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::TimerThread::Timer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.TimerThread/Timer.Dispose
void System::Net::TimerThread::Timer::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Timer::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::TimerThread::Timer*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.TimerThread/Callback
#include "System/Net/TimerThread_Callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Net.TimerThread/Timer
#include "System/Net/TimerThread_Timer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.TimerThread/Callback.Invoke
void System::Net::TimerThread::Callback::Invoke(::System::Net::TimerThread::Timer* timer, int timeNoticed, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Callback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::TimerThread::Callback*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timer, timeNoticed, context);
}
// Autogenerated method: System.Net.TimerThread/Callback.BeginInvoke
::System::IAsyncResult* System::Net::TimerThread::Callback::BeginInvoke(::System::Net::TimerThread::Timer* timer, int timeNoticed, ::Il2CppObject* context, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::TimerThread::Callback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, timer, timeNoticed, context, callback, object);
}
// Autogenerated method: System.Net.TimerThread/Callback.EndInvoke
void System::Net::TimerThread::Callback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::TimerThread::Callback*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.TimerThread/TimerThreadState
#include "System/Net/TimerThread_TimerThreadState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.TimerThread/TimerThreadState Idle
::System::Net::TimerThread::TimerThreadState System::Net::TimerThread::TimerThreadState::_get_Idle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerThreadState::_get_Idle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::TimerThread::TimerThreadState>("System.Net", "TimerThread/TimerThreadState", "Idle"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.TimerThread/TimerThreadState Idle
void System::Net::TimerThread::TimerThreadState::_set_Idle(::System::Net::TimerThread::TimerThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerThreadState::_set_Idle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread/TimerThreadState", "Idle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.TimerThread/TimerThreadState Running
::System::Net::TimerThread::TimerThreadState System::Net::TimerThread::TimerThreadState::_get_Running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerThreadState::_get_Running");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::TimerThread::TimerThreadState>("System.Net", "TimerThread/TimerThreadState", "Running"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.TimerThread/TimerThreadState Running
void System::Net::TimerThread::TimerThreadState::_set_Running(::System::Net::TimerThread::TimerThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerThreadState::_set_Running");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread/TimerThreadState", "Running", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.TimerThread/TimerThreadState Stopped
::System::Net::TimerThread::TimerThreadState System::Net::TimerThread::TimerThreadState::_get_Stopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerThreadState::_get_Stopped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::TimerThread::TimerThreadState>("System.Net", "TimerThread/TimerThreadState", "Stopped"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.TimerThread/TimerThreadState Stopped
void System::Net::TimerThread::TimerThreadState::_set_Stopped(::System::Net::TimerThread::TimerThreadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerThreadState::_set_Stopped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread/TimerThreadState", "Stopped", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::TimerThread::TimerThreadState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerThreadState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.TimerThread/TimerQueue
#include "System/Net/TimerThread_TimerQueue.hpp"
// Including type: System.Net.TimerThread/TimerNode
#include "System/Net/TimerThread_TimerNode.hpp"
// Including type: System.Net.TimerThread/Timer
#include "System/Net/TimerThread_Timer.hpp"
// Including type: System.Net.TimerThread/Callback
#include "System/Net/TimerThread_Callback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr m_ThisHandle
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::Net::TimerThread::TimerQueue::dyn_m_ThisHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerQueue::dyn_m_ThisHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThisHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.TimerThread/TimerNode m_Timers
[[deprecated("Use field access instead!")]] ::System::Net::TimerThread::TimerNode*& System::Net::TimerThread::TimerQueue::dyn_m_Timers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerQueue::dyn_m_Timers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Timers"))->offset;
  return *reinterpret_cast<::System::Net::TimerThread::TimerNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.TimerThread/TimerQueue.Fire
bool System::Net::TimerThread::TimerQueue::Fire(ByRef<int> nextExpiration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerQueue::Fire");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fire", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(nextExpiration));
}
// Autogenerated method: System.Net.TimerThread/TimerQueue.CreateTimer
::System::Net::TimerThread::Timer* System::Net::TimerThread::TimerQueue::CreateTimer(::System::Net::TimerThread::Callback* callback, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerQueue::CreateTimer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::TimerThread::Queue*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::TimerThread::Timer*, false>(this, ___internal__method, callback, context);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.TimerThread/InfiniteTimerQueue
#include "System/Net/TimerThread_InfiniteTimerQueue.hpp"
// Including type: System.Net.TimerThread/Timer
#include "System/Net/TimerThread_Timer.hpp"
// Including type: System.Net.TimerThread/Callback
#include "System/Net/TimerThread_Callback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.TimerThread/InfiniteTimerQueue.CreateTimer
::System::Net::TimerThread::Timer* System::Net::TimerThread::InfiniteTimerQueue::CreateTimer(::System::Net::TimerThread::Callback* callback, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::InfiniteTimerQueue::CreateTimer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::TimerThread::Queue*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::TimerThread::Timer*, false>(this, ___internal__method, callback, context);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.TimerThread/TimerNode
#include "System/Net/TimerThread_TimerNode.hpp"
// Including type: System.Net.TimerThread/Callback
#include "System/Net/TimerThread_Callback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.TimerThread/TimerNode/TimerState m_TimerState
[[deprecated("Use field access instead!")]] ::System::Net::TimerThread::TimerNode::TimerState& System::Net::TimerThread::TimerNode::dyn_m_TimerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::dyn_m_TimerState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TimerState"))->offset;
  return *reinterpret_cast<::System::Net::TimerThread::TimerNode::TimerState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.TimerThread/Callback m_Callback
[[deprecated("Use field access instead!")]] ::System::Net::TimerThread::Callback*& System::Net::TimerThread::TimerNode::dyn_m_Callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::dyn_m_Callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Callback"))->offset;
  return *reinterpret_cast<::System::Net::TimerThread::Callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_Context
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::TimerThread::TimerNode::dyn_m_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::dyn_m_Context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Context"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_QueueLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::TimerThread::TimerNode::dyn_m_QueueLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::dyn_m_QueueLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_QueueLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.TimerThread/TimerNode next
[[deprecated("Use field access instead!")]] ::System::Net::TimerThread::TimerNode*& System::Net::TimerThread::TimerNode::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::Net::TimerThread::TimerNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.TimerThread/TimerNode prev
[[deprecated("Use field access instead!")]] ::System::Net::TimerThread::TimerNode*& System::Net::TimerThread::TimerNode::dyn_prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::dyn_prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prev"))->offset;
  return *reinterpret_cast<::System::Net::TimerThread::TimerNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.TimerThread/TimerNode.get_Next
::System::Net::TimerThread::TimerNode* System::Net::TimerThread::TimerNode::get_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::get_Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::TimerThread::TimerNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.TimerThread/TimerNode.set_Next
void System::Net::TimerThread::TimerNode::set_Next(::System::Net::TimerThread::TimerNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::set_Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.TimerThread/TimerNode.get_Prev
::System::Net::TimerThread::TimerNode* System::Net::TimerThread::TimerNode::get_Prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::get_Prev");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prev", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::TimerThread::TimerNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.TimerThread/TimerNode.set_Prev
void System::Net::TimerThread::TimerNode::set_Prev(::System::Net::TimerThread::TimerNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::set_Prev");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Prev", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.TimerThread/TimerNode.Fire
bool System::Net::TimerThread::TimerNode::Fire() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::Fire");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fire", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.TimerThread/TimerNode.get_HasExpired
bool System::Net::TimerThread::TimerNode::get_HasExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::get_HasExpired");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::TimerThread::Timer*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.TimerThread/TimerNode.Cancel
bool System::Net::TimerThread::TimerNode::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::Cancel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::TimerThread::Timer*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.TimerThread/TimerNode/TimerState
#include "System/Net/TimerThread_TimerNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.TimerThread/TimerNode/TimerState Ready
::System::Net::TimerThread::TimerNode::TimerState System::Net::TimerThread::TimerNode::TimerState::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::TimerState::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::TimerThread::TimerNode::TimerState>("System.Net", "TimerThread/TimerNode/TimerState", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.TimerThread/TimerNode/TimerState Ready
void System::Net::TimerThread::TimerNode::TimerState::_set_Ready(::System::Net::TimerThread::TimerNode::TimerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::TimerState::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread/TimerNode/TimerState", "Ready", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.TimerThread/TimerNode/TimerState Fired
::System::Net::TimerThread::TimerNode::TimerState System::Net::TimerThread::TimerNode::TimerState::_get_Fired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::TimerState::_get_Fired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::TimerThread::TimerNode::TimerState>("System.Net", "TimerThread/TimerNode/TimerState", "Fired"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.TimerThread/TimerNode/TimerState Fired
void System::Net::TimerThread::TimerNode::TimerState::_set_Fired(::System::Net::TimerThread::TimerNode::TimerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::TimerState::_set_Fired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread/TimerNode/TimerState", "Fired", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.TimerThread/TimerNode/TimerState Cancelled
::System::Net::TimerThread::TimerNode::TimerState System::Net::TimerThread::TimerNode::TimerState::_get_Cancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::TimerState::_get_Cancelled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::TimerThread::TimerNode::TimerState>("System.Net", "TimerThread/TimerNode/TimerState", "Cancelled"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.TimerThread/TimerNode/TimerState Cancelled
void System::Net::TimerThread::TimerNode::TimerState::_set_Cancelled(::System::Net::TimerThread::TimerNode::TimerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::TimerState::_set_Cancelled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread/TimerNode/TimerState", "Cancelled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.TimerThread/TimerNode/TimerState Sentinel
::System::Net::TimerThread::TimerNode::TimerState System::Net::TimerThread::TimerNode::TimerState::_get_Sentinel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::TimerState::_get_Sentinel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::TimerThread::TimerNode::TimerState>("System.Net", "TimerThread/TimerNode/TimerState", "Sentinel"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.TimerThread/TimerNode/TimerState Sentinel
void System::Net::TimerThread::TimerNode::TimerState::_set_Sentinel(::System::Net::TimerThread::TimerNode::TimerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::TimerState::_set_Sentinel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread/TimerNode/TimerState", "Sentinel", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::TimerThread::TimerNode::TimerState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::TimerState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.TimerThread/InfiniteTimer
#include "System/Net/TimerThread_InfiniteTimer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 cancelled
[[deprecated("Use field access instead!")]] int& System::Net::TimerThread::InfiniteTimer::dyn_cancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::InfiniteTimer::dyn_cancelled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelled"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.TimerThread/InfiniteTimer.get_HasExpired
bool System::Net::TimerThread::InfiniteTimer::get_HasExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::InfiniteTimer::get_HasExpired");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::TimerThread::Timer*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.TimerThread/InfiniteTimer.Cancel
bool System::Net::TimerThread::InfiniteTimer::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::InfiniteTimer::Cancel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::TimerThread::Timer*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.WebProxyDataBuilder
#include "System/Net/WebProxyDataBuilder.hpp"
// Including type: System.Net.WebProxyData
#include "System/Net/WebProxyData.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.FormatException
#include "System/FormatException.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Char addressListDelimiter
::Il2CppChar System::Net::WebProxyDataBuilder::_get_addressListDelimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::_get_addressListDelimiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.Net", "WebProxyDataBuilder", "addressListDelimiter"));
}
// Autogenerated static field setter
// Set static field: static private System.Char addressListDelimiter
void System::Net::WebProxyDataBuilder::_set_addressListDelimiter(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::_set_addressListDelimiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebProxyDataBuilder", "addressListDelimiter", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char addressListSchemeValueDelimiter
::Il2CppChar System::Net::WebProxyDataBuilder::_get_addressListSchemeValueDelimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::_get_addressListSchemeValueDelimiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.Net", "WebProxyDataBuilder", "addressListSchemeValueDelimiter"));
}
// Autogenerated static field setter
// Set static field: static private System.Char addressListSchemeValueDelimiter
void System::Net::WebProxyDataBuilder::_set_addressListSchemeValueDelimiter(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::_set_addressListSchemeValueDelimiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebProxyDataBuilder", "addressListSchemeValueDelimiter", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char bypassListDelimiter
::Il2CppChar System::Net::WebProxyDataBuilder::_get_bypassListDelimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::_get_bypassListDelimiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.Net", "WebProxyDataBuilder", "bypassListDelimiter"));
}
// Autogenerated static field setter
// Set static field: static private System.Char bypassListDelimiter
void System::Net::WebProxyDataBuilder::_set_bypassListDelimiter(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::_set_bypassListDelimiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebProxyDataBuilder", "bypassListDelimiter", value));
}
// Autogenerated static field getter
// Get static field: static private System.String regexReserved
::StringW System::Net::WebProxyDataBuilder::_get_regexReserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::_get_regexReserved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "WebProxyDataBuilder", "regexReserved"));
}
// Autogenerated static field setter
// Set static field: static private System.String regexReserved
void System::Net::WebProxyDataBuilder::_set_regexReserved(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::_set_regexReserved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebProxyDataBuilder", "regexReserved", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebProxyData m_Result
[[deprecated("Use field access instead!")]] ::System::Net::WebProxyData*& System::Net::WebProxyDataBuilder::dyn_m_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::dyn_m_Result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Result"))->offset;
  return *reinterpret_cast<::System::Net::WebProxyData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.WebProxyDataBuilder.Build
::System::Net::WebProxyData* System::Net::WebProxyDataBuilder::Build() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::Build");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Build", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebProxyData*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxyDataBuilder.BuildInternal
void System::Net::WebProxyDataBuilder::BuildInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::BuildInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebProxyDataBuilder*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxyDataBuilder.SetProxyAndBypassList
void System::Net::WebProxyDataBuilder::SetProxyAndBypassList(::StringW addressString, ::StringW bypassListString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::SetProxyAndBypassList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetProxyAndBypassList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(addressString), ::il2cpp_utils::ExtractType(bypassListString)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, addressString, bypassListString);
}
// Autogenerated method: System.Net.WebProxyDataBuilder.SetAutoProxyUrl
void System::Net::WebProxyDataBuilder::SetAutoProxyUrl(::StringW autoConfigUrl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::SetAutoProxyUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAutoProxyUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(autoConfigUrl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, autoConfigUrl);
}
// Autogenerated method: System.Net.WebProxyDataBuilder.SetAutoDetectSettings
void System::Net::WebProxyDataBuilder::SetAutoDetectSettings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::SetAutoDetectSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAutoDetectSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebProxyDataBuilder.ParseProxyUri
::System::Uri* System::Net::WebProxyDataBuilder::ParseProxyUri(::StringW proxyString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::ParseProxyUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebProxyDataBuilder", "ParseProxyUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyString)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyString);
}
// Autogenerated method: System.Net.WebProxyDataBuilder.ParseProtocolProxies
::System::Collections::Hashtable* System::Net::WebProxyDataBuilder::ParseProtocolProxies(::StringW proxyListString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::ParseProtocolProxies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebProxyDataBuilder", "ParseProtocolProxies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyListString)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyListString);
}
// Autogenerated method: System.Net.WebProxyDataBuilder.CreateInvalidProxyStringException
::System::FormatException* System::Net::WebProxyDataBuilder::CreateInvalidProxyStringException(::StringW originalProxyString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::CreateInvalidProxyStringException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebProxyDataBuilder", "CreateInvalidProxyStringException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalProxyString)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::FormatException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, originalProxyString);
}
// Autogenerated method: System.Net.WebProxyDataBuilder.BypassStringEscape
::StringW System::Net::WebProxyDataBuilder::BypassStringEscape(::StringW rawString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::BypassStringEscape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebProxyDataBuilder", "BypassStringEscape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawString)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawString);
}
// Autogenerated method: System.Net.WebProxyDataBuilder.ConvertRegexReservedChars
::StringW System::Net::WebProxyDataBuilder::ConvertRegexReservedChars(::StringW rawString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::ConvertRegexReservedChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebProxyDataBuilder", "ConvertRegexReservedChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawString)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawString);
}
// Autogenerated method: System.Net.WebProxyDataBuilder.ParseBypassList
::System::Collections::ArrayList* System::Net::WebProxyDataBuilder::ParseBypassList(::StringW bypassListString, ByRef<bool> bypassOnLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::ParseBypassList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebProxyDataBuilder", "ParseBypassList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bypassListString), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bypassListString, byref(bypassOnLocal));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.EmptyWebProxy
#include "System/Net/EmptyWebProxy.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.ProxyChain
#include "System/Net/ProxyChain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.ICredentials m_credentials
[[deprecated("Use field access instead!")]] ::System::Net::ICredentials*& System::Net::EmptyWebProxy::dyn_m_credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EmptyWebProxy::dyn_m_credentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_credentials"))->offset;
  return *reinterpret_cast<::System::Net::ICredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.EmptyWebProxy.GetProxy
::System::Uri* System::Net::EmptyWebProxy::GetProxy(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EmptyWebProxy::GetProxy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::EmptyWebProxy*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Net.EmptyWebProxy.IsBypassed
bool System::Net::EmptyWebProxy::IsBypassed(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EmptyWebProxy::IsBypassed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::EmptyWebProxy*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Net.EmptyWebProxy.get_Credentials
::System::Net::ICredentials* System::Net::EmptyWebProxy::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EmptyWebProxy::get_Credentials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::EmptyWebProxy*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EmptyWebProxy.set_Credentials
void System::Net::EmptyWebProxy::set_Credentials(::System::Net::ICredentials* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EmptyWebProxy::set_Credentials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::EmptyWebProxy*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.EmptyWebProxy.System.Net.IAutoWebProxy.GetProxies
::System::Net::ProxyChain* System::Net::EmptyWebProxy::System_Net_IAutoWebProxy_GetProxies(::System::Uri* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EmptyWebProxy::System.Net.IAutoWebProxy.GetProxies");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::EmptyWebProxy*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ProxyChain*, false>(this, ___internal__method, destination);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.CookieVariant
#include "System/Net/CookieVariant.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.CookieVariant Unknown
::System::Net::CookieVariant System::Net::CookieVariant::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieVariant>("System.Net", "CookieVariant", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieVariant Unknown
void System::Net::CookieVariant::_set_Unknown(::System::Net::CookieVariant value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieVariant", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieVariant Plain
::System::Net::CookieVariant System::Net::CookieVariant::_get_Plain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_get_Plain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieVariant>("System.Net", "CookieVariant", "Plain"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieVariant Plain
void System::Net::CookieVariant::_set_Plain(::System::Net::CookieVariant value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_set_Plain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieVariant", "Plain", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieVariant Rfc2109
::System::Net::CookieVariant System::Net::CookieVariant::_get_Rfc2109() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_get_Rfc2109");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieVariant>("System.Net", "CookieVariant", "Rfc2109"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieVariant Rfc2109
void System::Net::CookieVariant::_set_Rfc2109(::System::Net::CookieVariant value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_set_Rfc2109");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieVariant", "Rfc2109", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieVariant Rfc2965
::System::Net::CookieVariant System::Net::CookieVariant::_get_Rfc2965() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_get_Rfc2965");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieVariant>("System.Net", "CookieVariant", "Rfc2965"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieVariant Rfc2965
void System::Net::CookieVariant::_set_Rfc2965(::System::Net::CookieVariant value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_set_Rfc2965");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieVariant", "Rfc2965", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieVariant Default
::System::Net::CookieVariant System::Net::CookieVariant::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieVariant>("System.Net", "CookieVariant", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieVariant Default
void System::Net::CookieVariant::_set_Default(::System::Net::CookieVariant value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieVariant", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::CookieVariant::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Cookie
#include "System/Net/Cookie.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Net.Comparer
#include "System/Net/Comparer.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 MaxSupportedVersion
int System::Net::Cookie::_get_MaxSupportedVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_MaxSupportedVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "Cookie", "MaxSupportedVersion"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MaxSupportedVersion
void System::Net::Cookie::_set_MaxSupportedVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_MaxSupportedVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "MaxSupportedVersion", value));
}
// Autogenerated static field getter
// Get static field: static System.String CommentAttributeName
::StringW System::Net::Cookie::_get_CommentAttributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_CommentAttributeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "Cookie", "CommentAttributeName"));
}
// Autogenerated static field setter
// Set static field: static System.String CommentAttributeName
void System::Net::Cookie::_set_CommentAttributeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_CommentAttributeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "CommentAttributeName", value));
}
// Autogenerated static field getter
// Get static field: static System.String CommentUrlAttributeName
::StringW System::Net::Cookie::_get_CommentUrlAttributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_CommentUrlAttributeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "Cookie", "CommentUrlAttributeName"));
}
// Autogenerated static field setter
// Set static field: static System.String CommentUrlAttributeName
void System::Net::Cookie::_set_CommentUrlAttributeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_CommentUrlAttributeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "CommentUrlAttributeName", value));
}
// Autogenerated static field getter
// Get static field: static System.String DiscardAttributeName
::StringW System::Net::Cookie::_get_DiscardAttributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_DiscardAttributeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "Cookie", "DiscardAttributeName"));
}
// Autogenerated static field setter
// Set static field: static System.String DiscardAttributeName
void System::Net::Cookie::_set_DiscardAttributeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_DiscardAttributeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "DiscardAttributeName", value));
}
// Autogenerated static field getter
// Get static field: static System.String DomainAttributeName
::StringW System::Net::Cookie::_get_DomainAttributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_DomainAttributeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "Cookie", "DomainAttributeName"));
}
// Autogenerated static field setter
// Set static field: static System.String DomainAttributeName
void System::Net::Cookie::_set_DomainAttributeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_DomainAttributeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "DomainAttributeName", value));
}
// Autogenerated static field getter
// Get static field: static System.String ExpiresAttributeName
::StringW System::Net::Cookie::_get_ExpiresAttributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_ExpiresAttributeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "Cookie", "ExpiresAttributeName"));
}
// Autogenerated static field setter
// Set static field: static System.String ExpiresAttributeName
void System::Net::Cookie::_set_ExpiresAttributeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_ExpiresAttributeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "ExpiresAttributeName", value));
}
// Autogenerated static field getter
// Get static field: static System.String MaxAgeAttributeName
::StringW System::Net::Cookie::_get_MaxAgeAttributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_MaxAgeAttributeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "Cookie", "MaxAgeAttributeName"));
}
// Autogenerated static field setter
// Set static field: static System.String MaxAgeAttributeName
void System::Net::Cookie::_set_MaxAgeAttributeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_MaxAgeAttributeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "MaxAgeAttributeName", value));
}
// Autogenerated static field getter
// Get static field: static System.String PathAttributeName
::StringW System::Net::Cookie::_get_PathAttributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_PathAttributeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "Cookie", "PathAttributeName"));
}
// Autogenerated static field setter
// Set static field: static System.String PathAttributeName
void System::Net::Cookie::_set_PathAttributeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_PathAttributeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "PathAttributeName", value));
}
// Autogenerated static field getter
// Get static field: static System.String PortAttributeName
::StringW System::Net::Cookie::_get_PortAttributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_PortAttributeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "Cookie", "PortAttributeName"));
}
// Autogenerated static field setter
// Set static field: static System.String PortAttributeName
void System::Net::Cookie::_set_PortAttributeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_PortAttributeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "PortAttributeName", value));
}
// Autogenerated static field getter
// Get static field: static System.String SecureAttributeName
::StringW System::Net::Cookie::_get_SecureAttributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_SecureAttributeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "Cookie", "SecureAttributeName"));
}
// Autogenerated static field setter
// Set static field: static System.String SecureAttributeName
void System::Net::Cookie::_set_SecureAttributeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_SecureAttributeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "SecureAttributeName", value));
}
// Autogenerated static field getter
// Get static field: static System.String VersionAttributeName
::StringW System::Net::Cookie::_get_VersionAttributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_VersionAttributeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "Cookie", "VersionAttributeName"));
}
// Autogenerated static field setter
// Set static field: static System.String VersionAttributeName
void System::Net::Cookie::_set_VersionAttributeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_VersionAttributeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "VersionAttributeName", value));
}
// Autogenerated static field getter
// Get static field: static System.String HttpOnlyAttributeName
::StringW System::Net::Cookie::_get_HttpOnlyAttributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_HttpOnlyAttributeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "Cookie", "HttpOnlyAttributeName"));
}
// Autogenerated static field setter
// Set static field: static System.String HttpOnlyAttributeName
void System::Net::Cookie::_set_HttpOnlyAttributeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_HttpOnlyAttributeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "HttpOnlyAttributeName", value));
}
// Autogenerated static field getter
// Get static field: static System.String SeparatorLiteral
::StringW System::Net::Cookie::_get_SeparatorLiteral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_SeparatorLiteral");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "Cookie", "SeparatorLiteral"));
}
// Autogenerated static field setter
// Set static field: static System.String SeparatorLiteral
void System::Net::Cookie::_set_SeparatorLiteral(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_SeparatorLiteral");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "SeparatorLiteral", value));
}
// Autogenerated static field getter
// Get static field: static System.String EqualsLiteral
::StringW System::Net::Cookie::_get_EqualsLiteral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_EqualsLiteral");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "Cookie", "EqualsLiteral"));
}
// Autogenerated static field setter
// Set static field: static System.String EqualsLiteral
void System::Net::Cookie::_set_EqualsLiteral(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_EqualsLiteral");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "EqualsLiteral", value));
}
// Autogenerated static field getter
// Get static field: static System.String QuotesLiteral
::StringW System::Net::Cookie::_get_QuotesLiteral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_QuotesLiteral");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "Cookie", "QuotesLiteral"));
}
// Autogenerated static field setter
// Set static field: static System.String QuotesLiteral
void System::Net::Cookie::_set_QuotesLiteral(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_QuotesLiteral");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "QuotesLiteral", value));
}
// Autogenerated static field getter
// Get static field: static System.String SpecialAttributeLiteral
::StringW System::Net::Cookie::_get_SpecialAttributeLiteral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_SpecialAttributeLiteral");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "Cookie", "SpecialAttributeLiteral"));
}
// Autogenerated static field setter
// Set static field: static System.String SpecialAttributeLiteral
void System::Net::Cookie::_set_SpecialAttributeLiteral(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_SpecialAttributeLiteral");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "SpecialAttributeLiteral", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] PortSplitDelimiters
::ArrayW<::Il2CppChar> System::Net::Cookie::_get_PortSplitDelimiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_PortSplitDelimiters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Net", "Cookie", "PortSplitDelimiters"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] PortSplitDelimiters
void System::Net::Cookie::_set_PortSplitDelimiters(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_PortSplitDelimiters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "PortSplitDelimiters", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] Reserved2Name
::ArrayW<::Il2CppChar> System::Net::Cookie::_get_Reserved2Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_Reserved2Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Net", "Cookie", "Reserved2Name"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] Reserved2Name
void System::Net::Cookie::_set_Reserved2Name(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_Reserved2Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "Reserved2Name", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] Reserved2Value
::ArrayW<::Il2CppChar> System::Net::Cookie::_get_Reserved2Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_Reserved2Value");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Net", "Cookie", "Reserved2Value"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] Reserved2Value
void System::Net::Cookie::_set_Reserved2Value(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_Reserved2Value");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "Reserved2Value", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.Comparer staticComparer
::System::Net::Comparer* System::Net::Cookie::_get_staticComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_staticComparer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Comparer*>("System.Net", "Cookie", "staticComparer"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.Comparer staticComparer
void System::Net::Cookie::_set_staticComparer(::System::Net::Comparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_staticComparer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "staticComparer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_comment
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Cookie::dyn_m_comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_comment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_comment"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri m_commentUri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::Cookie::dyn_m_commentUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_commentUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_commentUri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.CookieVariant m_cookieVariant
[[deprecated("Use field access instead!")]] ::System::Net::CookieVariant& System::Net::Cookie::dyn_m_cookieVariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_cookieVariant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cookieVariant"))->offset;
  return *reinterpret_cast<::System::Net::CookieVariant*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_discard
[[deprecated("Use field access instead!")]] bool& System::Net::Cookie::dyn_m_discard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_discard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_discard"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_domain
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Cookie::dyn_m_domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_domain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_domain"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_domain_implicit
[[deprecated("Use field access instead!")]] bool& System::Net::Cookie::dyn_m_domain_implicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_domain_implicit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_domain_implicit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime m_expires
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Net::Cookie::dyn_m_expires() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_expires");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_expires"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_name
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Cookie::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_path
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Cookie::dyn_m_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_path_implicit
[[deprecated("Use field access instead!")]] bool& System::Net::Cookie::dyn_m_path_implicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_path_implicit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_path_implicit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_port
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Cookie::dyn_m_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_port"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_port_implicit
[[deprecated("Use field access instead!")]] bool& System::Net::Cookie::dyn_m_port_implicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_port_implicit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_port_implicit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_port_list
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Net::Cookie::dyn_m_port_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_port_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_port_list"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_secure
[[deprecated("Use field access instead!")]] bool& System::Net::Cookie::dyn_m_secure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_secure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_secure"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_httpOnly
[[deprecated("Use field access instead!")]] bool& System::Net::Cookie::dyn_m_httpOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_httpOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_httpOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime m_timeStamp
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Net::Cookie::dyn_m_timeStamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_timeStamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timeStamp"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_value
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Cookie::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_version
[[deprecated("Use field access instead!")]] int& System::Net::Cookie::dyn_m_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_domainKey
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Cookie::dyn_m_domainKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_domainKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_domainKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean IsQuotedVersion
[[deprecated("Use field access instead!")]] bool& System::Net::Cookie::dyn_IsQuotedVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_IsQuotedVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsQuotedVersion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean IsQuotedDomain
[[deprecated("Use field access instead!")]] bool& System::Net::Cookie::dyn_IsQuotedDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_IsQuotedDomain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsQuotedDomain"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Cookie.get_Comment
::StringW System::Net::Cookie::get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Comment
void System::Net::Cookie::set_Comment(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_CommentUri
::System::Uri* System::Net::Cookie::get_CommentUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_CommentUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CommentUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_CommentUri
void System::Net::Cookie::set_CommentUri(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_CommentUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CommentUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_HttpOnly
bool System::Net::Cookie::get_HttpOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_HttpOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HttpOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_HttpOnly
void System::Net::Cookie::set_HttpOnly(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_HttpOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HttpOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_Discard
bool System::Net::Cookie::get_Discard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Discard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Discard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Discard
void System::Net::Cookie::set_Discard(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Discard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Discard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_Domain
::StringW System::Net::Cookie::get_Domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Domain
void System::Net::Cookie::set_Domain(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get__Domain
::StringW System::Net::Cookie::get__Domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get__Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get_DomainImplicit
bool System::Net::Cookie::get_DomainImplicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_DomainImplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DomainImplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_DomainImplicit
void System::Net::Cookie::set_DomainImplicit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_DomainImplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DomainImplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_Expired
bool System::Net::Cookie::get_Expired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Expired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Expired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Expired
void System::Net::Cookie::set_Expired(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Expired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Expired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_Expires
::System::DateTime System::Net::Cookie::get_Expires() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Expires");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Expires", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Expires
void System::Net::Cookie::set_Expires(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Expires");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Expires", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_Name
::StringW System::Net::Cookie::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Name
void System::Net::Cookie::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.InternalSetName
bool System::Net::Cookie::InternalSetName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::InternalSetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_Path
::StringW System::Net::Cookie::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Path
void System::Net::Cookie::set_Path(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get__Path
::StringW System::Net::Cookie::get__Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get__Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get_Plain
bool System::Net::Cookie::get_Plain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Plain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Plain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.Clone
::System::Net::Cookie* System::Net::Cookie::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Cookie*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.IsDomainEqualToHost
bool System::Net::Cookie::IsDomainEqualToHost(::StringW domain, ::StringW host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::IsDomainEqualToHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Cookie", "IsDomainEqualToHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(domain), ::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, domain, host);
}
// Autogenerated method: System.Net.Cookie.VerifySetDefaults
bool System::Net::Cookie::VerifySetDefaults(::System::Net::CookieVariant variant, ::System::Uri* uri, bool isLocalDomain, ::StringW localDomain, bool set_default, bool isThrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::VerifySetDefaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySetDefaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variant), ::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(isLocalDomain), ::il2cpp_utils::ExtractType(localDomain), ::il2cpp_utils::ExtractType(set_default), ::il2cpp_utils::ExtractType(isThrow)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, variant, uri, isLocalDomain, localDomain, set_default, isThrow);
}
// Autogenerated method: System.Net.Cookie.DomainCharsTest
bool System::Net::Cookie::DomainCharsTest(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::DomainCharsTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Cookie", "DomainCharsTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Net.Cookie.get_Port
::StringW System::Net::Cookie::get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Port
void System::Net::Cookie::set_Port(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_PortList
::ArrayW<int> System::Net::Cookie::get_PortList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_PortList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PortList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get__Port
::StringW System::Net::Cookie::get__Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get__Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get_Secure
bool System::Net::Cookie::get_Secure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Secure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Secure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Secure
void System::Net::Cookie::set_Secure(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Secure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Secure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_TimeStamp
::System::DateTime System::Net::Cookie::get_TimeStamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_TimeStamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TimeStamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get_Value
::StringW System::Net::Cookie::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Value
void System::Net::Cookie::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_Variant
::System::Net::CookieVariant System::Net::Cookie::get_Variant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Variant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Variant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieVariant, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Variant
void System::Net::Cookie::set_Variant(::System::Net::CookieVariant value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Variant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Variant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_DomainKey
::StringW System::Net::Cookie::get_DomainKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_DomainKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DomainKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get_Version
int System::Net::Cookie::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Version
void System::Net::Cookie::set_Version(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get__Version
::StringW System::Net::Cookie::get__Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get__Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.GetComparer
::System::Collections::IComparer* System::Net::Cookie::GetComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::GetComparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Cookie", "GetComparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IComparer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Cookie.ToServerString
::StringW System::Net::Cookie::ToServerString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::ToServerString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToServerString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie..cctor
void System::Net::Cookie::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Cookie", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Cookie.Equals
bool System::Net::Cookie::Equals(::Il2CppObject* comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, comparand);
}
// Autogenerated method: System.Net.Cookie.GetHashCode
int System::Net::Cookie::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.ToString
::StringW System::Net::Cookie::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.CookieToken
#include "System/Net/CookieToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Nothing
::System::Net::CookieToken System::Net::CookieToken::_get_Nothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Nothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Nothing"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Nothing
void System::Net::CookieToken::_set_Nothing(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Nothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Nothing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken NameValuePair
::System::Net::CookieToken System::Net::CookieToken::_get_NameValuePair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_NameValuePair");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "NameValuePair"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken NameValuePair
void System::Net::CookieToken::_set_NameValuePair(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_NameValuePair");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "NameValuePair", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Attribute
::System::Net::CookieToken System::Net::CookieToken::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Attribute
void System::Net::CookieToken::_set_Attribute(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken EndToken
::System::Net::CookieToken System::Net::CookieToken::_get_EndToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_EndToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "EndToken"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken EndToken
void System::Net::CookieToken::_set_EndToken(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_EndToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "EndToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken EndCookie
::System::Net::CookieToken System::Net::CookieToken::_get_EndCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_EndCookie");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "EndCookie"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken EndCookie
void System::Net::CookieToken::_set_EndCookie(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_EndCookie");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "EndCookie", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken End
::System::Net::CookieToken System::Net::CookieToken::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken End
void System::Net::CookieToken::_set_End(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "End", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Equals
::System::Net::CookieToken System::Net::CookieToken::_get_Equals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Equals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Equals"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Equals
void System::Net::CookieToken::_set_Equals(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Equals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Equals", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Comment
::System::Net::CookieToken System::Net::CookieToken::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Comment
void System::Net::CookieToken::_set_Comment(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken CommentUrl
::System::Net::CookieToken System::Net::CookieToken::_get_CommentUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_CommentUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "CommentUrl"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken CommentUrl
void System::Net::CookieToken::_set_CommentUrl(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_CommentUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "CommentUrl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken CookieName
::System::Net::CookieToken System::Net::CookieToken::_get_CookieName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_CookieName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "CookieName"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken CookieName
void System::Net::CookieToken::_set_CookieName(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_CookieName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "CookieName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Discard
::System::Net::CookieToken System::Net::CookieToken::_get_Discard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Discard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Discard"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Discard
void System::Net::CookieToken::_set_Discard(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Discard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Discard", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Domain
::System::Net::CookieToken System::Net::CookieToken::_get_Domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Domain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Domain"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Domain
void System::Net::CookieToken::_set_Domain(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Domain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Domain", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Expires
::System::Net::CookieToken System::Net::CookieToken::_get_Expires() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Expires");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Expires"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Expires
void System::Net::CookieToken::_set_Expires(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Expires");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Expires", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken MaxAge
::System::Net::CookieToken System::Net::CookieToken::_get_MaxAge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_MaxAge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "MaxAge"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken MaxAge
void System::Net::CookieToken::_set_MaxAge(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_MaxAge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "MaxAge", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Path
::System::Net::CookieToken System::Net::CookieToken::_get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Path");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Path"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Path
void System::Net::CookieToken::_set_Path(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Path");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Path", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Port
::System::Net::CookieToken System::Net::CookieToken::_get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Port");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Port"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Port
void System::Net::CookieToken::_set_Port(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Port");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Port", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Secure
::System::Net::CookieToken System::Net::CookieToken::_get_Secure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Secure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Secure"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Secure
void System::Net::CookieToken::_set_Secure(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Secure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Secure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken HttpOnly
::System::Net::CookieToken System::Net::CookieToken::_get_HttpOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_HttpOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "HttpOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken HttpOnly
void System::Net::CookieToken::_set_HttpOnly(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_HttpOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "HttpOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Unknown
::System::Net::CookieToken System::Net::CookieToken::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Unknown
void System::Net::CookieToken::_set_Unknown(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Version
::System::Net::CookieToken System::Net::CookieToken::_get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Version"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Version
void System::Net::CookieToken::_set_Version(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Version", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::CookieToken::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.CookieTokenizer
#include "System/Net/CookieTokenizer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Net.CookieTokenizer/RecognizedAttribute[] RecognizedAttributes
::ArrayW<::System::Net::CookieTokenizer::RecognizedAttribute> System::Net::CookieTokenizer::_get_RecognizedAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::_get_RecognizedAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Net::CookieTokenizer::RecognizedAttribute>>("System.Net", "CookieTokenizer", "RecognizedAttributes"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.CookieTokenizer/RecognizedAttribute[] RecognizedAttributes
void System::Net::CookieTokenizer::_set_RecognizedAttributes(::ArrayW<::System::Net::CookieTokenizer::RecognizedAttribute> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::_set_RecognizedAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieTokenizer", "RecognizedAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.CookieTokenizer/RecognizedAttribute[] RecognizedServerAttributes
::ArrayW<::System::Net::CookieTokenizer::RecognizedAttribute> System::Net::CookieTokenizer::_get_RecognizedServerAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::_get_RecognizedServerAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Net::CookieTokenizer::RecognizedAttribute>>("System.Net", "CookieTokenizer", "RecognizedServerAttributes"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.CookieTokenizer/RecognizedAttribute[] RecognizedServerAttributes
void System::Net::CookieTokenizer::_set_RecognizedServerAttributes(::ArrayW<::System::Net::CookieTokenizer::RecognizedAttribute> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::_set_RecognizedServerAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieTokenizer", "RecognizedServerAttributes", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_eofCookie
[[deprecated("Use field access instead!")]] bool& System::Net::CookieTokenizer::dyn_m_eofCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_eofCookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eofCookie"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_index
[[deprecated("Use field access instead!")]] int& System::Net::CookieTokenizer::dyn_m_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_length
[[deprecated("Use field access instead!")]] int& System::Net::CookieTokenizer::dyn_m_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_name
[[deprecated("Use field access instead!")]] ::StringW& System::Net::CookieTokenizer::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_quoted
[[deprecated("Use field access instead!")]] bool& System::Net::CookieTokenizer::dyn_m_quoted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_quoted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_quoted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_start
[[deprecated("Use field access instead!")]] int& System::Net::CookieTokenizer::dyn_m_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.CookieToken m_token
[[deprecated("Use field access instead!")]] ::System::Net::CookieToken& System::Net::CookieTokenizer::dyn_m_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_token"))->offset;
  return *reinterpret_cast<::System::Net::CookieToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_tokenLength
[[deprecated("Use field access instead!")]] int& System::Net::CookieTokenizer::dyn_m_tokenLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_tokenLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tokenLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_tokenStream
[[deprecated("Use field access instead!")]] ::StringW& System::Net::CookieTokenizer::dyn_m_tokenStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_tokenStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tokenStream"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_value
[[deprecated("Use field access instead!")]] ::StringW& System::Net::CookieTokenizer::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.CookieTokenizer.get_EndOfCookie
bool System::Net::CookieTokenizer::get_EndOfCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::get_EndOfCookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndOfCookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.set_EndOfCookie
void System::Net::CookieTokenizer::set_EndOfCookie(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::set_EndOfCookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EndOfCookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.CookieTokenizer.get_Eof
bool System::Net::CookieTokenizer::get_Eof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::get_Eof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Eof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.get_Name
::StringW System::Net::CookieTokenizer::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.set_Name
void System::Net::CookieTokenizer::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.CookieTokenizer.get_Quoted
bool System::Net::CookieTokenizer::get_Quoted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::get_Quoted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Quoted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.set_Quoted
void System::Net::CookieTokenizer::set_Quoted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::set_Quoted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Quoted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.CookieTokenizer.get_Token
::System::Net::CookieToken System::Net::CookieTokenizer::get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::get_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.set_Token
void System::Net::CookieTokenizer::set_Token(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::set_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.CookieTokenizer.get_Value
::StringW System::Net::CookieTokenizer::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.set_Value
void System::Net::CookieTokenizer::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.CookieTokenizer.Extract
::StringW System::Net::CookieTokenizer::Extract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::Extract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Extract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.FindNext
::System::Net::CookieToken System::Net::CookieTokenizer::FindNext(bool ignoreComma, bool ignoreEquals) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::FindNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignoreComma), ::il2cpp_utils::ExtractType(ignoreEquals)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieToken, false>(this, ___internal__method, ignoreComma, ignoreEquals);
}
// Autogenerated method: System.Net.CookieTokenizer.Next
::System::Net::CookieToken System::Net::CookieTokenizer::Next(bool first, bool parseResponseCookies) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(parseResponseCookies)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieToken, false>(this, ___internal__method, first, parseResponseCookies);
}
// Autogenerated method: System.Net.CookieTokenizer.Reset
void System::Net::CookieTokenizer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.TokenFromName
::System::Net::CookieToken System::Net::CookieTokenizer::TokenFromName(bool parseResponseCookies) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::TokenFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TokenFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parseResponseCookies)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieToken, false>(this, ___internal__method, parseResponseCookies);
}
// Autogenerated method: System.Net.CookieTokenizer..cctor
void System::Net::CookieTokenizer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "CookieTokenizer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.CookieTokenizer/RecognizedAttribute
#include "System/Net/CookieTokenizer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_name
[[deprecated("Use field access instead!")]] ::StringW& System::Net::CookieTokenizer::RecognizedAttribute::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::RecognizedAttribute::dyn_m_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.CookieToken m_token
[[deprecated("Use field access instead!")]] ::System::Net::CookieToken& System::Net::CookieTokenizer::RecognizedAttribute::dyn_m_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::RecognizedAttribute::dyn_m_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_token"))->offset;
  return *reinterpret_cast<::System::Net::CookieToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.CookieTokenizer/RecognizedAttribute..ctor
// ABORTED elsewhere.  System::Net::CookieTokenizer::RecognizedAttribute::RecognizedAttribute(::StringW name, ::System::Net::CookieToken token)
// Autogenerated method: System.Net.CookieTokenizer/RecognizedAttribute.get_Token
::System::Net::CookieToken System::Net::CookieTokenizer::RecognizedAttribute::get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::RecognizedAttribute::get_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer/RecognizedAttribute.IsEqualTo
bool System::Net::CookieTokenizer::RecognizedAttribute::IsEqualTo(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::RecognizedAttribute::IsEqualTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsEqualTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.CookieParser
#include "System/Net/CookieParser.hpp"
// Including type: System.Net.CookieTokenizer
#include "System/Net/CookieTokenizer.hpp"
// Including type: System.Net.Cookie
#include "System/Net/Cookie.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.CookieTokenizer m_tokenizer
[[deprecated("Use field access instead!")]] ::System::Net::CookieTokenizer*& System::Net::CookieParser::dyn_m_tokenizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieParser::dyn_m_tokenizer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tokenizer"))->offset;
  return *reinterpret_cast<::System::Net::CookieTokenizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Cookie m_savedCookie
[[deprecated("Use field access instead!")]] ::System::Net::Cookie*& System::Net::CookieParser::dyn_m_savedCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieParser::dyn_m_savedCookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_savedCookie"))->offset;
  return *reinterpret_cast<::System::Net::Cookie**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.CookieParser.Get
::System::Net::Cookie* System::Net::CookieParser::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieParser::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Cookie*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieParser.GetServer
::System::Net::Cookie* System::Net::CookieParser::GetServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieParser::GetServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Cookie*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieParser.CheckQuoted
::StringW System::Net::CookieParser::CheckQuoted(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieParser::CheckQuoted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "CookieParser", "CheckQuoted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Comparer
#include "System/Net/Comparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Comparer.System.Collections.IComparer.Compare
int System::Net::Comparer::System_Collections_IComparer_Compare(::Il2CppObject* ol, ::Il2CppObject* _or) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Comparer::System.Collections.IComparer.Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Comparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ol, _or);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.CookieCollection
#include "System/Net/CookieCollection.hpp"
// Including type: System.Net.CookieCollection/Stamp
#include "System/Net/CookieCollection_Stamp.hpp"
// Including type: System.Net.CookieCollection/CookieCollectionEnumerator
#include "System/Net/CookieCollection_CookieCollectionEnumerator.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Net.Cookie
#include "System/Net/Cookie.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 m_version
[[deprecated("Use field access instead!")]] int& System::Net::CookieCollection::dyn_m_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::dyn_m_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList m_list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Net::CookieCollection::dyn_m_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::dyn_m_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime m_TimeStamp
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Net::CookieCollection::dyn_m_TimeStamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::dyn_m_TimeStamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TimeStamp"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_has_other_versions
[[deprecated("Use field access instead!")]] bool& System::Net::CookieCollection::dyn_m_has_other_versions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::dyn_m_has_other_versions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_has_other_versions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsReadOnly
[[deprecated("Use field access instead!")]] bool& System::Net::CookieCollection::dyn_m_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::dyn_m_IsReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.CookieCollection.get_IsReadOnly
bool System::Net::CookieCollection::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieCollection.get_Item
::System::Net::Cookie* System::Net::CookieCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Cookie*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Net.CookieCollection.get_Item
::System::Net::Cookie* System::Net::CookieCollection::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Cookie*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Net.CookieCollection.Add
void System::Net::CookieCollection::Add(::System::Net::Cookie* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cookie);
}
// Autogenerated method: System.Net.CookieCollection.Add
void System::Net::CookieCollection::Add(::System::Net::CookieCollection* cookies) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookies)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cookies);
}
// Autogenerated method: System.Net.CookieCollection.get_Count
int System::Net::CookieCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::CookieCollection*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieCollection.get_IsSynchronized
bool System::Net::CookieCollection::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::CookieCollection*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieCollection.get_SyncRoot
::Il2CppObject* System::Net::CookieCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::CookieCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieCollection.CopyTo
void System::Net::CookieCollection::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::CookieCollection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Net.CookieCollection.CopyTo
void System::Net::CookieCollection::CopyTo(::ArrayW<::System::Net::Cookie*> array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Net.CookieCollection.TimeStamp
::System::DateTime System::Net::CookieCollection::TimeStamp(::System::Net::CookieCollection::Stamp how) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::TimeStamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TimeStamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(how)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, how);
}
// Autogenerated method: System.Net.CookieCollection.get_IsOtherVersionSeen
bool System::Net::CookieCollection::get_IsOtherVersionSeen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::get_IsOtherVersionSeen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOtherVersionSeen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieCollection.InternalAdd
int System::Net::CookieCollection::InternalAdd(::System::Net::Cookie* cookie, bool isStrict) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::InternalAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie), ::il2cpp_utils::ExtractType(isStrict)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cookie, isStrict);
}
// Autogenerated method: System.Net.CookieCollection.IndexOf
int System::Net::CookieCollection::IndexOf(::System::Net::Cookie* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cookie);
}
// Autogenerated method: System.Net.CookieCollection.RemoveAt
void System::Net::CookieCollection::RemoveAt(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: System.Net.CookieCollection.GetEnumerator
::System::Collections::IEnumerator* System::Net::CookieCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::CookieCollection*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.CookieCollection/Stamp
#include "System/Net/CookieCollection_Stamp.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.CookieCollection/Stamp Check
::System::Net::CookieCollection::Stamp System::Net::CookieCollection::Stamp::_get_Check() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Stamp::_get_Check");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieCollection::Stamp>("System.Net", "CookieCollection/Stamp", "Check"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieCollection/Stamp Check
void System::Net::CookieCollection::Stamp::_set_Check(::System::Net::CookieCollection::Stamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Stamp::_set_Check");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieCollection/Stamp", "Check", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieCollection/Stamp Set
::System::Net::CookieCollection::Stamp System::Net::CookieCollection::Stamp::_get_Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Stamp::_get_Set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieCollection::Stamp>("System.Net", "CookieCollection/Stamp", "Set"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieCollection/Stamp Set
void System::Net::CookieCollection::Stamp::_set_Set(::System::Net::CookieCollection::Stamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Stamp::_set_Set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieCollection/Stamp", "Set", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieCollection/Stamp SetToUnused
::System::Net::CookieCollection::Stamp System::Net::CookieCollection::Stamp::_get_SetToUnused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Stamp::_get_SetToUnused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieCollection::Stamp>("System.Net", "CookieCollection/Stamp", "SetToUnused"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieCollection/Stamp SetToUnused
void System::Net::CookieCollection::Stamp::_set_SetToUnused(::System::Net::CookieCollection::Stamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Stamp::_set_SetToUnused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieCollection/Stamp", "SetToUnused", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieCollection/Stamp SetToMaxUsed
::System::Net::CookieCollection::Stamp System::Net::CookieCollection::Stamp::_get_SetToMaxUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Stamp::_get_SetToMaxUsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieCollection::Stamp>("System.Net", "CookieCollection/Stamp", "SetToMaxUsed"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieCollection/Stamp SetToMaxUsed
void System::Net::CookieCollection::Stamp::_set_SetToMaxUsed(::System::Net::CookieCollection::Stamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Stamp::_set_SetToMaxUsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieCollection/Stamp", "SetToMaxUsed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::CookieCollection::Stamp::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Stamp::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.CookieCollection/CookieCollectionEnumerator
#include "System/Net/CookieCollection_CookieCollectionEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.CookieCollection m_cookies
[[deprecated("Use field access instead!")]] ::System::Net::CookieCollection*& System::Net::CookieCollection::CookieCollectionEnumerator::dyn_m_cookies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::CookieCollectionEnumerator::dyn_m_cookies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cookies"))->offset;
  return *reinterpret_cast<::System::Net::CookieCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_count
[[deprecated("Use field access instead!")]] int& System::Net::CookieCollection::CookieCollectionEnumerator::dyn_m_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::CookieCollectionEnumerator::dyn_m_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_index
[[deprecated("Use field access instead!")]] int& System::Net::CookieCollection::CookieCollectionEnumerator::dyn_m_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::CookieCollectionEnumerator::dyn_m_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_version
[[deprecated("Use field access instead!")]] int& System::Net::CookieCollection::CookieCollectionEnumerator::dyn_m_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::CookieCollectionEnumerator::dyn_m_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.CookieCollection/CookieCollectionEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Net::CookieCollection::CookieCollectionEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::CookieCollectionEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::CookieCollection::CookieCollectionEnumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieCollection/CookieCollectionEnumerator.System.Collections.IEnumerator.MoveNext
bool System::Net::CookieCollection::CookieCollectionEnumerator::System_Collections_IEnumerator_MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::CookieCollectionEnumerator::System.Collections.IEnumerator.MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::CookieCollection::CookieCollectionEnumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieCollection/CookieCollectionEnumerator.System.Collections.IEnumerator.Reset
void System::Net::CookieCollection::CookieCollectionEnumerator::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::CookieCollectionEnumerator::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::CookieCollection::CookieCollectionEnumerator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.HeaderVariantInfo
#include "System/Net/HeaderVariantInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_name
[[deprecated("Use field access instead!")]] ::StringW& System::Net::HeaderVariantInfo::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderVariantInfo::dyn_m_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.CookieVariant m_variant
[[deprecated("Use field access instead!")]] ::System::Net::CookieVariant& System::Net::HeaderVariantInfo::dyn_m_variant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderVariantInfo::dyn_m_variant");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_variant"))->offset;
  return *reinterpret_cast<::System::Net::CookieVariant*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.HeaderVariantInfo..ctor
// ABORTED elsewhere.  System::Net::HeaderVariantInfo::HeaderVariantInfo(::StringW name, ::System::Net::CookieVariant variant)
// Autogenerated method: System.Net.HeaderVariantInfo.get_Name
::StringW System::Net::HeaderVariantInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderVariantInfo::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HeaderVariantInfo.get_Variant
::System::Net::CookieVariant System::Net::HeaderVariantInfo::get_Variant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderVariantInfo::get_Variant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Variant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieVariant, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.CookieContainer
#include "System/Net/CookieContainer.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Net.Cookie
#include "System/Net/Cookie.hpp"
// Including type: System.Net.PathList
#include "System/Net/PathList.hpp"
// Including type: System.Net.CookieCollection
#include "System/Net/CookieCollection.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 DefaultCookieLimit
int System::Net::CookieContainer::_get_DefaultCookieLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::_get_DefaultCookieLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "CookieContainer", "DefaultCookieLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DefaultCookieLimit
void System::Net::CookieContainer::_set_DefaultCookieLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::_set_DefaultCookieLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieContainer", "DefaultCookieLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DefaultPerDomainCookieLimit
int System::Net::CookieContainer::_get_DefaultPerDomainCookieLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::_get_DefaultPerDomainCookieLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "CookieContainer", "DefaultPerDomainCookieLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DefaultPerDomainCookieLimit
void System::Net::CookieContainer::_set_DefaultPerDomainCookieLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::_set_DefaultPerDomainCookieLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieContainer", "DefaultPerDomainCookieLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DefaultCookieLengthLimit
int System::Net::CookieContainer::_get_DefaultCookieLengthLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::_get_DefaultCookieLengthLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "CookieContainer", "DefaultCookieLengthLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DefaultCookieLengthLimit
void System::Net::CookieContainer::_set_DefaultCookieLengthLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::_set_DefaultCookieLengthLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieContainer", "DefaultCookieLengthLimit", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.HeaderVariantInfo[] HeaderInfo
::ArrayW<::System::Net::HeaderVariantInfo> System::Net::CookieContainer::_get_HeaderInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::_get_HeaderInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Net::HeaderVariantInfo>>("System.Net", "CookieContainer", "HeaderInfo"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.HeaderVariantInfo[] HeaderInfo
void System::Net::CookieContainer::_set_HeaderInfo(::ArrayW<::System::Net::HeaderVariantInfo> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::_set_HeaderInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieContainer", "HeaderInfo", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable m_domainTable
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Net::CookieContainer::dyn_m_domainTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::dyn_m_domainTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_domainTable"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_maxCookieSize
[[deprecated("Use field access instead!")]] int& System::Net::CookieContainer::dyn_m_maxCookieSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::dyn_m_maxCookieSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxCookieSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_maxCookies
[[deprecated("Use field access instead!")]] int& System::Net::CookieContainer::dyn_m_maxCookies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::dyn_m_maxCookies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxCookies"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_maxCookiesPerDomain
[[deprecated("Use field access instead!")]] int& System::Net::CookieContainer::dyn_m_maxCookiesPerDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::dyn_m_maxCookiesPerDomain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxCookiesPerDomain"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_count
[[deprecated("Use field access instead!")]] int& System::Net::CookieContainer::dyn_m_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::dyn_m_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_fqdnMyDomain
[[deprecated("Use field access instead!")]] ::StringW& System::Net::CookieContainer::dyn_m_fqdnMyDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::dyn_m_fqdnMyDomain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fqdnMyDomain"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.CookieContainer.get_Capacity
int System::Net::CookieContainer::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::get_Capacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieContainer.set_Capacity
void System::Net::CookieContainer::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::set_Capacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.CookieContainer.get_Count
int System::Net::CookieContainer::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieContainer.get_MaxCookieSize
int System::Net::CookieContainer::get_MaxCookieSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::get_MaxCookieSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxCookieSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieContainer.set_MaxCookieSize
void System::Net::CookieContainer::set_MaxCookieSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::set_MaxCookieSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxCookieSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.CookieContainer.get_PerDomainCapacity
int System::Net::CookieContainer::get_PerDomainCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::get_PerDomainCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PerDomainCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieContainer.set_PerDomainCapacity
void System::Net::CookieContainer::set_PerDomainCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::set_PerDomainCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PerDomainCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.CookieContainer.Add
void System::Net::CookieContainer::Add(::System::Net::Cookie* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cookie);
}
// Autogenerated method: System.Net.CookieContainer.AddRemoveDomain
void System::Net::CookieContainer::AddRemoveDomain(::StringW key, ::System::Net::PathList* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::AddRemoveDomain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRemoveDomain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Net.CookieContainer.Add
void System::Net::CookieContainer::Add(::System::Net::Cookie* cookie, bool throwOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie), ::il2cpp_utils::ExtractType(throwOnError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cookie, throwOnError);
}
// Autogenerated method: System.Net.CookieContainer.AgeCookies
bool System::Net::CookieContainer::AgeCookies(::StringW domain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::AgeCookies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AgeCookies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(domain)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, domain);
}
// Autogenerated method: System.Net.CookieContainer.ExpireCollection
int System::Net::CookieContainer::ExpireCollection(::System::Net::CookieCollection* cc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::ExpireCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpireCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cc)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cc);
}
// Autogenerated method: System.Net.CookieContainer.Add
void System::Net::CookieContainer::Add(::System::Net::CookieCollection* cookies) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookies)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cookies);
}
// Autogenerated method: System.Net.CookieContainer.IsLocalDomain
bool System::Net::CookieContainer::IsLocalDomain(::StringW host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::IsLocalDomain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLocalDomain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.CookieContainer.Add
void System::Net::CookieContainer::Add(::System::Uri* uri, ::System::Net::Cookie* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(cookie)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri, cookie);
}
// Autogenerated method: System.Net.CookieContainer.Add
void System::Net::CookieContainer::Add(::System::Uri* uri, ::System::Net::CookieCollection* cookies) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(cookies)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri, cookies);
}
// Autogenerated method: System.Net.CookieContainer.CookieCutter
::System::Net::CookieCollection* System::Net::CookieContainer::CookieCutter(::System::Uri* uri, ::StringW headerName, ::StringW setCookieHeader, bool isThrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::CookieCutter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CookieCutter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(headerName), ::il2cpp_utils::ExtractType(setCookieHeader), ::il2cpp_utils::ExtractType(isThrow)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieCollection*, false>(this, ___internal__method, uri, headerName, setCookieHeader, isThrow);
}
// Autogenerated method: System.Net.CookieContainer.GetCookies
::System::Net::CookieCollection* System::Net::CookieContainer::GetCookies(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::GetCookies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCookies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieCollection*, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Net.CookieContainer.InternalGetCookies
::System::Net::CookieCollection* System::Net::CookieContainer::InternalGetCookies(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::InternalGetCookies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetCookies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieCollection*, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Net.CookieContainer.BuildCookieCollectionFromDomainMatches
void System::Net::CookieContainer::BuildCookieCollectionFromDomainMatches(::System::Uri* uri, bool isSecure, int port, ::System::Net::CookieCollection* cookies, ::System::Collections::Generic::List_1<::StringW>* domainAttribute, bool matchOnlyPlainCookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::BuildCookieCollectionFromDomainMatches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildCookieCollectionFromDomainMatches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(isSecure), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(cookies), ::il2cpp_utils::ExtractType(domainAttribute), ::il2cpp_utils::ExtractType(matchOnlyPlainCookie)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri, isSecure, port, cookies, domainAttribute, matchOnlyPlainCookie);
}
// Autogenerated method: System.Net.CookieContainer.MergeUpdateCollections
void System::Net::CookieContainer::MergeUpdateCollections(::System::Net::CookieCollection* destination, ::System::Net::CookieCollection* source, int port, bool isSecure, bool isPlainOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::MergeUpdateCollections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MergeUpdateCollections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(isSecure), ::il2cpp_utils::ExtractType(isPlainOnly)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destination, source, port, isSecure, isPlainOnly);
}
// Autogenerated method: System.Net.CookieContainer.GetCookieHeader
::StringW System::Net::CookieContainer::GetCookieHeader(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::GetCookieHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCookieHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Net.CookieContainer.GetCookieHeader
::StringW System::Net::CookieContainer::GetCookieHeader(::System::Uri* uri, ByRef<::StringW> optCookie2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::GetCookieHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCookieHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uri, byref(optCookie2));
}
// Autogenerated method: System.Net.CookieContainer.SetCookies
void System::Net::CookieContainer::SetCookies(::System::Uri* uri, ::StringW cookieHeader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::SetCookies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCookies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(cookieHeader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri, cookieHeader);
}
// Autogenerated method: System.Net.CookieContainer..cctor
void System::Net::CookieContainer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "CookieContainer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.PathList
#include "System/Net/PathList.hpp"
// Including type: System.Net.PathList/PathListComparer
#include "System/Net/PathList_PathListComparer.hpp"
// Including type: System.Collections.SortedList
#include "System/Collections/SortedList.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList m_list
[[deprecated("Use field access instead!")]] ::System::Collections::SortedList*& System::Net::PathList::dyn_m_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::dyn_m_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_list"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.PathList.get_Count
int System::Net::PathList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.PathList.GetCookiesCount
int System::Net::PathList::GetCookiesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::GetCookiesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCookiesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.PathList.get_Values
::System::Collections::ICollection* System::Net::PathList::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::get_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.PathList.get_Item
::Il2CppObject* System::Net::PathList::get_Item(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Net.PathList.set_Item
void System::Net::PathList::set_Item(::StringW s, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, value);
}
// Autogenerated method: System.Net.PathList.GetEnumerator
::System::Collections::IEnumerator* System::Net::PathList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.PathList.get_SyncRoot
::Il2CppObject* System::Net::PathList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::get_SyncRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.PathList/PathListComparer
#include "System/Net/PathList_PathListComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Net.PathList/PathListComparer StaticInstance
::System::Net::PathList::PathListComparer* System::Net::PathList::PathListComparer::_get_StaticInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::PathListComparer::_get_StaticInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::PathList::PathListComparer*>("System.Net", "PathList/PathListComparer", "StaticInstance"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Net.PathList/PathListComparer StaticInstance
void System::Net::PathList::PathListComparer::_set_StaticInstance(::System::Net::PathList::PathListComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::PathListComparer::_set_StaticInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "PathList/PathListComparer", "StaticInstance", value));
}
// Autogenerated method: System.Net.PathList/PathListComparer.System.Collections.IComparer.Compare
int System::Net::PathList::PathListComparer::System_Collections_IComparer_Compare(::Il2CppObject* ol, ::Il2CppObject* _or) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::PathListComparer::System.Collections.IComparer.Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::PathList::PathListComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ol, _or);
}
// Autogenerated method: System.Net.PathList/PathListComparer..cctor
void System::Net::PathList::PathListComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::PathListComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "PathList/PathListComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.CookieException
#include "System/Net/CookieException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.CookieException.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::CookieException::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieException::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::CookieException*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.CookieException.GetObjectData
void System::Net::CookieException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.FileWebRequest
#include "System/Net/FileWebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.LazyAsyncResult
#include "System/Net/LazyAsyncResult.hpp"
// Including type: System.Threading.WaitCallback
#include "System/Threading/WaitCallback.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.WaitCallback s_GetRequestStreamCallback
::System::Threading::WaitCallback* System::Net::FileWebRequest::_get_s_GetRequestStreamCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::_get_s_GetRequestStreamCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::WaitCallback*>("System.Net", "FileWebRequest", "s_GetRequestStreamCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.WaitCallback s_GetRequestStreamCallback
void System::Net::FileWebRequest::_set_s_GetRequestStreamCallback(::System::Threading::WaitCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::_set_s_GetRequestStreamCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FileWebRequest", "s_GetRequestStreamCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.WaitCallback s_GetResponseCallback
::System::Threading::WaitCallback* System::Net::FileWebRequest::_get_s_GetResponseCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::_get_s_GetResponseCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::WaitCallback*>("System.Net", "FileWebRequest", "s_GetResponseCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.WaitCallback s_GetResponseCallback
void System::Net::FileWebRequest::_set_s_GetResponseCallback(::System::Threading::WaitCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::_set_s_GetResponseCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FileWebRequest", "s_GetResponseCallback", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_connectionGroupName
[[deprecated("Use field access instead!")]] ::StringW& System::Net::FileWebRequest::dyn_m_connectionGroupName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_connectionGroupName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_connectionGroupName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_contentLength
[[deprecated("Use field access instead!")]] int64_t& System::Net::FileWebRequest::dyn_m_contentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_contentLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_contentLength"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ICredentials m_credentials
[[deprecated("Use field access instead!")]] ::System::Net::ICredentials*& System::Net::FileWebRequest::dyn_m_credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_credentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_credentials"))->offset;
  return *reinterpret_cast<::System::Net::ICredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileAccess m_fileAccess
[[deprecated("Use field access instead!")]] ::System::IO::FileAccess& System::Net::FileWebRequest::dyn_m_fileAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_fileAccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fileAccess"))->offset;
  return *reinterpret_cast<::System::IO::FileAccess*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebHeaderCollection m_headers
[[deprecated("Use field access instead!")]] ::System::Net::WebHeaderCollection*& System::Net::FileWebRequest::dyn_m_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_headers"))->offset;
  return *reinterpret_cast<::System::Net::WebHeaderCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_method
[[deprecated("Use field access instead!")]] ::StringW& System::Net::FileWebRequest::dyn_m_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_method"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_preauthenticate
[[deprecated("Use field access instead!")]] bool& System::Net::FileWebRequest::dyn_m_preauthenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_preauthenticate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_preauthenticate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IWebProxy m_proxy
[[deprecated("Use field access instead!")]] ::System::Net::IWebProxy*& System::Net::FileWebRequest::dyn_m_proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_proxy"))->offset;
  return *reinterpret_cast<::System::Net::IWebProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent m_readerEvent
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& System::Net::FileWebRequest::dyn_m_readerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_readerEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_readerEvent"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_readPending
[[deprecated("Use field access instead!")]] bool& System::Net::FileWebRequest::dyn_m_readPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_readPending");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_readPending"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebResponse m_response
[[deprecated("Use field access instead!")]] ::System::Net::WebResponse*& System::Net::FileWebRequest::dyn_m_response() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_response");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_response"))->offset;
  return *reinterpret_cast<::System::Net::WebResponse**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream m_stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::FileWebRequest::dyn_m_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_syncHint
[[deprecated("Use field access instead!")]] bool& System::Net::FileWebRequest::dyn_m_syncHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_syncHint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_syncHint"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_timeout
[[deprecated("Use field access instead!")]] int& System::Net::FileWebRequest::dyn_m_timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_timeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timeout"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri m_uri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::FileWebRequest::dyn_m_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_uri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_writePending
[[deprecated("Use field access instead!")]] bool& System::Net::FileWebRequest::dyn_m_writePending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_writePending");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_writePending"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_writing
[[deprecated("Use field access instead!")]] bool& System::Net::FileWebRequest::dyn_m_writing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_writing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_writing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.LazyAsyncResult m_WriteAResult
[[deprecated("Use field access instead!")]] ::System::Net::LazyAsyncResult*& System::Net::FileWebRequest::dyn_m_WriteAResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_WriteAResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WriteAResult"))->offset;
  return *reinterpret_cast<::System::Net::LazyAsyncResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.LazyAsyncResult m_ReadAResult
[[deprecated("Use field access instead!")]] ::System::Net::LazyAsyncResult*& System::Net::FileWebRequest::dyn_m_ReadAResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_ReadAResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReadAResult"))->offset;
  return *reinterpret_cast<::System::Net::LazyAsyncResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Aborted
[[deprecated("Use field access instead!")]] int& System::Net::FileWebRequest::dyn_m_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_Aborted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Aborted"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.FileWebRequest.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::FileWebRequest::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::FileWebRequest*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.FileWebRequest.get_Aborted
bool System::Net::FileWebRequest::get_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_Aborted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Aborted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.CanGetRequestStream
bool System::Net::FileWebRequest::CanGetRequestStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::CanGetRequestStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanGetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.GetRequestStreamCallback
void System::Net::FileWebRequest::GetRequestStreamCallback(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::GetRequestStreamCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "FileWebRequest", "GetRequestStreamCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: System.Net.FileWebRequest.GetResponseCallback
void System::Net::FileWebRequest::GetResponseCallback(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::GetResponseCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "FileWebRequest", "GetResponseCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: System.Net.FileWebRequest.UnblockReader
void System::Net::FileWebRequest::UnblockReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::UnblockReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnblockReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.GetObjectData
void System::Net::FileWebRequest::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.FileWebRequest.get_ConnectionGroupName
::StringW System::Net::FileWebRequest::get_ConnectionGroupName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_ConnectionGroupName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_ConnectionGroupName
void System::Net::FileWebRequest::set_ConnectionGroupName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::set_ConnectionGroupName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.get_ContentLength
int64_t System::Net::FileWebRequest::get_ContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_ContentLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_ContentLength
void System::Net::FileWebRequest::set_ContentLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::set_ContentLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.get_ContentType
::StringW System::Net::FileWebRequest::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_ContentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_ContentType
void System::Net::FileWebRequest::set_ContentType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::set_ContentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.get_Credentials
::System::Net::ICredentials* System::Net::FileWebRequest::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_Credentials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_Credentials
void System::Net::FileWebRequest::set_Credentials(::System::Net::ICredentials* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::set_Credentials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.get_Headers
::System::Net::WebHeaderCollection* System::Net::FileWebRequest::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_Headers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebHeaderCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.get_Method
::StringW System::Net::FileWebRequest::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_Method");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_Method
void System::Net::FileWebRequest::set_Method(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::set_Method");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.get_PreAuthenticate
bool System::Net::FileWebRequest::get_PreAuthenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_PreAuthenticate
void System::Net::FileWebRequest::set_PreAuthenticate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::set_PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.get_Proxy
::System::Net::IWebProxy* System::Net::FileWebRequest::get_Proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_Proxy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IWebProxy*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_Proxy
void System::Net::FileWebRequest::set_Proxy(::System::Net::IWebProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::set_Proxy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.get_Timeout
int System::Net::FileWebRequest::get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_Timeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_Timeout
void System::Net::FileWebRequest::set_Timeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::set_Timeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.get_RequestUri
::System::Uri* System::Net::FileWebRequest::get_RequestUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_RequestUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.BeginGetRequestStream
::System::IAsyncResult* System::Net::FileWebRequest::BeginGetRequestStream(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::BeginGetRequestStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.FileWebRequest.BeginGetResponse
::System::IAsyncResult* System::Net::FileWebRequest::BeginGetResponse(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::BeginGetResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.FileWebRequest.EndGetRequestStream
::System::IO::Stream* System::Net::FileWebRequest::EndGetRequestStream(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::EndGetRequestStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.FileWebRequest.EndGetResponse
::System::Net::WebResponse* System::Net::FileWebRequest::EndGetResponse(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::EndGetResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebResponse*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.FileWebRequest.GetRequestStream
::System::IO::Stream* System::Net::FileWebRequest::GetRequestStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::GetRequestStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.GetResponse
::System::Net::WebResponse* System::Net::FileWebRequest::GetResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::GetResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebResponse*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.get_UseDefaultCredentials
bool System::Net::FileWebRequest::get_UseDefaultCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_UseDefaultCredentials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_UseDefaultCredentials
void System::Net::FileWebRequest::set_UseDefaultCredentials(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::set_UseDefaultCredentials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.Abort
void System::Net::FileWebRequest::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::Abort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest..cctor
void System::Net::FileWebRequest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "FileWebRequest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.FileWebRequestCreator
#include "System/Net/FileWebRequestCreator.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.FileWebRequestCreator.Create
::System::Net::WebRequest* System::Net::FileWebRequestCreator::Create(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequestCreator::Create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::FileWebRequestCreator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebRequest*, false>(this, ___internal__method, uri);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.FileWebStream
#include "System/Net/FileWebStream.hpp"
// Including type: System.Net.FileWebRequest
#include "System/Net/FileWebRequest.hpp"
// Including type: System.Net.CloseExState
#include "System/Net/CloseExState.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.FileWebRequest m_request
[[deprecated("Use field access instead!")]] ::System::Net::FileWebRequest*& System::Net::FileWebStream::dyn_m_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::dyn_m_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_request"))->offset;
  return *reinterpret_cast<::System::Net::FileWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.FileWebStream.System.Net.ICloseEx.CloseEx
void System::Net::FileWebStream::System_Net_ICloseEx_CloseEx(::System::Net::CloseExState closeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::System.Net.ICloseEx.CloseEx");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::FileWebStream*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, closeState);
}
// Autogenerated method: System.Net.FileWebStream.CheckError
void System::Net::FileWebStream::CheckError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::CheckError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebStream.Dispose
void System::Net::FileWebStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.FileWebStream.Read
int System::Net::FileWebStream::Read(::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStream*), 33));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.FileWebStream.Write
void System::Net::FileWebStream::Write(::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStream*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.FileWebStream.BeginRead
::System::IAsyncResult* System::Net::FileWebStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int size, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStream*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, callback, state);
}
// Autogenerated method: System.Net.FileWebStream.EndRead
int System::Net::FileWebStream::EndRead(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::EndRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStream*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ar);
}
// Autogenerated method: System.Net.FileWebStream.BeginWrite
::System::IAsyncResult* System::Net::FileWebStream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int size, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStream*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, callback, state);
}
// Autogenerated method: System.Net.FileWebStream.EndWrite
void System::Net::FileWebStream::EndWrite(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStream*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.FileWebResponse
#include "System/Net/FileWebResponse.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Net.FileWebRequest
#include "System/Net/FileWebRequest.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Net.CloseExState
#include "System/Net/CloseExState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 DefaultFileStreamBufferSize
int System::Net::FileWebResponse::_get_DefaultFileStreamBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::_get_DefaultFileStreamBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "FileWebResponse", "DefaultFileStreamBufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DefaultFileStreamBufferSize
void System::Net::FileWebResponse::_set_DefaultFileStreamBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::_set_DefaultFileStreamBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FileWebResponse", "DefaultFileStreamBufferSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.String DefaultFileContentType
::StringW System::Net::FileWebResponse::_get_DefaultFileContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::_get_DefaultFileContentType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "FileWebResponse", "DefaultFileContentType"));
}
// Autogenerated static field setter
// Set static field: static private System.String DefaultFileContentType
void System::Net::FileWebResponse::_set_DefaultFileContentType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::_set_DefaultFileContentType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FileWebResponse", "DefaultFileContentType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_closed
[[deprecated("Use field access instead!")]] bool& System::Net::FileWebResponse::dyn_m_closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::dyn_m_closed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_closed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_contentLength
[[deprecated("Use field access instead!")]] int64_t& System::Net::FileWebResponse::dyn_m_contentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::dyn_m_contentLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_contentLength"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileAccess m_fileAccess
[[deprecated("Use field access instead!")]] ::System::IO::FileAccess& System::Net::FileWebResponse::dyn_m_fileAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::dyn_m_fileAccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fileAccess"))->offset;
  return *reinterpret_cast<::System::IO::FileAccess*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebHeaderCollection m_headers
[[deprecated("Use field access instead!")]] ::System::Net::WebHeaderCollection*& System::Net::FileWebResponse::dyn_m_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::dyn_m_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_headers"))->offset;
  return *reinterpret_cast<::System::Net::WebHeaderCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream m_stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::FileWebResponse::dyn_m_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::dyn_m_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri m_uri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::FileWebResponse::dyn_m_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::dyn_m_uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_uri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.FileWebResponse.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::FileWebResponse::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::FileWebResponse*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.FileWebResponse.CheckDisposed
void System::Net::FileWebResponse::CheckDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::CheckDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebResponse.System.Net.ICloseEx.CloseEx
void System::Net::FileWebResponse::System_Net_ICloseEx_CloseEx(::System::Net::CloseExState closeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::System.Net.ICloseEx.CloseEx");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::FileWebResponse*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, closeState);
}
// Autogenerated method: System.Net.FileWebResponse.GetObjectData
void System::Net::FileWebResponse::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebResponse*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.FileWebResponse.get_ContentLength
int64_t System::Net::FileWebResponse::get_ContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::get_ContentLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebResponse*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebResponse.get_ContentType
::StringW System::Net::FileWebResponse::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::get_ContentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebResponse*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebResponse.get_Headers
::System::Net::WebHeaderCollection* System::Net::FileWebResponse::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::get_Headers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebResponse*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebHeaderCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebResponse.get_SupportsHeaders
bool System::Net::FileWebResponse::get_SupportsHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::get_SupportsHeaders");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebResponse*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebResponse.get_ResponseUri
::System::Uri* System::Net::FileWebResponse::get_ResponseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::get_ResponseUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebResponse*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebResponse.Close
void System::Net::FileWebResponse::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebResponse*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebResponse.GetResponseStream
::System::IO::Stream* System::Net::FileWebResponse::GetResponseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::GetResponseStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebResponse*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.IWebProxy.GetProxy
::System::Uri* System::Net::IWebProxy::GetProxy(::System::Uri* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IWebProxy::GetProxy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::IWebProxy*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, destination);
}
// Autogenerated method: System.Net.IWebProxy.IsBypassed
bool System::Net::IWebProxy::IsBypassed(::System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IWebProxy::IsBypassed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::IWebProxy*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.IWebProxy.get_Credentials
::System::Net::ICredentials* System::Net::IWebProxy::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IWebProxy::get_Credentials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::IWebProxy*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.IWebProxy.set_Credentials
void System::Net::IWebProxy::set_Credentials(::System::Net::ICredentials* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IWebProxy::set_Credentials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::IWebProxy*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.WebProxyData
#include "System/Net/WebProxyData.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Boolean bypassOnLocal
[[deprecated("Use field access instead!")]] bool& System::Net::WebProxyData::dyn_bypassOnLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyData::dyn_bypassOnLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bypassOnLocal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean automaticallyDetectSettings
[[deprecated("Use field access instead!")]] bool& System::Net::WebProxyData::dyn_automaticallyDetectSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyData::dyn_automaticallyDetectSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "automaticallyDetectSettings"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Uri proxyAddress
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::WebProxyData::dyn_proxyAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyData::dyn_proxyAddress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "proxyAddress"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable proxyHostAddresses
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Net::WebProxyData::dyn_proxyHostAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyData::dyn_proxyHostAddresses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "proxyHostAddresses"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Uri scriptLocation
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::WebProxyData::dyn_scriptLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyData::dyn_scriptLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scriptLocation"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.ArrayList bypassList
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Net::WebProxyData::dyn_bypassList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyData::dyn_bypassList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bypassList"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.WebProxy
#include "System/Net/WebProxy.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Net.AutoWebProxyScriptEngine
#include "System/Net/AutoWebProxyScriptEngine.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Net.WebProxyData
#include "System/Net/WebProxyData.hpp"
// Including type: System.Net.ProxyChain
#include "System/Net/ProxyChain.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _UseRegistry
[[deprecated("Use field access instead!")]] bool& System::Net::WebProxy::dyn__UseRegistry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::dyn__UseRegistry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_UseRegistry"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _BypassOnLocal
[[deprecated("Use field access instead!")]] bool& System::Net::WebProxy::dyn__BypassOnLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::dyn__BypassOnLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_BypassOnLocal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableAutoproxy
[[deprecated("Use field access instead!")]] bool& System::Net::WebProxy::dyn_m_EnableAutoproxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::dyn_m_EnableAutoproxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableAutoproxy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri _ProxyAddress
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::WebProxy::dyn__ProxyAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::dyn__ProxyAddress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ProxyAddress"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _BypassList
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Net::WebProxy::dyn__BypassList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::dyn__BypassList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_BypassList"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ICredentials _Credentials
[[deprecated("Use field access instead!")]] ::System::Net::ICredentials*& System::Net::WebProxy::dyn__Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::dyn__Credentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Credentials"))->offset;
  return *reinterpret_cast<::System::Net::ICredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.Regex[] _RegExBypassList
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Text::RegularExpressions::Regex*>& System::Net::WebProxy::dyn__RegExBypassList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::dyn__RegExBypassList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_RegExBypassList"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Text::RegularExpressions::Regex*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _ProxyHostAddresses
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Net::WebProxy::dyn__ProxyHostAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::dyn__ProxyHostAddresses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ProxyHostAddresses"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.AutoWebProxyScriptEngine m_ScriptEngine
[[deprecated("Use field access instead!")]] ::System::Net::AutoWebProxyScriptEngine*& System::Net::WebProxy::dyn_m_ScriptEngine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::dyn_m_ScriptEngine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScriptEngine"))->offset;
  return *reinterpret_cast<::System::Net::AutoWebProxyScriptEngine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.WebProxy.get_Address
::System::Uri* System::Net::WebProxy::get_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::get_Address");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Address", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.set_Address
void System::Net::WebProxy::set_Address(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::set_Address");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Address", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebProxy.set_AutoDetect
void System::Net::WebProxy::set_AutoDetect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::set_AutoDetect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AutoDetect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebProxy.set_ScriptLocation
void System::Net::WebProxy::set_ScriptLocation(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::set_ScriptLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ScriptLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebProxy.get_BypassProxyOnLocal
bool System::Net::WebProxy::get_BypassProxyOnLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::get_BypassProxyOnLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BypassProxyOnLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.set_BypassProxyOnLocal
void System::Net::WebProxy::set_BypassProxyOnLocal(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::set_BypassProxyOnLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BypassProxyOnLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebProxy.get_BypassList
::ArrayW<::StringW> System::Net::WebProxy::get_BypassList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::get_BypassList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BypassList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.set_BypassList
void System::Net::WebProxy::set_BypassList(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::set_BypassList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BypassList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebProxy.get_Credentials
::System::Net::ICredentials* System::Net::WebProxy::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::get_Credentials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebProxy*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.set_Credentials
void System::Net::WebProxy::set_Credentials(::System::Net::ICredentials* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::set_Credentials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebProxy*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebProxy.get_UseDefaultCredentials
bool System::Net::WebProxy::get_UseDefaultCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::get_UseDefaultCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.set_UseDefaultCredentials
void System::Net::WebProxy::set_UseDefaultCredentials(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::set_UseDefaultCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebProxy.get_BypassArrayList
::System::Collections::ArrayList* System::Net::WebProxy::get_BypassArrayList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::get_BypassArrayList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BypassArrayList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.CheckForChanges
void System::Net::WebProxy::CheckForChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::CheckForChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.GetProxy
::System::Uri* System::Net::WebProxy::GetProxy(::System::Uri* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::GetProxy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebProxy*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, destination);
}
// Autogenerated method: System.Net.WebProxy.CreateProxyUri
::System::Uri* System::Net::WebProxy::CreateProxyUri(::StringW address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::CreateProxyUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebProxy", "CreateProxyUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address);
}
// Autogenerated method: System.Net.WebProxy.UpdateRegExList
void System::Net::WebProxy::UpdateRegExList(bool canThrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::UpdateRegExList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRegExList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canThrow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canThrow);
}
// Autogenerated method: System.Net.WebProxy.IsMatchInBypassList
bool System::Net::WebProxy::IsMatchInBypassList(::System::Uri* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::IsMatchInBypassList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatchInBypassList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Net.WebProxy.IsLocal
bool System::Net::WebProxy::IsLocal(::System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::IsLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.WebProxy.IsLocalInProxyHash
bool System::Net::WebProxy::IsLocalInProxyHash(::System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::IsLocalInProxyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLocalInProxyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.WebProxy.IsBypassed
bool System::Net::WebProxy::IsBypassed(::System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::IsBypassed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebProxy*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.WebProxy.IsBypassedManual
bool System::Net::WebProxy::IsBypassedManual(::System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::IsBypassedManual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBypassedManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.WebProxy.GetDefaultProxy
::System::Net::WebProxy* System::Net::WebProxy::GetDefaultProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::GetDefaultProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebProxy", "GetDefaultProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::WebProxy::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebProxy*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.WebProxy.GetObjectData
void System::Net::WebProxy::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebProxy*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.WebProxy.get_ScriptEngine
::System::Net::AutoWebProxyScriptEngine* System::Net::WebProxy::get_ScriptEngine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::get_ScriptEngine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ScriptEngine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::AutoWebProxyScriptEngine*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.set_ScriptEngine
void System::Net::WebProxy::set_ScriptEngine(::System::Net::AutoWebProxyScriptEngine* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::set_ScriptEngine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ScriptEngine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebProxy.CreateDefaultProxy
::System::Net::IWebProxy* System::Net::WebProxy::CreateDefaultProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::CreateDefaultProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebProxy", "CreateDefaultProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IWebProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.DeleteScriptEngine
void System::Net::WebProxy::DeleteScriptEngine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::DeleteScriptEngine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteScriptEngine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.UnsafeUpdateFromRegistry
void System::Net::WebProxy::UnsafeUpdateFromRegistry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::UnsafeUpdateFromRegistry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsafeUpdateFromRegistry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.Update
void System::Net::WebProxy::Update(::System::Net::WebProxyData* webProxyData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(webProxyData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, webProxyData);
}
// Autogenerated method: System.Net.WebProxy.System.Net.IAutoWebProxy.GetProxies
::System::Net::ProxyChain* System::Net::WebProxy::System_Net_IAutoWebProxy_GetProxies(::System::Uri* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::System.Net.IAutoWebProxy.GetProxies");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebProxy*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ProxyChain*, false>(this, ___internal__method, destination);
}
// Autogenerated method: System.Net.WebProxy.GetProxyAuto
bool System::Net::WebProxy::GetProxyAuto(::System::Uri* destination, ByRef<::System::Uri*> proxyUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::GetProxyAuto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxyAuto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<::System::Uri*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(proxyUri));
}
// Autogenerated method: System.Net.WebProxy.IsBypassedAuto
bool System::Net::WebProxy::IsBypassedAuto(::System::Uri* destination, ByRef<bool> isBypassed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::IsBypassedAuto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBypassedAuto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(isBypassed));
}
// Autogenerated method: System.Net.WebProxy.GetProxiesAuto
::ArrayW<::System::Uri*> System::Net::WebProxy::GetProxiesAuto(::System::Uri* destination, ByRef<int> syncStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::GetProxiesAuto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxiesAuto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(syncStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Uri*>, false>(this, ___internal__method, destination, byref(syncStatus));
}
// Autogenerated method: System.Net.WebProxy.AbortGetProxiesAuto
void System::Net::WebProxy::AbortGetProxiesAuto(ByRef<int> syncStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::AbortGetProxiesAuto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbortGetProxiesAuto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syncStatus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(syncStatus));
}
// Autogenerated method: System.Net.WebProxy.GetProxyAutoFailover
::System::Uri* System::Net::WebProxy::GetProxyAutoFailover(::System::Uri* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::GetProxyAutoFailover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxyAutoFailover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, destination);
}
// Autogenerated method: System.Net.WebProxy.AreAllBypassed
bool System::Net::WebProxy::AreAllBypassed(::System::Collections::Generic::IEnumerable_1<::StringW>* proxies, bool checkFirstOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::AreAllBypassed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebProxy", "AreAllBypassed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxies), ::il2cpp_utils::ExtractType(checkFirstOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxies, checkFirstOnly);
}
// Autogenerated method: System.Net.WebProxy.ProxyUri
::System::Uri* System::Net::WebProxy::ProxyUri(::StringW proxyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::ProxyUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebProxy", "ProxyUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.AutoWebProxyScriptEngine
#include "System/Net/AutoWebProxyScriptEngine.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.WebProxy
#include "System/Net/WebProxy.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Uri <AutomaticConfigurationScript>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::AutoWebProxyScriptEngine::dyn_$AutomaticConfigurationScript$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AutoWebProxyScriptEngine::dyn_$AutomaticConfigurationScript$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AutomaticConfigurationScript>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <AutomaticallyDetectSettings>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::AutoWebProxyScriptEngine::dyn_$AutomaticallyDetectSettings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AutoWebProxyScriptEngine::dyn_$AutomaticallyDetectSettings$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AutomaticallyDetectSettings>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.AutoWebProxyScriptEngine.get_AutomaticConfigurationScript
::System::Uri* System::Net::AutoWebProxyScriptEngine::get_AutomaticConfigurationScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AutoWebProxyScriptEngine::get_AutomaticConfigurationScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutomaticConfigurationScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.AutoWebProxyScriptEngine.set_AutomaticConfigurationScript
void System::Net::AutoWebProxyScriptEngine::set_AutomaticConfigurationScript(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AutoWebProxyScriptEngine::set_AutomaticConfigurationScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AutomaticConfigurationScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.AutoWebProxyScriptEngine.get_AutomaticallyDetectSettings
bool System::Net::AutoWebProxyScriptEngine::get_AutomaticallyDetectSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AutoWebProxyScriptEngine::get_AutomaticallyDetectSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutomaticallyDetectSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.AutoWebProxyScriptEngine.set_AutomaticallyDetectSettings
void System::Net::AutoWebProxyScriptEngine::set_AutomaticallyDetectSettings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AutoWebProxyScriptEngine::set_AutomaticallyDetectSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AutomaticallyDetectSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.AutoWebProxyScriptEngine.GetProxies
bool System::Net::AutoWebProxyScriptEngine::GetProxies(::System::Uri* destination, ByRef<::System::Collections::Generic::IList_1<::StringW>*> proxyList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AutoWebProxyScriptEngine::GetProxies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::IList_1<::StringW>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(proxyList));
}
// Autogenerated method: System.Net.AutoWebProxyScriptEngine.GetProxies
bool System::Net::AutoWebProxyScriptEngine::GetProxies(::System::Uri* destination, ByRef<::System::Collections::Generic::IList_1<::StringW>*> proxyList, ByRef<int> syncStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AutoWebProxyScriptEngine::GetProxies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::IList_1<::StringW>*&>(), ::il2cpp_utils::ExtractType(syncStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(proxyList), byref(syncStatus));
}
// Autogenerated method: System.Net.AutoWebProxyScriptEngine.Close
void System::Net::AutoWebProxyScriptEngine::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AutoWebProxyScriptEngine::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.AutoWebProxyScriptEngine.Abort
void System::Net::AutoWebProxyScriptEngine::Abort(ByRef<int> syncStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AutoWebProxyScriptEngine::Abort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Abort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syncStatus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(syncStatus));
}
// Autogenerated method: System.Net.AutoWebProxyScriptEngine.CheckForChanges
void System::Net::AutoWebProxyScriptEngine::CheckForChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AutoWebProxyScriptEngine::CheckForChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.UnsafeNclNativeMethods/HttpApi
#include "System/Net/UnsafeNclNativeMethods_HttpApi.hpp"
// Including type: System.Net.UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID
#include "System/Net/UnsafeNclNativeMethods_HttpApi_HTTP_REQUEST_HEADER_ID.hpp"
// Including type: System.Net.UnsafeNclNativeMethods/HttpApi/HTTP_RESPONSE_HEADER_ID
#include "System/Net/UnsafeNclNativeMethods_HttpApi_HTTP_RESPONSE_HEADER_ID.hpp"
// Including type: System.Net.UnsafeNclNativeMethods/HttpApi/Enum
#include "System/Net/UnsafeNclNativeMethods_HttpApi_Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 HttpHeaderRequestMaximum
int System::Net::UnsafeNclNativeMethods::HttpApi::_get_HttpHeaderRequestMaximum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::_get_HttpHeaderRequestMaximum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "UnsafeNclNativeMethods/HttpApi", "HttpHeaderRequestMaximum"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 HttpHeaderRequestMaximum
void System::Net::UnsafeNclNativeMethods::HttpApi::_set_HttpHeaderRequestMaximum(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::_set_HttpHeaderRequestMaximum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi", "HttpHeaderRequestMaximum", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 HttpHeaderResponseMaximum
int System::Net::UnsafeNclNativeMethods::HttpApi::_get_HttpHeaderResponseMaximum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::_get_HttpHeaderResponseMaximum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "UnsafeNclNativeMethods/HttpApi", "HttpHeaderResponseMaximum"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 HttpHeaderResponseMaximum
void System::Net::UnsafeNclNativeMethods::HttpApi::_set_HttpHeaderResponseMaximum(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::_set_HttpHeaderResponseMaximum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi", "HttpHeaderResponseMaximum", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] m_Strings
::ArrayW<::StringW> System::Net::UnsafeNclNativeMethods::HttpApi::_get_m_Strings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::_get_m_Strings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Net", "UnsafeNclNativeMethods/HttpApi", "m_Strings"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] m_Strings
void System::Net::UnsafeNclNativeMethods::HttpApi::_set_m_Strings(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::_set_m_Strings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi", "m_Strings", value));
}
// Autogenerated method: System.Net.UnsafeNclNativeMethods/HttpApi..cctor
void System::Net::UnsafeNclNativeMethods::HttpApi::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "UnsafeNclNativeMethods/HttpApi", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID
#include "System/Net/UnsafeNclNativeMethods_HttpApi_HTTP_REQUEST_HEADER_ID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] m_Strings
::ArrayW<::StringW> System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::_get_m_Strings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::_get_m_Strings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Net", "UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID", "m_Strings"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] m_Strings
void System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::_set_m_Strings(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::_set_m_Strings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID", "m_Strings", value));
}
// Autogenerated method: System.Net.UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID.ToString
::StringW System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::ToString(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position);
}
// Autogenerated method: System.Net.UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID..cctor
void System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.UnsafeNclNativeMethods/HttpApi/HTTP_RESPONSE_HEADER_ID
#include "System/Net/UnsafeNclNativeMethods_HttpApi_HTTP_RESPONSE_HEADER_ID.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable m_Hashtable
::System::Collections::Hashtable* System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_RESPONSE_HEADER_ID::_get_m_Hashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_RESPONSE_HEADER_ID::_get_m_Hashtable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Net", "UnsafeNclNativeMethods/HttpApi/HTTP_RESPONSE_HEADER_ID", "m_Hashtable"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable m_Hashtable
void System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_RESPONSE_HEADER_ID::_set_m_Hashtable(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_RESPONSE_HEADER_ID::_set_m_Hashtable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/HTTP_RESPONSE_HEADER_ID", "m_Hashtable", value));
}
// Autogenerated method: System.Net.UnsafeNclNativeMethods/HttpApi/HTTP_RESPONSE_HEADER_ID..cctor
void System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_RESPONSE_HEADER_ID::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_RESPONSE_HEADER_ID::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "UnsafeNclNativeMethods/HttpApi/HTTP_RESPONSE_HEADER_ID", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.UnsafeNclNativeMethods/HttpApi/HTTP_RESPONSE_HEADER_ID.IndexOfKnownHeader
int System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_RESPONSE_HEADER_ID::IndexOfKnownHeader(::StringW HeaderName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_RESPONSE_HEADER_ID::IndexOfKnownHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "UnsafeNclNativeMethods/HttpApi/HTTP_RESPONSE_HEADER_ID", "IndexOfKnownHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(HeaderName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, HeaderName);
}
// Autogenerated method: System.Net.UnsafeNclNativeMethods/HttpApi/HTTP_RESPONSE_HEADER_ID.ToString
::StringW System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_RESPONSE_HEADER_ID::ToString(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_RESPONSE_HEADER_ID::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "UnsafeNclNativeMethods/HttpApi/HTTP_RESPONSE_HEADER_ID", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.UnsafeNclNativeMethods/HttpApi/Enum
#include "System/Net/UnsafeNclNativeMethods_HttpApi_Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderCacheControl
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderCacheControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderCacheControl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderCacheControl"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderCacheControl
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderCacheControl(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderCacheControl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderCacheControl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderConnection
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderConnection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderConnection"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderConnection
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderConnection(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderConnection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderConnection", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderDate
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderDate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderDate"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderDate
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderDate(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderDate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderDate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderKeepAlive
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderKeepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderKeepAlive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderKeepAlive"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderKeepAlive
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderKeepAlive(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderKeepAlive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderKeepAlive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderPragma
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderPragma() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderPragma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderPragma"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderPragma
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderPragma(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderPragma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderPragma", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderTrailer
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderTrailer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderTrailer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderTrailer"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderTrailer
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderTrailer(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderTrailer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderTrailer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderTransferEncoding
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderTransferEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderTransferEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderTransferEncoding"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderTransferEncoding
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderTransferEncoding(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderTransferEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderTransferEncoding", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderUpgrade
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderUpgrade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderUpgrade");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderUpgrade"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderUpgrade
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderUpgrade(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderUpgrade");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderUpgrade", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderVia
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderVia() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderVia");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderVia"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderVia
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderVia(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderVia");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderVia", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderWarning
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderWarning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderWarning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderWarning"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderWarning
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderWarning(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderWarning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderWarning", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderAllow
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderAllow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderAllow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderAllow"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderAllow
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderAllow(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderAllow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderAllow", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderContentLength
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderContentLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderContentLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderContentLength
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderContentLength(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderContentLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderContentLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderContentType
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderContentType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderContentType"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderContentType
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderContentType(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderContentType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderContentType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderContentEncoding
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderContentEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderContentEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderContentEncoding"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderContentEncoding
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderContentEncoding(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderContentEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderContentEncoding", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderContentLanguage
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderContentLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderContentLanguage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderContentLanguage"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderContentLanguage
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderContentLanguage(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderContentLanguage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderContentLanguage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderContentLocation
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderContentLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderContentLocation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderContentLocation"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderContentLocation
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderContentLocation(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderContentLocation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderContentLocation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderContentMd5
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderContentMd5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderContentMd5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderContentMd5"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderContentMd5
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderContentMd5(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderContentMd5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderContentMd5", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderContentRange
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderContentRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderContentRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderContentRange"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderContentRange
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderContentRange(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderContentRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderContentRange", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderExpires
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderExpires() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderExpires");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderExpires"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderExpires
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderExpires(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderExpires");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderExpires", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderLastModified
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderLastModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderLastModified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderLastModified"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderLastModified
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderLastModified(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderLastModified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderLastModified", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderAcceptRanges
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderAcceptRanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderAcceptRanges");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderAcceptRanges"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderAcceptRanges
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderAcceptRanges(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderAcceptRanges");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderAcceptRanges", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderAge
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderAge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderAge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderAge"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderAge
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderAge(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderAge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderAge", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderEtag
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderEtag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderEtag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderEtag"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderEtag
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderEtag(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderEtag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderEtag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderLocation
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderLocation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderLocation"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderLocation
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderLocation(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderLocation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderLocation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderProxyAuthenticate
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderProxyAuthenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderProxyAuthenticate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderProxyAuthenticate"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderProxyAuthenticate
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderProxyAuthenticate(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderProxyAuthenticate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderProxyAuthenticate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderRetryAfter
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderRetryAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderRetryAfter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderRetryAfter"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderRetryAfter
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderRetryAfter(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderRetryAfter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderRetryAfter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderServer
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderServer"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderServer
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderServer(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderServer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderSetCookie
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderSetCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderSetCookie");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderSetCookie"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderSetCookie
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderSetCookie(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderSetCookie");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderSetCookie", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderVary
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderVary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderVary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderVary"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderVary
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderVary(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderVary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderVary", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderWwwAuthenticate
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderWwwAuthenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderWwwAuthenticate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderWwwAuthenticate"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderWwwAuthenticate
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderWwwAuthenticate(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderWwwAuthenticate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderWwwAuthenticate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderResponseMaximum
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderResponseMaximum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderResponseMaximum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderResponseMaximum"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderResponseMaximum
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderResponseMaximum(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderResponseMaximum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderResponseMaximum", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderMaximum
::System::Net::UnsafeNclNativeMethods::HttpApi::Enum System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderMaximum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_get_HttpHeaderMaximum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::UnsafeNclNativeMethods::HttpApi::Enum>("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderMaximum"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.UnsafeNclNativeMethods/HttpApi/Enum HttpHeaderMaximum
void System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderMaximum(::System::Net::UnsafeNclNativeMethods::HttpApi::Enum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::_set_HttpHeaderMaximum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/Enum", "HttpHeaderMaximum", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::UnsafeNclNativeMethods::HttpApi::Enum::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::Enum::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.UnsafeNclNativeMethods/SecureStringHelper
#include "System/Net/UnsafeNclNativeMethods_SecureStringHelper.hpp"
// Including type: System.Security.SecureString
#include "System/Security/SecureString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.UnsafeNclNativeMethods/SecureStringHelper.CreateString
::StringW System::Net::UnsafeNclNativeMethods::SecureStringHelper::CreateString(::System::Security::SecureString* secureString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::SecureStringHelper::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "UnsafeNclNativeMethods/SecureStringHelper", "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secureString)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, secureString);
}
// Autogenerated method: System.Net.UnsafeNclNativeMethods/SecureStringHelper.CreateSecureString
::System::Security::SecureString* System::Net::UnsafeNclNativeMethods::SecureStringHelper::CreateSecureString(::StringW plainString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::SecureStringHelper::CreateSecureString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "UnsafeNclNativeMethods/SecureStringHelper", "CreateSecureString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plainString)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecureString*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, plainString);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.HttpSysSettings
#include "System/Net/HttpSysSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean EnableNonUtf8
bool System::Net::HttpSysSettings::_get_EnableNonUtf8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpSysSettings::_get_EnableNonUtf8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net", "HttpSysSettings", "EnableNonUtf8"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean EnableNonUtf8
void System::Net::HttpSysSettings::_set_EnableNonUtf8(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpSysSettings::_set_EnableNonUtf8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpSysSettings", "EnableNonUtf8", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean FavorUtf8
bool System::Net::HttpSysSettings::_get_FavorUtf8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpSysSettings::_get_FavorUtf8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net", "HttpSysSettings", "FavorUtf8"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean FavorUtf8
void System::Net::HttpSysSettings::_set_FavorUtf8(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpSysSettings::_set_FavorUtf8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpSysSettings", "FavorUtf8", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Logging
#include "System/Net/Logging.hpp"
// Including type: System.Net.TraceSource
#include "System/Net/TraceSource.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Logging.get_On
bool System::Net::Logging::get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::get_On");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Logging", "get_On", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Logging.get_Web
::System::Net::TraceSource* System::Net::Logging::get_Web() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::get_Web");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Logging", "get_Web", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::TraceSource*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Logging.get_HttpListener
::System::Net::TraceSource* System::Net::Logging::get_HttpListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::get_HttpListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Logging", "get_HttpListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::TraceSource*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Logging.get_Sockets
::System::Net::TraceSource* System::Net::Logging::get_Sockets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::get_Sockets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Logging", "get_Sockets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::TraceSource*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Logging.Enter
void System::Net::Logging::Enter(::System::Net::TraceSource* traceSource, ::Il2CppObject* obj, ::StringW method, ::Il2CppObject* paramObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::Enter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Logging", "Enter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceSource), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(paramObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, traceSource, obj, method, paramObject);
}
// Autogenerated method: System.Net.Logging.Enter
void System::Net::Logging::Enter(::System::Net::TraceSource* traceSource, ::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::Enter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Logging", "Enter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceSource), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, traceSource, msg);
}
// Autogenerated method: System.Net.Logging.Enter
void System::Net::Logging::Enter(::System::Net::TraceSource* traceSource, ::StringW msg, ::StringW parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::Enter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Logging", "Enter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceSource), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, traceSource, msg, parameters);
}
// Autogenerated method: System.Net.Logging.Exception
void System::Net::Logging::Exception(::System::Net::TraceSource* traceSource, ::Il2CppObject* obj, ::StringW method, ::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Logging", "Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceSource), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, traceSource, obj, method, e);
}
// Autogenerated method: System.Net.Logging.Exit
void System::Net::Logging::Exit(::System::Net::TraceSource* traceSource, ::Il2CppObject* obj, ::StringW method, ::Il2CppObject* retObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::Exit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Logging", "Exit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceSource), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(retObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, traceSource, obj, method, retObject);
}
// Autogenerated method: System.Net.Logging.Exit
void System::Net::Logging::Exit(::System::Net::TraceSource* traceSource, ::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::Exit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Logging", "Exit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceSource), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, traceSource, msg);
}
// Autogenerated method: System.Net.Logging.Exit
void System::Net::Logging::Exit(::System::Net::TraceSource* traceSource, ::StringW msg, ::StringW parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::Exit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Logging", "Exit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceSource), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, traceSource, msg, parameters);
}
// Autogenerated method: System.Net.Logging.PrintInfo
void System::Net::Logging::PrintInfo(::System::Net::TraceSource* traceSource, ::Il2CppObject* obj, ::StringW method, ::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::PrintInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Logging", "PrintInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceSource), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, traceSource, obj, method, msg);
}
// Autogenerated method: System.Net.Logging.PrintInfo
void System::Net::Logging::PrintInfo(::System::Net::TraceSource* traceSource, ::Il2CppObject* obj, ::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::PrintInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Logging", "PrintInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceSource), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, traceSource, obj, msg);
}
// Autogenerated method: System.Net.Logging.PrintInfo
void System::Net::Logging::PrintInfo(::System::Net::TraceSource* traceSource, ::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::PrintInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Logging", "PrintInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceSource), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, traceSource, msg);
}
// Autogenerated method: System.Net.Logging.PrintWarning
void System::Net::Logging::PrintWarning(::System::Net::TraceSource* traceSource, ::Il2CppObject* obj, ::StringW method, ::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::PrintWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Logging", "PrintWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceSource), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, traceSource, obj, method, msg);
}
// Autogenerated method: System.Net.Logging.PrintWarning
void System::Net::Logging::PrintWarning(::System::Net::TraceSource* traceSource, ::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::PrintWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Logging", "PrintWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceSource), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, traceSource, msg);
}
// Autogenerated method: System.Net.Logging.PrintError
void System::Net::Logging::PrintError(::System::Net::TraceSource* traceSource, ::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::PrintError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Logging", "PrintError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceSource), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, traceSource, msg);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.TraceSource
#include "System/Net/TraceSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ServerCertValidationCallback
#include "System/Net/ServerCertValidationCallback.hpp"
// Including type: System.Net.ServerCertValidationCallback/CallbackContext
#include "System/Net/ServerCertValidationCallback_CallbackContext.hpp"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Security.RemoteCertificateValidationCallback m_ValidationCallback
[[deprecated("Use field access instead!")]] ::System::Net::Security::RemoteCertificateValidationCallback*& System::Net::ServerCertValidationCallback::dyn_m_ValidationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::dyn_m_ValidationCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidationCallback"))->offset;
  return *reinterpret_cast<::System::Net::Security::RemoteCertificateValidationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.ExecutionContext m_Context
[[deprecated("Use field access instead!")]] ::System::Threading::ExecutionContext*& System::Net::ServerCertValidationCallback::dyn_m_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::dyn_m_Context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Context"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.ServerCertValidationCallback.get_ValidationCallback
::System::Net::Security::RemoteCertificateValidationCallback* System::Net::ServerCertValidationCallback::get_ValidationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::get_ValidationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::RemoteCertificateValidationCallback*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ServerCertValidationCallback.Callback
void System::Net::ServerCertValidationCallback::Callback(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::Callback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Callback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Net.ServerCertValidationCallback.Invoke
bool System::Net::ServerCertValidationCallback::Invoke(::Il2CppObject* request, ::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::System::Security::Cryptography::X509Certificates::X509Chain* chain, ::System::Net::Security::SslPolicyErrors sslPolicyErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(sslPolicyErrors)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, request, certificate, chain, sslPolicyErrors);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ServerCertValidationCallback/CallbackContext
#include "System/Net/ServerCertValidationCallback_CallbackContext.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Object request
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::ServerCertValidationCallback::CallbackContext::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::CallbackContext::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Security.Cryptography.X509Certificates.X509Certificate certificate
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate*& System::Net::ServerCertValidationCallback::CallbackContext::dyn_certificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::CallbackContext::dyn_certificate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificate"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Security.Cryptography.X509Certificates.X509Chain chain
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Chain*& System::Net::ServerCertValidationCallback::CallbackContext::dyn_chain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::CallbackContext::dyn_chain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chain"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Chain**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Net.Security.SslPolicyErrors sslPolicyErrors
[[deprecated("Use field access instead!")]] ::System::Net::Security::SslPolicyErrors& System::Net::ServerCertValidationCallback::CallbackContext::dyn_sslPolicyErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::CallbackContext::dyn_sslPolicyErrors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sslPolicyErrors"))->offset;
  return *reinterpret_cast<::System::Net::Security::SslPolicyErrors*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean result
[[deprecated("Use field access instead!")]] bool& System::Net::ServerCertValidationCallback::CallbackContext::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::CallbackContext::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.AuthenticationManager
#include "System/Net/AuthenticationManager.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Net.ICredentialPolicy
#include "System/Net/ICredentialPolicy.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Collections.Specialized.StringDictionary
#include "System/Collections/Specialized/StringDictionary.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Net.IAuthenticationModule
#include "System/Net/IAuthenticationModule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.ArrayList modules
::System::Collections::ArrayList* System::Net::AuthenticationManager::_get_modules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::_get_modules");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::ArrayList*>("System.Net", "AuthenticationManager", "modules"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.ArrayList modules
void System::Net::AuthenticationManager::_set_modules(::System::Collections::ArrayList* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::_set_modules");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "AuthenticationManager", "modules", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object locker
::Il2CppObject* System::Net::AuthenticationManager::_get_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::_get_locker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Net", "AuthenticationManager", "locker"));
}
// Autogenerated static field setter
// Set static field: static private System.Object locker
void System::Net::AuthenticationManager::_set_locker(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::_set_locker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "AuthenticationManager", "locker", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.ICredentialPolicy credential_policy
::System::Net::ICredentialPolicy* System::Net::AuthenticationManager::_get_credential_policy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::_get_credential_policy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ICredentialPolicy*>("System.Net", "AuthenticationManager", "credential_policy"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.ICredentialPolicy credential_policy
void System::Net::AuthenticationManager::_set_credential_policy(::System::Net::ICredentialPolicy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::_set_credential_policy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "AuthenticationManager", "credential_policy", value));
}
// Autogenerated method: System.Net.AuthenticationManager.EnsureModules
void System::Net::AuthenticationManager::EnsureModules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::EnsureModules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "EnsureModules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.AuthenticationManager.get_CredentialPolicy
::System::Net::ICredentialPolicy* System::Net::AuthenticationManager::get_CredentialPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::get_CredentialPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "get_CredentialPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ICredentialPolicy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.AuthenticationManager.set_CredentialPolicy
void System::Net::AuthenticationManager::set_CredentialPolicy(::System::Net::ICredentialPolicy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::set_CredentialPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "set_CredentialPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Net.AuthenticationManager.GetMustImplement
::System::Exception* System::Net::AuthenticationManager::GetMustImplement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::GetMustImplement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "GetMustImplement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.AuthenticationManager.get_CustomTargetNameDictionary
::System::Collections::Specialized::StringDictionary* System::Net::AuthenticationManager::get_CustomTargetNameDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::get_CustomTargetNameDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "get_CustomTargetNameDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Specialized::StringDictionary*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.AuthenticationManager.get_RegisteredModules
::System::Collections::IEnumerator* System::Net::AuthenticationManager::get_RegisteredModules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::get_RegisteredModules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "get_RegisteredModules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.AuthenticationManager.get_OSSupportsExtendedProtection
bool System::Net::AuthenticationManager::get_OSSupportsExtendedProtection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::get_OSSupportsExtendedProtection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "get_OSSupportsExtendedProtection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.AuthenticationManager.Clear
void System::Net::AuthenticationManager::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.AuthenticationManager.Authenticate
::System::Net::Authorization* System::Net::AuthenticationManager::Authenticate(::StringW challenge, ::System::Net::WebRequest* request, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::Authenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "Authenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challenge, request, credentials);
}
// Autogenerated method: System.Net.AuthenticationManager.DoAuthenticate
::System::Net::Authorization* System::Net::AuthenticationManager::DoAuthenticate(::StringW challenge, ::System::Net::WebRequest* request, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::DoAuthenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "DoAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challenge, request, credentials);
}
// Autogenerated method: System.Net.AuthenticationManager.PreAuthenticate
::System::Net::Authorization* System::Net::AuthenticationManager::PreAuthenticate(::System::Net::WebRequest* request, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::PreAuthenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "PreAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, credentials);
}
// Autogenerated method: System.Net.AuthenticationManager.Register
void System::Net::AuthenticationManager::Register(::System::Net::IAuthenticationModule* authenticationModule) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(authenticationModule)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, authenticationModule);
}
// Autogenerated method: System.Net.AuthenticationManager.Unregister
void System::Net::AuthenticationManager::Unregister(::System::Net::IAuthenticationModule* authenticationModule) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::Unregister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "Unregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(authenticationModule)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, authenticationModule);
}
// Autogenerated method: System.Net.AuthenticationManager.Unregister
void System::Net::AuthenticationManager::Unregister(::StringW authenticationScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::Unregister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "Unregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(authenticationScheme)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, authenticationScheme);
}
// Autogenerated method: System.Net.AuthenticationManager.DoUnregister
void System::Net::AuthenticationManager::DoUnregister(::StringW authenticationScheme, bool throwEx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::DoUnregister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "DoUnregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(authenticationScheme), ::il2cpp_utils::ExtractType(throwEx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, authenticationScheme, throwEx);
}
// Autogenerated method: System.Net.AuthenticationManager..cctor
void System::Net::AuthenticationManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.BasicClient
#include "System/Net/BasicClient.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.BasicClient.Authenticate
::System::Net::Authorization* System::Net::BasicClient::Authenticate(::StringW challenge, ::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BasicClient::Authenticate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::BasicClient*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(this, ___internal__method, challenge, webRequest, credentials);
}
// Autogenerated method: System.Net.BasicClient.GetBytes
::ArrayW<uint8_t> System::Net::BasicClient::GetBytes(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BasicClient::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "BasicClient", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Net.BasicClient.InternalAuthenticate
::System::Net::Authorization* System::Net::BasicClient::InternalAuthenticate(::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BasicClient::InternalAuthenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "BasicClient", "InternalAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, webRequest, credentials);
}
// Autogenerated method: System.Net.BasicClient.PreAuthenticate
::System::Net::Authorization* System::Net::BasicClient::PreAuthenticate(::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BasicClient::PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::BasicClient*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(this, ___internal__method, webRequest, credentials);
}
// Autogenerated method: System.Net.BasicClient.get_AuthenticationType
::StringW System::Net::BasicClient::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BasicClient::get_AuthenticationType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::BasicClient*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.BasicClient.get_CanPreAuthenticate
bool System::Net::BasicClient::get_CanPreAuthenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BasicClient::get_CanPreAuthenticate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::BasicClient*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.BindIPEndPoint
#include "System/Net/BindIPEndPoint.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.ServicePoint
#include "System/Net/ServicePoint.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.BindIPEndPoint.Invoke
::System::Net::IPEndPoint* System::Net::BindIPEndPoint::Invoke(::System::Net::ServicePoint* servicePoint, ::System::Net::IPEndPoint* remoteEndPoint, int retryCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BindIPEndPoint::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::BindIPEndPoint*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPEndPoint*, false>(this, ___internal__method, servicePoint, remoteEndPoint, retryCount);
}
// Autogenerated method: System.Net.BindIPEndPoint.BeginInvoke
::System::IAsyncResult* System::Net::BindIPEndPoint::BeginInvoke(::System::Net::ServicePoint* servicePoint, ::System::Net::IPEndPoint* remoteEndPoint, int retryCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BindIPEndPoint::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::BindIPEndPoint*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, servicePoint, remoteEndPoint, retryCount, callback, object);
}
// Autogenerated method: System.Net.BindIPEndPoint.EndInvoke
::System::Net::IPEndPoint* System::Net::BindIPEndPoint::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BindIPEndPoint::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::BindIPEndPoint*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPEndPoint*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.BufferedReadStream
#include "System/Net/BufferedReadStream.hpp"
// Including type: System.Net.BufferedReadStream/<ProcessReadAsync>d__2
#include "System/Net/BufferedReadStream_-ProcessReadAsync-d__2.hpp"
// Including type: System.Net.BufferOffsetSize
#include "System/Net/BufferOffsetSize.hpp"
// Including type: System.Net.WebOperation
#include "System/Net/WebOperation.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.BufferOffsetSize readBuffer
[[deprecated("Use field access instead!")]] ::System::Net::BufferOffsetSize*& System::Net::BufferedReadStream::dyn_readBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BufferedReadStream::dyn_readBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readBuffer"))->offset;
  return *reinterpret_cast<::System::Net::BufferOffsetSize**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.BufferedReadStream.TryReadFromBuffer
bool System::Net::BufferedReadStream::TryReadFromBuffer(::ArrayW<uint8_t> buffer, int offset, int size, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BufferedReadStream::TryReadFromBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryReadFromBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buffer, offset, size, byref(result));
}
// Autogenerated method: System.Net.BufferedReadStream.ProcessReadAsync
::System::Threading::Tasks::Task_1<int>* System::Net::BufferedReadStream::ProcessReadAsync(::ArrayW<uint8_t> buffer, int offset, int size, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BufferedReadStream::ProcessReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebReadStream*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, size, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.BufferedReadStream/<ProcessReadAsync>d__2
#include "System/Net/BufferedReadStream_-ProcessReadAsync-d__2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Net::BufferedReadStream::$ProcessReadAsync$d__2::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BufferedReadStream::$ProcessReadAsync$d__2::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Int32> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>& System::Net::BufferedReadStream::$ProcessReadAsync$d__2::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BufferedReadStream::$ProcessReadAsync$d__2::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Net::BufferedReadStream::$ProcessReadAsync$d__2::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BufferedReadStream::$ProcessReadAsync$d__2::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.BufferedReadStream <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::BufferedReadStream*& System::Net::BufferedReadStream::$ProcessReadAsync$d__2::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BufferedReadStream::$ProcessReadAsync$d__2::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::BufferedReadStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 size
[[deprecated("Use field access instead!")]] int& System::Net::BufferedReadStream::$ProcessReadAsync$d__2::dyn_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BufferedReadStream::$ProcessReadAsync$d__2::dyn_size");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::BufferedReadStream::$ProcessReadAsync$d__2::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BufferedReadStream::$ProcessReadAsync$d__2::dyn_buffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 offset
[[deprecated("Use field access instead!")]] int& System::Net::BufferedReadStream::$ProcessReadAsync$d__2::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BufferedReadStream::$ProcessReadAsync$d__2::dyn_offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<System.Int32> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter& System::Net::BufferedReadStream::$ProcessReadAsync$d__2::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BufferedReadStream::$ProcessReadAsync$d__2::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.BufferedReadStream/<ProcessReadAsync>d__2.MoveNext
void System::Net::BufferedReadStream::$ProcessReadAsync$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BufferedReadStream::$ProcessReadAsync$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Net::BufferedReadStream::$ProcessReadAsync$d__2), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.BufferedReadStream/<ProcessReadAsync>d__2.SetStateMachine
void System::Net::BufferedReadStream::$ProcessReadAsync$d__2::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BufferedReadStream::$ProcessReadAsync$d__2::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Net::BufferedReadStream::$ProcessReadAsync$d__2), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ChunkedInputStream
#include "System/Net/ChunkedInputStream.hpp"
// Including type: System.Net.ChunkedInputStream/ReadBufferState
#include "System/Net/ChunkedInputStream_ReadBufferState.hpp"
// Including type: System.Net.MonoChunkParser
#include "System/Net/MonoChunkParser.hpp"
// Including type: System.Net.HttpListenerContext
#include "System/Net/HttpListenerContext.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Net::ChunkedInputStream::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.MonoChunkParser decoder
[[deprecated("Use field access instead!")]] ::System::Net::MonoChunkParser*& System::Net::ChunkedInputStream::dyn_decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::dyn_decoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decoder"))->offset;
  return *reinterpret_cast<::System::Net::MonoChunkParser**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpListenerContext context
[[deprecated("Use field access instead!")]] ::System::Net::HttpListenerContext*& System::Net::ChunkedInputStream::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<::System::Net::HttpListenerContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean no_more_data
[[deprecated("Use field access instead!")]] bool& System::Net::ChunkedInputStream::dyn_no_more_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::dyn_no_more_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "no_more_data"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.ChunkedInputStream.get_Decoder
::System::Net::MonoChunkParser* System::Net::ChunkedInputStream::get_Decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::get_Decoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Decoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::MonoChunkParser*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ChunkedInputStream.set_Decoder
void System::Net::ChunkedInputStream::set_Decoder(::System::Net::MonoChunkParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::set_Decoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Decoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.ChunkedInputStream.OnRead
void System::Net::ChunkedInputStream::OnRead(::System::IAsyncResult* base_ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::OnRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(base_ares)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, base_ares);
}
// Autogenerated method: System.Net.ChunkedInputStream.Read
int System::Net::ChunkedInputStream::Read(ByRef<::ArrayW<uint8_t>> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::RequestStream*), 33));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(buffer), offset, count);
}
// Autogenerated method: System.Net.ChunkedInputStream.BeginRead
::System::IAsyncResult* System::Net::ChunkedInputStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* cback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::RequestStream*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, cback, state);
}
// Autogenerated method: System.Net.ChunkedInputStream.EndRead
int System::Net::ChunkedInputStream::EndRead(::System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::EndRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::RequestStream*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.ChunkedInputStream.Close
void System::Net::ChunkedInputStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::RequestStream*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.ChunkedInputStream/ReadBufferState
#include "System/Net/ChunkedInputStream_ReadBufferState.hpp"
// Including type: System.Net.HttpStreamAsyncResult
#include "System/Net/HttpStreamAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte[] Buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::ChunkedInputStream::ReadBufferState::dyn_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::ReadBufferState::dyn_Buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Offset
[[deprecated("Use field access instead!")]] int& System::Net::ChunkedInputStream::ReadBufferState::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::ReadBufferState::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Count
[[deprecated("Use field access instead!")]] int& System::Net::ChunkedInputStream::ReadBufferState::dyn_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::ReadBufferState::dyn_Count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 InitialCount
[[deprecated("Use field access instead!")]] int& System::Net::ChunkedInputStream::ReadBufferState::dyn_InitialCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::ReadBufferState::dyn_InitialCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InitialCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.HttpStreamAsyncResult Ares
[[deprecated("Use field access instead!")]] ::System::Net::HttpStreamAsyncResult*& System::Net::ChunkedInputStream::ReadBufferState::dyn_Ares() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::ReadBufferState::dyn_Ares");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ares"))->offset;
  return *reinterpret_cast<::System::Net::HttpStreamAsyncResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.ContentDecodeStream
#include "System/Net/ContentDecodeStream.hpp"
// Including type: System.Net.ContentDecodeStream/Mode
#include "System/Net/ContentDecodeStream_Mode.hpp"
// Including type: System.Net.WebOperation
#include "System/Net/WebOperation.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream <OriginalInnerStream>k__BackingField
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::ContentDecodeStream::dyn_$OriginalInnerStream$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContentDecodeStream::dyn_$OriginalInnerStream$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OriginalInnerStream>k__BackingField"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.ContentDecodeStream.Create
::System::Net::ContentDecodeStream* System::Net::ContentDecodeStream::Create(::System::Net::WebOperation* operation, ::System::IO::Stream* innerStream, ::System::Net::ContentDecodeStream::Mode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContentDecodeStream::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ContentDecodeStream", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(operation), ::il2cpp_utils::ExtractType(innerStream), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ContentDecodeStream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, operation, innerStream, mode);
}
// Autogenerated method: System.Net.ContentDecodeStream.get_OriginalInnerStream
::System::IO::Stream* System::Net::ContentDecodeStream::get_OriginalInnerStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContentDecodeStream::get_OriginalInnerStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OriginalInnerStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ContentDecodeStream.ProcessReadAsync
::System::Threading::Tasks::Task_1<int>* System::Net::ContentDecodeStream::ProcessReadAsync(::ArrayW<uint8_t> buffer, int offset, int size, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContentDecodeStream::ProcessReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebReadStream*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, size, cancellationToken);
}
// Autogenerated method: System.Net.ContentDecodeStream.FinishReading
::System::Threading::Tasks::Task* System::Net::ContentDecodeStream::FinishReading(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContentDecodeStream::FinishReading");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebReadStream*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.ContentDecodeStream/Mode
#include "System/Net/ContentDecodeStream_Mode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.ContentDecodeStream/Mode GZip
::System::Net::ContentDecodeStream::Mode System::Net::ContentDecodeStream::Mode::_get_GZip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContentDecodeStream::Mode::_get_GZip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContentDecodeStream::Mode>("System.Net", "ContentDecodeStream/Mode", "GZip"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContentDecodeStream/Mode GZip
void System::Net::ContentDecodeStream::Mode::_set_GZip(::System::Net::ContentDecodeStream::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContentDecodeStream::Mode::_set_GZip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContentDecodeStream/Mode", "GZip", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContentDecodeStream/Mode Deflate
::System::Net::ContentDecodeStream::Mode System::Net::ContentDecodeStream::Mode::_get_Deflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContentDecodeStream::Mode::_get_Deflate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContentDecodeStream::Mode>("System.Net", "ContentDecodeStream/Mode", "Deflate"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContentDecodeStream/Mode Deflate
void System::Net::ContentDecodeStream::Mode::_set_Deflate(::System::Net::ContentDecodeStream::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContentDecodeStream::Mode::_set_Deflate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContentDecodeStream/Mode", "Deflate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::ContentDecodeStream::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContentDecodeStream::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.DecompressionMethods
#include "System/Net/DecompressionMethods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.DecompressionMethods None
::System::Net::DecompressionMethods System::Net::DecompressionMethods::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DecompressionMethods::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::DecompressionMethods>("System.Net", "DecompressionMethods", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.DecompressionMethods None
void System::Net::DecompressionMethods::_set_None(::System::Net::DecompressionMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DecompressionMethods::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "DecompressionMethods", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.DecompressionMethods GZip
::System::Net::DecompressionMethods System::Net::DecompressionMethods::_get_GZip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DecompressionMethods::_get_GZip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::DecompressionMethods>("System.Net", "DecompressionMethods", "GZip"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.DecompressionMethods GZip
void System::Net::DecompressionMethods::_set_GZip(::System::Net::DecompressionMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DecompressionMethods::_set_GZip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "DecompressionMethods", "GZip", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.DecompressionMethods Deflate
::System::Net::DecompressionMethods System::Net::DecompressionMethods::_get_Deflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DecompressionMethods::_get_Deflate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::DecompressionMethods>("System.Net", "DecompressionMethods", "Deflate"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.DecompressionMethods Deflate
void System::Net::DecompressionMethods::_set_Deflate(::System::Net::DecompressionMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DecompressionMethods::_set_Deflate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "DecompressionMethods", "Deflate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::DecompressionMethods::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DecompressionMethods::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.DefaultCertificatePolicy
#include "System/Net/DefaultCertificatePolicy.hpp"
// Including type: System.Net.ServicePoint
#include "System/Net/ServicePoint.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.DefaultCertificatePolicy.CheckValidationResult
bool System::Net::DefaultCertificatePolicy::CheckValidationResult(::System::Net::ServicePoint* point, ::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::System::Net::WebRequest* request, int certificateProblem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DefaultCertificatePolicy::CheckValidationResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::DefaultCertificatePolicy*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point, certificate, request, certificateProblem);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.DigestHeaderParser
#include "System/Net/DigestHeaderParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] keywords
::ArrayW<::StringW> System::Net::DigestHeaderParser::_get_keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::_get_keywords");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Net", "DigestHeaderParser", "keywords"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] keywords
void System::Net::DigestHeaderParser::_set_keywords(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::_set_keywords");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "DigestHeaderParser", "keywords", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String header
[[deprecated("Use field access instead!")]] ::StringW& System::Net::DigestHeaderParser::dyn_header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::dyn_header");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "header"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 length
[[deprecated("Use field access instead!")]] int& System::Net::DigestHeaderParser::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pos
[[deprecated("Use field access instead!")]] int& System::Net::DigestHeaderParser::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::dyn_pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] values
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Net::DigestHeaderParser::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.DigestHeaderParser.get_Realm
::StringW System::Net::DigestHeaderParser::get_Realm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::get_Realm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Realm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.get_Opaque
::StringW System::Net::DigestHeaderParser::get_Opaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::get_Opaque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Opaque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.get_Nonce
::StringW System::Net::DigestHeaderParser::get_Nonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::get_Nonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Nonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.get_Algorithm
::StringW System::Net::DigestHeaderParser::get_Algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::get_Algorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Algorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.get_QOP
::StringW System::Net::DigestHeaderParser::get_QOP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::get_QOP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QOP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.Parse
bool System::Net::DigestHeaderParser::Parse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.SkipWhitespace
void System::Net::DigestHeaderParser::SkipWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::SkipWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.GetKey
::StringW System::Net::DigestHeaderParser::GetKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.GetKeywordAndValue
bool System::Net::DigestHeaderParser::GetKeywordAndValue(ByRef<::StringW> key, ByRef<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::GetKeywordAndValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeywordAndValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(key), byref(value));
}
// Autogenerated method: System.Net.DigestHeaderParser..cctor
void System::Net::DigestHeaderParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "DigestHeaderParser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.DigestSession
#include "System/Net/DigestSession.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
// Including type: System.Net.DigestHeaderParser
#include "System/Net/DigestHeaderParser.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RandomNumberGenerator rng
::System::Security::Cryptography::RandomNumberGenerator* System::Net::DigestSession::_get_rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::_get_rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RandomNumberGenerator*>("System.Net", "DigestSession", "rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RandomNumberGenerator rng
void System::Net::DigestSession::_set_rng(::System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::_set_rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "DigestSession", "rng", value));
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime lastUse
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Net::DigestSession::dyn_lastUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::dyn_lastUse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastUse"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _nc
[[deprecated("Use field access instead!")]] int& System::Net::DigestSession::dyn__nc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::dyn__nc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nc"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.HashAlgorithm hash
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::HashAlgorithm*& System::Net::DigestSession::dyn_hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::dyn_hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::HashAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.DigestHeaderParser parser
[[deprecated("Use field access instead!")]] ::System::Net::DigestHeaderParser*& System::Net::DigestSession::dyn_parser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::dyn_parser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parser"))->offset;
  return *reinterpret_cast<::System::Net::DigestHeaderParser**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _cnonce
[[deprecated("Use field access instead!")]] ::StringW& System::Net::DigestSession::dyn__cnonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::dyn__cnonce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cnonce"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.DigestSession..cctor
void System::Net::DigestSession::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "DigestSession", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.get_Algorithm
::StringW System::Net::DigestSession::get_Algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::get_Algorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Algorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.get_Realm
::StringW System::Net::DigestSession::get_Realm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::get_Realm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Realm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.get_Nonce
::StringW System::Net::DigestSession::get_Nonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::get_Nonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Nonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.get_Opaque
::StringW System::Net::DigestSession::get_Opaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::get_Opaque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Opaque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.get_QOP
::StringW System::Net::DigestSession::get_QOP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::get_QOP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QOP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.get_CNonce
::StringW System::Net::DigestSession::get_CNonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::get_CNonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CNonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.Parse
bool System::Net::DigestSession::Parse(::StringW challenge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, challenge);
}
// Autogenerated method: System.Net.DigestSession.HashToHexString
::StringW System::Net::DigestSession::HashToHexString(::StringW toBeHashed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::HashToHexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashToHexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toBeHashed)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, toBeHashed);
}
// Autogenerated method: System.Net.DigestSession.HA1
::StringW System::Net::DigestSession::HA1(::StringW username, ::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::HA1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HA1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(username), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, username, password);
}
// Autogenerated method: System.Net.DigestSession.HA2
::StringW System::Net::DigestSession::HA2(::System::Net::HttpWebRequest* webRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::HA2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HA2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(webRequest)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, webRequest);
}
// Autogenerated method: System.Net.DigestSession.Response
::StringW System::Net::DigestSession::Response(::StringW username, ::StringW password, ::System::Net::HttpWebRequest* webRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::Response");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Response", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(username), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(webRequest)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, username, password, webRequest);
}
// Autogenerated method: System.Net.DigestSession.Authenticate
::System::Net::Authorization* System::Net::DigestSession::Authenticate(::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::Authenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Authenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(this, ___internal__method, webRequest, credentials);
}
// Autogenerated method: System.Net.DigestSession.get_LastUse
::System::DateTime System::Net::DigestSession::get_LastUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::get_LastUse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastUse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.DigestClient
#include "System/Net/DigestClient.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Hashtable cache
::System::Collections::Hashtable* System::Net::DigestClient::_get_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestClient::_get_cache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Net", "DigestClient", "cache"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Hashtable cache
void System::Net::DigestClient::_set_cache(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestClient::_set_cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "DigestClient", "cache", value));
}
// Autogenerated method: System.Net.DigestClient.get_Cache
::System::Collections::Hashtable* System::Net::DigestClient::get_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestClient::get_Cache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "DigestClient", "get_Cache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.DigestClient.CheckExpired
void System::Net::DigestClient::CheckExpired(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestClient::CheckExpired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "DigestClient", "CheckExpired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, count);
}
// Autogenerated method: System.Net.DigestClient.Authenticate
::System::Net::Authorization* System::Net::DigestClient::Authenticate(::StringW challenge, ::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestClient::Authenticate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::DigestClient*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(this, ___internal__method, challenge, webRequest, credentials);
}
// Autogenerated method: System.Net.DigestClient.PreAuthenticate
::System::Net::Authorization* System::Net::DigestClient::PreAuthenticate(::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestClient::PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::DigestClient*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(this, ___internal__method, webRequest, credentials);
}
// Autogenerated method: System.Net.DigestClient.get_AuthenticationType
::StringW System::Net::DigestClient::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestClient::get_AuthenticationType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::DigestClient*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestClient.get_CanPreAuthenticate
bool System::Net::DigestClient::get_CanPreAuthenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestClient::get_CanPreAuthenticate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::DigestClient*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestClient..cctor
void System::Net::DigestClient::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestClient::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "DigestClient", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Dns
#include "System/Net/Dns.hpp"
// Including type: System.Net.Dns/GetHostByNameCallback
#include "System/Net/Dns_GetHostByNameCallback.hpp"
// Including type: System.Net.Dns/ResolveCallback
#include "System/Net/Dns_ResolveCallback.hpp"
// Including type: System.Net.Dns/GetHostEntryNameCallback
#include "System/Net/Dns_GetHostEntryNameCallback.hpp"
// Including type: System.Net.Dns/GetHostEntryIPCallback
#include "System/Net/Dns_GetHostEntryIPCallback.hpp"
// Including type: System.Net.Dns/GetHostAddressesCallback
#include "System/Net/Dns_GetHostAddressesCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.IPHostEntry
#include "System/Net/IPHostEntry.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Dns..cctor
void System::Net::Dns::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Dns.BeginGetHostByName
::System::IAsyncResult* System::Net::Dns::BeginGetHostByName(::StringW hostName, ::System::AsyncCallback* requestCallback, ::Il2CppObject* stateObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::BeginGetHostByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "BeginGetHostByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostName), ::il2cpp_utils::ExtractType(requestCallback), ::il2cpp_utils::ExtractType(stateObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostName, requestCallback, stateObject);
}
// Autogenerated method: System.Net.Dns.BeginResolve
::System::IAsyncResult* System::Net::Dns::BeginResolve(::StringW hostName, ::System::AsyncCallback* requestCallback, ::Il2CppObject* stateObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::BeginResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "BeginResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostName), ::il2cpp_utils::ExtractType(requestCallback), ::il2cpp_utils::ExtractType(stateObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostName, requestCallback, stateObject);
}
// Autogenerated method: System.Net.Dns.BeginGetHostAddresses
::System::IAsyncResult* System::Net::Dns::BeginGetHostAddresses(::StringW hostNameOrAddress, ::System::AsyncCallback* requestCallback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::BeginGetHostAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "BeginGetHostAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostNameOrAddress), ::il2cpp_utils::ExtractType(requestCallback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostNameOrAddress, requestCallback, state);
}
// Autogenerated method: System.Net.Dns.BeginGetHostEntry
::System::IAsyncResult* System::Net::Dns::BeginGetHostEntry(::StringW hostNameOrAddress, ::System::AsyncCallback* requestCallback, ::Il2CppObject* stateObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::BeginGetHostEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "BeginGetHostEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostNameOrAddress), ::il2cpp_utils::ExtractType(requestCallback), ::il2cpp_utils::ExtractType(stateObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostNameOrAddress, requestCallback, stateObject);
}
// Autogenerated method: System.Net.Dns.BeginGetHostEntry
::System::IAsyncResult* System::Net::Dns::BeginGetHostEntry(::System::Net::IPAddress* address, ::System::AsyncCallback* requestCallback, ::Il2CppObject* stateObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::BeginGetHostEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "BeginGetHostEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(requestCallback), ::il2cpp_utils::ExtractType(stateObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address, requestCallback, stateObject);
}
// Autogenerated method: System.Net.Dns.EndGetHostByName
::System::Net::IPHostEntry* System::Net::Dns::EndGetHostByName(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::EndGetHostByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "EndGetHostByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Dns.EndResolve
::System::Net::IPHostEntry* System::Net::Dns::EndResolve(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::EndResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "EndResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Dns.EndGetHostAddresses
::ArrayW<::System::Net::IPAddress*> System::Net::Dns::EndGetHostAddresses(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::EndGetHostAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "EndGetHostAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Net::IPAddress*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Dns.EndGetHostEntry
::System::Net::IPHostEntry* System::Net::Dns::EndGetHostEntry(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::EndGetHostEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "EndGetHostEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Dns.GetHostByName_icall
bool System::Net::Dns::GetHostByName_icall(::StringW host, ByRef<::StringW> h_name, ByRef<::ArrayW<::StringW>> h_aliases, ByRef<::ArrayW<::StringW>> h_addr_list, int hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostByName_icall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostByName_icall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::StringW>&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::StringW>&>(), ::il2cpp_utils::ExtractType(hint)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, byref(h_name), byref(h_aliases), byref(h_addr_list), hint);
}
// Autogenerated method: System.Net.Dns.GetHostByAddr_icall
bool System::Net::Dns::GetHostByAddr_icall(::StringW addr, ByRef<::StringW> h_name, ByRef<::ArrayW<::StringW>> h_aliases, ByRef<::ArrayW<::StringW>> h_addr_list, int hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostByAddr_icall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostByAddr_icall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(addr), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::StringW>&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::StringW>&>(), ::il2cpp_utils::ExtractType(hint)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, addr, byref(h_name), byref(h_aliases), byref(h_addr_list), hint);
}
// Autogenerated method: System.Net.Dns.GetHostName_icall
bool System::Net::Dns::GetHostName_icall(ByRef<::StringW> h_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostName_icall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostName_icall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(h_name));
}
// Autogenerated method: System.Net.Dns.Error_11001
void System::Net::Dns::Error_11001(::StringW hostName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::Error_11001");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "Error_11001", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostName);
}
// Autogenerated method: System.Net.Dns.hostent_to_IPHostEntry
::System::Net::IPHostEntry* System::Net::Dns::hostent_to_IPHostEntry(::StringW originalHostName, ::StringW h_name, ::ArrayW<::StringW> h_aliases, ::ArrayW<::StringW> h_addrlist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::hostent_to_IPHostEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "hostent_to_IPHostEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalHostName), ::il2cpp_utils::ExtractType(h_name), ::il2cpp_utils::ExtractType(h_aliases), ::il2cpp_utils::ExtractType(h_addrlist)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, originalHostName, h_name, h_aliases, h_addrlist);
}
// Autogenerated method: System.Net.Dns.GetHostByAddress
::System::Net::IPHostEntry* System::Net::Dns::GetHostByAddress(::System::Net::IPAddress* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostByAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostByAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address);
}
// Autogenerated method: System.Net.Dns.GetHostByAddress
::System::Net::IPHostEntry* System::Net::Dns::GetHostByAddress(::StringW address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostByAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostByAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address);
}
// Autogenerated method: System.Net.Dns.GetHostByAddressFromString
::System::Net::IPHostEntry* System::Net::Dns::GetHostByAddressFromString(::StringW address, bool parse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostByAddressFromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostByAddressFromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(parse)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address, parse);
}
// Autogenerated method: System.Net.Dns.GetHostEntry
::System::Net::IPHostEntry* System::Net::Dns::GetHostEntry(::StringW hostNameOrAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostNameOrAddress)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostNameOrAddress);
}
// Autogenerated method: System.Net.Dns.GetHostEntry
::System::Net::IPHostEntry* System::Net::Dns::GetHostEntry(::System::Net::IPAddress* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address);
}
// Autogenerated method: System.Net.Dns.GetHostAddresses
::ArrayW<::System::Net::IPAddress*> System::Net::Dns::GetHostAddresses(::StringW hostNameOrAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostNameOrAddress)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Net::IPAddress*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostNameOrAddress);
}
// Autogenerated method: System.Net.Dns.GetHostByName
::System::Net::IPHostEntry* System::Net::Dns::GetHostByName(::StringW hostName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostName);
}
// Autogenerated method: System.Net.Dns.GetHostName
::StringW System::Net::Dns::GetHostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Dns.Resolve
::System::Net::IPHostEntry* System::Net::Dns::Resolve(::StringW hostName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::Resolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "Resolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostName);
}
// Autogenerated method: System.Net.Dns.GetHostAddressesAsync
::System::Threading::Tasks::Task_1<::ArrayW<::System::Net::IPAddress*>>* System::Net::Dns::GetHostAddressesAsync(::StringW hostNameOrAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostAddressesAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostAddressesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostNameOrAddress)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::ArrayW<::System::Net::IPAddress*>>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostNameOrAddress);
}
// Autogenerated method: System.Net.Dns.GetHostEntryAsync
::System::Threading::Tasks::Task_1<::System::Net::IPHostEntry*>* System::Net::Dns::GetHostEntryAsync(::System::Net::IPAddress* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostEntryAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostEntryAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::IPHostEntry*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address);
}
// Autogenerated method: System.Net.Dns.GetHostEntryAsync
::System::Threading::Tasks::Task_1<::System::Net::IPHostEntry*>* System::Net::Dns::GetHostEntryAsync(::StringW hostNameOrAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostEntryAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostEntryAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostNameOrAddress)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::IPHostEntry*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostNameOrAddress);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Dns/GetHostByNameCallback
#include "System/Net/Dns_GetHostByNameCallback.hpp"
// Including type: System.Net.IPHostEntry
#include "System/Net/IPHostEntry.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Dns/GetHostByNameCallback.Invoke
::System::Net::IPHostEntry* System::Net::Dns::GetHostByNameCallback::Invoke(::StringW hostName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostByNameCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Dns::GetHostByNameCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(this, ___internal__method, hostName);
}
// Autogenerated method: System.Net.Dns/GetHostByNameCallback.BeginInvoke
::System::IAsyncResult* System::Net::Dns::GetHostByNameCallback::BeginInvoke(::StringW hostName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostByNameCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Dns::GetHostByNameCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, hostName, callback, object);
}
// Autogenerated method: System.Net.Dns/GetHostByNameCallback.EndInvoke
::System::Net::IPHostEntry* System::Net::Dns::GetHostByNameCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostByNameCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Dns::GetHostByNameCallback*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Dns/ResolveCallback
#include "System/Net/Dns_ResolveCallback.hpp"
// Including type: System.Net.IPHostEntry
#include "System/Net/IPHostEntry.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Dns/ResolveCallback.Invoke
::System::Net::IPHostEntry* System::Net::Dns::ResolveCallback::Invoke(::StringW hostName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::ResolveCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Dns::ResolveCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(this, ___internal__method, hostName);
}
// Autogenerated method: System.Net.Dns/ResolveCallback.BeginInvoke
::System::IAsyncResult* System::Net::Dns::ResolveCallback::BeginInvoke(::StringW hostName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::ResolveCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Dns::ResolveCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, hostName, callback, object);
}
// Autogenerated method: System.Net.Dns/ResolveCallback.EndInvoke
::System::Net::IPHostEntry* System::Net::Dns::ResolveCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::ResolveCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Dns::ResolveCallback*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Dns/GetHostEntryNameCallback
#include "System/Net/Dns_GetHostEntryNameCallback.hpp"
// Including type: System.Net.IPHostEntry
#include "System/Net/IPHostEntry.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Dns/GetHostEntryNameCallback.Invoke
::System::Net::IPHostEntry* System::Net::Dns::GetHostEntryNameCallback::Invoke(::StringW hostName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostEntryNameCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Dns::GetHostEntryNameCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(this, ___internal__method, hostName);
}
// Autogenerated method: System.Net.Dns/GetHostEntryNameCallback.BeginInvoke
::System::IAsyncResult* System::Net::Dns::GetHostEntryNameCallback::BeginInvoke(::StringW hostName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostEntryNameCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Dns::GetHostEntryNameCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, hostName, callback, object);
}
// Autogenerated method: System.Net.Dns/GetHostEntryNameCallback.EndInvoke
::System::Net::IPHostEntry* System::Net::Dns::GetHostEntryNameCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostEntryNameCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Dns::GetHostEntryNameCallback*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Dns/GetHostEntryIPCallback
#include "System/Net/Dns_GetHostEntryIPCallback.hpp"
// Including type: System.Net.IPHostEntry
#include "System/Net/IPHostEntry.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Dns/GetHostEntryIPCallback.Invoke
::System::Net::IPHostEntry* System::Net::Dns::GetHostEntryIPCallback::Invoke(::System::Net::IPAddress* hostAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostEntryIPCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Dns::GetHostEntryIPCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(this, ___internal__method, hostAddress);
}
// Autogenerated method: System.Net.Dns/GetHostEntryIPCallback.BeginInvoke
::System::IAsyncResult* System::Net::Dns::GetHostEntryIPCallback::BeginInvoke(::System::Net::IPAddress* hostAddress, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostEntryIPCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Dns::GetHostEntryIPCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, hostAddress, callback, object);
}
// Autogenerated method: System.Net.Dns/GetHostEntryIPCallback.EndInvoke
::System::Net::IPHostEntry* System::Net::Dns::GetHostEntryIPCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostEntryIPCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Dns::GetHostEntryIPCallback*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Dns/GetHostAddressesCallback
#include "System/Net/Dns_GetHostAddressesCallback.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Dns/GetHostAddressesCallback.Invoke
::ArrayW<::System::Net::IPAddress*> System::Net::Dns::GetHostAddressesCallback::Invoke(::StringW hostName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostAddressesCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Dns::GetHostAddressesCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Net::IPAddress*>, false>(this, ___internal__method, hostName);
}
// Autogenerated method: System.Net.Dns/GetHostAddressesCallback.BeginInvoke
::System::IAsyncResult* System::Net::Dns::GetHostAddressesCallback::BeginInvoke(::StringW hostName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostAddressesCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Dns::GetHostAddressesCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, hostName, callback, object);
}
// Autogenerated method: System.Net.Dns/GetHostAddressesCallback.EndInvoke
::ArrayW<::System::Net::IPAddress*> System::Net::Dns::GetHostAddressesCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostAddressesCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Dns::GetHostAddressesCallback*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Net::IPAddress*>, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.EndPointListener
#include "System/Net/EndPointListener.hpp"
// Including type: System.Net.HttpListener
#include "System/Net/HttpListener.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Net.HttpConnection
#include "System/Net/HttpConnection.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.Sockets.SocketAsyncEventArgs
#include "System/Net/Sockets/SocketAsyncEventArgs.hpp"
// Including type: System.Net.HttpListenerContext
#include "System/Net/HttpListenerContext.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.ListenerPrefix
#include "System/Net/ListenerPrefix.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpListener listener
[[deprecated("Use field access instead!")]] ::System::Net::HttpListener*& System::Net::EndPointListener::dyn_listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::dyn_listener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listener"))->offset;
  return *reinterpret_cast<::System::Net::HttpListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IPEndPoint endpoint
[[deprecated("Use field access instead!")]] ::System::Net::IPEndPoint*& System::Net::EndPointListener::dyn_endpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::dyn_endpoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endpoint"))->offset;
  return *reinterpret_cast<::System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.Socket sock
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::Socket*& System::Net::EndPointListener::dyn_sock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::dyn_sock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sock"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::Socket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable prefixes
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Net::EndPointListener::dyn_prefixes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::dyn_prefixes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefixes"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList unhandled
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Net::EndPointListener::dyn_unhandled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::dyn_unhandled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unhandled"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList all
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Net::EndPointListener::dyn_all() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::dyn_all");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "all"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate cert
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate*& System::Net::EndPointListener::dyn_cert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::dyn_cert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cert"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean secure
[[deprecated("Use field access instead!")]] bool& System::Net::EndPointListener::dyn_secure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::dyn_secure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secure"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Net.HttpConnection,System.Net.HttpConnection> unregistered
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Net::HttpConnection*, ::System::Net::HttpConnection*>*& System::Net::EndPointListener::dyn_unregistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::dyn_unregistered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unregistered"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Net::HttpConnection*, ::System::Net::HttpConnection*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.EndPointListener.get_Listener
::System::Net::HttpListener* System::Net::EndPointListener::get_Listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::get_Listener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Listener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpListener*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EndPointListener.Accept
void System::Net::EndPointListener::Accept(::System::Net::Sockets::Socket* socket, ::System::Net::Sockets::SocketAsyncEventArgs* e, ByRef<::System::Net::Sockets::Socket*> accepted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointListener", "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(accepted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, socket, e, byref(accepted));
}
// Autogenerated method: System.Net.EndPointListener.ProcessAccept
void System::Net::EndPointListener::ProcessAccept(::System::Net::Sockets::SocketAsyncEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::ProcessAccept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointListener", "ProcessAccept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, args);
}
// Autogenerated method: System.Net.EndPointListener.OnAccept
void System::Net::EndPointListener::OnAccept(::Il2CppObject* sender, ::System::Net::Sockets::SocketAsyncEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::OnAccept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointListener", "OnAccept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sender, e);
}
// Autogenerated method: System.Net.EndPointListener.RemoveConnection
void System::Net::EndPointListener::RemoveConnection(::System::Net::HttpConnection* conn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::RemoveConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(conn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, conn);
}
// Autogenerated method: System.Net.EndPointListener.BindContext
bool System::Net::EndPointListener::BindContext(::System::Net::HttpListenerContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::BindContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Net.EndPointListener.UnbindContext
void System::Net::EndPointListener::UnbindContext(::System::Net::HttpListenerContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::UnbindContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnbindContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Net.EndPointListener.SearchListener
::System::Net::HttpListener* System::Net::EndPointListener::SearchListener(::System::Uri* uri, ByRef<::System::Net::ListenerPrefix*> prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::SearchListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractIndependentType<::System::Net::ListenerPrefix*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpListener*, false>(this, ___internal__method, uri, byref(prefix));
}
// Autogenerated method: System.Net.EndPointListener.MatchFromList
::System::Net::HttpListener* System::Net::EndPointListener::MatchFromList(::StringW host, ::StringW path, ::System::Collections::ArrayList* list, ByRef<::System::Net::ListenerPrefix*> prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::MatchFromList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchFromList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractIndependentType<::System::Net::ListenerPrefix*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpListener*, false>(this, ___internal__method, host, path, list, byref(prefix));
}
// Autogenerated method: System.Net.EndPointListener.AddSpecial
void System::Net::EndPointListener::AddSpecial(::System::Collections::ArrayList* coll, ::System::Net::ListenerPrefix* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::AddSpecial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSpecial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coll), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, coll, prefix);
}
// Autogenerated method: System.Net.EndPointListener.RemoveSpecial
bool System::Net::EndPointListener::RemoveSpecial(::System::Collections::ArrayList* coll, ::System::Net::ListenerPrefix* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::RemoveSpecial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSpecial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coll), ::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, coll, prefix);
}
// Autogenerated method: System.Net.EndPointListener.CheckIfRemove
void System::Net::EndPointListener::CheckIfRemove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::CheckIfRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EndPointListener.Close
void System::Net::EndPointListener::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EndPointListener.AddPrefix
void System::Net::EndPointListener::AddPrefix(::System::Net::ListenerPrefix* prefix, ::System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::AddPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, listener);
}
// Autogenerated method: System.Net.EndPointListener.RemovePrefix
void System::Net::EndPointListener::RemovePrefix(::System::Net::ListenerPrefix* prefix, ::System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::RemovePrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemovePrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, listener);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.EndPointManager
#include "System/Net/EndPointManager.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Net.HttpListener
#include "System/Net/HttpListener.hpp"
// Including type: System.Net.EndPointListener
#include "System/Net/EndPointListener.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable ip_to_endpoints
::System::Collections::Hashtable* System::Net::EndPointManager::_get_ip_to_endpoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::_get_ip_to_endpoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Net", "EndPointManager", "ip_to_endpoints"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable ip_to_endpoints
void System::Net::EndPointManager::_set_ip_to_endpoints(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::_set_ip_to_endpoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "EndPointManager", "ip_to_endpoints", value));
}
// Autogenerated method: System.Net.EndPointManager.AddListener
void System::Net::EndPointManager::AddListener(::System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::AddListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "AddListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listener);
}
// Autogenerated method: System.Net.EndPointManager.AddPrefix
void System::Net::EndPointManager::AddPrefix(::StringW prefix, ::System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::AddPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "AddPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefix, listener);
}
// Autogenerated method: System.Net.EndPointManager.AddPrefixInternal
void System::Net::EndPointManager::AddPrefixInternal(::StringW p, ::System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::AddPrefixInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "AddPrefixInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, listener);
}
// Autogenerated method: System.Net.EndPointManager.GetEPListener
::System::Net::EndPointListener* System::Net::EndPointManager::GetEPListener(::StringW host, int port, ::System::Net::HttpListener* listener, bool secure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::GetEPListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "GetEPListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(secure)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::EndPointListener*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, port, listener, secure);
}
// Autogenerated method: System.Net.EndPointManager.RemoveEndPoint
void System::Net::EndPointManager::RemoveEndPoint(::System::Net::EndPointListener* epl, ::System::Net::IPEndPoint* ep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::RemoveEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "RemoveEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(epl), ::il2cpp_utils::ExtractType(ep)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, epl, ep);
}
// Autogenerated method: System.Net.EndPointManager.RemoveListener
void System::Net::EndPointManager::RemoveListener(::System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::RemoveListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "RemoveListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listener);
}
// Autogenerated method: System.Net.EndPointManager.RemovePrefix
void System::Net::EndPointManager::RemovePrefix(::StringW prefix, ::System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::RemovePrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "RemovePrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefix, listener);
}
// Autogenerated method: System.Net.EndPointManager.RemovePrefixInternal
void System::Net::EndPointManager::RemovePrefixInternal(::StringW prefix, ::System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::RemovePrefixInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "RemovePrefixInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefix, listener);
}
// Autogenerated method: System.Net.EndPointManager..cctor
void System::Net::EndPointManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.EndpointPermission
#include "System/Net/EndpointPermission.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Char[] dot_char
::ArrayW<::Il2CppChar> System::Net::EndpointPermission::_get_dot_char() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::_get_dot_char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Net", "EndpointPermission", "dot_char"));
}
// Autogenerated static field setter
// Set static field: static private System.Char[] dot_char
void System::Net::EndpointPermission::_set_dot_char(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::_set_dot_char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "EndpointPermission", "dot_char", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String hostname
[[deprecated("Use field access instead!")]] ::StringW& System::Net::EndpointPermission::dyn_hostname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::dyn_hostname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hostname"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 port
[[deprecated("Use field access instead!")]] int& System::Net::EndpointPermission::dyn_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::dyn_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.TransportType transport
[[deprecated("Use field access instead!")]] ::System::Net::TransportType& System::Net::EndpointPermission::dyn_transport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::dyn_transport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transport"))->offset;
  return *reinterpret_cast<::System::Net::TransportType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean resolved
[[deprecated("Use field access instead!")]] bool& System::Net::EndpointPermission::dyn_resolved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::dyn_resolved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resolved"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasWildcard
[[deprecated("Use field access instead!")]] bool& System::Net::EndpointPermission::dyn_hasWildcard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::dyn_hasWildcard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasWildcard"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IPAddress[] addresses
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Net::IPAddress*>& System::Net::EndpointPermission::dyn_addresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::dyn_addresses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addresses"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Net::IPAddress*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.EndpointPermission.get_Hostname
::StringW System::Net::EndpointPermission::get_Hostname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::get_Hostname");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hostname", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EndpointPermission.get_Port
int System::Net::EndpointPermission::get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::get_Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EndpointPermission.get_Transport
::System::Net::TransportType System::Net::EndpointPermission::get_Transport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::get_Transport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Transport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::TransportType, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EndpointPermission.IsSubsetOf
bool System::Net::EndpointPermission::IsSubsetOf(::System::Net::EndpointPermission* perm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::IsSubsetOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSubsetOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perm)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, perm);
}
// Autogenerated method: System.Net.EndpointPermission.IsSubsetOf
bool System::Net::EndpointPermission::IsSubsetOf(::StringW addr1, ::StringW addr2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::IsSubsetOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSubsetOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(addr1), ::il2cpp_utils::ExtractType(addr2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, addr1, addr2);
}
// Autogenerated method: System.Net.EndpointPermission.Intersect
::System::Net::EndpointPermission* System::Net::EndpointPermission::Intersect(::System::Net::EndpointPermission* perm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::Intersect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Intersect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perm)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::EndpointPermission*, false>(this, ___internal__method, perm);
}
// Autogenerated method: System.Net.EndpointPermission.IntersectHostname
::StringW System::Net::EndpointPermission::IntersectHostname(::System::Net::EndpointPermission* perm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::IntersectHostname");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IntersectHostname", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perm)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, perm);
}
// Autogenerated method: System.Net.EndpointPermission.Intersect
::StringW System::Net::EndpointPermission::Intersect(::StringW addr1, ::StringW addr2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::Intersect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Intersect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(addr1), ::il2cpp_utils::ExtractType(addr2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, addr1, addr2);
}
// Autogenerated method: System.Net.EndpointPermission.ToNumber
int System::Net::EndpointPermission::ToNumber(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::ToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.EndpointPermission.Resolve
void System::Net::EndpointPermission::Resolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::Resolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EndpointPermission.UndoResolve
void System::Net::EndpointPermission::UndoResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::UndoResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UndoResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EndpointPermission..cctor
void System::Net::EndpointPermission::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndpointPermission", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.EndpointPermission.Equals
bool System::Net::EndpointPermission::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.EndpointPermission.GetHashCode
int System::Net::EndpointPermission::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EndpointPermission.ToString
::StringW System::Net::EndpointPermission::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndpointPermission::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.FixedSizeReadStream
#include "System/Net/FixedSizeReadStream.hpp"
// Including type: System.Net.FixedSizeReadStream/<ProcessReadAsync>d__5
#include "System/Net/FixedSizeReadStream_-ProcessReadAsync-d__5.hpp"
// Including type: System.Net.WebOperation
#include "System/Net/WebOperation.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 <ContentLength>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& System::Net::FixedSizeReadStream::dyn_$ContentLength$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FixedSizeReadStream::dyn_$ContentLength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ContentLength>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 position
[[deprecated("Use field access instead!")]] int64_t& System::Net::FixedSizeReadStream::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FixedSizeReadStream::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.FixedSizeReadStream.get_ContentLength
int64_t System::Net::FixedSizeReadStream::get_ContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FixedSizeReadStream::get_ContentLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FixedSizeReadStream.ProcessReadAsync
::System::Threading::Tasks::Task_1<int>* System::Net::FixedSizeReadStream::ProcessReadAsync(::ArrayW<uint8_t> buffer, int offset, int size, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FixedSizeReadStream::ProcessReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebReadStream*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, size, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.FixedSizeReadStream/<ProcessReadAsync>d__5
#include "System/Net/FixedSizeReadStream_-ProcessReadAsync-d__5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Int32> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>& System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.FixedSizeReadStream <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::FixedSizeReadStream*& System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::FixedSizeReadStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 size
[[deprecated("Use field access instead!")]] int& System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::dyn_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::dyn_size");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::dyn_buffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 offset
[[deprecated("Use field access instead!")]] int& System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::dyn_offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<System.Int32> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter& System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.FixedSizeReadStream/<ProcessReadAsync>d__5.MoveNext
void System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FixedSizeReadStream/<ProcessReadAsync>d__5.SetStateMachine
void System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Net::FixedSizeReadStream::$ProcessReadAsync$d__5), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpConnection
#include "System/Net/HttpConnection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.EndPointListener
#include "System/Net/EndPointListener.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: System.Net.HttpListenerContext
#include "System/Net/HttpListenerContext.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Net.ListenerPrefix
#include "System/Net/ListenerPrefix.hpp"
// Including type: System.Net.RequestStream
#include "System/Net/RequestStream.hpp"
// Including type: System.Net.ResponseStream
#include "System/Net/ResponseStream.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Threading.Timer
#include "System/Threading/Timer.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.HttpListener
#include "System/Net/HttpListener.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.AsyncCallback onread_cb
::System::AsyncCallback* System::Net::HttpConnection::_get_onread_cb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::_get_onread_cb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AsyncCallback*>("System.Net", "HttpConnection", "onread_cb"));
}
// Autogenerated static field setter
// Set static field: static private System.AsyncCallback onread_cb
void System::Net::HttpConnection::_set_onread_cb(::System::AsyncCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::_set_onread_cb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpConnection", "onread_cb", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 BufferSize
int System::Net::HttpConnection::_get_BufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::_get_BufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "HttpConnection", "BufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BufferSize
void System::Net::HttpConnection::_set_BufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::_set_BufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpConnection", "BufferSize", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.Socket sock
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::Socket*& System::Net::HttpConnection::dyn_sock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_sock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sock"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::Socket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::HttpConnection::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.EndPointListener epl
[[deprecated("Use field access instead!")]] ::System::Net::EndPointListener*& System::Net::HttpConnection::dyn_epl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_epl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "epl"))->offset;
  return *reinterpret_cast<::System::Net::EndPointListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.MemoryStream ms
[[deprecated("Use field access instead!")]] ::System::IO::MemoryStream*& System::Net::HttpConnection::dyn_ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_ms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ms"))->offset;
  return *reinterpret_cast<::System::IO::MemoryStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::HttpConnection::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpListenerContext context
[[deprecated("Use field access instead!")]] ::System::Net::HttpListenerContext*& System::Net::HttpConnection::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<::System::Net::HttpListenerContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder current_line
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::Net::HttpConnection::dyn_current_line() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_current_line");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current_line"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ListenerPrefix prefix
[[deprecated("Use field access instead!")]] ::System::Net::ListenerPrefix*& System::Net::HttpConnection::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::System::Net::ListenerPrefix**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.RequestStream i_stream
[[deprecated("Use field access instead!")]] ::System::Net::RequestStream*& System::Net::HttpConnection::dyn_i_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_i_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "i_stream"))->offset;
  return *reinterpret_cast<::System::Net::RequestStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ResponseStream o_stream
[[deprecated("Use field access instead!")]] ::System::Net::ResponseStream*& System::Net::HttpConnection::dyn_o_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_o_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "o_stream"))->offset;
  return *reinterpret_cast<::System::Net::ResponseStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean chunked
[[deprecated("Use field access instead!")]] bool& System::Net::HttpConnection::dyn_chunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_chunked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chunked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 reuses
[[deprecated("Use field access instead!")]] int& System::Net::HttpConnection::dyn_reuses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_reuses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reuses"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean context_bound
[[deprecated("Use field access instead!")]] bool& System::Net::HttpConnection::dyn_context_bound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_context_bound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context_bound"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean secure
[[deprecated("Use field access instead!")]] bool& System::Net::HttpConnection::dyn_secure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_secure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secure"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate cert
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate*& System::Net::HttpConnection::dyn_cert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_cert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cert"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 s_timeout
[[deprecated("Use field access instead!")]] int& System::Net::HttpConnection::dyn_s_timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_s_timeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s_timeout"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Timer timer
[[deprecated("Use field access instead!")]] ::System::Threading::Timer*& System::Net::HttpConnection::dyn_timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timer"))->offset;
  return *reinterpret_cast<::System::Threading::Timer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IPEndPoint local_ep
[[deprecated("Use field access instead!")]] ::System::Net::IPEndPoint*& System::Net::HttpConnection::dyn_local_ep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_local_ep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "local_ep"))->offset;
  return *reinterpret_cast<::System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpListener last_listener
[[deprecated("Use field access instead!")]] ::System::Net::HttpListener*& System::Net::HttpConnection::dyn_last_listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_last_listener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "last_listener"))->offset;
  return *reinterpret_cast<::System::Net::HttpListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] client_cert_errors
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Net::HttpConnection::dyn_client_cert_errors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_client_cert_errors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client_cert_errors"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate2 client_cert
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate2*& System::Net::HttpConnection::dyn_client_cert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_client_cert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client_cert"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Security.SslStream ssl_stream
[[deprecated("Use field access instead!")]] ::System::Net::Security::SslStream*& System::Net::HttpConnection::dyn_ssl_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_ssl_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ssl_stream"))->offset;
  return *reinterpret_cast<::System::Net::Security::SslStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpConnection/InputState input_state
[[deprecated("Use field access instead!")]] ::System::Net::HttpConnection::InputState& System::Net::HttpConnection::dyn_input_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_input_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "input_state"))->offset;
  return *reinterpret_cast<::System::Net::HttpConnection::InputState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpConnection/LineState line_state
[[deprecated("Use field access instead!")]] ::System::Net::HttpConnection::LineState& System::Net::HttpConnection::dyn_line_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_line_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "line_state"))->offset;
  return *reinterpret_cast<::System::Net::HttpConnection::LineState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 position
[[deprecated("Use field access instead!")]] int& System::Net::HttpConnection::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.HttpConnection.get_SslStream
::System::Net::Security::SslStream* System::Net::HttpConnection::get_SslStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::get_SslStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SslStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::SslStream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.get_ClientCertificateErrors
::ArrayW<int> System::Net::HttpConnection::get_ClientCertificateErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::get_ClientCertificateErrors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificateErrors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.get_ClientCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate2* System::Net::HttpConnection::get_ClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::get_ClientCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.Init
void System::Net::HttpConnection::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.get_IsClosed
bool System::Net::HttpConnection::get_IsClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::get_IsClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.get_Reuses
int System::Net::HttpConnection::get_Reuses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::get_Reuses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Reuses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.get_LocalEndPoint
::System::Net::IPEndPoint* System::Net::HttpConnection::get_LocalEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::get_LocalEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.get_RemoteEndPoint
::System::Net::IPEndPoint* System::Net::HttpConnection::get_RemoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::get_RemoteEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RemoteEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.get_IsSecure
bool System::Net::HttpConnection::get_IsSecure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::get_IsSecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.get_Prefix
::System::Net::ListenerPrefix* System::Net::HttpConnection::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ListenerPrefix*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.set_Prefix
void System::Net::HttpConnection::set_Prefix(::System::Net::ListenerPrefix* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::set_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpConnection.OnTimeout
void System::Net::HttpConnection::OnTimeout(::Il2CppObject* unused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::OnTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unused)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unused);
}
// Autogenerated method: System.Net.HttpConnection.BeginReadRequest
void System::Net::HttpConnection::BeginReadRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::BeginReadRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginReadRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.GetRequestStream
::System::Net::RequestStream* System::Net::HttpConnection::GetRequestStream(bool chunked, int64_t contentlength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::GetRequestStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunked), ::il2cpp_utils::ExtractType(contentlength)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::RequestStream*, false>(this, ___internal__method, chunked, contentlength);
}
// Autogenerated method: System.Net.HttpConnection.GetResponseStream
::System::Net::ResponseStream* System::Net::HttpConnection::GetResponseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::GetResponseStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponseStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ResponseStream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.OnRead
void System::Net::HttpConnection::OnRead(::System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::OnRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpConnection", "OnRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ares);
}
// Autogenerated method: System.Net.HttpConnection.OnReadInternal
void System::Net::HttpConnection::OnReadInternal(::System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::OnReadInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnReadInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.HttpConnection.RemoveConnection
void System::Net::HttpConnection::RemoveConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::RemoveConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.ProcessInput
bool System::Net::HttpConnection::ProcessInput(::System::IO::MemoryStream* ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::ProcessInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ms)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ms);
}
// Autogenerated method: System.Net.HttpConnection.ReadLine
::StringW System::Net::HttpConnection::ReadLine(::ArrayW<uint8_t> buffer, int offset, int len, ByRef<int> used) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::ReadLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(used)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, buffer, offset, len, byref(used));
}
// Autogenerated method: System.Net.HttpConnection.SendError
void System::Net::HttpConnection::SendError(::StringW msg, int status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::SendError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(status)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg, status);
}
// Autogenerated method: System.Net.HttpConnection.SendError
void System::Net::HttpConnection::SendError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::SendError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.Unbind
void System::Net::HttpConnection::Unbind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::Unbind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unbind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.Close
void System::Net::HttpConnection::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.CloseSocket
void System::Net::HttpConnection::CloseSocket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::CloseSocket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseSocket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.Close
void System::Net::HttpConnection::Close(bool force_close) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force_close)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force_close);
}
// Autogenerated method: System.Net.HttpConnection..cctor
void System::Net::HttpConnection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpConnection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.HttpConnection.<.ctor>b__24_0
bool System::Net::HttpConnection::$_ctor$b__24_0(::Il2CppObject* t, ::System::Security::Cryptography::X509Certificates::X509Certificate* c, ::System::Security::Cryptography::X509Certificates::X509Chain* ch, ::System::Net::Security::SslPolicyErrors e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::<.ctor>b__24_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__24_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t, c, ch, e);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.HttpConnection/InputState
#include "System/Net/HttpConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.HttpConnection/InputState RequestLine
::System::Net::HttpConnection::InputState System::Net::HttpConnection::InputState::_get_RequestLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::InputState::_get_RequestLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::HttpConnection::InputState>("System.Net", "HttpConnection/InputState", "RequestLine"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.HttpConnection/InputState RequestLine
void System::Net::HttpConnection::InputState::_set_RequestLine(::System::Net::HttpConnection::InputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::InputState::_set_RequestLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpConnection/InputState", "RequestLine", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.HttpConnection/InputState Headers
::System::Net::HttpConnection::InputState System::Net::HttpConnection::InputState::_get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::InputState::_get_Headers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::HttpConnection::InputState>("System.Net", "HttpConnection/InputState", "Headers"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.HttpConnection/InputState Headers
void System::Net::HttpConnection::InputState::_set_Headers(::System::Net::HttpConnection::InputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::InputState::_set_Headers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpConnection/InputState", "Headers", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::HttpConnection::InputState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::InputState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.HttpConnection/LineState
#include "System/Net/HttpConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.HttpConnection/LineState None
::System::Net::HttpConnection::LineState System::Net::HttpConnection::LineState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::LineState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::HttpConnection::LineState>("System.Net", "HttpConnection/LineState", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.HttpConnection/LineState None
void System::Net::HttpConnection::LineState::_set_None(::System::Net::HttpConnection::LineState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::LineState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpConnection/LineState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.HttpConnection/LineState CR
::System::Net::HttpConnection::LineState System::Net::HttpConnection::LineState::_get_CR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::LineState::_get_CR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::HttpConnection::LineState>("System.Net", "HttpConnection/LineState", "CR"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.HttpConnection/LineState CR
void System::Net::HttpConnection::LineState::_set_CR(::System::Net::HttpConnection::LineState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::LineState::_set_CR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpConnection/LineState", "CR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.HttpConnection/LineState LF
::System::Net::HttpConnection::LineState System::Net::HttpConnection::LineState::_get_LF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::LineState::_get_LF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::HttpConnection::LineState>("System.Net", "HttpConnection/LineState", "LF"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.HttpConnection/LineState LF
void System::Net::HttpConnection::LineState::_set_LF(::System::Net::HttpConnection::LineState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::LineState::_set_LF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpConnection/LineState", "LF", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::HttpConnection::LineState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpConnection::LineState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpListener
#include "System/Net/HttpListener.hpp"
// Including type: System.Net.HttpListener/ExtendedProtectionSelector
#include "System/Net/HttpListener_ExtendedProtectionSelector.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Net.HttpListenerPrefixCollection
#include "System/Net/HttpListenerPrefixCollection.hpp"
// Including type: System.Net.AuthenticationSchemeSelector
#include "System/Net/AuthenticationSchemeSelector.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Net.ServiceNameStore
#include "System/Net/ServiceNameStore.hpp"
// Including type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
#include "System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: System.Net.HttpListenerTimeoutManager
#include "System/Net/HttpListenerTimeoutManager.hpp"
// Including type: System.Security.Authentication.ExtendedProtection.ServiceNameCollection
#include "System/Security/Authentication/ExtendedProtection/ServiceNameCollection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Net.HttpListenerContext
#include "System/Net/HttpListenerContext.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.HttpConnection
#include "System/Net/HttpConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.MonoTlsProvider tlsProvider
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsProvider*& System::Net::HttpListener::dyn_tlsProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn_tlsProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tlsProvider"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.MonoTlsSettings tlsSettings
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsSettings*& System::Net::HttpListener::dyn_tlsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn_tlsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tlsSettings"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate certificate
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate*& System::Net::HttpListener::dyn_certificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn_certificate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificate"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.AuthenticationSchemes auth_schemes
[[deprecated("Use field access instead!")]] ::System::Net::AuthenticationSchemes& System::Net::HttpListener::dyn_auth_schemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn_auth_schemes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "auth_schemes"))->offset;
  return *reinterpret_cast<::System::Net::AuthenticationSchemes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpListenerPrefixCollection prefixes
[[deprecated("Use field access instead!")]] ::System::Net::HttpListenerPrefixCollection*& System::Net::HttpListener::dyn_prefixes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn_prefixes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefixes"))->offset;
  return *reinterpret_cast<::System::Net::HttpListenerPrefixCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.AuthenticationSchemeSelector auth_selector
[[deprecated("Use field access instead!")]] ::System::Net::AuthenticationSchemeSelector*& System::Net::HttpListener::dyn_auth_selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn_auth_selector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "auth_selector"))->offset;
  return *reinterpret_cast<::System::Net::AuthenticationSchemeSelector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String realm
[[deprecated("Use field access instead!")]] ::StringW& System::Net::HttpListener::dyn_realm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn_realm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "realm"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignore_write_exceptions
[[deprecated("Use field access instead!")]] bool& System::Net::HttpListener::dyn_ignore_write_exceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn_ignore_write_exceptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignore_write_exceptions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean unsafe_ntlm_auth
[[deprecated("Use field access instead!")]] bool& System::Net::HttpListener::dyn_unsafe_ntlm_auth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn_unsafe_ntlm_auth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unsafe_ntlm_auth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean listening
[[deprecated("Use field access instead!")]] bool& System::Net::HttpListener::dyn_listening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn_listening");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listening"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Net::HttpListener::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _internalLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::HttpListener::dyn__internalLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn__internalLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_internalLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable registry
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Net::HttpListener::dyn_registry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn_registry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "registry"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList ctx_queue
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Net::HttpListener::dyn_ctx_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn_ctx_queue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ctx_queue"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList wait_queue
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Net::HttpListener::dyn_wait_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn_wait_queue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wait_queue"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable connections
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Net::HttpListener::dyn_connections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn_connections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connections"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ServiceNameStore defaultServiceNames
[[deprecated("Use field access instead!")]] ::System::Net::ServiceNameStore*& System::Net::HttpListener::dyn_defaultServiceNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn_defaultServiceNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultServiceNames"))->offset;
  return *reinterpret_cast<::System::Net::ServiceNameStore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy extendedProtectionPolicy
[[deprecated("Use field access instead!")]] ::System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy*& System::Net::HttpListener::dyn_extendedProtectionPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn_extendedProtectionPolicy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extendedProtectionPolicy"))->offset;
  return *reinterpret_cast<::System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpListener/ExtendedProtectionSelector extendedProtectionSelectorDelegate
[[deprecated("Use field access instead!")]] ::System::Net::HttpListener::ExtendedProtectionSelector*& System::Net::HttpListener::dyn_extendedProtectionSelectorDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::dyn_extendedProtectionSelectorDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extendedProtectionSelectorDelegate"))->offset;
  return *reinterpret_cast<::System::Net::HttpListener::ExtendedProtectionSelector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.HttpListener.LoadCertificateAndKey
::System::Security::Cryptography::X509Certificates::X509Certificate* System::Net::HttpListener::LoadCertificateAndKey(::System::Net::IPAddress* addr, int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::LoadCertificateAndKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadCertificateAndKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(addr), ::il2cpp_utils::ExtractType(port)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, addr, port);
}
// Autogenerated method: System.Net.HttpListener.CreateSslStream
::System::Net::Security::SslStream* System::Net::HttpListener::CreateSslStream(::System::IO::Stream* innerStream, bool ownsStream, ::System::Net::Security::RemoteCertificateValidationCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::CreateSslStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSslStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerStream), ::il2cpp_utils::ExtractType(ownsStream), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::SslStream*, false>(this, ___internal__method, innerStream, ownsStream, callback);
}
// Autogenerated method: System.Net.HttpListener.get_AuthenticationSchemes
::System::Net::AuthenticationSchemes System::Net::HttpListener::get_AuthenticationSchemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::get_AuthenticationSchemes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthenticationSchemes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::AuthenticationSchemes, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.set_AuthenticationSchemes
void System::Net::HttpListener::set_AuthenticationSchemes(::System::Net::AuthenticationSchemes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::set_AuthenticationSchemes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AuthenticationSchemes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListener.get_AuthenticationSchemeSelectorDelegate
::System::Net::AuthenticationSchemeSelector* System::Net::HttpListener::get_AuthenticationSchemeSelectorDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::get_AuthenticationSchemeSelectorDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthenticationSchemeSelectorDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::AuthenticationSchemeSelector*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.set_AuthenticationSchemeSelectorDelegate
void System::Net::HttpListener::set_AuthenticationSchemeSelectorDelegate(::System::Net::AuthenticationSchemeSelector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::set_AuthenticationSchemeSelectorDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AuthenticationSchemeSelectorDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListener.get_ExtendedProtectionSelectorDelegate
::System::Net::HttpListener::ExtendedProtectionSelector* System::Net::HttpListener::get_ExtendedProtectionSelectorDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::get_ExtendedProtectionSelectorDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExtendedProtectionSelectorDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpListener::ExtendedProtectionSelector*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.set_ExtendedProtectionSelectorDelegate
void System::Net::HttpListener::set_ExtendedProtectionSelectorDelegate(::System::Net::HttpListener::ExtendedProtectionSelector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::set_ExtendedProtectionSelectorDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExtendedProtectionSelectorDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListener.get_IgnoreWriteExceptions
bool System::Net::HttpListener::get_IgnoreWriteExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::get_IgnoreWriteExceptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IgnoreWriteExceptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.set_IgnoreWriteExceptions
void System::Net::HttpListener::set_IgnoreWriteExceptions(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::set_IgnoreWriteExceptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IgnoreWriteExceptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListener.get_IsListening
bool System::Net::HttpListener::get_IsListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::get_IsListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.get_IsSupported
bool System::Net::HttpListener::get_IsSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::get_IsSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListener", "get_IsSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.get_Prefixes
::System::Net::HttpListenerPrefixCollection* System::Net::HttpListener::get_Prefixes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::get_Prefixes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefixes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpListenerPrefixCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.get_TimeoutManager
::System::Net::HttpListenerTimeoutManager* System::Net::HttpListener::get_TimeoutManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::get_TimeoutManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TimeoutManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpListenerTimeoutManager*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.get_ExtendedProtectionPolicy
::System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy* System::Net::HttpListener::get_ExtendedProtectionPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::get_ExtendedProtectionPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExtendedProtectionPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.set_ExtendedProtectionPolicy
void System::Net::HttpListener::set_ExtendedProtectionPolicy(::System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::set_ExtendedProtectionPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExtendedProtectionPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListener.get_DefaultServiceNames
::System::Security::Authentication::ExtendedProtection::ServiceNameCollection* System::Net::HttpListener::get_DefaultServiceNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::get_DefaultServiceNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultServiceNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Authentication::ExtendedProtection::ServiceNameCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.get_Realm
::StringW System::Net::HttpListener::get_Realm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::get_Realm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Realm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.set_Realm
void System::Net::HttpListener::set_Realm(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::set_Realm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Realm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListener.get_UnsafeConnectionNtlmAuthentication
bool System::Net::HttpListener::get_UnsafeConnectionNtlmAuthentication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::get_UnsafeConnectionNtlmAuthentication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnsafeConnectionNtlmAuthentication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.set_UnsafeConnectionNtlmAuthentication
void System::Net::HttpListener::set_UnsafeConnectionNtlmAuthentication(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::set_UnsafeConnectionNtlmAuthentication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UnsafeConnectionNtlmAuthentication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListener.Abort
void System::Net::HttpListener::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::Abort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Abort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.Close
void System::Net::HttpListener::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.Close
void System::Net::HttpListener::Close(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: System.Net.HttpListener.Cleanup
void System::Net::HttpListener::Cleanup(bool close_existing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(close_existing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, close_existing);
}
// Autogenerated method: System.Net.HttpListener.BeginGetContext
::System::IAsyncResult* System::Net::HttpListener::BeginGetContext(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::BeginGetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginGetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.HttpListener.EndGetContext
::System::Net::HttpListenerContext* System::Net::HttpListener::EndGetContext(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::EndGetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndGetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpListenerContext*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.HttpListener.SelectAuthenticationScheme
::System::Net::AuthenticationSchemes System::Net::HttpListener::SelectAuthenticationScheme(::System::Net::HttpListenerContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::SelectAuthenticationScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectAuthenticationScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::AuthenticationSchemes, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Net.HttpListener.GetContext
::System::Net::HttpListenerContext* System::Net::HttpListener::GetContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::GetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpListenerContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.Start
void System::Net::HttpListener::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.Stop
void System::Net::HttpListener::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.System.IDisposable.Dispose
void System::Net::HttpListener::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpListener*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.GetContextAsync
::System::Threading::Tasks::Task_1<::System::Net::HttpListenerContext*>* System::Net::HttpListener::GetContextAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::GetContextAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContextAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::HttpListenerContext*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.CheckDisposed
void System::Net::HttpListener::CheckDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::CheckDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.GetContextFromQueue
::System::Net::HttpListenerContext* System::Net::HttpListener::GetContextFromQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::GetContextFromQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContextFromQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpListenerContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListener.RegisterContext
void System::Net::HttpListener::RegisterContext(::System::Net::HttpListenerContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::RegisterContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Net.HttpListener.UnregisterContext
void System::Net::HttpListener::UnregisterContext(::System::Net::HttpListenerContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::UnregisterContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Net.HttpListener.AddConnection
void System::Net::HttpListener::AddConnection(::System::Net::HttpConnection* cnc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::AddConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cnc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cnc);
}
// Autogenerated method: System.Net.HttpListener.RemoveConnection
void System::Net::HttpListener::RemoveConnection(::System::Net::HttpConnection* cnc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::RemoveConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cnc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cnc);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpListener/ExtendedProtectionSelector
#include "System/Net/HttpListener_ExtendedProtectionSelector.hpp"
// Including type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
#include "System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.hpp"
// Including type: System.Net.HttpListenerRequest
#include "System/Net/HttpListenerRequest.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.HttpListener/ExtendedProtectionSelector.Invoke
::System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy* System::Net::HttpListener::ExtendedProtectionSelector::Invoke(::System::Net::HttpListenerRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::ExtendedProtectionSelector::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpListener::ExtendedProtectionSelector*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy*, false>(this, ___internal__method, request);
}
// Autogenerated method: System.Net.HttpListener/ExtendedProtectionSelector.BeginInvoke
::System::IAsyncResult* System::Net::HttpListener::ExtendedProtectionSelector::BeginInvoke(::System::Net::HttpListenerRequest* request, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::ExtendedProtectionSelector::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpListener::ExtendedProtectionSelector*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, request, callback, object);
}
// Autogenerated method: System.Net.HttpListener/ExtendedProtectionSelector.EndInvoke
::System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy* System::Net::HttpListener::ExtendedProtectionSelector::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListener::ExtendedProtectionSelector::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpListener::ExtendedProtectionSelector*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.HttpListenerBasicIdentity
#include "System/Net/HttpListenerBasicIdentity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String password
[[deprecated("Use field access instead!")]] ::StringW& System::Net::HttpListenerBasicIdentity::dyn_password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerBasicIdentity::dyn_password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "password"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.HttpListenerBasicIdentity.get_Password
::StringW System::Net::HttpListenerBasicIdentity::get_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerBasicIdentity::get_Password");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpListenerBasicIdentity*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.HttpListenerContext
#include "System/Net/HttpListenerContext.hpp"
// Including type: System.Net.HttpListenerRequest
#include "System/Net/HttpListenerRequest.hpp"
// Including type: System.Net.HttpListenerResponse
#include "System/Net/HttpListenerResponse.hpp"
// Including type: System.Security.Principal.IPrincipal
#include "System/Security/Principal/IPrincipal.hpp"
// Including type: System.Net.HttpConnection
#include "System/Net/HttpConnection.hpp"
// Including type: System.Net.HttpListener
#include "System/Net/HttpListener.hpp"
// Including type: System.Net.AuthenticationSchemes
#include "System/Net/AuthenticationSchemes.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.WebSockets.HttpListenerWebSocketContext
#include "System/Net/WebSockets/HttpListenerWebSocketContext.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.ArraySegment`1
#include "System/ArraySegment_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpListenerRequest request
[[deprecated("Use field access instead!")]] ::System::Net::HttpListenerRequest*& System::Net::HttpListenerContext::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::System::Net::HttpListenerRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpListenerResponse response
[[deprecated("Use field access instead!")]] ::System::Net::HttpListenerResponse*& System::Net::HttpListenerContext::dyn_response() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::dyn_response");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "response"))->offset;
  return *reinterpret_cast<::System::Net::HttpListenerResponse**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Principal.IPrincipal user
[[deprecated("Use field access instead!")]] ::System::Security::Principal::IPrincipal*& System::Net::HttpListenerContext::dyn_user() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::dyn_user");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "user"))->offset;
  return *reinterpret_cast<::System::Security::Principal::IPrincipal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpConnection cnc
[[deprecated("Use field access instead!")]] ::System::Net::HttpConnection*& System::Net::HttpListenerContext::dyn_cnc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::dyn_cnc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cnc"))->offset;
  return *reinterpret_cast<::System::Net::HttpConnection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String error
[[deprecated("Use field access instead!")]] ::StringW& System::Net::HttpListenerContext::dyn_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::dyn_error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "error"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 err_status
[[deprecated("Use field access instead!")]] int& System::Net::HttpListenerContext::dyn_err_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::dyn_err_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "err_status"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Net.HttpListener Listener
[[deprecated("Use field access instead!")]] ::System::Net::HttpListener*& System::Net::HttpListenerContext::dyn_Listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::dyn_Listener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Listener"))->offset;
  return *reinterpret_cast<::System::Net::HttpListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.HttpListenerContext.get_ErrorStatus
int System::Net::HttpListenerContext::get_ErrorStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::get_ErrorStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ErrorStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerContext.set_ErrorStatus
void System::Net::HttpListenerContext::set_ErrorStatus(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::set_ErrorStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ErrorStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerContext.get_ErrorMessage
::StringW System::Net::HttpListenerContext::get_ErrorMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::get_ErrorMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ErrorMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerContext.set_ErrorMessage
void System::Net::HttpListenerContext::set_ErrorMessage(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::set_ErrorMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ErrorMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerContext.get_HaveError
bool System::Net::HttpListenerContext::get_HaveError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::get_HaveError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HaveError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerContext.get_Connection
::System::Net::HttpConnection* System::Net::HttpListenerContext::get_Connection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::get_Connection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Connection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpConnection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerContext.get_Request
::System::Net::HttpListenerRequest* System::Net::HttpListenerContext::get_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::get_Request");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Request", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpListenerRequest*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerContext.get_Response
::System::Net::HttpListenerResponse* System::Net::HttpListenerContext::get_Response() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::get_Response");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Response", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpListenerResponse*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerContext.get_User
::System::Security::Principal::IPrincipal* System::Net::HttpListenerContext::get_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::get_User");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_User", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Principal::IPrincipal*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerContext.ParseAuthentication
void System::Net::HttpListenerContext::ParseAuthentication(::System::Net::AuthenticationSchemes expectedSchemes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::ParseAuthentication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAuthentication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectedSchemes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, expectedSchemes);
}
// Autogenerated method: System.Net.HttpListenerContext.ParseBasicAuthentication
::System::Security::Principal::IPrincipal* System::Net::HttpListenerContext::ParseBasicAuthentication(::StringW authData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::ParseBasicAuthentication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseBasicAuthentication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(authData)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Principal::IPrincipal*, false>(this, ___internal__method, authData);
}
// Autogenerated method: System.Net.HttpListenerContext.AcceptWebSocketAsync
::System::Threading::Tasks::Task_1<::System::Net::WebSockets::HttpListenerWebSocketContext*>* System::Net::HttpListenerContext::AcceptWebSocketAsync(::StringW subProtocol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::AcceptWebSocketAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcceptWebSocketAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subProtocol)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::WebSockets::HttpListenerWebSocketContext*>*, false>(this, ___internal__method, subProtocol);
}
// Autogenerated method: System.Net.HttpListenerContext.AcceptWebSocketAsync
::System::Threading::Tasks::Task_1<::System::Net::WebSockets::HttpListenerWebSocketContext*>* System::Net::HttpListenerContext::AcceptWebSocketAsync(::StringW subProtocol, ::System::TimeSpan keepAliveInterval) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::AcceptWebSocketAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcceptWebSocketAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subProtocol), ::il2cpp_utils::ExtractType(keepAliveInterval)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::WebSockets::HttpListenerWebSocketContext*>*, false>(this, ___internal__method, subProtocol, keepAliveInterval);
}
// Autogenerated method: System.Net.HttpListenerContext.AcceptWebSocketAsync
::System::Threading::Tasks::Task_1<::System::Net::WebSockets::HttpListenerWebSocketContext*>* System::Net::HttpListenerContext::AcceptWebSocketAsync(::StringW subProtocol, int receiveBufferSize, ::System::TimeSpan keepAliveInterval) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::AcceptWebSocketAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcceptWebSocketAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subProtocol), ::il2cpp_utils::ExtractType(receiveBufferSize), ::il2cpp_utils::ExtractType(keepAliveInterval)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::WebSockets::HttpListenerWebSocketContext*>*, false>(this, ___internal__method, subProtocol, receiveBufferSize, keepAliveInterval);
}
// Autogenerated method: System.Net.HttpListenerContext.AcceptWebSocketAsync
::System::Threading::Tasks::Task_1<::System::Net::WebSockets::HttpListenerWebSocketContext*>* System::Net::HttpListenerContext::AcceptWebSocketAsync(::StringW subProtocol, int receiveBufferSize, ::System::TimeSpan keepAliveInterval, ::System::ArraySegment_1<uint8_t> internalBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerContext::AcceptWebSocketAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcceptWebSocketAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subProtocol), ::il2cpp_utils::ExtractType(receiveBufferSize), ::il2cpp_utils::ExtractType(keepAliveInterval), ::il2cpp_utils::ExtractType(internalBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::WebSockets::HttpListenerWebSocketContext*>*, false>(this, ___internal__method, subProtocol, receiveBufferSize, keepAliveInterval, internalBuffer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.HttpListenerPrefixCollection
#include "System/Net/HttpListenerPrefixCollection.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.HttpListener
#include "System/Net/HttpListener.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> prefixes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Net::HttpListenerPrefixCollection::dyn_prefixes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerPrefixCollection::dyn_prefixes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefixes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpListener listener
[[deprecated("Use field access instead!")]] ::System::Net::HttpListener*& System::Net::HttpListenerPrefixCollection::dyn_listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerPrefixCollection::dyn_listener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listener"))->offset;
  return *reinterpret_cast<::System::Net::HttpListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.get_Count
int System::Net::HttpListenerPrefixCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerPrefixCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpListenerPrefixCollection*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.get_IsReadOnly
bool System::Net::HttpListenerPrefixCollection::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerPrefixCollection::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpListenerPrefixCollection*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.get_IsSynchronized
bool System::Net::HttpListenerPrefixCollection::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerPrefixCollection::get_IsSynchronized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSynchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.Add
void System::Net::HttpListenerPrefixCollection::Add(::StringW uriPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerPrefixCollection::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpListenerPrefixCollection*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uriPrefix);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.Clear
void System::Net::HttpListenerPrefixCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerPrefixCollection::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpListenerPrefixCollection*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.Contains
bool System::Net::HttpListenerPrefixCollection::Contains(::StringW uriPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerPrefixCollection::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpListenerPrefixCollection*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uriPrefix);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.CopyTo
void System::Net::HttpListenerPrefixCollection::CopyTo(::ArrayW<::StringW> array, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerPrefixCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpListenerPrefixCollection*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.CopyTo
void System::Net::HttpListenerPrefixCollection::CopyTo(::System::Array* array, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerPrefixCollection::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::StringW>* System::Net::HttpListenerPrefixCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerPrefixCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpListenerPrefixCollection*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Net::HttpListenerPrefixCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerPrefixCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpListenerPrefixCollection*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerPrefixCollection.Remove
bool System::Net::HttpListenerPrefixCollection::Remove(::StringW uriPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerPrefixCollection::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpListenerPrefixCollection*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uriPrefix);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpListenerRequest
#include "System/Net/HttpListenerRequest.hpp"
// Including type: System.Net.HttpListenerRequest/Context
#include "System/Net/HttpListenerRequest_Context.hpp"
// Including type: System.Net.HttpListenerRequest/GCCDelegate
#include "System/Net/HttpListenerRequest_GCCDelegate.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Net.CookieCollection
#include "System/Net/CookieCollection.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Collections.Specialized.NameValueCollection
#include "System/Collections/Specialized/NameValueCollection.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.HttpListenerContext
#include "System/Net/HttpListenerContext.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: System.Net.TransportContext
#include "System/Net/TransportContext.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] _100continue
::ArrayW<uint8_t> System::Net::HttpListenerRequest::_get__100continue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::_get__100continue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Net", "HttpListenerRequest", "_100continue"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _100continue
void System::Net::HttpListenerRequest::_set__100continue(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::_set__100continue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpListenerRequest", "_100continue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char[] separators
::ArrayW<::Il2CppChar> System::Net::HttpListenerRequest::_get_separators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::_get_separators");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Net", "HttpListenerRequest", "separators"));
}
// Autogenerated static field setter
// Set static field: static private System.Char[] separators
void System::Net::HttpListenerRequest::_set_separators(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::_set_separators");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpListenerRequest", "separators", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String[] accept_types
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Net::HttpListenerRequest::dyn_accept_types() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_accept_types");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "accept_types"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding content_encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Net::HttpListenerRequest::dyn_content_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_content_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content_encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 content_length
[[deprecated("Use field access instead!")]] int64_t& System::Net::HttpListenerRequest::dyn_content_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_content_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content_length"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean cl_set
[[deprecated("Use field access instead!")]] bool& System::Net::HttpListenerRequest::dyn_cl_set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_cl_set");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cl_set"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.CookieCollection cookies
[[deprecated("Use field access instead!")]] ::System::Net::CookieCollection*& System::Net::HttpListenerRequest::dyn_cookies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_cookies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cookies"))->offset;
  return *reinterpret_cast<::System::Net::CookieCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebHeaderCollection headers
[[deprecated("Use field access instead!")]] ::System::Net::WebHeaderCollection*& System::Net::HttpListenerRequest::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<::System::Net::WebHeaderCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String method
[[deprecated("Use field access instead!")]] ::StringW& System::Net::HttpListenerRequest::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream input_stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::HttpListenerRequest::dyn_input_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_input_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "input_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Version version
[[deprecated("Use field access instead!")]] ::System::Version*& System::Net::HttpListenerRequest::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::System::Version**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.NameValueCollection query_string
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::NameValueCollection*& System::Net::HttpListenerRequest::dyn_query_string() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_query_string");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "query_string"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::NameValueCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String raw_url
[[deprecated("Use field access instead!")]] ::StringW& System::Net::HttpListenerRequest::dyn_raw_url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_raw_url");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raw_url"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri url
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::HttpListenerRequest::dyn_url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_url");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "url"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri referrer
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::HttpListenerRequest::dyn_referrer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_referrer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referrer"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] user_languages
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Net::HttpListenerRequest::dyn_user_languages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_user_languages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "user_languages"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpListenerContext context
[[deprecated("Use field access instead!")]] ::System::Net::HttpListenerContext*& System::Net::HttpListenerRequest::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<::System::Net::HttpListenerContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean is_chunked
[[deprecated("Use field access instead!")]] bool& System::Net::HttpListenerRequest::dyn_is_chunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_is_chunked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "is_chunked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ka_set
[[deprecated("Use field access instead!")]] bool& System::Net::HttpListenerRequest::dyn_ka_set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_ka_set");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ka_set"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean keep_alive
[[deprecated("Use field access instead!")]] bool& System::Net::HttpListenerRequest::dyn_keep_alive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_keep_alive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keep_alive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpListenerRequest/GCCDelegate gcc_delegate
[[deprecated("Use field access instead!")]] ::System::Net::HttpListenerRequest::GCCDelegate*& System::Net::HttpListenerRequest::dyn_gcc_delegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::dyn_gcc_delegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gcc_delegate"))->offset;
  return *reinterpret_cast<::System::Net::HttpListenerRequest::GCCDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.HttpListenerRequest.SetRequestLine
void System::Net::HttpListenerRequest::SetRequestLine(::StringW req) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::SetRequestLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRequestLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(req)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, req);
}
// Autogenerated method: System.Net.HttpListenerRequest.CreateQueryString
void System::Net::HttpListenerRequest::CreateQueryString(::StringW query) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::CreateQueryString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateQueryString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(query)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, query);
}
// Autogenerated method: System.Net.HttpListenerRequest.MaybeUri
bool System::Net::HttpListenerRequest::MaybeUri(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::MaybeUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListenerRequest", "MaybeUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Net.HttpListenerRequest.IsPredefinedScheme
bool System::Net::HttpListenerRequest::IsPredefinedScheme(::StringW scheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::IsPredefinedScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListenerRequest", "IsPredefinedScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scheme)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scheme);
}
// Autogenerated method: System.Net.HttpListenerRequest.FinishInitialization
bool System::Net::HttpListenerRequest::FinishInitialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::FinishInitialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishInitialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.Unquote
::StringW System::Net::HttpListenerRequest::Unquote(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::Unquote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListenerRequest", "Unquote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Net.HttpListenerRequest.AddHeader
void System::Net::HttpListenerRequest::AddHeader(::StringW header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::AddHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(header)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, header);
}
// Autogenerated method: System.Net.HttpListenerRequest.FlushInput
bool System::Net::HttpListenerRequest::FlushInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::FlushInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_AcceptTypes
::ArrayW<::StringW> System::Net::HttpListenerRequest::get_AcceptTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_AcceptTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AcceptTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_ClientCertificateError
int System::Net::HttpListenerRequest::get_ClientCertificateError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_ClientCertificateError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificateError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_ContentEncoding
::System::Text::Encoding* System::Net::HttpListenerRequest::get_ContentEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_ContentEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_ContentLength64
int64_t System::Net::HttpListenerRequest::get_ContentLength64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_ContentLength64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentLength64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_ContentType
::StringW System::Net::HttpListenerRequest::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_Cookies
::System::Net::CookieCollection* System::Net::HttpListenerRequest::get_Cookies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_Cookies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cookies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_HasEntityBody
bool System::Net::HttpListenerRequest::get_HasEntityBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_HasEntityBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasEntityBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_Headers
::System::Collections::Specialized::NameValueCollection* System::Net::HttpListenerRequest::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Specialized::NameValueCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_HttpMethod
::StringW System::Net::HttpListenerRequest::get_HttpMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_HttpMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HttpMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_InputStream
::System::IO::Stream* System::Net::HttpListenerRequest::get_InputStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_InputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_IsAuthenticated
bool System::Net::HttpListenerRequest::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_IsAuthenticated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_IsLocal
bool System::Net::HttpListenerRequest::get_IsLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_IsLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_IsSecureConnection
bool System::Net::HttpListenerRequest::get_IsSecureConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_IsSecureConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSecureConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_KeepAlive
bool System::Net::HttpListenerRequest::get_KeepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_KeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_LocalEndPoint
::System::Net::IPEndPoint* System::Net::HttpListenerRequest::get_LocalEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_LocalEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_ProtocolVersion
::System::Version* System::Net::HttpListenerRequest::get_ProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_QueryString
::System::Collections::Specialized::NameValueCollection* System::Net::HttpListenerRequest::get_QueryString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_QueryString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QueryString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Specialized::NameValueCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_RawUrl
::StringW System::Net::HttpListenerRequest::get_RawUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_RawUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RawUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_RemoteEndPoint
::System::Net::IPEndPoint* System::Net::HttpListenerRequest::get_RemoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_RemoteEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RemoteEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_RequestTraceIdentifier
::System::Guid System::Net::HttpListenerRequest::get_RequestTraceIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_RequestTraceIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestTraceIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_Url
::System::Uri* System::Net::HttpListenerRequest::get_Url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_Url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_UrlReferrer
::System::Uri* System::Net::HttpListenerRequest::get_UrlReferrer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_UrlReferrer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UrlReferrer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_UserAgent
::StringW System::Net::HttpListenerRequest::get_UserAgent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_UserAgent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserAgent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_UserHostAddress
::StringW System::Net::HttpListenerRequest::get_UserHostAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_UserHostAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserHostAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_UserHostName
::StringW System::Net::HttpListenerRequest::get_UserHostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_UserHostName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserHostName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_UserLanguages
::ArrayW<::StringW> System::Net::HttpListenerRequest::get_UserLanguages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_UserLanguages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserLanguages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.BeginGetClientCertificate
::System::IAsyncResult* System::Net::HttpListenerRequest::BeginGetClientCertificate(::System::AsyncCallback* requestCallback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::BeginGetClientCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginGetClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestCallback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, requestCallback, state);
}
// Autogenerated method: System.Net.HttpListenerRequest.EndGetClientCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate2* System::Net::HttpListenerRequest::EndGetClientCertificate(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::EndGetClientCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndGetClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.HttpListenerRequest.GetClientCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate2* System::Net::HttpListenerRequest::GetClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::GetClientCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_ServiceName
::StringW System::Net::HttpListenerRequest::get_ServiceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_ServiceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServiceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_TransportContext
::System::Net::TransportContext* System::Net::HttpListenerRequest::get_TransportContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_TransportContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransportContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::TransportContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.get_IsWebSocketRequest
bool System::Net::HttpListenerRequest::get_IsWebSocketRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::get_IsWebSocketRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsWebSocketRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest.GetClientCertificateAsync
::System::Threading::Tasks::Task_1<::System::Security::Cryptography::X509Certificates::X509Certificate2*>* System::Net::HttpListenerRequest::GetClientCertificateAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::GetClientCertificateAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClientCertificateAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Security::Cryptography::X509Certificates::X509Certificate2*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest..cctor
void System::Net::HttpListenerRequest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListenerRequest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.HttpListenerRequest/Context
#include "System/Net/HttpListenerRequest_Context.hpp"
// Including type: System.Security.Authentication.ExtendedProtection.ChannelBinding
#include "System/Security/Authentication/ExtendedProtection/ChannelBinding.hpp"
// Including type: System.Security.Authentication.ExtendedProtection.ChannelBindingKind
#include "System/Security/Authentication/ExtendedProtection/ChannelBindingKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.HttpListenerRequest/Context.GetChannelBinding
::System::Security::Authentication::ExtendedProtection::ChannelBinding* System::Net::HttpListenerRequest::Context::GetChannelBinding(::System::Security::Authentication::ExtendedProtection::ChannelBindingKind kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::Context::GetChannelBinding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::TransportContext*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Authentication::ExtendedProtection::ChannelBinding*, false>(this, ___internal__method, kind);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpListenerRequest/GCCDelegate
#include "System/Net/HttpListenerRequest_GCCDelegate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.HttpListenerRequest/GCCDelegate.Invoke
::System::Security::Cryptography::X509Certificates::X509Certificate2* System::Net::HttpListenerRequest::GCCDelegate::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::GCCDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpListenerRequest::GCCDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerRequest/GCCDelegate.BeginInvoke
::System::IAsyncResult* System::Net::HttpListenerRequest::GCCDelegate::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::GCCDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpListenerRequest::GCCDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: System.Net.HttpListenerRequest/GCCDelegate.EndInvoke
::System::Security::Cryptography::X509Certificates::X509Certificate2* System::Net::HttpListenerRequest::GCCDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerRequest::GCCDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpListenerRequest::GCCDelegate*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpListenerResponse
#include "System/Net/HttpListenerResponse.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Net.CookieCollection
#include "System/Net/CookieCollection.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.Net.ResponseStream
#include "System/Net/ResponseStream.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Net.HttpListenerContext
#include "System/Net/HttpListenerContext.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.Cookie
#include "System/Net/Cookie.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String tspecials
::StringW System::Net::HttpListenerResponse::_get_tspecials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::_get_tspecials");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "HttpListenerResponse", "tspecials"));
}
// Autogenerated static field setter
// Set static field: static private System.String tspecials
void System::Net::HttpListenerResponse::_set_tspecials(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::_set_tspecials");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpListenerResponse", "tspecials", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Net::HttpListenerResponse::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding content_encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Net::HttpListenerResponse::dyn_content_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::dyn_content_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content_encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 content_length
[[deprecated("Use field access instead!")]] int64_t& System::Net::HttpListenerResponse::dyn_content_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::dyn_content_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content_length"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean cl_set
[[deprecated("Use field access instead!")]] bool& System::Net::HttpListenerResponse::dyn_cl_set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::dyn_cl_set");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cl_set"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String content_type
[[deprecated("Use field access instead!")]] ::StringW& System::Net::HttpListenerResponse::dyn_content_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::dyn_content_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content_type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.CookieCollection cookies
[[deprecated("Use field access instead!")]] ::System::Net::CookieCollection*& System::Net::HttpListenerResponse::dyn_cookies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::dyn_cookies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cookies"))->offset;
  return *reinterpret_cast<::System::Net::CookieCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebHeaderCollection headers
[[deprecated("Use field access instead!")]] ::System::Net::WebHeaderCollection*& System::Net::HttpListenerResponse::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<::System::Net::WebHeaderCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean keep_alive
[[deprecated("Use field access instead!")]] bool& System::Net::HttpListenerResponse::dyn_keep_alive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::dyn_keep_alive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keep_alive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ResponseStream output_stream
[[deprecated("Use field access instead!")]] ::System::Net::ResponseStream*& System::Net::HttpListenerResponse::dyn_output_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::dyn_output_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "output_stream"))->offset;
  return *reinterpret_cast<::System::Net::ResponseStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Version version
[[deprecated("Use field access instead!")]] ::System::Version*& System::Net::HttpListenerResponse::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::System::Version**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String location
[[deprecated("Use field access instead!")]] ::StringW& System::Net::HttpListenerResponse::dyn_location() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::dyn_location");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "location"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 status_code
[[deprecated("Use field access instead!")]] int& System::Net::HttpListenerResponse::dyn_status_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::dyn_status_code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status_code"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String status_description
[[deprecated("Use field access instead!")]] ::StringW& System::Net::HttpListenerResponse::dyn_status_description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::dyn_status_description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status_description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean chunked
[[deprecated("Use field access instead!")]] bool& System::Net::HttpListenerResponse::dyn_chunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::dyn_chunked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chunked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpListenerContext context
[[deprecated("Use field access instead!")]] ::System::Net::HttpListenerContext*& System::Net::HttpListenerResponse::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<::System::Net::HttpListenerContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean HeadersSent
[[deprecated("Use field access instead!")]] bool& System::Net::HttpListenerResponse::dyn_HeadersSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::dyn_HeadersSent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HeadersSent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object headers_lock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::HttpListenerResponse::dyn_headers_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::dyn_headers_lock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers_lock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean force_close_chunked
[[deprecated("Use field access instead!")]] bool& System::Net::HttpListenerResponse::dyn_force_close_chunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::dyn_force_close_chunked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "force_close_chunked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.HttpListenerResponse.get_ForceCloseChunked
bool System::Net::HttpListenerResponse::get_ForceCloseChunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::get_ForceCloseChunked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ForceCloseChunked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.get_ContentEncoding
::System::Text::Encoding* System::Net::HttpListenerResponse::get_ContentEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::get_ContentEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.set_ContentEncoding
void System::Net::HttpListenerResponse::set_ContentEncoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::set_ContentEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.get_ContentLength64
int64_t System::Net::HttpListenerResponse::get_ContentLength64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::get_ContentLength64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentLength64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.set_ContentLength64
void System::Net::HttpListenerResponse::set_ContentLength64(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::set_ContentLength64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentLength64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.get_ContentType
::StringW System::Net::HttpListenerResponse::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::get_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.set_ContentType
void System::Net::HttpListenerResponse::set_ContentType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::set_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.get_Cookies
::System::Net::CookieCollection* System::Net::HttpListenerResponse::get_Cookies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::get_Cookies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cookies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.set_Cookies
void System::Net::HttpListenerResponse::set_Cookies(::System::Net::CookieCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::set_Cookies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Cookies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.get_Headers
::System::Net::WebHeaderCollection* System::Net::HttpListenerResponse::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebHeaderCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.set_Headers
void System::Net::HttpListenerResponse::set_Headers(::System::Net::WebHeaderCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::set_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.get_KeepAlive
bool System::Net::HttpListenerResponse::get_KeepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::get_KeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.set_KeepAlive
void System::Net::HttpListenerResponse::set_KeepAlive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::set_KeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_KeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.get_OutputStream
::System::IO::Stream* System::Net::HttpListenerResponse::get_OutputStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::get_OutputStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OutputStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.get_ProtocolVersion
::System::Version* System::Net::HttpListenerResponse::get_ProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::get_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.set_ProtocolVersion
void System::Net::HttpListenerResponse::set_ProtocolVersion(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::set_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.get_RedirectLocation
::StringW System::Net::HttpListenerResponse::get_RedirectLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::get_RedirectLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RedirectLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.set_RedirectLocation
void System::Net::HttpListenerResponse::set_RedirectLocation(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::set_RedirectLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RedirectLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.get_SendChunked
bool System::Net::HttpListenerResponse::get_SendChunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::get_SendChunked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendChunked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.set_SendChunked
void System::Net::HttpListenerResponse::set_SendChunked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::set_SendChunked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendChunked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.get_StatusCode
int System::Net::HttpListenerResponse::get_StatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::get_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.set_StatusCode
void System::Net::HttpListenerResponse::set_StatusCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::set_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.get_StatusDescription
::StringW System::Net::HttpListenerResponse::get_StatusDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::get_StatusDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.set_StatusDescription
void System::Net::HttpListenerResponse::set_StatusDescription(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::set_StatusDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StatusDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.System.IDisposable.Dispose
void System::Net::HttpListenerResponse::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpListenerResponse*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.Abort
void System::Net::HttpListenerResponse::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::Abort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Abort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.AddHeader
void System::Net::HttpListenerResponse::AddHeader(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::AddHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.AppendCookie
void System::Net::HttpListenerResponse::AppendCookie(::System::Net::Cookie* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::AppendCookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendCookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cookie);
}
// Autogenerated method: System.Net.HttpListenerResponse.AppendHeader
void System::Net::HttpListenerResponse::AppendHeader(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::AppendHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.Close
void System::Net::HttpListenerResponse::Close(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: System.Net.HttpListenerResponse.Close
void System::Net::HttpListenerResponse::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerResponse.Close
void System::Net::HttpListenerResponse::Close(::ArrayW<uint8_t> responseEntity, bool willBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseEntity), ::il2cpp_utils::ExtractType(willBlock)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, responseEntity, willBlock);
}
// Autogenerated method: System.Net.HttpListenerResponse.CopyFrom
void System::Net::HttpListenerResponse::CopyFrom(::System::Net::HttpListenerResponse* templateResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(templateResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, templateResponse);
}
// Autogenerated method: System.Net.HttpListenerResponse.Redirect
void System::Net::HttpListenerResponse::Redirect(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::Redirect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Redirect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, url);
}
// Autogenerated method: System.Net.HttpListenerResponse.FindCookie
bool System::Net::HttpListenerResponse::FindCookie(::System::Net::Cookie* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::FindCookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindCookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cookie);
}
// Autogenerated method: System.Net.HttpListenerResponse.SendHeaders
void System::Net::HttpListenerResponse::SendHeaders(bool closing, ::System::IO::MemoryStream* ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::SendHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(closing), ::il2cpp_utils::ExtractType(ms)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, closing, ms);
}
// Autogenerated method: System.Net.HttpListenerResponse.FormatHeaders
::StringW System::Net::HttpListenerResponse::FormatHeaders(::System::Net::WebHeaderCollection* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::FormatHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListenerResponse", "FormatHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, headers);
}
// Autogenerated method: System.Net.HttpListenerResponse.CookieToClientString
::StringW System::Net::HttpListenerResponse::CookieToClientString(::System::Net::Cookie* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::CookieToClientString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListenerResponse", "CookieToClientString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cookie);
}
// Autogenerated method: System.Net.HttpListenerResponse.QuotedString
::StringW System::Net::HttpListenerResponse::QuotedString(::System::Net::Cookie* cookie, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::QuotedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListenerResponse", "QuotedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cookie, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.IsToken
bool System::Net::HttpListenerResponse::IsToken(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::IsToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListenerResponse", "IsToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerResponse.SetCookie
void System::Net::HttpListenerResponse::SetCookie(::System::Net::Cookie* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::SetCookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cookie);
}
// Autogenerated method: System.Net.HttpListenerResponse..cctor
void System::Net::HttpListenerResponse::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerResponse::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpListenerResponse", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.HttpListenerTimeoutManager
#include "System/Net/HttpListenerTimeoutManager.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.HttpListenerTimeoutManager.get_EntityBody
::System::TimeSpan System::Net::HttpListenerTimeoutManager::get_EntityBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerTimeoutManager::get_EntityBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EntityBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerTimeoutManager.set_EntityBody
void System::Net::HttpListenerTimeoutManager::set_EntityBody(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerTimeoutManager::set_EntityBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EntityBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerTimeoutManager.get_DrainEntityBody
::System::TimeSpan System::Net::HttpListenerTimeoutManager::get_DrainEntityBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerTimeoutManager::get_DrainEntityBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DrainEntityBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerTimeoutManager.set_DrainEntityBody
void System::Net::HttpListenerTimeoutManager::set_DrainEntityBody(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerTimeoutManager::set_DrainEntityBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DrainEntityBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerTimeoutManager.get_RequestQueue
::System::TimeSpan System::Net::HttpListenerTimeoutManager::get_RequestQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerTimeoutManager::get_RequestQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerTimeoutManager.set_RequestQueue
void System::Net::HttpListenerTimeoutManager::set_RequestQueue(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerTimeoutManager::set_RequestQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerTimeoutManager.get_IdleConnection
::System::TimeSpan System::Net::HttpListenerTimeoutManager::get_IdleConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerTimeoutManager::get_IdleConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IdleConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerTimeoutManager.set_IdleConnection
void System::Net::HttpListenerTimeoutManager::set_IdleConnection(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerTimeoutManager::set_IdleConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IdleConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerTimeoutManager.get_HeaderWait
::System::TimeSpan System::Net::HttpListenerTimeoutManager::get_HeaderWait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerTimeoutManager::get_HeaderWait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HeaderWait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerTimeoutManager.set_HeaderWait
void System::Net::HttpListenerTimeoutManager::set_HeaderWait(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerTimeoutManager::set_HeaderWait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HeaderWait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpListenerTimeoutManager.get_MinSendBytesPerSecond
int64_t System::Net::HttpListenerTimeoutManager::get_MinSendBytesPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerTimeoutManager::get_MinSendBytesPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinSendBytesPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpListenerTimeoutManager.set_MinSendBytesPerSecond
void System::Net::HttpListenerTimeoutManager::set_MinSendBytesPerSecond(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpListenerTimeoutManager::set_MinSendBytesPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinSendBytesPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.HttpRequestCreator
#include "System/Net/HttpRequestCreator.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.HttpRequestCreator.Create
::System::Net::WebRequest* System::Net::HttpRequestCreator::Create(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpRequestCreator::Create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpRequestCreator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebRequest*, false>(this, ___internal__method, uri);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpStreamAsyncResult
#include "System/Net/HttpStreamAsyncResult.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object locker
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::HttpStreamAsyncResult::dyn_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStreamAsyncResult::dyn_locker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locker"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent handle
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& System::Net::HttpStreamAsyncResult::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStreamAsyncResult::dyn_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean completed
[[deprecated("Use field access instead!")]] bool& System::Net::HttpStreamAsyncResult::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStreamAsyncResult::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] Buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::HttpStreamAsyncResult::dyn_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStreamAsyncResult::dyn_Buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Offset
[[deprecated("Use field access instead!")]] int& System::Net::HttpStreamAsyncResult::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStreamAsyncResult::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Count
[[deprecated("Use field access instead!")]] int& System::Net::HttpStreamAsyncResult::dyn_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStreamAsyncResult::dyn_Count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.AsyncCallback Callback
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& System::Net::HttpStreamAsyncResult::dyn_Callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStreamAsyncResult::dyn_Callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Callback"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object State
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::HttpStreamAsyncResult::dyn_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStreamAsyncResult::dyn_State");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "State"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 SynchRead
[[deprecated("Use field access instead!")]] int& System::Net::HttpStreamAsyncResult::dyn_SynchRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStreamAsyncResult::dyn_SynchRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SynchRead"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Exception Error
[[deprecated("Use field access instead!")]] ::System::Exception*& System::Net::HttpStreamAsyncResult::dyn_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStreamAsyncResult::dyn_Error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Error"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.HttpStreamAsyncResult.Complete
void System::Net::HttpStreamAsyncResult::Complete(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStreamAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Net.HttpStreamAsyncResult.Complete
void System::Net::HttpStreamAsyncResult::Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStreamAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpStreamAsyncResult.get_AsyncState
::Il2CppObject* System::Net::HttpStreamAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStreamAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpStreamAsyncResult*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpStreamAsyncResult.get_AsyncWaitHandle
::System::Threading::WaitHandle* System::Net::HttpStreamAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStreamAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpStreamAsyncResult*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpStreamAsyncResult.get_CompletedSynchronously
bool System::Net::HttpStreamAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStreamAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpStreamAsyncResult*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpStreamAsyncResult.get_IsCompleted
bool System::Net::HttpStreamAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStreamAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpStreamAsyncResult*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Net.HttpWebRequest/<>c__241`1
#include "System/Net/HttpWebRequest_--c__241_1.hpp"
// Including type: System.Net.HttpWebRequest/<RunWithTimeoutWorker>d__241`1
#include "System/Net/HttpWebRequest_-RunWithTimeoutWorker-d__241_1.hpp"
// Including type: System.Net.HttpWebRequest/<MyGetResponseAsync>d__243
#include "System/Net/HttpWebRequest_-MyGetResponseAsync-d__243.hpp"
// Including type: System.Net.HttpWebRequest/<GetResponseFromData>d__244
#include "System/Net/HttpWebRequest_-GetResponseFromData-d__244.hpp"
// Including type: System.Net.HttpWebRequest/<<GetRewriteHandler>b__271_0>d
#include "System/Net/HttpWebRequest_--GetRewriteHandler-b__271_0-d.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Net.HttpContinueDelegate
#include "System/Net/HttpContinueDelegate.hpp"
// Including type: System.Net.CookieContainer
#include "System/Net/CookieContainer.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Net.ServicePoint
#include "System/Net/ServicePoint.hpp"
// Including type: System.Net.WebRequestStream
#include "System/Net/WebRequestStream.hpp"
// Including type: System.Net.HttpWebResponse
#include "System/Net/HttpWebResponse.hpp"
// Including type: System.Net.WebCompletionSource
#include "System/Net/WebCompletionSource.hpp"
// Including type: System.Net.WebOperation
#include "System/Net/WebOperation.hpp"
// Including type: Mono.Net.Security.MobileTlsProvider
#include "Mono/Net/Security/MobileTlsProvider.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.Net.ServerCertValidationCallback
#include "System/Net/ServerCertValidationCallback.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Net.Cache.RequestCachePolicy
#include "System/Net/Cache/RequestCachePolicy.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: System.Net.BufferOffsetSize
#include "System/Net/BufferOffsetSize.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.TransportContext
#include "System/Net/TransportContext.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Net.WebResponseStream
#include "System/Net/WebResponseStream.hpp"
// Including type: System.Net.WebException
#include "System/Net/WebException.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Net.HttpStatusCode
#include "System/Net/HttpStatusCode.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: System.ValueTuple`4
#include "System/ValueTuple_4.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 defaultMaxResponseHeadersLength
int System::Net::HttpWebRequest::_get_defaultMaxResponseHeadersLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::_get_defaultMaxResponseHeadersLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "HttpWebRequest", "defaultMaxResponseHeadersLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 defaultMaxResponseHeadersLength
void System::Net::HttpWebRequest::_set_defaultMaxResponseHeadersLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::_set_defaultMaxResponseHeadersLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpWebRequest", "defaultMaxResponseHeadersLength", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 defaultMaximumErrorResponseLength
int System::Net::HttpWebRequest::_get_defaultMaximumErrorResponseLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::_get_defaultMaximumErrorResponseLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "HttpWebRequest", "defaultMaximumErrorResponseLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 defaultMaximumErrorResponseLength
void System::Net::HttpWebRequest::_set_defaultMaximumErrorResponseLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::_set_defaultMaximumErrorResponseLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpWebRequest", "defaultMaximumErrorResponseLength", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.Cache.RequestCachePolicy defaultCachePolicy
::System::Net::Cache::RequestCachePolicy* System::Net::HttpWebRequest::_get_defaultCachePolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::_get_defaultCachePolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Cache::RequestCachePolicy*>("System.Net", "HttpWebRequest", "defaultCachePolicy"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.Cache.RequestCachePolicy defaultCachePolicy
void System::Net::HttpWebRequest::_set_defaultCachePolicy(::System::Net::Cache::RequestCachePolicy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::_set_defaultCachePolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpWebRequest", "defaultCachePolicy", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Uri requestUri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::HttpWebRequest::dyn_requestUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_requestUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestUri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri actualUri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::HttpWebRequest::dyn_actualUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_actualUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "actualUri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hostChanged
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_hostChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_hostChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hostChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean allowAutoRedirect
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_allowAutoRedirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_allowAutoRedirect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowAutoRedirect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean allowBuffering
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_allowBuffering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_allowBuffering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowBuffering"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean allowReadStreamBuffering
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_allowReadStreamBuffering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_allowReadStreamBuffering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowReadStreamBuffering"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509CertificateCollection certificates
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509CertificateCollection*& System::Net::HttpWebRequest::dyn_certificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_certificates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificates"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509CertificateCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String connectionGroup
[[deprecated("Use field access instead!")]] ::StringW& System::Net::HttpWebRequest::dyn_connectionGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_connectionGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionGroup"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean haveContentLength
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_haveContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_haveContentLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveContentLength"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 contentLength
[[deprecated("Use field access instead!")]] int64_t& System::Net::HttpWebRequest::dyn_contentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_contentLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentLength"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpContinueDelegate continueDelegate
[[deprecated("Use field access instead!")]] ::System::Net::HttpContinueDelegate*& System::Net::HttpWebRequest::dyn_continueDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_continueDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "continueDelegate"))->offset;
  return *reinterpret_cast<::System::Net::HttpContinueDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.CookieContainer cookieContainer
[[deprecated("Use field access instead!")]] ::System::Net::CookieContainer*& System::Net::HttpWebRequest::dyn_cookieContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_cookieContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cookieContainer"))->offset;
  return *reinterpret_cast<::System::Net::CookieContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ICredentials credentials
[[deprecated("Use field access instead!")]] ::System::Net::ICredentials*& System::Net::HttpWebRequest::dyn_credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_credentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "credentials"))->offset;
  return *reinterpret_cast<::System::Net::ICredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean haveResponse
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_haveResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_haveResponse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveResponse"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean requestSent
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_requestSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_requestSent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestSent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebHeaderCollection webHeaders
[[deprecated("Use field access instead!")]] ::System::Net::WebHeaderCollection*& System::Net::HttpWebRequest::dyn_webHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_webHeaders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "webHeaders"))->offset;
  return *reinterpret_cast<::System::Net::WebHeaderCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean keepAlive
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_keepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_keepAlive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keepAlive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxAutoRedirect
[[deprecated("Use field access instead!")]] int& System::Net::HttpWebRequest::dyn_maxAutoRedirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_maxAutoRedirect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxAutoRedirect"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String mediaType
[[deprecated("Use field access instead!")]] ::StringW& System::Net::HttpWebRequest::dyn_mediaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_mediaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mediaType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String method
[[deprecated("Use field access instead!")]] ::StringW& System::Net::HttpWebRequest::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String initialMethod
[[deprecated("Use field access instead!")]] ::StringW& System::Net::HttpWebRequest::dyn_initialMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_initialMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialMethod"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean pipelined
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_pipelined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_pipelined");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pipelined"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean preAuthenticate
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_preAuthenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_preAuthenticate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preAuthenticate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean usedPreAuth
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_usedPreAuth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_usedPreAuth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usedPreAuth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Version version
[[deprecated("Use field access instead!")]] ::System::Version*& System::Net::HttpWebRequest::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::System::Version**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean force_version
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_force_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_force_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "force_version"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Version actualVersion
[[deprecated("Use field access instead!")]] ::System::Version*& System::Net::HttpWebRequest::dyn_actualVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_actualVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "actualVersion"))->offset;
  return *reinterpret_cast<::System::Version**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IWebProxy proxy
[[deprecated("Use field access instead!")]] ::System::Net::IWebProxy*& System::Net::HttpWebRequest::dyn_proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "proxy"))->offset;
  return *reinterpret_cast<::System::Net::IWebProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean sendChunked
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_sendChunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_sendChunked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sendChunked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ServicePoint servicePoint
[[deprecated("Use field access instead!")]] ::System::Net::ServicePoint*& System::Net::HttpWebRequest::dyn_servicePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_servicePoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "servicePoint"))->offset;
  return *reinterpret_cast<::System::Net::ServicePoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 timeout
[[deprecated("Use field access instead!")]] int& System::Net::HttpWebRequest::dyn_timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_timeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeout"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 continueTimeout
[[deprecated("Use field access instead!")]] int& System::Net::HttpWebRequest::dyn_continueTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_continueTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "continueTimeout"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebRequestStream writeStream
[[deprecated("Use field access instead!")]] ::System::Net::WebRequestStream*& System::Net::HttpWebRequest::dyn_writeStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_writeStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeStream"))->offset;
  return *reinterpret_cast<::System::Net::WebRequestStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpWebResponse webResponse
[[deprecated("Use field access instead!")]] ::System::Net::HttpWebResponse*& System::Net::HttpWebRequest::dyn_webResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_webResponse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "webResponse"))->offset;
  return *reinterpret_cast<::System::Net::HttpWebResponse**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebCompletionSource responseTask
[[deprecated("Use field access instead!")]] ::System::Net::WebCompletionSource*& System::Net::HttpWebRequest::dyn_responseTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_responseTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "responseTask"))->offset;
  return *reinterpret_cast<::System::Net::WebCompletionSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebOperation currentOperation
[[deprecated("Use field access instead!")]] ::System::Net::WebOperation*& System::Net::HttpWebRequest::dyn_currentOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_currentOperation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentOperation"))->offset;
  return *reinterpret_cast<::System::Net::WebOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 aborted
[[deprecated("Use field access instead!")]] int& System::Net::HttpWebRequest::dyn_aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_aborted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aborted"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean gotRequestStream
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_gotRequestStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_gotRequestStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gotRequestStream"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 redirects
[[deprecated("Use field access instead!")]] int& System::Net::HttpWebRequest::dyn_redirects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_redirects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redirects"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean expectContinue
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_expectContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_expectContinue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expectContinue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean getResponseCalled
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_getResponseCalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_getResponseCalled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getResponseCalled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object locker
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::HttpWebRequest::dyn_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_locker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locker"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean finished_reading
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_finished_reading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_finished_reading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finished_reading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.DecompressionMethods auto_decomp
[[deprecated("Use field access instead!")]] ::System::Net::DecompressionMethods& System::Net::HttpWebRequest::dyn_auto_decomp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_auto_decomp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "auto_decomp"))->offset;
  return *reinterpret_cast<::System::Net::DecompressionMethods*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxResponseHeadersLength
[[deprecated("Use field access instead!")]] int& System::Net::HttpWebRequest::dyn_maxResponseHeadersLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_maxResponseHeadersLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxResponseHeadersLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 readWriteTimeout
[[deprecated("Use field access instead!")]] int& System::Net::HttpWebRequest::dyn_readWriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_readWriteTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readWriteTimeout"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.MobileTlsProvider tlsProvider
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileTlsProvider*& System::Net::HttpWebRequest::dyn_tlsProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_tlsProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tlsProvider"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileTlsProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.MonoTlsSettings tlsSettings
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsSettings*& System::Net::HttpWebRequest::dyn_tlsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_tlsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tlsSettings"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ServerCertValidationCallback certValidationCallback
[[deprecated("Use field access instead!")]] ::System::Net::ServerCertValidationCallback*& System::Net::HttpWebRequest::dyn_certValidationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_certValidationCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certValidationCallback"))->offset;
  return *reinterpret_cast<::System::Net::ServerCertValidationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hostHasPort
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_hostHasPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_hostHasPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hostHasPort"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri hostUri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::HttpWebRequest::dyn_hostUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_hostUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hostUri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpWebRequest/AuthorizationState auth_state
[[deprecated("Use field access instead!")]] ::System::Net::HttpWebRequest::AuthorizationState& System::Net::HttpWebRequest::dyn_auth_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_auth_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "auth_state"))->offset;
  return *reinterpret_cast<::System::Net::HttpWebRequest::AuthorizationState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpWebRequest/AuthorizationState proxy_auth_state
[[deprecated("Use field access instead!")]] ::System::Net::HttpWebRequest::AuthorizationState& System::Net::HttpWebRequest::dyn_proxy_auth_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_proxy_auth_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "proxy_auth_state"))->offset;
  return *reinterpret_cast<::System::Net::HttpWebRequest::AuthorizationState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Func`2<System.IO.Stream,System.Threading.Tasks.Task> ResendContentFactory
[[deprecated("Use field access instead!")]] ::System::Func_2<::System::IO::Stream*, ::System::Threading::Tasks::Task*>*& System::Net::HttpWebRequest::dyn_ResendContentFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_ResendContentFactory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ResendContentFactory"))->offset;
  return *reinterpret_cast<::System::Func_2<::System::IO::Stream*, ::System::Threading::Tasks::Task*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 ID
[[deprecated("Use field access instead!")]] int& System::Net::HttpWebRequest::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ThrowOnError>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_$ThrowOnError$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_$ThrowOnError$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ThrowOnError>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean unsafe_auth_blah
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_unsafe_auth_blah() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_unsafe_auth_blah");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unsafe_auth_blah"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ReuseConnection>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::dyn_$ReuseConnection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::dyn_$ReuseConnection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReuseConnection>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.HttpWebRequest.ResetAuthorization
void System::Net::HttpWebRequest::ResetAuthorization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::ResetAuthorization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetAuthorization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.SetSpecialHeaders
void System::Net::HttpWebRequest::SetSpecialHeaders(::StringW HeaderName, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::SetSpecialHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSpecialHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(HeaderName), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, HeaderName, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Accept
::StringW System::Net::HttpWebRequest::get_Accept() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_Accept
void System::Net::HttpWebRequest::set_Accept(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Address
::System::Uri* System::Net::HttpWebRequest::get_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_Address");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Address", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_Address
void System::Net::HttpWebRequest::set_Address(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_Address");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Address", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_AllowAutoRedirect
bool System::Net::HttpWebRequest::get_AllowAutoRedirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_AllowAutoRedirect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpWebRequest*), 41));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_AllowAutoRedirect
void System::Net::HttpWebRequest::set_AllowAutoRedirect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_AllowAutoRedirect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpWebRequest*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_AllowWriteStreamBuffering
bool System::Net::HttpWebRequest::get_AllowWriteStreamBuffering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_AllowWriteStreamBuffering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpWebRequest*), 43));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_AllowWriteStreamBuffering
void System::Net::HttpWebRequest::set_AllowWriteStreamBuffering(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_AllowWriteStreamBuffering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpWebRequest*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_AllowReadStreamBuffering
bool System::Net::HttpWebRequest::get_AllowReadStreamBuffering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_AllowReadStreamBuffering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpWebRequest*), 45));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_AllowReadStreamBuffering
void System::Net::HttpWebRequest::set_AllowReadStreamBuffering(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_AllowReadStreamBuffering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpWebRequest*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.GetMustImplement
::System::Exception* System::Net::HttpWebRequest::GetMustImplement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::GetMustImplement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpWebRequest", "GetMustImplement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_AutomaticDecompression
::System::Net::DecompressionMethods System::Net::HttpWebRequest::get_AutomaticDecompression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_AutomaticDecompression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutomaticDecompression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::DecompressionMethods, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_AutomaticDecompression
void System::Net::HttpWebRequest::set_AutomaticDecompression(::System::Net::DecompressionMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_AutomaticDecompression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AutomaticDecompression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_InternalAllowBuffering
bool System::Net::HttpWebRequest::get_InternalAllowBuffering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_InternalAllowBuffering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalAllowBuffering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_MethodWithBuffer
bool System::Net::HttpWebRequest::get_MethodWithBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_MethodWithBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodWithBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_TlsProvider
::Mono::Net::Security::MobileTlsProvider* System::Net::HttpWebRequest::get_TlsProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_TlsProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TlsProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::MobileTlsProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_TlsSettings
::Mono::Security::Interface::MonoTlsSettings* System::Net::HttpWebRequest::get_TlsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_TlsSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TlsSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ClientCertificates
::System::Security::Cryptography::X509Certificates::X509CertificateCollection* System::Net::HttpWebRequest::get_ClientCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_ClientCertificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_ClientCertificates
void System::Net::HttpWebRequest::set_ClientCertificates(::System::Security::Cryptography::X509Certificates::X509CertificateCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_ClientCertificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClientCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Connection
::StringW System::Net::HttpWebRequest::get_Connection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_Connection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Connection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_Connection
void System::Net::HttpWebRequest::set_Connection(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_Connection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Connection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.set_InternalContentLength
void System::Net::HttpWebRequest::set_InternalContentLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_InternalContentLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InternalContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ThrowOnError
bool System::Net::HttpWebRequest::get_ThrowOnError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_ThrowOnError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ThrowOnError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_ThrowOnError
void System::Net::HttpWebRequest::set_ThrowOnError(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_ThrowOnError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ThrowOnError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ContinueDelegate
::System::Net::HttpContinueDelegate* System::Net::HttpWebRequest::get_ContinueDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_ContinueDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContinueDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpContinueDelegate*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_ContinueDelegate
void System::Net::HttpWebRequest::set_ContinueDelegate(::System::Net::HttpContinueDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_ContinueDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContinueDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_CookieContainer
::System::Net::CookieContainer* System::Net::HttpWebRequest::get_CookieContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_CookieContainer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpWebRequest*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieContainer*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_CookieContainer
void System::Net::HttpWebRequest::set_CookieContainer(::System::Net::CookieContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_CookieContainer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpWebRequest*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Date
::System::DateTime System::Net::HttpWebRequest::get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_Date
void System::Net::HttpWebRequest::set_Date(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.SetDateHeaderHelper
void System::Net::HttpWebRequest::SetDateHeaderHelper(::StringW headerName, ::System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::SetDateHeaderHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDateHeaderHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headerName), ::il2cpp_utils::ExtractType(dateTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headerName, dateTime);
}
// Autogenerated method: System.Net.HttpWebRequest.get_DefaultMaximumErrorResponseLength
int System::Net::HttpWebRequest::get_DefaultMaximumErrorResponseLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_DefaultMaximumErrorResponseLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpWebRequest", "get_DefaultMaximumErrorResponseLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_DefaultMaximumErrorResponseLength
void System::Net::HttpWebRequest::set_DefaultMaximumErrorResponseLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_DefaultMaximumErrorResponseLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpWebRequest", "set_DefaultMaximumErrorResponseLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Expect
::StringW System::Net::HttpWebRequest::get_Expect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_Expect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Expect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_Expect
void System::Net::HttpWebRequest::set_Expect(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_Expect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Expect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_HaveResponse
bool System::Net::HttpWebRequest::get_HaveResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_HaveResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpWebRequest*), 49));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Host
::StringW System::Net::HttpWebRequest::get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_Host
void System::Net::HttpWebRequest::set_Host(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.TryGetHostUri
bool System::Net::HttpWebRequest::TryGetHostUri(::StringW hostName, ByRef<::System::Uri*> hostUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::TryGetHostUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetHostUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostName), ::il2cpp_utils::ExtractIndependentType<::System::Uri*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hostName, byref(hostUri));
}
// Autogenerated method: System.Net.HttpWebRequest.get_IfModifiedSince
::System::DateTime System::Net::HttpWebRequest::get_IfModifiedSince() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_IfModifiedSince");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IfModifiedSince", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_IfModifiedSince
void System::Net::HttpWebRequest::set_IfModifiedSince(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_IfModifiedSince");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IfModifiedSince", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_KeepAlive
bool System::Net::HttpWebRequest::get_KeepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_KeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_KeepAlive
void System::Net::HttpWebRequest::set_KeepAlive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_KeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_KeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_MaximumAutomaticRedirections
int System::Net::HttpWebRequest::get_MaximumAutomaticRedirections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_MaximumAutomaticRedirections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaximumAutomaticRedirections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_MaximumAutomaticRedirections
void System::Net::HttpWebRequest::set_MaximumAutomaticRedirections(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_MaximumAutomaticRedirections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaximumAutomaticRedirections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_MaximumResponseHeadersLength
int System::Net::HttpWebRequest::get_MaximumResponseHeadersLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_MaximumResponseHeadersLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaximumResponseHeadersLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_MaximumResponseHeadersLength
void System::Net::HttpWebRequest::set_MaximumResponseHeadersLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_MaximumResponseHeadersLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaximumResponseHeadersLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_DefaultMaximumResponseHeadersLength
int System::Net::HttpWebRequest::get_DefaultMaximumResponseHeadersLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_DefaultMaximumResponseHeadersLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpWebRequest", "get_DefaultMaximumResponseHeadersLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_DefaultMaximumResponseHeadersLength
void System::Net::HttpWebRequest::set_DefaultMaximumResponseHeadersLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_DefaultMaximumResponseHeadersLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpWebRequest", "set_DefaultMaximumResponseHeadersLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ReadWriteTimeout
int System::Net::HttpWebRequest::get_ReadWriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_ReadWriteTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadWriteTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_ReadWriteTimeout
void System::Net::HttpWebRequest::set_ReadWriteTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_ReadWriteTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReadWriteTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ContinueTimeout
int System::Net::HttpWebRequest::get_ContinueTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_ContinueTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContinueTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_ContinueTimeout
void System::Net::HttpWebRequest::set_ContinueTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_ContinueTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContinueTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_MediaType
::StringW System::Net::HttpWebRequest::get_MediaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_MediaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MediaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_MediaType
void System::Net::HttpWebRequest::set_MediaType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_MediaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MediaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Pipelined
bool System::Net::HttpWebRequest::get_Pipelined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_Pipelined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pipelined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_Pipelined
void System::Net::HttpWebRequest::set_Pipelined(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_Pipelined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pipelined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ProtocolVersion
::System::Version* System::Net::HttpWebRequest::get_ProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_ProtocolVersion
void System::Net::HttpWebRequest::set_ProtocolVersion(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Referer
::StringW System::Net::HttpWebRequest::get_Referer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_Referer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Referer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_Referer
void System::Net::HttpWebRequest::set_Referer(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_Referer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Referer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_SendChunked
bool System::Net::HttpWebRequest::get_SendChunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_SendChunked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendChunked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_SendChunked
void System::Net::HttpWebRequest::set_SendChunked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_SendChunked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendChunked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ServicePoint
::System::Net::ServicePoint* System::Net::HttpWebRequest::get_ServicePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_ServicePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServicePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ServicePoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ServicePointNoLock
::System::Net::ServicePoint* System::Net::HttpWebRequest::get_ServicePointNoLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_ServicePointNoLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServicePointNoLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ServicePoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_SupportsCookieContainer
bool System::Net::HttpWebRequest::get_SupportsCookieContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_SupportsCookieContainer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpWebRequest*), 50));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_TransferEncoding
::StringW System::Net::HttpWebRequest::get_TransferEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_TransferEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransferEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_TransferEncoding
void System::Net::HttpWebRequest::set_TransferEncoding(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_TransferEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TransferEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_UserAgent
::StringW System::Net::HttpWebRequest::get_UserAgent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_UserAgent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserAgent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_UserAgent
void System::Net::HttpWebRequest::set_UserAgent(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_UserAgent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserAgent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_UnsafeAuthenticatedConnectionSharing
bool System::Net::HttpWebRequest::get_UnsafeAuthenticatedConnectionSharing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_UnsafeAuthenticatedConnectionSharing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnsafeAuthenticatedConnectionSharing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_UnsafeAuthenticatedConnectionSharing
void System::Net::HttpWebRequest::set_UnsafeAuthenticatedConnectionSharing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_UnsafeAuthenticatedConnectionSharing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UnsafeAuthenticatedConnectionSharing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_GotRequestStream
bool System::Net::HttpWebRequest::get_GotRequestStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_GotRequestStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GotRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ExpectContinue
bool System::Net::HttpWebRequest::get_ExpectContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_ExpectContinue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectContinue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_ExpectContinue
void System::Net::HttpWebRequest::set_ExpectContinue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_ExpectContinue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExpectContinue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_AuthUri
::System::Uri* System::Net::HttpWebRequest::get_AuthUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_AuthUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ProxyQuery
bool System::Net::HttpWebRequest::get_ProxyQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_ProxyQuery");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProxyQuery", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ServerCertValidationCallback
::System::Net::ServerCertValidationCallback* System::Net::HttpWebRequest::get_ServerCertValidationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_ServerCertValidationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerCertValidationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ServerCertValidationCallback*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ServerCertificateValidationCallback
::System::Net::Security::RemoteCertificateValidationCallback* System::Net::HttpWebRequest::get_ServerCertificateValidationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_ServerCertificateValidationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerCertificateValidationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::RemoteCertificateValidationCallback*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_ServerCertificateValidationCallback
void System::Net::HttpWebRequest::set_ServerCertificateValidationCallback(::System::Net::Security::RemoteCertificateValidationCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_ServerCertificateValidationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ServerCertificateValidationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.GetServicePoint
::System::Net::ServicePoint* System::Net::HttpWebRequest::GetServicePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::GetServicePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServicePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ServicePoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.AddRange
void System::Net::HttpWebRequest::AddRange(int range) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AddRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(range)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, range);
}
// Autogenerated method: System.Net.HttpWebRequest.AddRange
void System::Net::HttpWebRequest::AddRange(int from, int to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AddRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to);
}
// Autogenerated method: System.Net.HttpWebRequest.AddRange
void System::Net::HttpWebRequest::AddRange(::StringW rangeSpecifier, int range) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AddRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rangeSpecifier), ::il2cpp_utils::ExtractType(range)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rangeSpecifier, range);
}
// Autogenerated method: System.Net.HttpWebRequest.AddRange
void System::Net::HttpWebRequest::AddRange(::StringW rangeSpecifier, int from, int to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AddRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rangeSpecifier), ::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rangeSpecifier, from, to);
}
// Autogenerated method: System.Net.HttpWebRequest.AddRange
void System::Net::HttpWebRequest::AddRange(int64_t range) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AddRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(range)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, range);
}
// Autogenerated method: System.Net.HttpWebRequest.AddRange
void System::Net::HttpWebRequest::AddRange(int64_t from, int64_t to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AddRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to);
}
// Autogenerated method: System.Net.HttpWebRequest.AddRange
void System::Net::HttpWebRequest::AddRange(::StringW rangeSpecifier, int64_t range) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AddRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rangeSpecifier), ::il2cpp_utils::ExtractType(range)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rangeSpecifier, range);
}
// Autogenerated method: System.Net.HttpWebRequest.AddRange
void System::Net::HttpWebRequest::AddRange(::StringW rangeSpecifier, int64_t from, int64_t to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AddRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rangeSpecifier), ::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rangeSpecifier, from, to);
}
// Autogenerated method: System.Net.HttpWebRequest.SendRequest
::System::Net::WebOperation* System::Net::HttpWebRequest::SendRequest(bool redirecting, ::System::Net::BufferOffsetSize* writeBuffer, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::SendRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(redirecting), ::il2cpp_utils::ExtractType(writeBuffer), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebOperation*, false>(this, ___internal__method, redirecting, writeBuffer, cancellationToken);
}
// Autogenerated method: System.Net.HttpWebRequest.MyGetRequestStreamAsync
::System::Threading::Tasks::Task_1<::System::IO::Stream*>* System::Net::HttpWebRequest::MyGetRequestStreamAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::MyGetRequestStreamAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MyGetRequestStreamAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::IO::Stream*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: System.Net.HttpWebRequest.GetRequestStream
::System::IO::Stream* System::Net::HttpWebRequest::GetRequestStream(ByRef<::System::Net::TransportContext*> context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::GetRequestStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Net::TransportContext*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, byref(context));
}
// Autogenerated method: System.Net.HttpWebRequest.MyGetResponseAsync
::System::Threading::Tasks::Task_1<::System::Net::HttpWebResponse*>* System::Net::HttpWebRequest::MyGetResponseAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::MyGetResponseAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MyGetResponseAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::HttpWebResponse*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: System.Net.HttpWebRequest.GetResponseFromData
::System::Threading::Tasks::Task_1<::System::ValueTuple_5<::System::Net::HttpWebResponse*, bool, bool, ::System::Net::BufferOffsetSize*, ::System::Net::WebOperation*>>* System::Net::HttpWebRequest::GetResponseFromData(::System::Net::WebResponseStream* stream, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::GetResponseFromData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponseFromData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::ValueTuple_5<::System::Net::HttpWebResponse*, bool, bool, ::System::Net::BufferOffsetSize*, ::System::Net::WebOperation*>>*, false>(this, ___internal__method, stream, cancellationToken);
}
// Autogenerated method: System.Net.HttpWebRequest.FlattenException
::System::Exception* System::Net::HttpWebRequest::FlattenException(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::FlattenException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpWebRequest", "FlattenException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: System.Net.HttpWebRequest.GetWebException
::System::Net::WebException* System::Net::HttpWebRequest::GetWebException(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::GetWebException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWebException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebException*, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Net.HttpWebRequest.GetWebException
::System::Net::WebException* System::Net::HttpWebRequest::GetWebException(::System::Exception* e, bool aborted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::GetWebException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpWebRequest", "GetWebException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(aborted)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e, aborted);
}
// Autogenerated method: System.Net.HttpWebRequest.CreateRequestAbortedException
::System::Net::WebException* System::Net::HttpWebRequest::CreateRequestAbortedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::CreateRequestAbortedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpWebRequest", "CreateRequestAbortedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.EndGetRequestStream
::System::IO::Stream* System::Net::HttpWebRequest::EndGetRequestStream(::System::IAsyncResult* asyncResult, ByRef<::System::Net::TransportContext*> context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::EndGetRequestStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndGetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult), ::il2cpp_utils::ExtractIndependentType<::System::Net::TransportContext*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, asyncResult, byref(context));
}
// Autogenerated method: System.Net.HttpWebRequest.get_FinishedReading
bool System::Net::HttpWebRequest::get_FinishedReading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_FinishedReading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FinishedReading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_FinishedReading
void System::Net::HttpWebRequest::set_FinishedReading(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_FinishedReading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FinishedReading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Aborted
bool System::Net::HttpWebRequest::get_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_Aborted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Aborted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::HttpWebRequest::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::HttpWebRequest*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.HttpWebRequest.CheckRequestStarted
void System::Net::HttpWebRequest::CheckRequestStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::CheckRequestStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRequestStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.DoContinueDelegate
void System::Net::HttpWebRequest::DoContinueDelegate(int statusCode, ::System::Net::WebHeaderCollection* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::DoContinueDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoContinueDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statusCode), ::il2cpp_utils::ExtractType(headers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, statusCode, headers);
}
// Autogenerated method: System.Net.HttpWebRequest.RewriteRedirectToGet
void System::Net::HttpWebRequest::RewriteRedirectToGet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::RewriteRedirectToGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RewriteRedirectToGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.Redirect
bool System::Net::HttpWebRequest::Redirect(::System::Net::HttpStatusCode code, ::System::Net::WebResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::Redirect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Redirect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, code, response);
}
// Autogenerated method: System.Net.HttpWebRequest.GetHeaders
::StringW System::Net::HttpWebRequest::GetHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::GetHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.DoPreAuthenticate
void System::Net::HttpWebRequest::DoPreAuthenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::DoPreAuthenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoPreAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.GetRequestHeaders
::ArrayW<uint8_t> System::Net::HttpWebRequest::GetRequestHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::GetRequestHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequestHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.HandleNtlmAuth
::System::ValueTuple_2<::System::Net::WebOperation*, bool> System::Net::HttpWebRequest::HandleNtlmAuth(::System::Net::WebResponseStream* stream, ::System::Net::HttpWebResponse* response, ::System::Net::BufferOffsetSize* writeBuffer, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::HandleNtlmAuth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNtlmAuth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(writeBuffer), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<::System::Net::WebOperation*, bool>, false>(this, ___internal__method, stream, response, writeBuffer, cancellationToken);
}
// Autogenerated method: System.Net.HttpWebRequest.CheckAuthorization
bool System::Net::HttpWebRequest::CheckAuthorization(::System::Net::WebResponse* response, ::System::Net::HttpStatusCode code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::CheckAuthorization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAuthorization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, response, code);
}
// Autogenerated method: System.Net.HttpWebRequest.GetRewriteHandler
::System::ValueTuple_2<::System::Threading::Tasks::Task_1<::System::Net::BufferOffsetSize*>*, ::System::Net::WebException*> System::Net::HttpWebRequest::GetRewriteHandler(::System::Net::HttpWebResponse* response, bool redirect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::GetRewriteHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRewriteHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(redirect)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<::System::Threading::Tasks::Task_1<::System::Net::BufferOffsetSize*>*, ::System::Net::WebException*>, false>(this, ___internal__method, response, redirect);
}
// Autogenerated method: System.Net.HttpWebRequest.CheckFinalStatus
::System::ValueTuple_4<bool, bool, ::System::Threading::Tasks::Task_1<::System::Net::BufferOffsetSize*>*, ::System::Net::WebException*> System::Net::HttpWebRequest::CheckFinalStatus(::System::Net::HttpWebResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::CheckFinalStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckFinalStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_4<bool, bool, ::System::Threading::Tasks::Task_1<::System::Net::BufferOffsetSize*>*, ::System::Net::WebException*>, false>(this, ___internal__method, response);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ReuseConnection
bool System::Net::HttpWebRequest::get_ReuseConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_ReuseConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReuseConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_ReuseConnection
void System::Net::HttpWebRequest::set_ReuseConnection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_ReuseConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReuseConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.GenerateConnectionGroup
::System::Text::StringBuilder* System::Net::HttpWebRequest::GenerateConnectionGroup(::StringW connectionGroupName, bool unsafeConnectionGroup, bool isInternalGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::GenerateConnectionGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpWebRequest", "GenerateConnectionGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionGroupName), ::il2cpp_utils::ExtractType(unsafeConnectionGroup), ::il2cpp_utils::ExtractType(isInternalGroup)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connectionGroupName, unsafeConnectionGroup, isInternalGroup);
}
// Autogenerated method: System.Net.HttpWebRequest.<GetRewriteHandler>b__271_0
::System::Threading::Tasks::Task_1<::System::Net::BufferOffsetSize*>* System::Net::HttpWebRequest::$GetRewriteHandler$b__271_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::<GetRewriteHandler>b__271_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetRewriteHandler>b__271_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::BufferOffsetSize*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest..cctor
void System::Net::HttpWebRequest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpWebRequest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ConnectionGroupName
::StringW System::Net::HttpWebRequest::get_ConnectionGroupName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_ConnectionGroupName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_ConnectionGroupName
void System::Net::HttpWebRequest::set_ConnectionGroupName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_ConnectionGroupName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ContentLength
int64_t System::Net::HttpWebRequest::get_ContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_ContentLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_ContentLength
void System::Net::HttpWebRequest::set_ContentLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_ContentLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_ContentType
::StringW System::Net::HttpWebRequest::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_ContentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_ContentType
void System::Net::HttpWebRequest::set_ContentType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_ContentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Credentials
::System::Net::ICredentials* System::Net::HttpWebRequest::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_Credentials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_Credentials
void System::Net::HttpWebRequest::set_Credentials(::System::Net::ICredentials* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_Credentials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Headers
::System::Net::WebHeaderCollection* System::Net::HttpWebRequest::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_Headers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebHeaderCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_Headers
void System::Net::HttpWebRequest::set_Headers(::System::Net::WebHeaderCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_Headers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Method
::StringW System::Net::HttpWebRequest::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_Method");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_Method
void System::Net::HttpWebRequest::set_Method(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_Method");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_PreAuthenticate
bool System::Net::HttpWebRequest::get_PreAuthenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_PreAuthenticate
void System::Net::HttpWebRequest::set_PreAuthenticate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Proxy
::System::Net::IWebProxy* System::Net::HttpWebRequest::get_Proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_Proxy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IWebProxy*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_Proxy
void System::Net::HttpWebRequest::set_Proxy(::System::Net::IWebProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_Proxy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_RequestUri
::System::Uri* System::Net::HttpWebRequest::get_RequestUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_RequestUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.get_Timeout
int System::Net::HttpWebRequest::get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_Timeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_Timeout
void System::Net::HttpWebRequest::set_Timeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_Timeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.get_UseDefaultCredentials
bool System::Net::HttpWebRequest::get_UseDefaultCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::get_UseDefaultCredentials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.set_UseDefaultCredentials
void System::Net::HttpWebRequest::set_UseDefaultCredentials(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::set_UseDefaultCredentials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HttpWebRequest.BeginGetRequestStream
::System::IAsyncResult* System::Net::HttpWebRequest::BeginGetRequestStream(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::BeginGetRequestStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.HttpWebRequest.EndGetRequestStream
::System::IO::Stream* System::Net::HttpWebRequest::EndGetRequestStream(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::EndGetRequestStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.HttpWebRequest.GetRequestStream
::System::IO::Stream* System::Net::HttpWebRequest::GetRequestStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::GetRequestStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.GetRequestStreamAsync
::System::Threading::Tasks::Task_1<::System::IO::Stream*>* System::Net::HttpWebRequest::GetRequestStreamAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::GetRequestStreamAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::IO::Stream*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.BeginGetResponse
::System::IAsyncResult* System::Net::HttpWebRequest::BeginGetResponse(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::BeginGetResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.HttpWebRequest.EndGetResponse
::System::Net::WebResponse* System::Net::HttpWebRequest::EndGetResponse(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::EndGetResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebResponse*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.HttpWebRequest.GetResponse
::System::Net::WebResponse* System::Net::HttpWebRequest::GetResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::GetResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebResponse*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.Abort
void System::Net::HttpWebRequest::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::Abort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest.GetObjectData
void System::Net::HttpWebRequest::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::WebRequest*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.HttpWebRequest/NtlmAuthState
#include "System/Net/HttpWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.HttpWebRequest/NtlmAuthState None
::System::Net::HttpWebRequest::NtlmAuthState System::Net::HttpWebRequest::NtlmAuthState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::NtlmAuthState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::HttpWebRequest::NtlmAuthState>("System.Net", "HttpWebRequest/NtlmAuthState", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.HttpWebRequest/NtlmAuthState None
void System::Net::HttpWebRequest::NtlmAuthState::_set_None(::System::Net::HttpWebRequest::NtlmAuthState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::NtlmAuthState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpWebRequest/NtlmAuthState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.HttpWebRequest/NtlmAuthState Challenge
::System::Net::HttpWebRequest::NtlmAuthState System::Net::HttpWebRequest::NtlmAuthState::_get_Challenge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::NtlmAuthState::_get_Challenge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::HttpWebRequest::NtlmAuthState>("System.Net", "HttpWebRequest/NtlmAuthState", "Challenge"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.HttpWebRequest/NtlmAuthState Challenge
void System::Net::HttpWebRequest::NtlmAuthState::_set_Challenge(::System::Net::HttpWebRequest::NtlmAuthState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::NtlmAuthState::_set_Challenge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpWebRequest/NtlmAuthState", "Challenge", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.HttpWebRequest/NtlmAuthState Response
::System::Net::HttpWebRequest::NtlmAuthState System::Net::HttpWebRequest::NtlmAuthState::_get_Response() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::NtlmAuthState::_get_Response");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::HttpWebRequest::NtlmAuthState>("System.Net", "HttpWebRequest/NtlmAuthState", "Response"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.HttpWebRequest/NtlmAuthState Response
void System::Net::HttpWebRequest::NtlmAuthState::_set_Response(::System::Net::HttpWebRequest::NtlmAuthState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::NtlmAuthState::_set_Response");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpWebRequest/NtlmAuthState", "Response", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::HttpWebRequest::NtlmAuthState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::NtlmAuthState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.HttpWebRequest/AuthorizationState
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Net.HttpWebRequest/NtlmAuthState
// Already included the same include: System/Net/HttpWebRequest.hpp
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
// Including type: System.Net.HttpStatusCode
#include "System/Net/HttpStatusCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.HttpWebRequest request
[[deprecated("Use field access instead!")]] ::System::Net::HttpWebRequest*& System::Net::HttpWebRequest::AuthorizationState::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AuthorizationState::dyn_request");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::System::Net::HttpWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean isProxy
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::AuthorizationState::dyn_isProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AuthorizationState::dyn_isProxy");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isProxy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isCompleted
[[deprecated("Use field access instead!")]] bool& System::Net::HttpWebRequest::AuthorizationState::dyn_isCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AuthorizationState::dyn_isCompleted");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isCompleted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpWebRequest/NtlmAuthState ntlm_auth_state
[[deprecated("Use field access instead!")]] ::System::Net::HttpWebRequest::NtlmAuthState& System::Net::HttpWebRequest::AuthorizationState::dyn_ntlm_auth_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AuthorizationState::dyn_ntlm_auth_state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ntlm_auth_state"))->offset;
  return *reinterpret_cast<::System::Net::HttpWebRequest::NtlmAuthState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.HttpWebRequest/AuthorizationState.get_IsCompleted
bool System::Net::HttpWebRequest::AuthorizationState::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AuthorizationState::get_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest/AuthorizationState.get_NtlmAuthState
::System::Net::HttpWebRequest::NtlmAuthState System::Net::HttpWebRequest::AuthorizationState::get_NtlmAuthState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AuthorizationState::get_NtlmAuthState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NtlmAuthState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpWebRequest::NtlmAuthState, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest/AuthorizationState.get_IsNtlmAuthenticated
bool System::Net::HttpWebRequest::AuthorizationState::get_IsNtlmAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AuthorizationState::get_IsNtlmAuthenticated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsNtlmAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest/AuthorizationState..ctor
System::Net::HttpWebRequest::AuthorizationState::AuthorizationState(::System::Net::HttpWebRequest* request, bool isProxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AuthorizationState::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(isProxy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, isProxy);
}
// Autogenerated method: System.Net.HttpWebRequest/AuthorizationState.CheckAuthorization
bool System::Net::HttpWebRequest::AuthorizationState::CheckAuthorization(::System::Net::WebResponse* response, ::System::Net::HttpStatusCode code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AuthorizationState::CheckAuthorization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckAuthorization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, response, code);
}
// Autogenerated method: System.Net.HttpWebRequest/AuthorizationState.Reset
void System::Net::HttpWebRequest::AuthorizationState::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AuthorizationState::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HttpWebRequest/AuthorizationState.ToString
::StringW System::Net::HttpWebRequest::AuthorizationState::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpWebRequest::AuthorizationState::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
