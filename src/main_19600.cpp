// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Internal.KeyNameMutator
#include "VYaml/Internal/KeyNameMutator.hpp"
// Including type: VYaml.Annotations.NamingConvention
#include "VYaml/Annotations/NamingConvention.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VYaml.Internal.KeyNameMutator.Mutate
::StringW VYaml::Internal::KeyNameMutator::Mutate(::StringW s, ::VYaml::Annotations::NamingConvention namingConvention) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::KeyNameMutator::Mutate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "KeyNameMutator", "Mutate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(namingConvention)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, namingConvention);
}
// Autogenerated method: VYaml.Internal.KeyNameMutator.ToLowerCamelCase
::StringW VYaml::Internal::KeyNameMutator::ToLowerCamelCase(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::KeyNameMutator::ToLowerCamelCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "KeyNameMutator", "ToLowerCamelCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: VYaml.Internal.KeyNameMutator.ToSnakeCase
::StringW VYaml::Internal::KeyNameMutator::ToSnakeCase(::StringW s, ::Il2CppChar separator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::KeyNameMutator::ToSnakeCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "KeyNameMutator", "ToSnakeCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(separator)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, separator);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Internal.LineBreakState
#include "VYaml/Internal/LineBreakState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VYaml.Internal.LineBreakState None
::VYaml::Internal::LineBreakState VYaml::Internal::LineBreakState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::LineBreakState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Internal::LineBreakState>("VYaml.Internal", "LineBreakState", "None"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Internal.LineBreakState None
void VYaml::Internal::LineBreakState::_set_None(::VYaml::Internal::LineBreakState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::LineBreakState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "LineBreakState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Internal.LineBreakState Lf
::VYaml::Internal::LineBreakState VYaml::Internal::LineBreakState::_get_Lf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::LineBreakState::_get_Lf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Internal::LineBreakState>("VYaml.Internal", "LineBreakState", "Lf"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Internal.LineBreakState Lf
void VYaml::Internal::LineBreakState::_set_Lf(::VYaml::Internal::LineBreakState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::LineBreakState::_set_Lf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "LineBreakState", "Lf", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Internal.LineBreakState CrLf
::VYaml::Internal::LineBreakState VYaml::Internal::LineBreakState::_get_CrLf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::LineBreakState::_get_CrLf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Internal::LineBreakState>("VYaml.Internal", "LineBreakState", "CrLf"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Internal.LineBreakState CrLf
void VYaml::Internal::LineBreakState::_set_CrLf(::VYaml::Internal::LineBreakState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::LineBreakState::_set_CrLf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "LineBreakState", "CrLf", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Internal.LineBreakState Cr
::VYaml::Internal::LineBreakState VYaml::Internal::LineBreakState::_get_Cr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::LineBreakState::_get_Cr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Internal::LineBreakState>("VYaml.Internal", "LineBreakState", "Cr"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Internal.LineBreakState Cr
void VYaml::Internal::LineBreakState::_set_Cr(::VYaml::Internal::LineBreakState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::LineBreakState::_set_Cr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "LineBreakState", "Cr", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VYaml::Internal::LineBreakState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::LineBreakState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Internal.ReusableByteSequenceBuilderPool
#include "VYaml/Internal/ReusableByteSequenceBuilderPool.hpp"
// Including type: System.Collections.Concurrent.ConcurrentQueue`1
#include "System/Collections/Concurrent/ConcurrentQueue_1.hpp"
// Including type: VYaml.Internal.ReusableByteSequenceBuilder
#include "VYaml/Internal/ReusableByteSequenceBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Concurrent.ConcurrentQueue`1<VYaml.Internal.ReusableByteSequenceBuilder> queue
::System::Collections::Concurrent::ConcurrentQueue_1<::VYaml::Internal::ReusableByteSequenceBuilder*>* VYaml::Internal::ReusableByteSequenceBuilderPool::_get_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::ReusableByteSequenceBuilderPool::_get_queue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Concurrent::ConcurrentQueue_1<::VYaml::Internal::ReusableByteSequenceBuilder*>*>("VYaml.Internal", "ReusableByteSequenceBuilderPool", "queue"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Concurrent.ConcurrentQueue`1<VYaml.Internal.ReusableByteSequenceBuilder> queue
void VYaml::Internal::ReusableByteSequenceBuilderPool::_set_queue(::System::Collections::Concurrent::ConcurrentQueue_1<::VYaml::Internal::ReusableByteSequenceBuilder*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::ReusableByteSequenceBuilderPool::_set_queue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "ReusableByteSequenceBuilderPool", "queue", value));
}
// Autogenerated method: VYaml.Internal.ReusableByteSequenceBuilderPool.Rent
::VYaml::Internal::ReusableByteSequenceBuilder* VYaml::Internal::ReusableByteSequenceBuilderPool::Rent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::ReusableByteSequenceBuilderPool::Rent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "ReusableByteSequenceBuilderPool", "Rent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Internal::ReusableByteSequenceBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VYaml.Internal.ReusableByteSequenceBuilderPool.Return
void VYaml::Internal::ReusableByteSequenceBuilderPool::Return(::VYaml::Internal::ReusableByteSequenceBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::ReusableByteSequenceBuilderPool::Return");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "ReusableByteSequenceBuilderPool", "Return", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder);
}
// Autogenerated method: VYaml.Internal.ReusableByteSequenceBuilderPool..cctor
void VYaml::Internal::ReusableByteSequenceBuilderPool::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::ReusableByteSequenceBuilderPool::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "ReusableByteSequenceBuilderPool", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Internal.ReusableByteSequenceSegment
#include "VYaml/Internal/ReusableByteSequenceSegment.hpp"
// Including type: System.ReadOnlyMemory`1
#include "System/ReadOnlyMemory_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean returnToPool
[[deprecated("Use field access instead!")]] bool& VYaml::Internal::ReusableByteSequenceSegment::dyn_returnToPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::ReusableByteSequenceSegment::dyn_returnToPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "returnToPool"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Internal.ReusableByteSequenceSegment.SetBuffer
void VYaml::Internal::ReusableByteSequenceSegment::SetBuffer(::System::ReadOnlyMemory_1<uint8_t> buffer, bool returnToPool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::ReusableByteSequenceSegment::SetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(returnToPool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, returnToPool);
}
// Autogenerated method: VYaml.Internal.ReusableByteSequenceSegment.Reset
void VYaml::Internal::ReusableByteSequenceSegment::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::ReusableByteSequenceSegment::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Internal.ReusableByteSequenceSegment.SetRunningIndexAndNext
void VYaml::Internal::ReusableByteSequenceSegment::SetRunningIndexAndNext(int64_t runningIndex, ::VYaml::Internal::ReusableByteSequenceSegment* nextSegment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::ReusableByteSequenceSegment::SetRunningIndexAndNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRunningIndexAndNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runningIndex), ::il2cpp_utils::ExtractType(nextSegment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runningIndex, nextSegment);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Internal.ReusableByteSequenceBuilder
#include "VYaml/Internal/ReusableByteSequenceBuilder.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: VYaml.Internal.ReusableByteSequenceSegment
#include "VYaml/Internal/ReusableByteSequenceSegment.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.ReadOnlyMemory`1
#include "System/ReadOnlyMemory_1.hpp"
// Including type: System.Buffers.ReadOnlySequence`1
#include "System/Buffers/ReadOnlySequence_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Stack`1<VYaml.Internal.ReusableByteSequenceSegment> segmentPool
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::VYaml::Internal::ReusableByteSequenceSegment*>*& VYaml::Internal::ReusableByteSequenceBuilder::dyn_segmentPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::ReusableByteSequenceBuilder::dyn_segmentPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "segmentPool"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::VYaml::Internal::ReusableByteSequenceSegment*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<VYaml.Internal.ReusableByteSequenceSegment> segments
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VYaml::Internal::ReusableByteSequenceSegment*>*& VYaml::Internal::ReusableByteSequenceBuilder::dyn_segments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::ReusableByteSequenceBuilder::dyn_segments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "segments"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VYaml::Internal::ReusableByteSequenceSegment*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Internal.ReusableByteSequenceBuilder.Add
void VYaml::Internal::ReusableByteSequenceBuilder::Add(::System::ReadOnlyMemory_1<uint8_t> buffer, bool returnToPool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::ReusableByteSequenceBuilder::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(returnToPool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, returnToPool);
}
// Autogenerated method: VYaml.Internal.ReusableByteSequenceBuilder.TryGetSingleMemory
bool VYaml::Internal::ReusableByteSequenceBuilder::TryGetSingleMemory(ByRef<::System::ReadOnlyMemory_1<uint8_t>> memory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::ReusableByteSequenceBuilder::TryGetSingleMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetSingleMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::ReadOnlyMemory_1<uint8_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(memory));
}
// Autogenerated method: VYaml.Internal.ReusableByteSequenceBuilder.Build
::System::Buffers::ReadOnlySequence_1<uint8_t> VYaml::Internal::ReusableByteSequenceBuilder::Build() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::ReusableByteSequenceBuilder::Build");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Build", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Buffers::ReadOnlySequence_1<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Internal.ReusableByteSequenceBuilder.Reset
void VYaml::Internal::ReusableByteSequenceBuilder::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::ReusableByteSequenceBuilder::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Internal.StreamHelper
#include "VYaml/Internal/StreamHelper.hpp"
// Including type: VYaml.Internal.StreamHelper/<ReadAsSequenceAsync>d__0
#include "VYaml/Internal/StreamHelper_-ReadAsSequenceAsync-d__0.hpp"
// Including type: System.Threading.Tasks.ValueTask`1
#include "System/Threading/Tasks/ValueTask_1.hpp"
// Including type: VYaml.Internal.ReusableByteSequenceBuilder
#include "VYaml/Internal/ReusableByteSequenceBuilder.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 ArrayMexLength
int VYaml::Internal::StreamHelper::_get_ArrayMexLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::StreamHelper::_get_ArrayMexLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("VYaml.Internal", "StreamHelper", "ArrayMexLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ArrayMexLength
void VYaml::Internal::StreamHelper::_set_ArrayMexLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::StreamHelper::_set_ArrayMexLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "StreamHelper", "ArrayMexLength", value));
}
// Autogenerated method: VYaml.Internal.StreamHelper.ReadAsSequenceAsync
::System::Threading::Tasks::ValueTask_1<::VYaml::Internal::ReusableByteSequenceBuilder*> VYaml::Internal::StreamHelper::ReadAsSequenceAsync(::System::IO::Stream* stream, ::System::Threading::CancellationToken cancellation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::StreamHelper::ReadAsSequenceAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "StreamHelper", "ReadAsSequenceAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(cancellation)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::ValueTask_1<::VYaml::Internal::ReusableByteSequenceBuilder*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, cancellation);
}
// Autogenerated method: VYaml.Internal.StreamHelper.NewArrayCapacity
int VYaml::Internal::StreamHelper::NewArrayCapacity(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::StreamHelper::NewArrayCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "StreamHelper", "NewArrayCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Internal.StreamHelper/<ReadAsSequenceAsync>d__0
#include "VYaml/Internal/StreamHelper_-ReadAsSequenceAsync-d__0.hpp"
// Including type: VYaml.Internal.ReusableByteSequenceBuilder
#include "VYaml/Internal/ReusableByteSequenceBuilder.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1<VYaml.Internal.ReusableByteSequenceBuilder> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncValueTaskMethodBuilder_1<::VYaml::Internal::ReusableByteSequenceBuilder*>& VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncValueTaskMethodBuilder_1<::VYaml::Internal::ReusableByteSequenceBuilder*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.Stream stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::dyn_stream");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellation
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::dyn_cancellation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::dyn_cancellation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellation"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VYaml.Internal.ReusableByteSequenceBuilder <builder>5__2
[[deprecated("Use field access instead!")]] ::VYaml::Internal::ReusableByteSequenceBuilder*& VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::dyn_$builder$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::dyn_$builder$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<builder>5__2"))->offset;
  return *reinterpret_cast<::VYaml::Internal::ReusableByteSequenceBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <buffer>5__3
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::dyn_$buffer$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::dyn_$buffer$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<buffer>5__3"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <offset>5__4
[[deprecated("Use field access instead!")]] int& VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::dyn_$offset$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::dyn_$offset$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<offset>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1/ConfiguredValueTaskAwaiter<System.Int32> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable_1<int>::ConfiguredValueTaskAwaiter& VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable_1<int>::ConfiguredValueTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Internal.StreamHelper/<ReadAsSequenceAsync>d__0.MoveNext
void VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Internal.StreamHelper/<ReadAsSequenceAsync>d__0.SetStateMachine
void VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VYaml::Internal::StreamHelper::$ReadAsSequenceAsync$d__0), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Internal.StringEncoding
#include "VYaml/Internal/StringEncoding.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Text.Encoding Utf8
::System::Text::Encoding* VYaml::Internal::StringEncoding::_get_Utf8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::StringEncoding::_get_Utf8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("VYaml.Internal", "StringEncoding", "Utf8"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Text.Encoding Utf8
void VYaml::Internal::StringEncoding::_set_Utf8(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::StringEncoding::_set_Utf8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "StringEncoding", "Utf8", value));
}
// Autogenerated method: VYaml.Internal.StringEncoding..cctor
void VYaml::Internal::StringEncoding::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::StringEncoding::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "StringEncoding", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Internal.TypeHelper
#include "VYaml/Internal/TypeHelper.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VYaml.Internal.TypeHelper.IsAnonymous
bool VYaml::Internal::TypeHelper::IsAnonymous(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::TypeHelper::IsAnonymous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "TypeHelper", "IsAnonymous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Internal.YamlCodes
#include "VYaml/Internal/YamlCodes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] YamlDirectiveName
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_YamlDirectiveName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_YamlDirectiveName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "YamlDirectiveName"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] YamlDirectiveName
void VYaml::Internal::YamlCodes::_set_YamlDirectiveName(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_YamlDirectiveName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "YamlDirectiveName", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] TagDirectiveName
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_TagDirectiveName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_TagDirectiveName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "TagDirectiveName"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] TagDirectiveName
void VYaml::Internal::YamlCodes::_set_TagDirectiveName(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_TagDirectiveName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "TagDirectiveName", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Utf8Bom
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Utf8Bom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Utf8Bom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Utf8Bom"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Utf8Bom
void VYaml::Internal::YamlCodes::_set_Utf8Bom(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Utf8Bom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Utf8Bom", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] StreamStart
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_StreamStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_StreamStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "StreamStart"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] StreamStart
void VYaml::Internal::YamlCodes::_set_StreamStart(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_StreamStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "StreamStart", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] DocStart
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_DocStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_DocStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "DocStart"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] DocStart
void VYaml::Internal::YamlCodes::_set_DocStart(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_DocStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "DocStart", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] CrLf
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_CrLf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_CrLf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "CrLf"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] CrLf
void VYaml::Internal::YamlCodes::_set_CrLf(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_CrLf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "CrLf", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Null0
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Null0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Null0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Null0"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Null0
void VYaml::Internal::YamlCodes::_set_Null0(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Null0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Null0", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Null1
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Null1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Null1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Null1"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Null1
void VYaml::Internal::YamlCodes::_set_Null1(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Null1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Null1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Null2
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Null2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Null2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Null2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Null2
void VYaml::Internal::YamlCodes::_set_Null2(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Null2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Null2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte NullAlias
uint8_t VYaml::Internal::YamlCodes::_get_NullAlias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_NullAlias");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "NullAlias"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte NullAlias
void VYaml::Internal::YamlCodes::_set_NullAlias(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_NullAlias");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "NullAlias", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] True0
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_True0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_True0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "True0"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] True0
void VYaml::Internal::YamlCodes::_set_True0(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_True0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "True0", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] True1
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_True1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_True1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "True1"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] True1
void VYaml::Internal::YamlCodes::_set_True1(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_True1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "True1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] True2
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_True2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_True2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "True2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] True2
void VYaml::Internal::YamlCodes::_set_True2(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_True2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "True2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] False0
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_False0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_False0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "False0"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] False0
void VYaml::Internal::YamlCodes::_set_False0(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_False0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "False0", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] False1
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_False1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_False1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "False1"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] False1
void VYaml::Internal::YamlCodes::_set_False1(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_False1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "False1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] False2
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_False2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_False2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "False2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] False2
void VYaml::Internal::YamlCodes::_set_False2(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_False2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "False2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Inf0
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Inf0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Inf0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Inf0"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Inf0
void VYaml::Internal::YamlCodes::_set_Inf0(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Inf0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Inf0", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Inf1
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Inf1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Inf1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Inf1"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Inf1
void VYaml::Internal::YamlCodes::_set_Inf1(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Inf1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Inf1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Inf2
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Inf2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Inf2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Inf2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Inf2
void VYaml::Internal::YamlCodes::_set_Inf2(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Inf2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Inf2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Inf3
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Inf3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Inf3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Inf3"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Inf3
void VYaml::Internal::YamlCodes::_set_Inf3(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Inf3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Inf3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Inf4
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Inf4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Inf4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Inf4"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Inf4
void VYaml::Internal::YamlCodes::_set_Inf4(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Inf4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Inf4", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Inf5
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Inf5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Inf5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Inf5"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Inf5
void VYaml::Internal::YamlCodes::_set_Inf5(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Inf5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Inf5", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Yes0
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Yes0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Yes0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Yes0"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Yes0
void VYaml::Internal::YamlCodes::_set_Yes0(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Yes0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Yes0", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Yes1
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Yes1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Yes1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Yes1"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Yes1
void VYaml::Internal::YamlCodes::_set_Yes1(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Yes1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Yes1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Yes2
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Yes2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Yes2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Yes2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Yes2
void VYaml::Internal::YamlCodes::_set_Yes2(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Yes2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Yes2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] No0
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_No0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_No0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "No0"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] No0
void VYaml::Internal::YamlCodes::_set_No0(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_No0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "No0", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] No1
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_No1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_No1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "No1"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] No1
void VYaml::Internal::YamlCodes::_set_No1(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_No1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "No1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] No2
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_No2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_No2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "No2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] No2
void VYaml::Internal::YamlCodes::_set_No2(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_No2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "No2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] On0
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_On0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_On0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "On0"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] On0
void VYaml::Internal::YamlCodes::_set_On0(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_On0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "On0", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] On1
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_On1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_On1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "On1"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] On1
void VYaml::Internal::YamlCodes::_set_On1(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_On1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "On1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] On2
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_On2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_On2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "On2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] On2
void VYaml::Internal::YamlCodes::_set_On2(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_On2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "On2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Off0
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Off0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Off0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Off0"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Off0
void VYaml::Internal::YamlCodes::_set_Off0(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Off0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Off0", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Off1
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Off1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Off1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Off1"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Off1
void VYaml::Internal::YamlCodes::_set_Off1(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Off1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Off1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Off2
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Off2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Off2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Off2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Off2
void VYaml::Internal::YamlCodes::_set_Off2(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Off2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Off2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] NegInf0
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_NegInf0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_NegInf0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "NegInf0"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] NegInf0
void VYaml::Internal::YamlCodes::_set_NegInf0(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_NegInf0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "NegInf0", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] NegInf1
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_NegInf1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_NegInf1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "NegInf1"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] NegInf1
void VYaml::Internal::YamlCodes::_set_NegInf1(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_NegInf1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "NegInf1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] NegInf2
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_NegInf2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_NegInf2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "NegInf2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] NegInf2
void VYaml::Internal::YamlCodes::_set_NegInf2(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_NegInf2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "NegInf2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Nan0
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Nan0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Nan0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Nan0"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Nan0
void VYaml::Internal::YamlCodes::_set_Nan0(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Nan0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Nan0", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Nan1
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Nan1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Nan1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Nan1"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Nan1
void VYaml::Internal::YamlCodes::_set_Nan1(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Nan1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Nan1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] Nan2
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_Nan2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Nan2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "Nan2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] Nan2
void VYaml::Internal::YamlCodes::_set_Nan2(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Nan2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Nan2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] HexPrefix
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_HexPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_HexPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "HexPrefix"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] HexPrefix
void VYaml::Internal::YamlCodes::_set_HexPrefix(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_HexPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "HexPrefix", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] HexPrefixNegative
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_HexPrefixNegative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_HexPrefixNegative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "HexPrefixNegative"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] HexPrefixNegative
void VYaml::Internal::YamlCodes::_set_HexPrefixNegative(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_HexPrefixNegative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "HexPrefixNegative", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] OctalPrefix
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_OctalPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_OctalPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "OctalPrefix"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] OctalPrefix
void VYaml::Internal::YamlCodes::_set_OctalPrefix(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_OctalPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "OctalPrefix", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] UnityStrippedSymbol
::ArrayW<uint8_t> VYaml::Internal::YamlCodes::_get_UnityStrippedSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_UnityStrippedSymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Internal", "YamlCodes", "UnityStrippedSymbol"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] UnityStrippedSymbol
void VYaml::Internal::YamlCodes::_set_UnityStrippedSymbol(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_UnityStrippedSymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "UnityStrippedSymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Space
uint8_t VYaml::Internal::YamlCodes::_get_Space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Space");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "Space"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Space
void VYaml::Internal::YamlCodes::_set_Space(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Space");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Space", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Tab
uint8_t VYaml::Internal::YamlCodes::_get_Tab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Tab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "Tab"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Tab
void VYaml::Internal::YamlCodes::_set_Tab(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Tab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Tab", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Lf
uint8_t VYaml::Internal::YamlCodes::_get_Lf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Lf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "Lf"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Lf
void VYaml::Internal::YamlCodes::_set_Lf(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Lf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Lf", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Cr
uint8_t VYaml::Internal::YamlCodes::_get_Cr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Cr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "Cr"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Cr
void VYaml::Internal::YamlCodes::_set_Cr(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Cr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Cr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Comment
uint8_t VYaml::Internal::YamlCodes::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Comment
void VYaml::Internal::YamlCodes::_set_Comment(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte DirectiveLine
uint8_t VYaml::Internal::YamlCodes::_get_DirectiveLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_DirectiveLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "DirectiveLine"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte DirectiveLine
void VYaml::Internal::YamlCodes::_set_DirectiveLine(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_DirectiveLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "DirectiveLine", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Alias
uint8_t VYaml::Internal::YamlCodes::_get_Alias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Alias");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "Alias"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Alias
void VYaml::Internal::YamlCodes::_set_Alias(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Alias");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Alias", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Anchor
uint8_t VYaml::Internal::YamlCodes::_get_Anchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Anchor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "Anchor"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Anchor
void VYaml::Internal::YamlCodes::_set_Anchor(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Anchor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Anchor", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Tag
uint8_t VYaml::Internal::YamlCodes::_get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Tag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "Tag"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Tag
void VYaml::Internal::YamlCodes::_set_Tag(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Tag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Tag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SingleQuote
uint8_t VYaml::Internal::YamlCodes::_get_SingleQuote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_SingleQuote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "SingleQuote"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SingleQuote
void VYaml::Internal::YamlCodes::_set_SingleQuote(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_SingleQuote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "SingleQuote", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte DoubleQuote
uint8_t VYaml::Internal::YamlCodes::_get_DoubleQuote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_DoubleQuote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "DoubleQuote"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte DoubleQuote
void VYaml::Internal::YamlCodes::_set_DoubleQuote(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_DoubleQuote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "DoubleQuote", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte LiteralScalerHeader
uint8_t VYaml::Internal::YamlCodes::_get_LiteralScalerHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_LiteralScalerHeader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "LiteralScalerHeader"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte LiteralScalerHeader
void VYaml::Internal::YamlCodes::_set_LiteralScalerHeader(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_LiteralScalerHeader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "LiteralScalerHeader", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte FoldedScalerHeader
uint8_t VYaml::Internal::YamlCodes::_get_FoldedScalerHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_FoldedScalerHeader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "FoldedScalerHeader"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte FoldedScalerHeader
void VYaml::Internal::YamlCodes::_set_FoldedScalerHeader(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_FoldedScalerHeader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "FoldedScalerHeader", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Comma
uint8_t VYaml::Internal::YamlCodes::_get_Comma() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_Comma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "Comma"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Comma
void VYaml::Internal::YamlCodes::_set_Comma(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_Comma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "Comma", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte BlockEntryIndent
uint8_t VYaml::Internal::YamlCodes::_get_BlockEntryIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_BlockEntryIndent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "BlockEntryIndent"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte BlockEntryIndent
void VYaml::Internal::YamlCodes::_set_BlockEntryIndent(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_BlockEntryIndent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "BlockEntryIndent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ExplicitKeyIndent
uint8_t VYaml::Internal::YamlCodes::_get_ExplicitKeyIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_ExplicitKeyIndent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "ExplicitKeyIndent"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ExplicitKeyIndent
void VYaml::Internal::YamlCodes::_set_ExplicitKeyIndent(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_ExplicitKeyIndent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "ExplicitKeyIndent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte MapValueIndent
uint8_t VYaml::Internal::YamlCodes::_get_MapValueIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_MapValueIndent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "MapValueIndent"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte MapValueIndent
void VYaml::Internal::YamlCodes::_set_MapValueIndent(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_MapValueIndent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "MapValueIndent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte FlowMapStart
uint8_t VYaml::Internal::YamlCodes::_get_FlowMapStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_FlowMapStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "FlowMapStart"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte FlowMapStart
void VYaml::Internal::YamlCodes::_set_FlowMapStart(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_FlowMapStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "FlowMapStart", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte FlowMapEnd
uint8_t VYaml::Internal::YamlCodes::_get_FlowMapEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_FlowMapEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "FlowMapEnd"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte FlowMapEnd
void VYaml::Internal::YamlCodes::_set_FlowMapEnd(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_FlowMapEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "FlowMapEnd", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte FlowSequenceStart
uint8_t VYaml::Internal::YamlCodes::_get_FlowSequenceStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_FlowSequenceStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "FlowSequenceStart"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte FlowSequenceStart
void VYaml::Internal::YamlCodes::_set_FlowSequenceStart(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_FlowSequenceStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "FlowSequenceStart", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte FlowSequenceEnd
uint8_t VYaml::Internal::YamlCodes::_get_FlowSequenceEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_get_FlowSequenceEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("VYaml.Internal", "YamlCodes", "FlowSequenceEnd"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte FlowSequenceEnd
void VYaml::Internal::YamlCodes::_set_FlowSequenceEnd(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::_set_FlowSequenceEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "YamlCodes", "FlowSequenceEnd", value));
}
// Autogenerated method: VYaml.Internal.YamlCodes.IsAlphaNumericDashOrUnderscore
bool VYaml::Internal::YamlCodes::IsAlphaNumericDashOrUnderscore(uint8_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::IsAlphaNumericDashOrUnderscore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "YamlCodes", "IsAlphaNumericDashOrUnderscore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: VYaml.Internal.YamlCodes.IsWordChar
bool VYaml::Internal::YamlCodes::IsWordChar(uint8_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::IsWordChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "YamlCodes", "IsWordChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: VYaml.Internal.YamlCodes.IsUriChar
bool VYaml::Internal::YamlCodes::IsUriChar(uint8_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::IsUriChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "YamlCodes", "IsUriChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: VYaml.Internal.YamlCodes.IsTagChar
bool VYaml::Internal::YamlCodes::IsTagChar(uint8_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::IsTagChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "YamlCodes", "IsTagChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: VYaml.Internal.YamlCodes.IsAscii
bool VYaml::Internal::YamlCodes::IsAscii(uint8_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::IsAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "YamlCodes", "IsAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: VYaml.Internal.YamlCodes.IsNumber
bool VYaml::Internal::YamlCodes::IsNumber(uint8_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::IsNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "YamlCodes", "IsNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: VYaml.Internal.YamlCodes.IsEmpty
bool VYaml::Internal::YamlCodes::IsEmpty(uint8_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "YamlCodes", "IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: VYaml.Internal.YamlCodes.IsLineBreak
bool VYaml::Internal::YamlCodes::IsLineBreak(uint8_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::IsLineBreak");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "YamlCodes", "IsLineBreak", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: VYaml.Internal.YamlCodes.IsBlank
bool VYaml::Internal::YamlCodes::IsBlank(uint8_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::IsBlank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "YamlCodes", "IsBlank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: VYaml.Internal.YamlCodes.IsNumberRepresentation
bool VYaml::Internal::YamlCodes::IsNumberRepresentation(uint8_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::IsNumberRepresentation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "YamlCodes", "IsNumberRepresentation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: VYaml.Internal.YamlCodes.IsHex
bool VYaml::Internal::YamlCodes::IsHex(uint8_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::IsHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "YamlCodes", "IsHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: VYaml.Internal.YamlCodes.IsAnyFlowSymbol
bool VYaml::Internal::YamlCodes::IsAnyFlowSymbol(uint8_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::IsAnyFlowSymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "YamlCodes", "IsAnyFlowSymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: VYaml.Internal.YamlCodes.AsHex
uint8_t VYaml::Internal::YamlCodes::AsHex(uint8_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::AsHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "YamlCodes", "AsHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: VYaml.Internal.YamlCodes..cctor
void VYaml::Internal::YamlCodes::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::YamlCodes::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "YamlCodes", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Emitter.YamlEmitterException
#include "VYaml/Emitter/YamlEmitterException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Emitter.EmitState
#include "VYaml/Emitter/EmitState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VYaml.Emitter.EmitState None
::VYaml::Emitter::EmitState VYaml::Emitter::EmitState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::EmitState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Emitter::EmitState>("VYaml.Emitter", "EmitState", "None"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Emitter.EmitState None
void VYaml::Emitter::EmitState::_set_None(::VYaml::Emitter::EmitState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::EmitState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "EmitState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Emitter.EmitState BlockSequenceEntry
::VYaml::Emitter::EmitState VYaml::Emitter::EmitState::_get_BlockSequenceEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::EmitState::_get_BlockSequenceEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Emitter::EmitState>("VYaml.Emitter", "EmitState", "BlockSequenceEntry"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Emitter.EmitState BlockSequenceEntry
void VYaml::Emitter::EmitState::_set_BlockSequenceEntry(::VYaml::Emitter::EmitState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::EmitState::_set_BlockSequenceEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "EmitState", "BlockSequenceEntry", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Emitter.EmitState BlockMappingKey
::VYaml::Emitter::EmitState VYaml::Emitter::EmitState::_get_BlockMappingKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::EmitState::_get_BlockMappingKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Emitter::EmitState>("VYaml.Emitter", "EmitState", "BlockMappingKey"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Emitter.EmitState BlockMappingKey
void VYaml::Emitter::EmitState::_set_BlockMappingKey(::VYaml::Emitter::EmitState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::EmitState::_set_BlockMappingKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "EmitState", "BlockMappingKey", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Emitter.EmitState BlockMappingValue
::VYaml::Emitter::EmitState VYaml::Emitter::EmitState::_get_BlockMappingValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::EmitState::_get_BlockMappingValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Emitter::EmitState>("VYaml.Emitter", "EmitState", "BlockMappingValue"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Emitter.EmitState BlockMappingValue
void VYaml::Emitter::EmitState::_set_BlockMappingValue(::VYaml::Emitter::EmitState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::EmitState::_set_BlockMappingValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "EmitState", "BlockMappingValue", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Emitter.EmitState FlowSequenceEntry
::VYaml::Emitter::EmitState VYaml::Emitter::EmitState::_get_FlowSequenceEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::EmitState::_get_FlowSequenceEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Emitter::EmitState>("VYaml.Emitter", "EmitState", "FlowSequenceEntry"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Emitter.EmitState FlowSequenceEntry
void VYaml::Emitter::EmitState::_set_FlowSequenceEntry(::VYaml::Emitter::EmitState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::EmitState::_set_FlowSequenceEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "EmitState", "FlowSequenceEntry", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Emitter.EmitState FlowMappingKey
::VYaml::Emitter::EmitState VYaml::Emitter::EmitState::_get_FlowMappingKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::EmitState::_get_FlowMappingKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Emitter::EmitState>("VYaml.Emitter", "EmitState", "FlowMappingKey"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Emitter.EmitState FlowMappingKey
void VYaml::Emitter::EmitState::_set_FlowMappingKey(::VYaml::Emitter::EmitState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::EmitState::_set_FlowMappingKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "EmitState", "FlowMappingKey", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Emitter.EmitState FlowMappingValue
::VYaml::Emitter::EmitState VYaml::Emitter::EmitState::_get_FlowMappingValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::EmitState::_get_FlowMappingValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Emitter::EmitState>("VYaml.Emitter", "EmitState", "FlowMappingValue"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Emitter.EmitState FlowMappingValue
void VYaml::Emitter::EmitState::_set_FlowMappingValue(::VYaml::Emitter::EmitState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::EmitState::_set_FlowMappingValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "EmitState", "FlowMappingValue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VYaml::Emitter::EmitState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::EmitState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Emitter.Utf8YamlEmitter
#include "VYaml/Emitter/Utf8YamlEmitter.hpp"
// Including type: System.Buffers.IBufferWriter`1
#include "System/Buffers/IBufferWriter_1.hpp"
// Including type: VYaml.Emitter.YamlEmitOptions
#include "VYaml/Emitter/YamlEmitOptions.hpp"
// Including type: VYaml.Internal.ExpandBuffer`1
#include "VYaml/Internal/ExpandBuffer_1.hpp"
// Including type: VYaml.Emitter.SequenceStyle
#include "VYaml/Emitter/SequenceStyle.hpp"
// Including type: VYaml.Emitter.MappingStyle
#include "VYaml/Emitter/MappingStyle.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: VYaml.Emitter.ScalarStyle
#include "VYaml/Emitter/ScalarStyle.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] whiteSpaces
::ArrayW<uint8_t> VYaml::Emitter::Utf8YamlEmitter::_get_whiteSpaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_get_whiteSpaces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Emitter", "Utf8YamlEmitter", "whiteSpaces"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] whiteSpaces
void VYaml::Emitter::Utf8YamlEmitter::_set_whiteSpaces(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_set_whiteSpaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "Utf8YamlEmitter", "whiteSpaces", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] BlockSequenceEntryHeader
::ArrayW<uint8_t> VYaml::Emitter::Utf8YamlEmitter::_get_BlockSequenceEntryHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_get_BlockSequenceEntryHeader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Emitter", "Utf8YamlEmitter", "BlockSequenceEntryHeader"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] BlockSequenceEntryHeader
void VYaml::Emitter::Utf8YamlEmitter::_set_BlockSequenceEntryHeader(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_set_BlockSequenceEntryHeader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "Utf8YamlEmitter", "BlockSequenceEntryHeader", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] FlowSequenceEmpty
::ArrayW<uint8_t> VYaml::Emitter::Utf8YamlEmitter::_get_FlowSequenceEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_get_FlowSequenceEmpty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Emitter", "Utf8YamlEmitter", "FlowSequenceEmpty"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] FlowSequenceEmpty
void VYaml::Emitter::Utf8YamlEmitter::_set_FlowSequenceEmpty(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_set_FlowSequenceEmpty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "Utf8YamlEmitter", "FlowSequenceEmpty", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] FlowSequenceSeparator
::ArrayW<uint8_t> VYaml::Emitter::Utf8YamlEmitter::_get_FlowSequenceSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_get_FlowSequenceSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Emitter", "Utf8YamlEmitter", "FlowSequenceSeparator"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] FlowSequenceSeparator
void VYaml::Emitter::Utf8YamlEmitter::_set_FlowSequenceSeparator(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_set_FlowSequenceSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "Utf8YamlEmitter", "FlowSequenceSeparator", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] MappingKeyFooter
::ArrayW<uint8_t> VYaml::Emitter::Utf8YamlEmitter::_get_MappingKeyFooter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_get_MappingKeyFooter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Emitter", "Utf8YamlEmitter", "MappingKeyFooter"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] MappingKeyFooter
void VYaml::Emitter::Utf8YamlEmitter::_set_MappingKeyFooter(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_set_MappingKeyFooter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "Utf8YamlEmitter", "MappingKeyFooter", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] FlowMappingHeader
::ArrayW<uint8_t> VYaml::Emitter::Utf8YamlEmitter::_get_FlowMappingHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_get_FlowMappingHeader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Emitter", "Utf8YamlEmitter", "FlowMappingHeader"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] FlowMappingHeader
void VYaml::Emitter::Utf8YamlEmitter::_set_FlowMappingHeader(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_set_FlowMappingHeader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "Utf8YamlEmitter", "FlowMappingHeader", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] FlowMappingFooter
::ArrayW<uint8_t> VYaml::Emitter::Utf8YamlEmitter::_get_FlowMappingFooter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_get_FlowMappingFooter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Emitter", "Utf8YamlEmitter", "FlowMappingFooter"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] FlowMappingFooter
void VYaml::Emitter::Utf8YamlEmitter::_set_FlowMappingFooter(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_set_FlowMappingFooter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "Utf8YamlEmitter", "FlowMappingFooter", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] FlowMappingEmpty
::ArrayW<uint8_t> VYaml::Emitter::Utf8YamlEmitter::_get_FlowMappingEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_get_FlowMappingEmpty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("VYaml.Emitter", "Utf8YamlEmitter", "FlowMappingEmpty"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] FlowMappingEmpty
void VYaml::Emitter::Utf8YamlEmitter::_set_FlowMappingEmpty(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_set_FlowMappingEmpty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "Utf8YamlEmitter", "FlowMappingEmpty", value));
}
// Autogenerated static field getter
// Get static field: static private VYaml.Internal.ExpandBuffer`1<System.Char> stringBufferStatic
::VYaml::Internal::ExpandBuffer_1<::Il2CppChar>* VYaml::Emitter::Utf8YamlEmitter::_get_stringBufferStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_get_stringBufferStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Internal::ExpandBuffer_1<::Il2CppChar>*>("VYaml.Emitter", "Utf8YamlEmitter", "stringBufferStatic"));
}
// Autogenerated static field setter
// Set static field: static private VYaml.Internal.ExpandBuffer`1<System.Char> stringBufferStatic
void VYaml::Emitter::Utf8YamlEmitter::_set_stringBufferStatic(::VYaml::Internal::ExpandBuffer_1<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_set_stringBufferStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "Utf8YamlEmitter", "stringBufferStatic", value));
}
// Autogenerated static field getter
// Get static field: static private VYaml.Internal.ExpandBuffer`1<VYaml.Emitter.EmitState> stateBufferStatic
::VYaml::Internal::ExpandBuffer_1<::VYaml::Emitter::EmitState>* VYaml::Emitter::Utf8YamlEmitter::_get_stateBufferStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_get_stateBufferStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Internal::ExpandBuffer_1<::VYaml::Emitter::EmitState>*>("VYaml.Emitter", "Utf8YamlEmitter", "stateBufferStatic"));
}
// Autogenerated static field setter
// Set static field: static private VYaml.Internal.ExpandBuffer`1<VYaml.Emitter.EmitState> stateBufferStatic
void VYaml::Emitter::Utf8YamlEmitter::_set_stateBufferStatic(::VYaml::Internal::ExpandBuffer_1<::VYaml::Emitter::EmitState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_set_stateBufferStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "Utf8YamlEmitter", "stateBufferStatic", value));
}
// Autogenerated static field getter
// Get static field: static private VYaml.Internal.ExpandBuffer`1<System.Int32> elementCountBufferSTatic
::VYaml::Internal::ExpandBuffer_1<int>* VYaml::Emitter::Utf8YamlEmitter::_get_elementCountBufferSTatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_get_elementCountBufferSTatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Internal::ExpandBuffer_1<int>*>("VYaml.Emitter", "Utf8YamlEmitter", "elementCountBufferSTatic"));
}
// Autogenerated static field setter
// Set static field: static private VYaml.Internal.ExpandBuffer`1<System.Int32> elementCountBufferSTatic
void VYaml::Emitter::Utf8YamlEmitter::_set_elementCountBufferSTatic(::VYaml::Internal::ExpandBuffer_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_set_elementCountBufferSTatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "Utf8YamlEmitter", "elementCountBufferSTatic", value));
}
// Autogenerated static field getter
// Get static field: static private VYaml.Internal.ExpandBuffer`1<System.String> tagBufferStatic
::VYaml::Internal::ExpandBuffer_1<::StringW>* VYaml::Emitter::Utf8YamlEmitter::_get_tagBufferStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_get_tagBufferStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Internal::ExpandBuffer_1<::StringW>*>("VYaml.Emitter", "Utf8YamlEmitter", "tagBufferStatic"));
}
// Autogenerated static field setter
// Set static field: static private VYaml.Internal.ExpandBuffer`1<System.String> tagBufferStatic
void VYaml::Emitter::Utf8YamlEmitter::_set_tagBufferStatic(::VYaml::Internal::ExpandBuffer_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::_set_tagBufferStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "Utf8YamlEmitter", "tagBufferStatic", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Buffers.IBufferWriter`1<System.Byte> writer
[[deprecated("Use field access instead!")]] ::System::Buffers::IBufferWriter_1<uint8_t>*& VYaml::Emitter::Utf8YamlEmitter::dyn_writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::dyn_writer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writer"))->offset;
  return *reinterpret_cast<::System::Buffers::IBufferWriter_1<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VYaml.Emitter.YamlEmitOptions options
[[deprecated("Use field access instead!")]] ::VYaml::Emitter::YamlEmitOptions*& VYaml::Emitter::Utf8YamlEmitter::dyn_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::dyn_options");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "options"))->offset;
  return *reinterpret_cast<::VYaml::Emitter::YamlEmitOptions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VYaml.Internal.ExpandBuffer`1<System.Char> stringBuffer
[[deprecated("Use field access instead!")]] ::VYaml::Internal::ExpandBuffer_1<::Il2CppChar>*& VYaml::Emitter::Utf8YamlEmitter::dyn_stringBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::dyn_stringBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringBuffer"))->offset;
  return *reinterpret_cast<::VYaml::Internal::ExpandBuffer_1<::Il2CppChar>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VYaml.Internal.ExpandBuffer`1<VYaml.Emitter.EmitState> stateStack
[[deprecated("Use field access instead!")]] ::VYaml::Internal::ExpandBuffer_1<::VYaml::Emitter::EmitState>*& VYaml::Emitter::Utf8YamlEmitter::dyn_stateStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::dyn_stateStack");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stateStack"))->offset;
  return *reinterpret_cast<::VYaml::Internal::ExpandBuffer_1<::VYaml::Emitter::EmitState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VYaml.Internal.ExpandBuffer`1<System.Int32> elementCountStack
[[deprecated("Use field access instead!")]] ::VYaml::Internal::ExpandBuffer_1<int>*& VYaml::Emitter::Utf8YamlEmitter::dyn_elementCountStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::dyn_elementCountStack");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementCountStack"))->offset;
  return *reinterpret_cast<::VYaml::Internal::ExpandBuffer_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VYaml.Internal.ExpandBuffer`1<System.String> tagStack
[[deprecated("Use field access instead!")]] ::VYaml::Internal::ExpandBuffer_1<::StringW>*& VYaml::Emitter::Utf8YamlEmitter::dyn_tagStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::dyn_tagStack");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagStack"))->offset;
  return *reinterpret_cast<::VYaml::Internal::ExpandBuffer_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentIndentLevel
[[deprecated("Use field access instead!")]] int& VYaml::Emitter::Utf8YamlEmitter::dyn_currentIndentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::dyn_currentIndentLevel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIndentLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentElementCount
[[deprecated("Use field access instead!")]] int& VYaml::Emitter::Utf8YamlEmitter::dyn_currentElementCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::dyn_currentElementCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentElementCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.get_CurrentState
::VYaml::Emitter::EmitState VYaml::Emitter::Utf8YamlEmitter::get_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::get_CurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Emitter::EmitState, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.get_PreviousState
::VYaml::Emitter::EmitState VYaml::Emitter::Utf8YamlEmitter::get_PreviousState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::get_PreviousState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_PreviousState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Emitter::EmitState, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.get_IsFirstElement
bool VYaml::Emitter::Utf8YamlEmitter::get_IsFirstElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::get_IsFirstElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsFirstElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter..ctor
VYaml::Emitter::Utf8YamlEmitter::Utf8YamlEmitter(::System::Buffers::IBufferWriter_1<uint8_t>* writer, ::VYaml::Emitter::YamlEmitOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, options);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.GetWriter
::System::Buffers::IBufferWriter_1<uint8_t>* VYaml::Emitter::Utf8YamlEmitter::GetWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::GetWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Buffers::IBufferWriter_1<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.BeginSequence
void VYaml::Emitter::Utf8YamlEmitter::BeginSequence(::VYaml::Emitter::SequenceStyle style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::BeginSequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "BeginSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.EndSequence
void VYaml::Emitter::Utf8YamlEmitter::EndSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::EndSequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "EndSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.BeginMapping
void VYaml::Emitter::Utf8YamlEmitter::BeginMapping(::VYaml::Emitter::MappingStyle style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::BeginMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "BeginMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.EndMapping
void VYaml::Emitter::Utf8YamlEmitter::EndMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::EndMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "EndMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WriteRaw
void VYaml::Emitter::Utf8YamlEmitter::WriteRaw(::System::ReadOnlySpan_1<uint8_t> value, bool indent, bool lineBreak) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WriteRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(indent), ::il2cpp_utils::ExtractType(lineBreak)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, indent, lineBreak);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WriteRaw
void VYaml::Emitter::Utf8YamlEmitter::WriteRaw(::System::ReadOnlySpan_1<uint8_t> value1, ::System::ReadOnlySpan_1<uint8_t> value2, bool indent, bool lineBreak) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WriteRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2), ::il2cpp_utils::ExtractType(indent), ::il2cpp_utils::ExtractType(lineBreak)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value1, value2, indent, lineBreak);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.Tag
void VYaml::Emitter::Utf8YamlEmitter::Tag(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WriteScalar
void VYaml::Emitter::Utf8YamlEmitter::WriteScalar(::System::ReadOnlySpan_1<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WriteScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WriteNull
void VYaml::Emitter::Utf8YamlEmitter::WriteNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WriteNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WriteBool
void VYaml::Emitter::Utf8YamlEmitter::WriteBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WriteBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WriteInt32
void VYaml::Emitter::Utf8YamlEmitter::WriteInt32(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WriteInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WriteUInt32
void VYaml::Emitter::Utf8YamlEmitter::WriteUInt32(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WriteUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WriteInt64
void VYaml::Emitter::Utf8YamlEmitter::WriteInt64(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WriteInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WriteUInt64
void VYaml::Emitter::Utf8YamlEmitter::WriteUInt64(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WriteUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WriteFloat
void VYaml::Emitter::Utf8YamlEmitter::WriteFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WriteFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WriteDouble
void VYaml::Emitter::Utf8YamlEmitter::WriteDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WriteDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WriteString
void VYaml::Emitter::Utf8YamlEmitter::WriteString(::StringW value, ::VYaml::Emitter::ScalarStyle style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WriteString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(style)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, style);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WritePlainScalar
void VYaml::Emitter::Utf8YamlEmitter::WritePlainScalar(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WritePlainScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WritePlainScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WriteLiteralScalar
void VYaml::Emitter::Utf8YamlEmitter::WriteLiteralScalar(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WriteLiteralScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteLiteralScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WriteQuotedScalar
void VYaml::Emitter::Utf8YamlEmitter::WriteQuotedScalar(::StringW value, bool doubleQuote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WriteQuotedScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteQuotedScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(doubleQuote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, doubleQuote);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WriteRaw1
void VYaml::Emitter::Utf8YamlEmitter::WriteRaw1(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WriteRaw1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteRaw1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WriteBlockSequenceEntryHeader
void VYaml::Emitter::Utf8YamlEmitter::WriteBlockSequenceEntryHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WriteBlockSequenceEntryHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteBlockSequenceEntryHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WriteBlockSequenceEntryHeader
void VYaml::Emitter::Utf8YamlEmitter::WriteBlockSequenceEntryHeader(::System::Span_1<uint8_t> output, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WriteBlockSequenceEntryHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteBlockSequenceEntryHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output, byref(offset));
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.WriteIndent
void VYaml::Emitter::Utf8YamlEmitter::WriteIndent(::System::Span_1<uint8_t> output, ByRef<int> offset, int forceWidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::WriteIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(forceWidth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output, byref(offset), forceWidth);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.CalculateMaxScalarBufferLength
int VYaml::Emitter::Utf8YamlEmitter::CalculateMaxScalarBufferLength(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::CalculateMaxScalarBufferLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CalculateMaxScalarBufferLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, length);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.BeginScalar
void VYaml::Emitter::Utf8YamlEmitter::BeginScalar(::System::Span_1<uint8_t> output, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::BeginScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "BeginScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output, byref(offset));
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.EndScalar
void VYaml::Emitter::Utf8YamlEmitter::EndScalar(::System::Span_1<uint8_t> output, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::EndScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "EndScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output, byref(offset));
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.ReplaceCurrentState
void VYaml::Emitter::Utf8YamlEmitter::ReplaceCurrentState(::VYaml::Emitter::EmitState newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::ReplaceCurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReplaceCurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newState);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.PushState
void VYaml::Emitter::Utf8YamlEmitter::PushState(::VYaml::Emitter::EmitState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::PushState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PushState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.PopState
void VYaml::Emitter::Utf8YamlEmitter::PopState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::PopState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PopState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.IncreaseIndent
void VYaml::Emitter::Utf8YamlEmitter::IncreaseIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::IncreaseIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IncreaseIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.DecreaseIndent
void VYaml::Emitter::Utf8YamlEmitter::DecreaseIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::DecreaseIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "DecreaseIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.TryWriteTag
bool VYaml::Emitter::Utf8YamlEmitter::TryWriteTag(::System::Span_1<uint8_t> output, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::TryWriteTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryWriteTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, output, byref(offset));
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter.GetTagLength
int VYaml::Emitter::Utf8YamlEmitter::GetTagLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::GetTagLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTagLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Emitter.Utf8YamlEmitter..cctor
void VYaml::Emitter::Utf8YamlEmitter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::Utf8YamlEmitter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Emitter", "Utf8YamlEmitter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Emitter.ScalarStyle
#include "VYaml/Emitter/ScalarStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VYaml.Emitter.ScalarStyle Any
::VYaml::Emitter::ScalarStyle VYaml::Emitter::ScalarStyle::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::ScalarStyle::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Emitter::ScalarStyle>("VYaml.Emitter", "ScalarStyle", "Any"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Emitter.ScalarStyle Any
void VYaml::Emitter::ScalarStyle::_set_Any(::VYaml::Emitter::ScalarStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::ScalarStyle::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "ScalarStyle", "Any", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Emitter.ScalarStyle Plain
::VYaml::Emitter::ScalarStyle VYaml::Emitter::ScalarStyle::_get_Plain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::ScalarStyle::_get_Plain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Emitter::ScalarStyle>("VYaml.Emitter", "ScalarStyle", "Plain"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Emitter.ScalarStyle Plain
void VYaml::Emitter::ScalarStyle::_set_Plain(::VYaml::Emitter::ScalarStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::ScalarStyle::_set_Plain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "ScalarStyle", "Plain", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Emitter.ScalarStyle SingleQuoted
::VYaml::Emitter::ScalarStyle VYaml::Emitter::ScalarStyle::_get_SingleQuoted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::ScalarStyle::_get_SingleQuoted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Emitter::ScalarStyle>("VYaml.Emitter", "ScalarStyle", "SingleQuoted"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Emitter.ScalarStyle SingleQuoted
void VYaml::Emitter::ScalarStyle::_set_SingleQuoted(::VYaml::Emitter::ScalarStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::ScalarStyle::_set_SingleQuoted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "ScalarStyle", "SingleQuoted", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Emitter.ScalarStyle DoubleQuoted
::VYaml::Emitter::ScalarStyle VYaml::Emitter::ScalarStyle::_get_DoubleQuoted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::ScalarStyle::_get_DoubleQuoted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Emitter::ScalarStyle>("VYaml.Emitter", "ScalarStyle", "DoubleQuoted"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Emitter.ScalarStyle DoubleQuoted
void VYaml::Emitter::ScalarStyle::_set_DoubleQuoted(::VYaml::Emitter::ScalarStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::ScalarStyle::_set_DoubleQuoted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "ScalarStyle", "DoubleQuoted", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Emitter.ScalarStyle Literal
::VYaml::Emitter::ScalarStyle VYaml::Emitter::ScalarStyle::_get_Literal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::ScalarStyle::_get_Literal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Emitter::ScalarStyle>("VYaml.Emitter", "ScalarStyle", "Literal"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Emitter.ScalarStyle Literal
void VYaml::Emitter::ScalarStyle::_set_Literal(::VYaml::Emitter::ScalarStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::ScalarStyle::_set_Literal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "ScalarStyle", "Literal", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Emitter.ScalarStyle Folded
::VYaml::Emitter::ScalarStyle VYaml::Emitter::ScalarStyle::_get_Folded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::ScalarStyle::_get_Folded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Emitter::ScalarStyle>("VYaml.Emitter", "ScalarStyle", "Folded"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Emitter.ScalarStyle Folded
void VYaml::Emitter::ScalarStyle::_set_Folded(::VYaml::Emitter::ScalarStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::ScalarStyle::_set_Folded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "ScalarStyle", "Folded", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VYaml::Emitter::ScalarStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::ScalarStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Emitter.SequenceStyle
#include "VYaml/Emitter/SequenceStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VYaml.Emitter.SequenceStyle Block
::VYaml::Emitter::SequenceStyle VYaml::Emitter::SequenceStyle::_get_Block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::SequenceStyle::_get_Block");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Emitter::SequenceStyle>("VYaml.Emitter", "SequenceStyle", "Block"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Emitter.SequenceStyle Block
void VYaml::Emitter::SequenceStyle::_set_Block(::VYaml::Emitter::SequenceStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::SequenceStyle::_set_Block");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "SequenceStyle", "Block", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Emitter.SequenceStyle Flow
::VYaml::Emitter::SequenceStyle VYaml::Emitter::SequenceStyle::_get_Flow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::SequenceStyle::_get_Flow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Emitter::SequenceStyle>("VYaml.Emitter", "SequenceStyle", "Flow"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Emitter.SequenceStyle Flow
void VYaml::Emitter::SequenceStyle::_set_Flow(::VYaml::Emitter::SequenceStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::SequenceStyle::_set_Flow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "SequenceStyle", "Flow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VYaml::Emitter::SequenceStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::SequenceStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Emitter.MappingStyle
#include "VYaml/Emitter/MappingStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VYaml.Emitter.MappingStyle Block
::VYaml::Emitter::MappingStyle VYaml::Emitter::MappingStyle::_get_Block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::MappingStyle::_get_Block");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Emitter::MappingStyle>("VYaml.Emitter", "MappingStyle", "Block"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Emitter.MappingStyle Block
void VYaml::Emitter::MappingStyle::_set_Block(::VYaml::Emitter::MappingStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::MappingStyle::_set_Block");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "MappingStyle", "Block", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Emitter.MappingStyle Flow
::VYaml::Emitter::MappingStyle VYaml::Emitter::MappingStyle::_get_Flow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::MappingStyle::_get_Flow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Emitter::MappingStyle>("VYaml.Emitter", "MappingStyle", "Flow"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Emitter.MappingStyle Flow
void VYaml::Emitter::MappingStyle::_set_Flow(::VYaml::Emitter::MappingStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::MappingStyle::_set_Flow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "MappingStyle", "Flow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VYaml::Emitter::MappingStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::MappingStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Emitter.YamlEmitOptions
#include "VYaml/Emitter/YamlEmitOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Emitter.YamlEmitOptions Default
::VYaml::Emitter::YamlEmitOptions* VYaml::Emitter::YamlEmitOptions::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::YamlEmitOptions::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Emitter::YamlEmitOptions*>("VYaml.Emitter", "YamlEmitOptions", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Emitter.YamlEmitOptions Default
void VYaml::Emitter::YamlEmitOptions::_set_Default(::VYaml::Emitter::YamlEmitOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::YamlEmitOptions::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Emitter", "YamlEmitOptions", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <IndentWidth>k__BackingField
[[deprecated("Use field access instead!")]] int& VYaml::Emitter::YamlEmitOptions::dyn_$IndentWidth$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::YamlEmitOptions::dyn_$IndentWidth$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IndentWidth>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Emitter.YamlEmitOptions.get_IndentWidth
int VYaml::Emitter::YamlEmitOptions::get_IndentWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::YamlEmitOptions::get_IndentWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IndentWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Emitter.YamlEmitOptions.set_IndentWidth
void VYaml::Emitter::YamlEmitOptions::set_IndentWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::YamlEmitOptions::set_IndentWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IndentWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Emitter.YamlEmitOptions..cctor
void VYaml::Emitter::YamlEmitOptions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Emitter::YamlEmitOptions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Emitter", "YamlEmitOptions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Annotations.NamingConvention
#include "VYaml/Annotations/NamingConvention.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VYaml.Annotations.NamingConvention LowerCamelCase
::VYaml::Annotations::NamingConvention VYaml::Annotations::NamingConvention::_get_LowerCamelCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::NamingConvention::_get_LowerCamelCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Annotations::NamingConvention>("VYaml.Annotations", "NamingConvention", "LowerCamelCase"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Annotations.NamingConvention LowerCamelCase
void VYaml::Annotations::NamingConvention::_set_LowerCamelCase(::VYaml::Annotations::NamingConvention value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::NamingConvention::_set_LowerCamelCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Annotations", "NamingConvention", "LowerCamelCase", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Annotations.NamingConvention UpperCamelCase
::VYaml::Annotations::NamingConvention VYaml::Annotations::NamingConvention::_get_UpperCamelCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::NamingConvention::_get_UpperCamelCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Annotations::NamingConvention>("VYaml.Annotations", "NamingConvention", "UpperCamelCase"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Annotations.NamingConvention UpperCamelCase
void VYaml::Annotations::NamingConvention::_set_UpperCamelCase(::VYaml::Annotations::NamingConvention value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::NamingConvention::_set_UpperCamelCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Annotations", "NamingConvention", "UpperCamelCase", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Annotations.NamingConvention SnakeCase
::VYaml::Annotations::NamingConvention VYaml::Annotations::NamingConvention::_get_SnakeCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::NamingConvention::_get_SnakeCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Annotations::NamingConvention>("VYaml.Annotations", "NamingConvention", "SnakeCase"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Annotations.NamingConvention SnakeCase
void VYaml::Annotations::NamingConvention::_set_SnakeCase(::VYaml::Annotations::NamingConvention value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::NamingConvention::_set_SnakeCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Annotations", "NamingConvention", "SnakeCase", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Annotations.NamingConvention KebabCase
::VYaml::Annotations::NamingConvention VYaml::Annotations::NamingConvention::_get_KebabCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::NamingConvention::_get_KebabCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Annotations::NamingConvention>("VYaml.Annotations", "NamingConvention", "KebabCase"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Annotations.NamingConvention KebabCase
void VYaml::Annotations::NamingConvention::_set_KebabCase(::VYaml::Annotations::NamingConvention value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::NamingConvention::_set_KebabCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Annotations", "NamingConvention", "KebabCase", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VYaml::Annotations::NamingConvention::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::NamingConvention::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Annotations.YamlObjectAttribute
#include "VYaml/Annotations/YamlObjectAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly VYaml.Annotations.NamingConvention <NamingConvention>k__BackingField
[[deprecated("Use field access instead!")]] ::VYaml::Annotations::NamingConvention& VYaml::Annotations::YamlObjectAttribute::dyn_$NamingConvention$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::YamlObjectAttribute::dyn_$NamingConvention$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NamingConvention>k__BackingField"))->offset;
  return *reinterpret_cast<::VYaml::Annotations::NamingConvention*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Annotations.YamlObjectAttribute.get_NamingConvention
::VYaml::Annotations::NamingConvention VYaml::Annotations::YamlObjectAttribute::get_NamingConvention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::YamlObjectAttribute::get_NamingConvention");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamingConvention", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Annotations::NamingConvention, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Annotations.YamlMemberAttribute
#include "VYaml/Annotations/YamlMemberAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VYaml::Annotations::YamlMemberAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::YamlMemberAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Order>k__BackingField
[[deprecated("Use field access instead!")]] int& VYaml::Annotations::YamlMemberAttribute::dyn_$Order$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::YamlMemberAttribute::dyn_$Order$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Order>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Annotations.YamlMemberAttribute.get_Name
::StringW VYaml::Annotations::YamlMemberAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::YamlMemberAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Annotations.YamlMemberAttribute.get_Order
int VYaml::Annotations::YamlMemberAttribute::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::YamlMemberAttribute::get_Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Annotations.YamlMemberAttribute.set_Order
void VYaml::Annotations::YamlMemberAttribute::set_Order(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::YamlMemberAttribute::set_Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Annotations.YamlIgnoreAttribute
#include "VYaml/Annotations/YamlIgnoreAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Annotations.YamlConstructorAttribute
#include "VYaml/Annotations/YamlConstructorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Annotations.YamlObjectUnionAttribute
#include "VYaml/Annotations/YamlObjectUnionAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Tag>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VYaml::Annotations::YamlObjectUnionAttribute::dyn_$Tag$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::YamlObjectUnionAttribute::dyn_$Tag$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Tag>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <SubType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& VYaml::Annotations::YamlObjectUnionAttribute::dyn_$SubType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::YamlObjectUnionAttribute::dyn_$SubType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SubType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Annotations.YamlObjectUnionAttribute.get_Tag
::StringW VYaml::Annotations::YamlObjectUnionAttribute::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::YamlObjectUnionAttribute::get_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Annotations.YamlObjectUnionAttribute.get_SubType
::System::Type* VYaml::Annotations::YamlObjectUnionAttribute::get_SubType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Annotations::YamlObjectUnionAttribute::get_SubType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SubType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Annotations.PreserveAttribute
#include "VYaml/Annotations/PreserveAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Ext
#include "WebSocketSharp/Ext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] _last
::ArrayW<uint8_t> WebSocketSharp::Ext::_get__last() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::_get__last");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("WebSocketSharp", "Ext", "_last"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] _last
void WebSocketSharp::Ext::_set__last(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::_set__last");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "Ext", "_last", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _retry
int WebSocketSharp::Ext::_get__retry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::_get__retry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("WebSocketSharp", "Ext", "_retry"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _retry
void WebSocketSharp::Ext::_set__retry(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::_set__retry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "Ext", "_retry", value));
}
// Autogenerated method: WebSocketSharp.Ext.IsNullOrEmpty
bool WebSocketSharp::Ext::IsNullOrEmpty(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::IsNullOrEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "IsNullOrEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Ext..cctor
void WebSocketSharp::Ext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.CodeAnalysis.EmbeddedAttribute
#include "Microsoft/CodeAnalysis/EmbeddedAttribute_______________.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.NullableAttribute
#include "System/Runtime/CompilerServices/NullableAttribute___.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte[] NullableFlags
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Runtime::CompilerServices::NullableAttribute___::dyn_NullableFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::NullableAttribute___::dyn_NullableFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NullableFlags"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.NullableContextAttribute
#include "System/Runtime/CompilerServices/NullableContextAttribute__.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte Flag
[[deprecated("Use field access instead!")]] uint8_t& System::Runtime::CompilerServices::NullableContextAttribute__::dyn_Flag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::NullableContextAttribute__::dyn_Flag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Flag"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________________________________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________________________________________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________________________________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________________________________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________________________________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________________________________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.BufferEx
#include "System/BufferEx.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.BufferEx.ZeroMemory
void System::BufferEx::ZeroMemory(uint8_t* dest, uint len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BufferEx::ZeroMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BufferEx", "ZeroMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.BufferEx.Memcpy
void System::BufferEx::Memcpy(uint8_t* dest, uint8_t* src, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BufferEx::Memcpy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BufferEx", "Memcpy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, src, len);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.DecimalEx
#include "System/DecimalEx.hpp"
// Including type: System.DecimalEx/DecimalBits
#include "System/DecimalEx_DecimalBits.hpp"
// Including type: System.DecimalEx/DecCalc
#include "System/DecimalEx_DecCalc.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 ScaleShift
int System::DecimalEx::_get_ScaleShift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DecimalEx::_get_ScaleShift");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DecimalEx", "ScaleShift"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ScaleShift
void System::DecimalEx::_set_ScaleShift(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DecimalEx::_set_ScaleShift");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DecimalEx", "ScaleShift", value));
}
// Autogenerated method: System.DecimalEx.AsMutable
::System::DecimalEx::DecCalc System::DecimalEx::AsMutable(ByRef<::System::Decimal> d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DecimalEx::AsMutable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DecimalEx", "AsMutable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DecimalEx::DecCalc, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(d));
}
// Autogenerated method: System.DecimalEx.High
uint System::DecimalEx::High(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DecimalEx::High");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DecimalEx", "High", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.DecimalEx.Low
uint System::DecimalEx::Low(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DecimalEx::Low");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DecimalEx", "Low", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.DecimalEx.Mid
uint System::DecimalEx::Mid(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DecimalEx::Mid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DecimalEx", "Mid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.DecimalEx.IsNegative
bool System::DecimalEx::IsNegative(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DecimalEx::IsNegative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DecimalEx", "IsNegative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.DecimalEx.Scale
int System::DecimalEx::Scale(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DecimalEx::Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DecimalEx", "Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.DecimalEx.DecDivMod1E9
uint System::DecimalEx::DecDivMod1E9(ByRef<::System::Decimal> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DecimalEx::DecDivMod1E9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DecimalEx", "DecDivMod1E9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.DecimalEx/DecCalc
#include "System/DecimalEx_DecCalc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt32 TenToPowerNine
uint System::DecimalEx::DecCalc::_get_TenToPowerNine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DecimalEx::DecCalc::_get_TenToPowerNine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System", "DecimalEx/DecCalc", "TenToPowerNine"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 TenToPowerNine
void System::DecimalEx::DecCalc::_set_TenToPowerNine(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DecimalEx::DecCalc::_set_TenToPowerNine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DecimalEx/DecCalc", "TenToPowerNine", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 uflags
[[deprecated("Use field access instead!")]] uint& System::DecimalEx::DecCalc::dyn_uflags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DecimalEx::DecCalc::dyn_uflags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uflags"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 uhi
[[deprecated("Use field access instead!")]] uint& System::DecimalEx::DecCalc::dyn_uhi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DecimalEx::DecCalc::dyn_uhi");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uhi"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 ulo
[[deprecated("Use field access instead!")]] uint& System::DecimalEx::DecCalc::dyn_ulo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DecimalEx::DecCalc::dyn_ulo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ulo"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 umid
[[deprecated("Use field access instead!")]] uint& System::DecimalEx::DecCalc::dyn_umid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DecimalEx::DecCalc::dyn_umid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "umid"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 ulomidLE
[[deprecated("Use field access instead!")]] uint64_t& System::DecimalEx::DecCalc::dyn_ulomidLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DecimalEx::DecCalc::dyn_ulomidLE");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ulomidLE"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.DecimalEx/DecCalc.DecDivMod1E9
uint System::DecimalEx::DecCalc::DecDivMod1E9(ByRef<::System::DecimalEx::DecCalc> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DecimalEx::DecCalc::DecDivMod1E9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DecimalEx/DecCalc", "DecDivMod1E9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.FloatEx
#include "System/FloatEx.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.FloatEx.IsFinite
bool System::FloatEx::IsFinite(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::FloatEx::IsFinite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "FloatEx", "IsFinite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.FloatEx.IsNegative
bool System::FloatEx::IsNegative(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::FloatEx::IsNegative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "FloatEx", "IsNegative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.FloatEx.IsFinite
bool System::FloatEx::IsFinite(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::FloatEx::IsFinite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "FloatEx", "IsFinite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.FloatEx.IsNegative
bool System::FloatEx::IsNegative(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::FloatEx::IsNegative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "FloatEx", "IsNegative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.FloatEx.SingleToInt32Bits
int System::FloatEx::SingleToInt32Bits(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::FloatEx::SingleToInt32Bits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "FloatEx", "SingleToInt32Bits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.GuidEx
#include "System/GuidEx.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _a
[[deprecated("Use field access instead!")]] int& System::GuidEx::dyn__a() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GuidEx::dyn__a");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_a"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 _b
[[deprecated("Use field access instead!")]] int16_t& System::GuidEx::dyn__b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GuidEx::dyn__b");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 _c
[[deprecated("Use field access instead!")]] int16_t& System::GuidEx::dyn__c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GuidEx::dyn__c");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_c"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _d
[[deprecated("Use field access instead!")]] uint8_t& System::GuidEx::dyn__d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GuidEx::dyn__d");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_d"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _e
[[deprecated("Use field access instead!")]] uint8_t& System::GuidEx::dyn__e() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GuidEx::dyn__e");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_e"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _f
[[deprecated("Use field access instead!")]] uint8_t& System::GuidEx::dyn__f() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GuidEx::dyn__f");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_f"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _g
[[deprecated("Use field access instead!")]] uint8_t& System::GuidEx::dyn__g() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GuidEx::dyn__g");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_g"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _h
[[deprecated("Use field access instead!")]] uint8_t& System::GuidEx::dyn__h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GuidEx::dyn__h");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_h"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _i
[[deprecated("Use field access instead!")]] uint8_t& System::GuidEx::dyn__i() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GuidEx::dyn__i");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_i"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _j
[[deprecated("Use field access instead!")]] uint8_t& System::GuidEx::dyn__j() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GuidEx::dyn__j");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_j"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _k
[[deprecated("Use field access instead!")]] uint8_t& System::GuidEx::dyn__k() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GuidEx::dyn__k");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_k"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.GuidEx.HexsToChars
int System::GuidEx::HexsToChars(::Il2CppChar* guidChars, int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GuidEx::HexsToChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "GuidEx", "HexsToChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guidChars), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guidChars, a, b);
}
// Autogenerated method: System.GuidEx.HexsToCharsHexOutput
int System::GuidEx::HexsToCharsHexOutput(::Il2CppChar* guidChars, int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GuidEx::HexsToCharsHexOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "GuidEx", "HexsToCharsHexOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guidChars), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guidChars, a, b);
}
// Autogenerated method: System.GuidEx.TryFormat
bool System::GuidEx::TryFormat(::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::GuidEx::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(charsWritten), format);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.HexConverter
#include "System/HexConverter.hpp"
// Including type: System.HexConverter/Casing
#include "System/HexConverter_Casing.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.HexConverter.ToBytesBuffer
void System::HexConverter::ToBytesBuffer(uint8_t value, ::System::Span_1<uint8_t> buffer, int startingIndex, ::System::HexConverter::Casing casing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HexConverter::ToBytesBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "HexConverter", "ToBytesBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(startingIndex), ::il2cpp_utils::ExtractType(casing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, buffer, startingIndex, casing);
}
// Autogenerated method: System.HexConverter.ToCharsBuffer
void System::HexConverter::ToCharsBuffer(uint8_t value, ::System::Span_1<::Il2CppChar> buffer, int startingIndex, ::System::HexConverter::Casing casing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HexConverter::ToCharsBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "HexConverter", "ToCharsBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(startingIndex), ::il2cpp_utils::ExtractType(casing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, buffer, startingIndex, casing);
}
// Autogenerated method: System.HexConverter.ToString
::StringW System::HexConverter::ToString(::System::ReadOnlySpan_1<uint8_t> bytes, ::System::HexConverter::Casing casing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HexConverter::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "HexConverter", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(casing)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, casing);
}
// Autogenerated method: System.HexConverter.ToCharUpper
::Il2CppChar System::HexConverter::ToCharUpper(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HexConverter::ToCharUpper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "HexConverter", "ToCharUpper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.HexConverter.ToCharLower
::Il2CppChar System::HexConverter::ToCharLower(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HexConverter::ToCharLower");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "HexConverter", "ToCharLower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.HexConverter/Casing
#include "System/HexConverter_Casing.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.HexConverter/Casing Upper
::System::HexConverter::Casing System::HexConverter::Casing::_get_Upper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HexConverter::Casing::_get_Upper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::HexConverter::Casing>("System", "HexConverter/Casing", "Upper"));
}
// Autogenerated static field setter
// Set static field: static public System.HexConverter/Casing Upper
void System::HexConverter::Casing::_set_Upper(::System::HexConverter::Casing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HexConverter::Casing::_set_Upper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "HexConverter/Casing", "Upper", value));
}
// Autogenerated static field getter
// Get static field: static public System.HexConverter/Casing Lower
::System::HexConverter::Casing System::HexConverter::Casing::_get_Lower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HexConverter::Casing::_get_Lower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::HexConverter::Casing>("System", "HexConverter/Casing", "Lower"));
}
// Autogenerated static field setter
// Set static field: static public System.HexConverter/Casing Lower
void System::HexConverter::Casing::_set_Lower(::System::HexConverter::Casing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HexConverter::Casing::_set_Lower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "HexConverter/Casing", "Lower", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& System::HexConverter::Casing::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HexConverter::Casing::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.InternalSpanEx
#include "System/InternalSpanEx.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.InternalSpanEx.EqualsOrdinalIgnoreCase
bool System::InternalSpanEx::EqualsOrdinalIgnoreCase(::System::ReadOnlySpan_1<::Il2CppChar> span, ::System::ReadOnlySpan_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::InternalSpanEx::EqualsOrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "InternalSpanEx", "EqualsOrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span, value);
}
// Autogenerated method: System.InternalSpanEx.EqualsOrdinalIgnoreCase
bool System::InternalSpanEx::EqualsOrdinalIgnoreCase(ByRef<::Il2CppChar> charA, ByRef<::Il2CppChar> charB, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::InternalSpanEx::EqualsOrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "InternalSpanEx", "EqualsOrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charA), ::il2cpp_utils::ExtractType(charB), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(charA), byref(charB), length);
}
// Autogenerated method: System.InternalSpanEx.AllCharsInUInt32AreAscii
bool System::InternalSpanEx::AllCharsInUInt32AreAscii(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::InternalSpanEx::AllCharsInUInt32AreAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "InternalSpanEx", "AllCharsInUInt32AreAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.InternalSpanEx.AllCharsInUInt64AreAscii
bool System::InternalSpanEx::AllCharsInUInt64AreAscii(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::InternalSpanEx::AllCharsInUInt64AreAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "InternalSpanEx", "AllCharsInUInt64AreAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.InternalSpanEx.UInt32OrdinalIgnoreCaseAscii
bool System::InternalSpanEx::UInt32OrdinalIgnoreCaseAscii(uint valueA, uint valueB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::InternalSpanEx::UInt32OrdinalIgnoreCaseAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "InternalSpanEx", "UInt32OrdinalIgnoreCaseAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueA), ::il2cpp_utils::ExtractType(valueB)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, valueA, valueB);
}
// Autogenerated method: System.InternalSpanEx.UInt64OrdinalIgnoreCaseAscii
bool System::InternalSpanEx::UInt64OrdinalIgnoreCaseAscii(uint64_t valueA, uint64_t valueB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::InternalSpanEx::UInt64OrdinalIgnoreCaseAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "InternalSpanEx", "UInt64OrdinalIgnoreCaseAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueA), ::il2cpp_utils::ExtractType(valueB)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, valueA, valueB);
}
// Autogenerated method: System.InternalSpanEx.EqualsOrdinalIgnoreCaseNonAscii
bool System::InternalSpanEx::EqualsOrdinalIgnoreCaseNonAscii(ByRef<::Il2CppChar> charA, ByRef<::Il2CppChar> charB, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::InternalSpanEx::EqualsOrdinalIgnoreCaseNonAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "InternalSpanEx", "EqualsOrdinalIgnoreCaseNonAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charA), ::il2cpp_utils::ExtractType(charB), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(charA), byref(charB), length);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.MathEx
#include "System/MathEx.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.MathEx.DivRem
uint System::MathEx::DivRem(uint a, uint b, ByRef<uint> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathEx::DivRem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MathEx", "DivRem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, byref(result));
}
// Autogenerated method: System.MathEx.DivRem
uint64_t System::MathEx::DivRem(uint64_t a, uint64_t b, ByRef<uint64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathEx::DivRem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MathEx", "DivRem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, byref(result));
}
// Autogenerated method: System.MathEx.DivRem
int System::MathEx::DivRem(int a, int b, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathEx::DivRem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MathEx", "DivRem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, byref(result));
}
// Autogenerated method: System.MathEx.DivRem
int64_t System::MathEx::DivRem(int64_t a, int64_t b, ByRef<int64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathEx::DivRem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MathEx", "DivRem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, byref(result));
}
// Autogenerated method: System.MathEx.Clamp
uint8_t System::MathEx::Clamp(uint8_t value, uint8_t min, uint8_t max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathEx::Clamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MathEx", "Clamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated method: System.MathEx.Clamp
::System::Decimal System::MathEx::Clamp(::System::Decimal value, ::System::Decimal min, ::System::Decimal max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathEx::Clamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MathEx", "Clamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated method: System.MathEx.Clamp
double System::MathEx::Clamp(double value, double min, double max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathEx::Clamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MathEx", "Clamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated method: System.MathEx.Clamp
int16_t System::MathEx::Clamp(int16_t value, int16_t min, int16_t max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathEx::Clamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MathEx", "Clamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated method: System.MathEx.Clamp
int System::MathEx::Clamp(int value, int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathEx::Clamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MathEx", "Clamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated method: System.MathEx.Clamp
int64_t System::MathEx::Clamp(int64_t value, int64_t min, int64_t max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathEx::Clamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MathEx", "Clamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated method: System.MathEx.Clamp
int8_t System::MathEx::Clamp(int8_t value, int8_t min, int8_t max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathEx::Clamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MathEx", "Clamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated method: System.MathEx.Clamp
float System::MathEx::Clamp(float value, float min, float max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathEx::Clamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MathEx", "Clamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated method: System.MathEx.Clamp
uint16_t System::MathEx::Clamp(uint16_t value, uint16_t min, uint16_t max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathEx::Clamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MathEx", "Clamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated method: System.MathEx.Clamp
uint System::MathEx::Clamp(uint value, uint min, uint max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathEx::Clamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MathEx", "Clamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated method: System.MathEx.Clamp
uint64_t System::MathEx::Clamp(uint64_t value, uint64_t min, uint64_t max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathEx::Clamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MathEx", "Clamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Number
#include "System/Number_.hpp"
// Including type: System.Number/BigInteger
#include "System/Number__BigInteger.hpp"
// Including type: System.Number/DiyFp
#include "System/Number__DiyFp.hpp"
// Including type: System.Number/Grisu3
#include "System/Number__Grisu3.hpp"
// Including type: System.Number/NumberBuffer
#include "System/Number__NumberBuffer.hpp"
// Including type: System.Number/NumberBufferKind
#include "System/Number__NumberBufferKind.hpp"
// Including type: System.Number/FloatingPointInfo
#include "System/Number__FloatingPointInfo.hpp"
// Including type: System.Number/ParsingStatus
#include "System/Number__ParsingStatus.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Text.ValueStringBuilder
#include "System/Text/ValueStringBuilder__.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 DecimalPrecision
int System::Number_::_get_DecimalPrecision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_DecimalPrecision");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "DecimalPrecision"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DecimalPrecision
void System::Number_::_set_DecimalPrecision(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_DecimalPrecision");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "DecimalPrecision", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SinglePrecision
int System::Number_::_get_SinglePrecision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_SinglePrecision");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "SinglePrecision"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SinglePrecision
void System::Number_::_set_SinglePrecision(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_SinglePrecision");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "SinglePrecision", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DoublePrecision
int System::Number_::_get_DoublePrecision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_DoublePrecision");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "DoublePrecision"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DoublePrecision
void System::Number_::_set_DoublePrecision(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_DoublePrecision");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "DoublePrecision", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SinglePrecisionCustomFormat
int System::Number_::_get_SinglePrecisionCustomFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_SinglePrecisionCustomFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "SinglePrecisionCustomFormat"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SinglePrecisionCustomFormat
void System::Number_::_set_SinglePrecisionCustomFormat(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_SinglePrecisionCustomFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "SinglePrecisionCustomFormat", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DoublePrecisionCustomFormat
int System::Number_::_get_DoublePrecisionCustomFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_DoublePrecisionCustomFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "DoublePrecisionCustomFormat"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DoublePrecisionCustomFormat
void System::Number_::_set_DoublePrecisionCustomFormat(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_DoublePrecisionCustomFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "DoublePrecisionCustomFormat", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DefaultPrecisionExponentialFormat
int System::Number_::_get_DefaultPrecisionExponentialFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_DefaultPrecisionExponentialFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "DefaultPrecisionExponentialFormat"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DefaultPrecisionExponentialFormat
void System::Number_::_set_DefaultPrecisionExponentialFormat(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_DefaultPrecisionExponentialFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "DefaultPrecisionExponentialFormat", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxUInt32DecDigits
int System::Number_::_get_MaxUInt32DecDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_MaxUInt32DecDigits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "MaxUInt32DecDigits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxUInt32DecDigits
void System::Number_::_set_MaxUInt32DecDigits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_MaxUInt32DecDigits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "MaxUInt32DecDigits", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CharStackBufferSize
int System::Number_::_get_CharStackBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_CharStackBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "CharStackBufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CharStackBufferSize
void System::Number_::_set_CharStackBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_CharStackBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "CharStackBufferSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PosNumberFormat
::StringW System::Number_::_get_PosNumberFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_PosNumberFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Number", "PosNumberFormat"));
}
// Autogenerated static field setter
// Set static field: static private System.String PosNumberFormat
void System::Number_::_set_PosNumberFormat(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_PosNumberFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "PosNumberFormat", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] s_singleDigitStringCache
::ArrayW<::StringW> System::Number_::_get_s_singleDigitStringCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_s_singleDigitStringCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System", "Number", "s_singleDigitStringCache"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] s_singleDigitStringCache
void System::Number_::_set_s_singleDigitStringCache(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_s_singleDigitStringCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "s_singleDigitStringCache", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] s_posCurrencyFormats
::ArrayW<::StringW> System::Number_::_get_s_posCurrencyFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_s_posCurrencyFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System", "Number", "s_posCurrencyFormats"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] s_posCurrencyFormats
void System::Number_::_set_s_posCurrencyFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_s_posCurrencyFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "s_posCurrencyFormats", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] s_negCurrencyFormats
::ArrayW<::StringW> System::Number_::_get_s_negCurrencyFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_s_negCurrencyFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System", "Number", "s_negCurrencyFormats"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] s_negCurrencyFormats
void System::Number_::_set_s_negCurrencyFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_s_negCurrencyFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "s_negCurrencyFormats", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] s_posPercentFormats
::ArrayW<::StringW> System::Number_::_get_s_posPercentFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_s_posPercentFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System", "Number", "s_posPercentFormats"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] s_posPercentFormats
void System::Number_::_set_s_posPercentFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_s_posPercentFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "s_posPercentFormats", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] s_negPercentFormats
::ArrayW<::StringW> System::Number_::_get_s_negPercentFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_s_negPercentFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System", "Number", "s_negPercentFormats"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] s_negPercentFormats
void System::Number_::_set_s_negPercentFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_s_negPercentFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "s_negPercentFormats", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] s_negNumberFormats
::ArrayW<::StringW> System::Number_::_get_s_negNumberFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_s_negNumberFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System", "Number", "s_negNumberFormats"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] s_negNumberFormats
void System::Number_::_set_s_negNumberFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_s_negNumberFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "s_negNumberFormats", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DecimalNumberBufferLength
int System::Number_::_get_DecimalNumberBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_DecimalNumberBufferLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "DecimalNumberBufferLength"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DecimalNumberBufferLength
void System::Number_::_set_DecimalNumberBufferLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_DecimalNumberBufferLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "DecimalNumberBufferLength", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DoubleNumberBufferLength
int System::Number_::_get_DoubleNumberBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_DoubleNumberBufferLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "DoubleNumberBufferLength"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DoubleNumberBufferLength
void System::Number_::_set_DoubleNumberBufferLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_DoubleNumberBufferLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "DoubleNumberBufferLength", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 Int32NumberBufferLength
int System::Number_::_get_Int32NumberBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_Int32NumberBufferLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "Int32NumberBufferLength"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 Int32NumberBufferLength
void System::Number_::_set_Int32NumberBufferLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_Int32NumberBufferLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "Int32NumberBufferLength", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 Int64NumberBufferLength
int System::Number_::_get_Int64NumberBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_Int64NumberBufferLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "Int64NumberBufferLength"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 Int64NumberBufferLength
void System::Number_::_set_Int64NumberBufferLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_Int64NumberBufferLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "Int64NumberBufferLength", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 SingleNumberBufferLength
int System::Number_::_get_SingleNumberBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_SingleNumberBufferLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "SingleNumberBufferLength"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 SingleNumberBufferLength
void System::Number_::_set_SingleNumberBufferLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_SingleNumberBufferLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "SingleNumberBufferLength", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 UInt32NumberBufferLength
int System::Number_::_get_UInt32NumberBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_UInt32NumberBufferLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "UInt32NumberBufferLength"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 UInt32NumberBufferLength
void System::Number_::_set_UInt32NumberBufferLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_UInt32NumberBufferLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "UInt32NumberBufferLength", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 UInt64NumberBufferLength
int System::Number_::_get_UInt64NumberBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_UInt64NumberBufferLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "UInt64NumberBufferLength"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 UInt64NumberBufferLength
void System::Number_::_set_UInt64NumberBufferLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_UInt64NumberBufferLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "UInt64NumberBufferLength", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single[] s_Pow10SingleTable
::ArrayW<float> System::Number_::_get_s_Pow10SingleTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_s_Pow10SingleTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("System", "Number", "s_Pow10SingleTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single[] s_Pow10SingleTable
void System::Number_::_set_s_Pow10SingleTable(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_s_Pow10SingleTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "s_Pow10SingleTable", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Double[] s_Pow10DoubleTable
::ArrayW<double> System::Number_::_get_s_Pow10DoubleTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_s_Pow10DoubleTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<double>>("System", "Number", "s_Pow10DoubleTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Double[] s_Pow10DoubleTable
void System::Number_::_set_s_Pow10DoubleTable(::ArrayW<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_s_Pow10DoubleTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "s_Pow10DoubleTable", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Int32Precision
int System::Number_::_get_Int32Precision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_Int32Precision");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "Int32Precision"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Int32Precision
void System::Number_::_set_Int32Precision(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_Int32Precision");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "Int32Precision", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 UInt32Precision
int System::Number_::_get_UInt32Precision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_UInt32Precision");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "UInt32Precision"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 UInt32Precision
void System::Number_::_set_UInt32Precision(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_UInt32Precision");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "UInt32Precision", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Int64Precision
int System::Number_::_get_Int64Precision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_Int64Precision");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "Int64Precision"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Int64Precision
void System::Number_::_set_Int64Precision(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_Int64Precision");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "Int64Precision", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 UInt64Precision
int System::Number_::_get_UInt64Precision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_UInt64Precision");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "UInt64Precision"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 UInt64Precision
void System::Number_::_set_UInt64Precision(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_UInt64Precision");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "UInt64Precision", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DoubleMaxExponent
int System::Number_::_get_DoubleMaxExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_DoubleMaxExponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "DoubleMaxExponent"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DoubleMaxExponent
void System::Number_::_set_DoubleMaxExponent(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_DoubleMaxExponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "DoubleMaxExponent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DoubleMinExponent
int System::Number_::_get_DoubleMinExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_DoubleMinExponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "DoubleMinExponent"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DoubleMinExponent
void System::Number_::_set_DoubleMinExponent(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_DoubleMinExponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "DoubleMinExponent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 FloatingPointMaxExponent
int System::Number_::_get_FloatingPointMaxExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_FloatingPointMaxExponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "FloatingPointMaxExponent"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 FloatingPointMaxExponent
void System::Number_::_set_FloatingPointMaxExponent(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_FloatingPointMaxExponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "FloatingPointMaxExponent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 FloatingPointMinExponent
int System::Number_::_get_FloatingPointMinExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_FloatingPointMinExponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "FloatingPointMinExponent"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 FloatingPointMinExponent
void System::Number_::_set_FloatingPointMinExponent(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_FloatingPointMinExponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "FloatingPointMinExponent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SingleMaxExponent
int System::Number_::_get_SingleMaxExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_SingleMaxExponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "SingleMaxExponent"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SingleMaxExponent
void System::Number_::_set_SingleMaxExponent(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_SingleMaxExponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "SingleMaxExponent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SingleMinExponent
int System::Number_::_get_SingleMinExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_get_SingleMinExponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number", "SingleMinExponent"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SingleMinExponent
void System::Number_::_set_SingleMinExponent(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::_set_SingleMinExponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "SingleMinExponent", value));
}
// Autogenerated method: System.Number.IsNegative
bool System::Number_::IsNegative(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::IsNegative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "IsNegative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Number.IsNegativeInfinity
bool System::Number_::IsNegativeInfinity(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::IsNegativeInfinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "IsNegativeInfinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Number.Dragon4Double
void System::Number_::Dragon4Double(double value, int cutoffNumber, bool isSignificantDigits, ByRef<::System::Number_::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Dragon4Double");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Dragon4Double", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(cutoffNumber), ::il2cpp_utils::ExtractType(isSignificantDigits), ::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, cutoffNumber, isSignificantDigits, byref(number));
}
// Autogenerated method: System.Number.Dragon4Single
void System::Number_::Dragon4Single(float value, int cutoffNumber, bool isSignificantDigits, ByRef<::System::Number_::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Dragon4Single");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Dragon4Single", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(cutoffNumber), ::il2cpp_utils::ExtractType(isSignificantDigits), ::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, cutoffNumber, isSignificantDigits, byref(number));
}
// Autogenerated method: System.Number.Dragon4
uint System::Number_::Dragon4(uint64_t mantissa, int exponent, uint mantissaHighBitIdx, bool hasUnequalMargins, int cutoffNumber, bool isSignificantDigits, ::System::Span_1<uint8_t> buffer, ByRef<int> decimalExponent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Dragon4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Dragon4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mantissa), ::il2cpp_utils::ExtractType(exponent), ::il2cpp_utils::ExtractType(mantissaHighBitIdx), ::il2cpp_utils::ExtractType(hasUnequalMargins), ::il2cpp_utils::ExtractType(cutoffNumber), ::il2cpp_utils::ExtractType(isSignificantDigits), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mantissa, exponent, mantissaHighBitIdx, hasUnequalMargins, cutoffNumber, isSignificantDigits, buffer, byref(decimalExponent));
}
// Autogenerated method: System.Number.FormatDecimal
::StringW System::Number_::FormatDecimal(::System::Decimal value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FormatDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.TryFormatDecimal
bool System::Number_::TryFormatDecimal(::System::Decimal value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::NumberFormatInfo* info, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryFormatDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryFormatDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, info, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.DecimalToNumber
void System::Number_::DecimalToNumber(ByRef<::System::Decimal> d, ByRef<::System::Number_::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DecimalToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "DecimalToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(d), byref(number));
}
// Autogenerated method: System.Number.FormatDouble
::StringW System::Number_::FormatDouble(double value, ::StringW format, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FormatDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.TryFormatDouble
bool System::Number_::TryFormatDouble(double value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::NumberFormatInfo* info, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryFormatDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryFormatDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, info, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.GetFloatingPointMaxDigitsAndPrecision
int System::Number_::GetFloatingPointMaxDigitsAndPrecision(::Il2CppChar fmt, ByRef<int> precision, ::System::Globalization::NumberFormatInfo* info, ByRef<bool> isSignificantDigits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::GetFloatingPointMaxDigitsAndPrecision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "GetFloatingPointMaxDigitsAndPrecision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fmt), ::il2cpp_utils::ExtractType(precision), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fmt, byref(precision), info, byref(isSignificantDigits));
}
// Autogenerated method: System.Number.FormatDouble
::StringW System::Number_::FormatDouble(ByRef<::System::Text::ValueStringBuilder__> sb, double value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FormatDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), value, format, info);
}
// Autogenerated method: System.Number.FormatSingle
::StringW System::Number_::FormatSingle(float value, ::StringW format, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FormatSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.TryFormatSingle
bool System::Number_::TryFormatSingle(float value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::NumberFormatInfo* info, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryFormatSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryFormatSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, info, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.FormatSingle
::StringW System::Number_::FormatSingle(ByRef<::System::Text::ValueStringBuilder__> sb, float value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FormatSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), value, format, info);
}
// Autogenerated method: System.Number.TryCopyTo
bool System::Number_::TryCopyTo(::StringW source, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryCopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryCopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.FormatInt32
::StringW System::Number_::FormatInt32(int value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FormatInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, provider);
}
// Autogenerated method: System.Number.TryFormatInt32
bool System::Number_::TryFormatInt32(int value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryFormatInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryFormatInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, provider, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.FormatUInt32
::StringW System::Number_::FormatUInt32(uint value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FormatUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, provider);
}
// Autogenerated method: System.Number.TryFormatUInt32
bool System::Number_::TryFormatUInt32(uint value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryFormatUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryFormatUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, provider, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.FormatInt64
::StringW System::Number_::FormatInt64(int64_t value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FormatInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, provider);
}
// Autogenerated method: System.Number.TryFormatInt64
bool System::Number_::TryFormatInt64(int64_t value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryFormatInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryFormatInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, provider, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.FormatUInt64
::StringW System::Number_::FormatUInt64(uint64_t value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FormatUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, provider);
}
// Autogenerated method: System.Number.TryFormatUInt64
bool System::Number_::TryFormatUInt64(uint64_t value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryFormatUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryFormatUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, provider, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.Int32ToNumber
void System::Number_::Int32ToNumber(int value, ByRef<::System::Number_::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Int32ToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Int32ToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(number));
}
// Autogenerated method: System.Number.NegativeInt32ToDecStr
::StringW System::Number_::NegativeInt32ToDecStr(int value, int digits, ::StringW sNegative) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NegativeInt32ToDecStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NegativeInt32ToDecStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(sNegative)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, digits, sNegative);
}
// Autogenerated method: System.Number.TryNegativeInt32ToDecStr
bool System::Number_::TryNegativeInt32ToDecStr(int value, int digits, ::StringW sNegative, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryNegativeInt32ToDecStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryNegativeInt32ToDecStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(sNegative), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, digits, sNegative, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.Int32ToHexStr
::StringW System::Number_::Int32ToHexStr(int value, ::Il2CppChar hexBase, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Int32ToHexStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Int32ToHexStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(hexBase), ::il2cpp_utils::ExtractType(digits)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, hexBase, digits);
}
// Autogenerated method: System.Number.TryInt32ToHexStr
bool System::Number_::TryInt32ToHexStr(int value, ::Il2CppChar hexBase, int digits, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryInt32ToHexStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryInt32ToHexStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(hexBase), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, hexBase, digits, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.Int32ToHexChars
::Il2CppChar* System::Number_::Int32ToHexChars(::Il2CppChar* buffer, uint value, int hexBase, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Int32ToHexChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Int32ToHexChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(hexBase), ::il2cpp_utils::ExtractType(digits)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, value, hexBase, digits);
}
// Autogenerated method: System.Number.UInt32ToNumber
void System::Number_::UInt32ToNumber(uint value, ByRef<::System::Number_::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::UInt32ToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "UInt32ToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(number));
}
// Autogenerated method: System.Number.UInt32ToDecChars
uint8_t* System::Number_::UInt32ToDecChars(uint8_t* bufferEnd, uint value, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::UInt32ToDecChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "UInt32ToDecChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferEnd), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferEnd, value, digits);
}
// Autogenerated method: System.Number.UInt32ToDecChars
::Il2CppChar* System::Number_::UInt32ToDecChars(::Il2CppChar* bufferEnd, uint value, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::UInt32ToDecChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "UInt32ToDecChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferEnd), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferEnd, value, digits);
}
// Autogenerated method: System.Number.UInt32ToDecStr
::StringW System::Number_::UInt32ToDecStr(uint value, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::UInt32ToDecStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "UInt32ToDecStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, digits);
}
// Autogenerated method: System.Number.TryUInt32ToDecStr
bool System::Number_::TryUInt32ToDecStr(uint value, int digits, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryUInt32ToDecStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryUInt32ToDecStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, digits, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.Int64ToNumber
void System::Number_::Int64ToNumber(int64_t input, ByRef<::System::Number_::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Int64ToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Int64ToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(number));
}
// Autogenerated method: System.Number.NegativeInt64ToDecStr
::StringW System::Number_::NegativeInt64ToDecStr(int64_t input, int digits, ::StringW sNegative) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NegativeInt64ToDecStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NegativeInt64ToDecStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(sNegative)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, digits, sNegative);
}
// Autogenerated method: System.Number.TryNegativeInt64ToDecStr
bool System::Number_::TryNegativeInt64ToDecStr(int64_t input, int digits, ::StringW sNegative, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryNegativeInt64ToDecStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryNegativeInt64ToDecStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(sNegative), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, digits, sNegative, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.Int64ToHexStr
::StringW System::Number_::Int64ToHexStr(int64_t value, ::Il2CppChar hexBase, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Int64ToHexStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Int64ToHexStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(hexBase), ::il2cpp_utils::ExtractType(digits)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, hexBase, digits);
}
// Autogenerated method: System.Number.TryInt64ToHexStr
bool System::Number_::TryInt64ToHexStr(int64_t value, ::Il2CppChar hexBase, int digits, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryInt64ToHexStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryInt64ToHexStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(hexBase), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, hexBase, digits, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.UInt64ToNumber
void System::Number_::UInt64ToNumber(uint64_t value, ByRef<::System::Number_::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::UInt64ToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "UInt64ToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(number));
}
// Autogenerated method: System.Number.UInt64ToDecStr
::StringW System::Number_::UInt64ToDecStr(uint64_t value, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::UInt64ToDecStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "UInt64ToDecStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, digits);
}
// Autogenerated method: System.Number.TryUInt64ToDecStr
bool System::Number_::TryUInt64ToDecStr(uint64_t value, int digits, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryUInt64ToDecStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryUInt64ToDecStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, digits, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.ParseFormatSpecifier
::Il2CppChar System::Number_::ParseFormatSpecifier(::System::ReadOnlySpan_1<::Il2CppChar> format, ByRef<int> digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ParseFormatSpecifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseFormatSpecifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, byref(digits));
}
// Autogenerated method: System.Number.NumberToString
void System::Number_::NumberToString(ByRef<::System::Text::ValueStringBuilder__> sb, ByRef<::System::Number_::NumberBuffer> number, ::Il2CppChar format, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), byref(number), format, nMaxDigits, info);
}
// Autogenerated method: System.Number.NumberToStringFormat
void System::Number_::NumberToStringFormat(ByRef<::System::Text::ValueStringBuilder__> sb, ByRef<::System::Number_::NumberBuffer> number, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberToStringFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberToStringFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), byref(number), format, info);
}
// Autogenerated method: System.Number.FormatCurrency
void System::Number_::FormatCurrency(ByRef<::System::Text::ValueStringBuilder__> sb, ByRef<::System::Number_::NumberBuffer> number, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FormatCurrency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatCurrency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), byref(number), nMaxDigits, info);
}
// Autogenerated method: System.Number.FormatFixed
void System::Number_::FormatFixed(ByRef<::System::Text::ValueStringBuilder__> sb, ByRef<::System::Number_::NumberBuffer> number, int nMaxDigits, ::ArrayW<int> groupDigits, ::StringW sDecimal, ::StringW sGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FormatFixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatFixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(groupDigits), ::il2cpp_utils::ExtractType(sDecimal), ::il2cpp_utils::ExtractType(sGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), byref(number), nMaxDigits, groupDigits, sDecimal, sGroup);
}
// Autogenerated method: System.Number.FormatNumber
void System::Number_::FormatNumber(ByRef<::System::Text::ValueStringBuilder__> sb, ByRef<::System::Number_::NumberBuffer> number, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FormatNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), byref(number), nMaxDigits, info);
}
// Autogenerated method: System.Number.FormatScientific
void System::Number_::FormatScientific(ByRef<::System::Text::ValueStringBuilder__> sb, ByRef<::System::Number_::NumberBuffer> number, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info, ::Il2CppChar expChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FormatScientific");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatScientific", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(expChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), byref(number), nMaxDigits, info, expChar);
}
// Autogenerated method: System.Number.FormatExponent
void System::Number_::FormatExponent(ByRef<::System::Text::ValueStringBuilder__> sb, ::System::Globalization::NumberFormatInfo* info, int value, ::Il2CppChar expChar, int minDigits, bool positiveSign) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FormatExponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatExponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(expChar), ::il2cpp_utils::ExtractType(minDigits), ::il2cpp_utils::ExtractType(positiveSign)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), info, value, expChar, minDigits, positiveSign);
}
// Autogenerated method: System.Number.FormatGeneral
void System::Number_::FormatGeneral(ByRef<::System::Text::ValueStringBuilder__> sb, ByRef<::System::Number_::NumberBuffer> number, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info, ::Il2CppChar expChar, bool bSuppressScientific) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FormatGeneral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatGeneral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(expChar), ::il2cpp_utils::ExtractType(bSuppressScientific)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), byref(number), nMaxDigits, info, expChar, bSuppressScientific);
}
// Autogenerated method: System.Number.FormatPercent
void System::Number_::FormatPercent(ByRef<::System::Text::ValueStringBuilder__> sb, ByRef<::System::Number_::NumberBuffer> number, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FormatPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), byref(number), nMaxDigits, info);
}
// Autogenerated method: System.Number.RoundNumber
void System::Number_::RoundNumber(ByRef<::System::Number_::NumberBuffer> number, int pos, bool isCorrectlyRounded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::RoundNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "RoundNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(isCorrectlyRounded)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), pos, isCorrectlyRounded);
}
// Autogenerated method: System.Number.FindSection
int System::Number_::FindSection(::System::ReadOnlySpan_1<::Il2CppChar> format, int section) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FindSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FindSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(section)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, section);
}
// Autogenerated method: System.Number.Low32
uint System::Number_::Low32(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Low32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Low32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Number.High32
uint System::Number_::High32(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::High32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "High32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Number.Int64DivMod1E9
uint System::Number_::Int64DivMod1E9(ByRef<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Int64DivMod1E9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Int64DivMod1E9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value));
}
// Autogenerated method: System.Number.ExtractFractionAndBiasedExponent
uint64_t System::Number_::ExtractFractionAndBiasedExponent(double value, ByRef<int> exponent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ExtractFractionAndBiasedExponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ExtractFractionAndBiasedExponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(exponent));
}
// Autogenerated method: System.Number.ExtractFractionAndBiasedExponent
uint System::Number_::ExtractFractionAndBiasedExponent(float value, ByRef<int> exponent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ExtractFractionAndBiasedExponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ExtractFractionAndBiasedExponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(exponent));
}
// Autogenerated method: System.Number.FastAllocateString
::StringW System::Number_::FastAllocateString(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FastAllocateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FastAllocateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated method: System.Number.SingleToInt32Bits
int System::Number_::SingleToInt32Bits(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::SingleToInt32Bits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "SingleToInt32Bits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Number.AccumulateDecimalDigitsIntoBigInteger
void System::Number_::AccumulateDecimalDigitsIntoBigInteger(ByRef<::System::Number_::NumberBuffer> number, uint firstIndex, uint lastIndex, ByRef<::System::Number_::BigInteger> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::AccumulateDecimalDigitsIntoBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "AccumulateDecimalDigitsIntoBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(firstIndex), ::il2cpp_utils::ExtractType(lastIndex), ::il2cpp_utils::ExtractIndependentType<::System::Number_::BigInteger&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), firstIndex, lastIndex, byref(result));
}
// Autogenerated method: System.Number.AssembleFloatingPointBits
uint64_t System::Number_::AssembleFloatingPointBits(ByRef<::System::Number_::FloatingPointInfo> info, uint64_t initialMantissa, int initialExponent, bool hasZeroTail) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::AssembleFloatingPointBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "AssembleFloatingPointBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(initialMantissa), ::il2cpp_utils::ExtractType(initialExponent), ::il2cpp_utils::ExtractType(hasZeroTail)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(info), initialMantissa, initialExponent, hasZeroTail);
}
// Autogenerated method: System.Number.ConvertBigIntegerToFloatingPointBits
uint64_t System::Number_::ConvertBigIntegerToFloatingPointBits(ByRef<::System::Number_::BigInteger> value, ByRef<::System::Number_::FloatingPointInfo> info, uint integerBitsOfPrecision, bool hasNonZeroFractionalPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ConvertBigIntegerToFloatingPointBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ConvertBigIntegerToFloatingPointBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(integerBitsOfPrecision), ::il2cpp_utils::ExtractType(hasNonZeroFractionalPart)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value), byref(info), integerBitsOfPrecision, hasNonZeroFractionalPart);
}
// Autogenerated method: System.Number.DigitsToUInt32
uint System::Number_::DigitsToUInt32(uint8_t* p, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DigitsToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "DigitsToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, count);
}
// Autogenerated method: System.Number.DigitsToUInt64
uint64_t System::Number_::DigitsToUInt64(uint8_t* p, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DigitsToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "DigitsToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, count);
}
// Autogenerated method: System.Number.NumberToFloatingPointBits
uint64_t System::Number_::NumberToFloatingPointBits(ByRef<::System::Number_::NumberBuffer> number, ByRef<::System::Number_::FloatingPointInfo> info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberToFloatingPointBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberToFloatingPointBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(info));
}
// Autogenerated method: System.Number.NumberToFloatingPointBitsSlow
uint64_t System::Number_::NumberToFloatingPointBitsSlow(ByRef<::System::Number_::NumberBuffer> number, ByRef<::System::Number_::FloatingPointInfo> info, uint positiveExponent, uint integerDigitsPresent, uint fractionalDigitsPresent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberToFloatingPointBitsSlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberToFloatingPointBitsSlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(positiveExponent), ::il2cpp_utils::ExtractType(integerDigitsPresent), ::il2cpp_utils::ExtractType(fractionalDigitsPresent)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(info), positiveExponent, integerDigitsPresent, fractionalDigitsPresent);
}
// Autogenerated method: System.Number.RightShiftWithRounding
uint64_t System::Number_::RightShiftWithRounding(uint64_t value, int shift, bool hasZeroTail) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::RightShiftWithRounding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "RightShiftWithRounding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(hasZeroTail)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, shift, hasZeroTail);
}
// Autogenerated method: System.Number.ShouldRoundUp
bool System::Number_::ShouldRoundUp(bool lsbBit, bool roundBit, bool hasTailBits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ShouldRoundUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ShouldRoundUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lsbBit), ::il2cpp_utils::ExtractType(roundBit), ::il2cpp_utils::ExtractType(hasTailBits)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lsbBit, roundBit, hasTailBits);
}
// Autogenerated method: System.Number.get_CharToHexLookup
::System::ReadOnlySpan_1<uint8_t> System::Number_::get_CharToHexLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::get_CharToHexLookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "get_CharToHexLookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Number.TryNumberToInt32
bool System::Number_::TryNumberToInt32(ByRef<::System::Number_::NumberBuffer> number, ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryNumberToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryNumberToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Number.TryNumberToInt64
bool System::Number_::TryNumberToInt64(ByRef<::System::Number_::NumberBuffer> number, ByRef<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryNumberToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryNumberToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Number.TryNumberToUInt32
bool System::Number_::TryNumberToUInt32(ByRef<::System::Number_::NumberBuffer> number, ByRef<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryNumberToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryNumberToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Number.TryNumberToUInt64
bool System::Number_::TryNumberToUInt64(ByRef<::System::Number_::NumberBuffer> number, ByRef<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryNumberToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryNumberToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Number.ParseInt32
int System::Number_::ParseInt32(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ParseInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info);
}
// Autogenerated method: System.Number.ParseInt64
int64_t System::Number_::ParseInt64(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ParseInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info);
}
// Autogenerated method: System.Number.ParseUInt32
uint System::Number_::ParseUInt32(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ParseUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info);
}
// Autogenerated method: System.Number.ParseUInt64
uint64_t System::Number_::ParseUInt64(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ParseUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info);
}
// Autogenerated method: System.Number.TryParseNumber
bool System::Number_::TryParseNumber(ByRef<::Il2CppChar*> str, ::Il2CppChar* strEnd, ::System::Globalization::NumberStyles styles, ByRef<::System::Number_::NumberBuffer> number, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryParseNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(strEnd), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), strEnd, styles, byref(number), info);
}
// Autogenerated method: System.Number.TryParseInt32
::System::Number_::ParsingStatus System::Number_::TryParseInt32(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryParseInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::ParsingStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseInt32Number
::System::Number_::ParsingStatus System::Number_::TryParseInt32Number(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryParseInt32Number");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseInt32Number", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::ParsingStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseInt32IntegerStyle
::System::Number_::ParsingStatus System::Number_::TryParseInt32IntegerStyle(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryParseInt32IntegerStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseInt32IntegerStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::ParsingStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseInt64IntegerStyle
::System::Number_::ParsingStatus System::Number_::TryParseInt64IntegerStyle(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<int64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryParseInt64IntegerStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseInt64IntegerStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::ParsingStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseInt64
::System::Number_::ParsingStatus System::Number_::TryParseInt64(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<int64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryParseInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::ParsingStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseInt64Number
::System::Number_::ParsingStatus System::Number_::TryParseInt64Number(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<int64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryParseInt64Number");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseInt64Number", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::ParsingStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseUInt32
::System::Number_::ParsingStatus System::Number_::TryParseUInt32(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<uint> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryParseUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::ParsingStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseUInt32Number
::System::Number_::ParsingStatus System::Number_::TryParseUInt32Number(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<uint> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryParseUInt32Number");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseUInt32Number", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::ParsingStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseUInt32IntegerStyle
::System::Number_::ParsingStatus System::Number_::TryParseUInt32IntegerStyle(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<uint> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryParseUInt32IntegerStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseUInt32IntegerStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::ParsingStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseUInt32HexNumberStyle
::System::Number_::ParsingStatus System::Number_::TryParseUInt32HexNumberStyle(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ByRef<uint> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryParseUInt32HexNumberStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseUInt32HexNumberStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::ParsingStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, byref(result));
}
// Autogenerated method: System.Number.TryParseUInt64
::System::Number_::ParsingStatus System::Number_::TryParseUInt64(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<uint64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryParseUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::ParsingStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseUInt64Number
::System::Number_::ParsingStatus System::Number_::TryParseUInt64Number(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<uint64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryParseUInt64Number");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseUInt64Number", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::ParsingStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseUInt64IntegerStyle
::System::Number_::ParsingStatus System::Number_::TryParseUInt64IntegerStyle(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<uint64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryParseUInt64IntegerStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseUInt64IntegerStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::ParsingStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseUInt64HexNumberStyle
::System::Number_::ParsingStatus System::Number_::TryParseUInt64HexNumberStyle(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ByRef<uint64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryParseUInt64HexNumberStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseUInt64HexNumberStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::ParsingStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, byref(result));
}
// Autogenerated method: System.Number.ParseDecimal
::System::Decimal System::Number_::ParseDecimal(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ParseDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info);
}
// Autogenerated method: System.Number.TryNumberToDecimal
bool System::Number_::TryNumberToDecimal(ByRef<::System::Number_::NumberBuffer> number, ByRef<::System::Decimal> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryNumberToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryNumberToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Number.ParseDouble
double System::Number_::ParseDouble(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ParseDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info);
}
// Autogenerated method: System.Number.ParseSingle
float System::Number_::ParseSingle(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ParseSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info);
}
// Autogenerated method: System.Number.TryParseDecimal
::System::Number_::ParsingStatus System::Number_::TryParseDecimal(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<::System::Decimal> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryParseDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<::System::Decimal&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::ParsingStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseDouble
bool System::Number_::TryParseDouble(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<double> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryParseDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseSingle
bool System::Number_::TryParseSingle(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<float> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryParseSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryStringToNumber
bool System::Number_::TryStringToNumber(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ByRef<::System::Number_::NumberBuffer> number, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TryStringToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryStringToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, byref(number), info);
}
// Autogenerated method: System.Number.TrailingZeros
bool System::Number_::TrailingZeros(::System::ReadOnlySpan_1<::Il2CppChar> value, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::TrailingZeros");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TrailingZeros", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, index);
}
// Autogenerated method: System.Number.IsSpaceReplacingChar
bool System::Number_::IsSpaceReplacingChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::IsSpaceReplacingChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "IsSpaceReplacingChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Number.MatchChars
::Il2CppChar* System::Number_::MatchChars(::Il2CppChar* p, ::Il2CppChar* pEnd, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::MatchChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "MatchChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(pEnd), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, pEnd, value);
}
// Autogenerated method: System.Number.IsWhite
bool System::Number_::IsWhite(int ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::IsWhite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "IsWhite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Number.IsDigit
bool System::Number_::IsDigit(int ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::IsDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "IsDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Number.ThrowOverflowOrFormatException
void System::Number_::ThrowOverflowOrFormatException(::System::Number_::ParsingStatus status, ::System::TypeCode type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ThrowOverflowOrFormatException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ThrowOverflowOrFormatException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, status, type);
}
// Autogenerated method: System.Number.ThrowOverflowException
void System::Number_::ThrowOverflowException(::System::TypeCode type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ThrowOverflowException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ThrowOverflowException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Number.GetException
::System::Exception* System::Number_::GetException(::System::Number_::ParsingStatus status, ::System::TypeCode type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::GetException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "GetException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, status, type);
}
// Autogenerated method: System.Number.NumberToDouble
double System::Number_::NumberToDouble(ByRef<::System::Number_::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number));
}
// Autogenerated method: System.Number.NumberToSingle
float System::Number_::NumberToSingle(ByRef<::System::Number_::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number));
}
// Autogenerated method: System.Number.Int32BitsToSingle
float System::Number_::Int32BitsToSingle(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Int32BitsToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Int32BitsToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Number..cctor
void System::Number_::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Number.<RoundNumber>g__ShouldRoundUp|70_0
bool System::Number_::$RoundNumber$g__ShouldRoundUp_70_0(uint8_t* _dig, int _i, ::System::Number_::NumberBufferKind numberKind, bool _isCorrectlyRounded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::<RoundNumber>g__ShouldRoundUp|70_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "<RoundNumber>g__ShouldRoundUp|70_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_dig), ::il2cpp_utils::ExtractType(_i), ::il2cpp_utils::ExtractType(numberKind), ::il2cpp_utils::ExtractType(_isCorrectlyRounded)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _dig, _i, numberKind, _isCorrectlyRounded);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Number/BigInteger
#include "System/Number__BigInteger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 BitsForLongestBinaryMantissa
int System::Number_::BigInteger::_get_BitsForLongestBinaryMantissa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::_get_BitsForLongestBinaryMantissa");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number/BigInteger", "BitsForLongestBinaryMantissa"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BitsForLongestBinaryMantissa
void System::Number_::BigInteger::_set_BitsForLongestBinaryMantissa(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::_set_BitsForLongestBinaryMantissa");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/BigInteger", "BitsForLongestBinaryMantissa", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 BitsForLongestDigitSequence
int System::Number_::BigInteger::_get_BitsForLongestDigitSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::_get_BitsForLongestDigitSequence");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number/BigInteger", "BitsForLongestDigitSequence"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BitsForLongestDigitSequence
void System::Number_::BigInteger::_set_BitsForLongestDigitSequence(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::_set_BitsForLongestDigitSequence");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/BigInteger", "BitsForLongestDigitSequence", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxBits
int System::Number_::BigInteger::_get_MaxBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::_get_MaxBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number/BigInteger", "MaxBits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxBits
void System::Number_::BigInteger::_set_MaxBits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::_set_MaxBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/BigInteger", "MaxBits", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 BitsPerBlock
int System::Number_::BigInteger::_get_BitsPerBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::_get_BitsPerBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number/BigInteger", "BitsPerBlock"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BitsPerBlock
void System::Number_::BigInteger::_set_BitsPerBlock(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::_set_BitsPerBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/BigInteger", "BitsPerBlock", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxBlockCount
int System::Number_::BigInteger::_get_MaxBlockCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::_get_MaxBlockCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number/BigInteger", "MaxBlockCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxBlockCount
void System::Number_::BigInteger::_set_MaxBlockCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::_set_MaxBlockCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/BigInteger", "MaxBlockCount", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_Pow10UInt32Table
::ArrayW<uint> System::Number_::BigInteger::_get_s_Pow10UInt32Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::_get_s_Pow10UInt32Table");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System", "Number/BigInteger", "s_Pow10UInt32Table"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_Pow10UInt32Table
void System::Number_::BigInteger::_set_s_Pow10UInt32Table(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::_set_s_Pow10UInt32Table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/BigInteger", "s_Pow10UInt32Table", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_Pow10BigNumTableIndices
::ArrayW<int> System::Number_::BigInteger::_get_s_Pow10BigNumTableIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::_get_s_Pow10BigNumTableIndices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System", "Number/BigInteger", "s_Pow10BigNumTableIndices"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_Pow10BigNumTableIndices
void System::Number_::BigInteger::_set_s_Pow10BigNumTableIndices(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::_set_s_Pow10BigNumTableIndices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/BigInteger", "s_Pow10BigNumTableIndices", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_Pow10BigNumTable
::ArrayW<uint> System::Number_::BigInteger::_get_s_Pow10BigNumTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::_get_s_Pow10BigNumTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System", "Number/BigInteger", "s_Pow10BigNumTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_Pow10BigNumTable
void System::Number_::BigInteger::_set_s_Pow10BigNumTable(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::_set_s_Pow10BigNumTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/BigInteger", "s_Pow10BigNumTable", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _length
[[deprecated("Use field access instead!")]] int& System::Number_::BigInteger::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::dyn__length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Number/BigInteger/<_blocks>e__FixedBuffer _blocks
[[deprecated("Use field access instead!")]] ::System::Number_::BigInteger::$_blocks$e__FixedBuffer& System::Number_::BigInteger::dyn__blocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::dyn__blocks");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blocks"))->offset;
  return *reinterpret_cast<::System::Number_::BigInteger::$_blocks$e__FixedBuffer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Number/BigInteger.Add
void System::Number_::BigInteger::Add(ByRef<::System::Number_::BigInteger> lhs, ByRef<::System::Number_::BigInteger> rhs, ByRef<::System::Number_::BigInteger> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs), ::il2cpp_utils::ExtractIndependentType<::System::Number_::BigInteger&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(lhs), byref(rhs), byref(result));
}
// Autogenerated method: System.Number/BigInteger.Compare
int System::Number_::BigInteger::Compare(ByRef<::System::Number_::BigInteger> lhs, ByRef<::System::Number_::BigInteger> rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(lhs), byref(rhs));
}
// Autogenerated method: System.Number/BigInteger.CountSignificantBits
uint System::Number_::BigInteger::CountSignificantBits(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::CountSignificantBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "CountSignificantBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Number/BigInteger.CountSignificantBits
uint System::Number_::BigInteger::CountSignificantBits(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::CountSignificantBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "CountSignificantBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Number/BigInteger.CountSignificantBits
uint System::Number_::BigInteger::CountSignificantBits(ByRef<::System::Number_::BigInteger> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::CountSignificantBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "CountSignificantBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value));
}
// Autogenerated method: System.Number/BigInteger.DivRem
void System::Number_::BigInteger::DivRem(ByRef<::System::Number_::BigInteger> lhs, ByRef<::System::Number_::BigInteger> rhs, ByRef<::System::Number_::BigInteger> quo, ByRef<::System::Number_::BigInteger> rem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::DivRem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "DivRem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs), ::il2cpp_utils::ExtractIndependentType<::System::Number_::BigInteger&>(), ::il2cpp_utils::ExtractIndependentType<::System::Number_::BigInteger&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(lhs), byref(rhs), byref(quo), byref(rem));
}
// Autogenerated method: System.Number/BigInteger.HeuristicDivide
uint System::Number_::BigInteger::HeuristicDivide(ByRef<::System::Number_::BigInteger> dividend, ByRef<::System::Number_::BigInteger> divisor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::HeuristicDivide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "HeuristicDivide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dividend), ::il2cpp_utils::ExtractType(divisor)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(dividend), byref(divisor));
}
// Autogenerated method: System.Number/BigInteger.Multiply
void System::Number_::BigInteger::Multiply(ByRef<::System::Number_::BigInteger> lhs, uint value, ByRef<::System::Number_::BigInteger> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<::System::Number_::BigInteger&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(lhs), value, byref(result));
}
// Autogenerated method: System.Number/BigInteger.Multiply
void System::Number_::BigInteger::Multiply(ByRef<::System::Number_::BigInteger> lhs, ByRef<::System::Number_::BigInteger> rhs, ByRef<::System::Number_::BigInteger> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs), ::il2cpp_utils::ExtractIndependentType<::System::Number_::BigInteger&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(lhs), byref(rhs), byref(result));
}
// Autogenerated method: System.Number/BigInteger.Pow2
void System::Number_::BigInteger::Pow2(uint exponent, ByRef<::System::Number_::BigInteger> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::Pow2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "Pow2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exponent), ::il2cpp_utils::ExtractIndependentType<::System::Number_::BigInteger&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exponent, byref(result));
}
// Autogenerated method: System.Number/BigInteger.Pow10
void System::Number_::BigInteger::Pow10(uint exponent, ByRef<::System::Number_::BigInteger> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::Pow10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "Pow10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exponent), ::il2cpp_utils::ExtractIndependentType<::System::Number_::BigInteger&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exponent, byref(result));
}
// Autogenerated method: System.Number/BigInteger.AddDivisor
uint System::Number_::BigInteger::AddDivisor(ByRef<::System::Number_::BigInteger> lhs, int lhsStartIndex, ByRef<::System::Number_::BigInteger> rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::AddDivisor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "AddDivisor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(lhsStartIndex), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(lhs), lhsStartIndex, byref(rhs));
}
// Autogenerated method: System.Number/BigInteger.DivideGuessTooBig
bool System::Number_::BigInteger::DivideGuessTooBig(uint64_t q, uint64_t valHi, uint valLo, uint divHi, uint divLo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::DivideGuessTooBig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "DivideGuessTooBig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractType(valHi), ::il2cpp_utils::ExtractType(valLo), ::il2cpp_utils::ExtractType(divHi), ::il2cpp_utils::ExtractType(divLo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q, valHi, valLo, divHi, divLo);
}
// Autogenerated method: System.Number/BigInteger.SubtractDivisor
uint System::Number_::BigInteger::SubtractDivisor(ByRef<::System::Number_::BigInteger> lhs, int lhsStartIndex, ByRef<::System::Number_::BigInteger> rhs, uint64_t q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::SubtractDivisor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "SubtractDivisor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(lhsStartIndex), ::il2cpp_utils::ExtractType(rhs), ::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(lhs), lhsStartIndex, byref(rhs), q);
}
// Autogenerated method: System.Number/BigInteger.Add
void System::Number_::BigInteger::Add(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Number/BigInteger.GetBlock
uint System::Number_::BigInteger::GetBlock(uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::GetBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Number/BigInteger.GetLength
int System::Number_::BigInteger::GetLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::GetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/BigInteger.IsOne
bool System::Number_::BigInteger::IsOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::IsOne");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsOne", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/BigInteger.IsZero
bool System::Number_::BigInteger::IsZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::IsZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/BigInteger.Multiply
void System::Number_::BigInteger::Multiply(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Number/BigInteger.Multiply
void System::Number_::BigInteger::Multiply(ByRef<::System::Number_::BigInteger> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: System.Number/BigInteger.Multiply10
void System::Number_::BigInteger::Multiply10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::Multiply10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Multiply10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/BigInteger.MultiplyPow10
void System::Number_::BigInteger::MultiplyPow10(uint exponent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::MultiplyPow10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MultiplyPow10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exponent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exponent);
}
// Autogenerated method: System.Number/BigInteger.SetUInt32
void System::Number_::BigInteger::SetUInt32(ByRef<::System::Number_::BigInteger> result, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::SetUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "SetUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Number_::BigInteger&>(), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), value);
}
// Autogenerated method: System.Number/BigInteger.SetUInt64
void System::Number_::BigInteger::SetUInt64(ByRef<::System::Number_::BigInteger> result, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::SetUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "SetUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Number_::BigInteger&>(), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), value);
}
// Autogenerated method: System.Number/BigInteger.SetValue
void System::Number_::BigInteger::SetValue(ByRef<::System::Number_::BigInteger> result, ByRef<::System::Number_::BigInteger> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Number_::BigInteger&>(), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(value));
}
// Autogenerated method: System.Number/BigInteger.SetZero
void System::Number_::BigInteger::SetZero(ByRef<::System::Number_::BigInteger> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::SetZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "SetZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Number_::BigInteger&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result));
}
// Autogenerated method: System.Number/BigInteger.ShiftLeft
void System::Number_::BigInteger::ShiftLeft(uint shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::ShiftLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ShiftLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shift);
}
// Autogenerated method: System.Number/BigInteger.ToUInt64
uint64_t System::Number_::BigInteger::ToUInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/BigInteger.GetBlocksPointer
uint* System::Number_::BigInteger::GetBlocksPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::GetBlocksPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBlocksPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/BigInteger.DivRem32
uint System::Number_::BigInteger::DivRem32(uint value, ByRef<uint> remainder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::DivRem32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", "DivRem32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(remainder));
}
// Autogenerated method: System.Number/BigInteger..cctor
void System::Number_::BigInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::BigInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/BigInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Number/DiyFp
#include "System/Number__DiyFp.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 DoubleImplicitBitIndex
int System::Number_::DiyFp::_get_DoubleImplicitBitIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DiyFp::_get_DoubleImplicitBitIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number/DiyFp", "DoubleImplicitBitIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DoubleImplicitBitIndex
void System::Number_::DiyFp::_set_DoubleImplicitBitIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DiyFp::_set_DoubleImplicitBitIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/DiyFp", "DoubleImplicitBitIndex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SingleImplicitBitIndex
int System::Number_::DiyFp::_get_SingleImplicitBitIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DiyFp::_get_SingleImplicitBitIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number/DiyFp", "SingleImplicitBitIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SingleImplicitBitIndex
void System::Number_::DiyFp::_set_SingleImplicitBitIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DiyFp::_set_SingleImplicitBitIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/DiyFp", "SingleImplicitBitIndex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SignificandSize
int System::Number_::DiyFp::_get_SignificandSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DiyFp::_get_SignificandSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number/DiyFp", "SignificandSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SignificandSize
void System::Number_::DiyFp::_set_SignificandSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DiyFp::_set_SignificandSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/DiyFp", "SignificandSize", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 f
[[deprecated("Use field access instead!")]] uint64_t& System::Number_::DiyFp::dyn_f() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DiyFp::dyn_f");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "f"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 e
[[deprecated("Use field access instead!")]] int& System::Number_::DiyFp::dyn_e() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DiyFp::dyn_e");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "e"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Number/DiyFp.CreateAndGetBoundaries
::System::Number_::DiyFp System::Number_::DiyFp::CreateAndGetBoundaries(double value, ByRef<::System::Number_::DiyFp> mMinus, ByRef<::System::Number_::DiyFp> mPlus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DiyFp::CreateAndGetBoundaries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/DiyFp", "CreateAndGetBoundaries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<::System::Number_::DiyFp&>(), ::il2cpp_utils::ExtractIndependentType<::System::Number_::DiyFp&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::DiyFp, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(mMinus), byref(mPlus));
}
// Autogenerated method: System.Number/DiyFp.CreateAndGetBoundaries
::System::Number_::DiyFp System::Number_::DiyFp::CreateAndGetBoundaries(float value, ByRef<::System::Number_::DiyFp> mMinus, ByRef<::System::Number_::DiyFp> mPlus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DiyFp::CreateAndGetBoundaries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/DiyFp", "CreateAndGetBoundaries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<::System::Number_::DiyFp&>(), ::il2cpp_utils::ExtractIndependentType<::System::Number_::DiyFp&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::DiyFp, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(mMinus), byref(mPlus));
}
// Autogenerated method: System.Number/DiyFp..ctor
System::Number_::DiyFp::DiyFp(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DiyFp::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Number/DiyFp..ctor
System::Number_::DiyFp::DiyFp(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DiyFp::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Number/DiyFp..ctor
// ABORTED elsewhere.  System::Number_::DiyFp::DiyFp(uint64_t f, int e)
// Autogenerated method: System.Number/DiyFp.Multiply
::System::Number_::DiyFp System::Number_::DiyFp::Multiply(ByRef<::System::Number_::DiyFp> other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DiyFp::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::DiyFp, false>(this, ___internal__method, byref(other));
}
// Autogenerated method: System.Number/DiyFp.Normalize
::System::Number_::DiyFp System::Number_::DiyFp::Normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DiyFp::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::DiyFp, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/DiyFp.Subtract
::System::Number_::DiyFp System::Number_::DiyFp::Subtract(ByRef<::System::Number_::DiyFp> other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DiyFp::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::DiyFp, false>(this, ___internal__method, byref(other));
}
// Autogenerated method: System.Number/DiyFp.GetBoundaries
void System::Number_::DiyFp::GetBoundaries(int implicitBitIndex, ByRef<::System::Number_::DiyFp> mMinus, ByRef<::System::Number_::DiyFp> mPlus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::DiyFp::GetBoundaries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBoundaries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(implicitBitIndex), ::il2cpp_utils::ExtractIndependentType<::System::Number_::DiyFp&>(), ::il2cpp_utils::ExtractIndependentType<::System::Number_::DiyFp&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, implicitBitIndex, byref(mMinus), byref(mPlus));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Number/Grisu3
#include "System/Number__Grisu3.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.Number/NumberBuffer
#include "System/Number__NumberBuffer.hpp"
// Including type: System.Number/DiyFp
#include "System/Number__DiyFp.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 CachedPowersDecimalExponentDistance
int System::Number_::Grisu3::_get_CachedPowersDecimalExponentDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_get_CachedPowersDecimalExponentDistance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number/Grisu3", "CachedPowersDecimalExponentDistance"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CachedPowersDecimalExponentDistance
void System::Number_::Grisu3::_set_CachedPowersDecimalExponentDistance(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_set_CachedPowersDecimalExponentDistance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/Grisu3", "CachedPowersDecimalExponentDistance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CachedPowersMinDecimalExponent
int System::Number_::Grisu3::_get_CachedPowersMinDecimalExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_get_CachedPowersMinDecimalExponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number/Grisu3", "CachedPowersMinDecimalExponent"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CachedPowersMinDecimalExponent
void System::Number_::Grisu3::_set_CachedPowersMinDecimalExponent(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_set_CachedPowersMinDecimalExponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/Grisu3", "CachedPowersMinDecimalExponent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CachedPowersPowerMaxDecimalExponent
int System::Number_::Grisu3::_get_CachedPowersPowerMaxDecimalExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_get_CachedPowersPowerMaxDecimalExponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number/Grisu3", "CachedPowersPowerMaxDecimalExponent"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CachedPowersPowerMaxDecimalExponent
void System::Number_::Grisu3::_set_CachedPowersPowerMaxDecimalExponent(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_set_CachedPowersPowerMaxDecimalExponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/Grisu3", "CachedPowersPowerMaxDecimalExponent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CachedPowersOffset
int System::Number_::Grisu3::_get_CachedPowersOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_get_CachedPowersOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number/Grisu3", "CachedPowersOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CachedPowersOffset
void System::Number_::Grisu3::_set_CachedPowersOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_set_CachedPowersOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/Grisu3", "CachedPowersOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Double D1Log210
double System::Number_::Grisu3::_get_D1Log210() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_get_D1Log210");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "Number/Grisu3", "D1Log210"));
}
// Autogenerated static field setter
// Set static field: static private System.Double D1Log210
void System::Number_::Grisu3::_set_D1Log210(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_set_D1Log210");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/Grisu3", "D1Log210", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaximalTargetExponent
int System::Number_::Grisu3::_get_MaximalTargetExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_get_MaximalTargetExponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number/Grisu3", "MaximalTargetExponent"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaximalTargetExponent
void System::Number_::Grisu3::_set_MaximalTargetExponent(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_set_MaximalTargetExponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/Grisu3", "MaximalTargetExponent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MinimalTargetExponent
int System::Number_::Grisu3::_get_MinimalTargetExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_get_MinimalTargetExponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number/Grisu3", "MinimalTargetExponent"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MinimalTargetExponent
void System::Number_::Grisu3::_set_MinimalTargetExponent(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_set_MinimalTargetExponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/Grisu3", "MinimalTargetExponent", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int16[] s_CachedPowersBinaryExponent
::ArrayW<int16_t> System::Number_::Grisu3::_get_s_CachedPowersBinaryExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_get_s_CachedPowersBinaryExponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int16_t>>("System", "Number/Grisu3", "s_CachedPowersBinaryExponent"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int16[] s_CachedPowersBinaryExponent
void System::Number_::Grisu3::_set_s_CachedPowersBinaryExponent(::ArrayW<int16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_set_s_CachedPowersBinaryExponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/Grisu3", "s_CachedPowersBinaryExponent", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int16[] s_CachedPowersDecimalExponent
::ArrayW<int16_t> System::Number_::Grisu3::_get_s_CachedPowersDecimalExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_get_s_CachedPowersDecimalExponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int16_t>>("System", "Number/Grisu3", "s_CachedPowersDecimalExponent"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int16[] s_CachedPowersDecimalExponent
void System::Number_::Grisu3::_set_s_CachedPowersDecimalExponent(::ArrayW<int16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_set_s_CachedPowersDecimalExponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/Grisu3", "s_CachedPowersDecimalExponent", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64[] s_CachedPowersSignificand
::ArrayW<uint64_t> System::Number_::Grisu3::_get_s_CachedPowersSignificand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_get_s_CachedPowersSignificand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint64_t>>("System", "Number/Grisu3", "s_CachedPowersSignificand"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64[] s_CachedPowersSignificand
void System::Number_::Grisu3::_set_s_CachedPowersSignificand(::ArrayW<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_set_s_CachedPowersSignificand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/Grisu3", "s_CachedPowersSignificand", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_SmallPowersOfTen
::ArrayW<uint> System::Number_::Grisu3::_get_s_SmallPowersOfTen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_get_s_SmallPowersOfTen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System", "Number/Grisu3", "s_SmallPowersOfTen"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_SmallPowersOfTen
void System::Number_::Grisu3::_set_s_SmallPowersOfTen(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::_set_s_SmallPowersOfTen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/Grisu3", "s_SmallPowersOfTen", value));
}
// Autogenerated method: System.Number/Grisu3.IsNegative
bool System::Number_::Grisu3::IsNegative(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::IsNegative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/Grisu3", "IsNegative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Number/Grisu3.IsNegativeInfinity
bool System::Number_::Grisu3::IsNegativeInfinity(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::IsNegativeInfinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/Grisu3", "IsNegativeInfinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Number/Grisu3.TryRunDouble
bool System::Number_::Grisu3::TryRunDouble(double value, int requestedDigits, ByRef<::System::Number_::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::TryRunDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/Grisu3", "TryRunDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(requestedDigits), ::il2cpp_utils::ExtractType(number)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, requestedDigits, byref(number));
}
// Autogenerated method: System.Number/Grisu3.TryRunSingle
bool System::Number_::Grisu3::TryRunSingle(float value, int requestedDigits, ByRef<::System::Number_::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::TryRunSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/Grisu3", "TryRunSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(requestedDigits), ::il2cpp_utils::ExtractType(number)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, requestedDigits, byref(number));
}
// Autogenerated method: System.Number/Grisu3.TryRunCounted
bool System::Number_::Grisu3::TryRunCounted(ByRef<::System::Number_::DiyFp> w, int requestedDigits, ::System::Span_1<uint8_t> buffer, ByRef<int> length, ByRef<int> decimalExponent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::TryRunCounted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/Grisu3", "TryRunCounted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(w), ::il2cpp_utils::ExtractType(requestedDigits), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(w), requestedDigits, buffer, byref(length), byref(decimalExponent));
}
// Autogenerated method: System.Number/Grisu3.TryRunShortest
bool System::Number_::Grisu3::TryRunShortest(ByRef<::System::Number_::DiyFp> boundaryMinus, ByRef<::System::Number_::DiyFp> w, ByRef<::System::Number_::DiyFp> boundaryPlus, ::System::Span_1<uint8_t> buffer, ByRef<int> length, ByRef<int> decimalExponent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::TryRunShortest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/Grisu3", "TryRunShortest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryMinus), ::il2cpp_utils::ExtractType(w), ::il2cpp_utils::ExtractType(boundaryPlus), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(boundaryMinus), byref(w), byref(boundaryPlus), buffer, byref(length), byref(decimalExponent));
}
// Autogenerated method: System.Number/Grisu3.BiggestPowerTen
uint System::Number_::Grisu3::BiggestPowerTen(uint number, int numberBits, ByRef<int> exponentPlusOne) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::BiggestPowerTen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/Grisu3", "BiggestPowerTen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(numberBits), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, number, numberBits, byref(exponentPlusOne));
}
// Autogenerated method: System.Number/Grisu3.TryDigitGenCounted
bool System::Number_::Grisu3::TryDigitGenCounted(ByRef<::System::Number_::DiyFp> w, int requestedDigits, ::System::Span_1<uint8_t> buffer, ByRef<int> length, ByRef<int> kappa) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::TryDigitGenCounted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/Grisu3", "TryDigitGenCounted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(w), ::il2cpp_utils::ExtractType(requestedDigits), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(w), requestedDigits, buffer, byref(length), byref(kappa));
}
// Autogenerated method: System.Number/Grisu3.TryDigitGenShortest
bool System::Number_::Grisu3::TryDigitGenShortest(ByRef<::System::Number_::DiyFp> low, ByRef<::System::Number_::DiyFp> w, ByRef<::System::Number_::DiyFp> high, ::System::Span_1<uint8_t> buffer, ByRef<int> length, ByRef<int> kappa) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::TryDigitGenShortest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/Grisu3", "TryDigitGenShortest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(low), ::il2cpp_utils::ExtractType(w), ::il2cpp_utils::ExtractType(high), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(low), byref(w), byref(high), buffer, byref(length), byref(kappa));
}
// Autogenerated method: System.Number/Grisu3.GetCachedPowerForBinaryExponentRange
::System::Number_::DiyFp System::Number_::Grisu3::GetCachedPowerForBinaryExponentRange(int minExponent, int maxExponent, ByRef<int> decimalExponent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::GetCachedPowerForBinaryExponentRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/Grisu3", "GetCachedPowerForBinaryExponentRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minExponent), ::il2cpp_utils::ExtractType(maxExponent), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Number_::DiyFp, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, minExponent, maxExponent, byref(decimalExponent));
}
// Autogenerated method: System.Number/Grisu3.TryRoundWeedCounted
bool System::Number_::Grisu3::TryRoundWeedCounted(::System::Span_1<uint8_t> buffer, int length, uint64_t rest, uint64_t tenKappa, uint64_t unit, ByRef<int> kappa) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::TryRoundWeedCounted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/Grisu3", "TryRoundWeedCounted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(rest), ::il2cpp_utils::ExtractType(tenKappa), ::il2cpp_utils::ExtractType(unit), ::il2cpp_utils::ExtractType(kappa)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, length, rest, tenKappa, unit, byref(kappa));
}
// Autogenerated method: System.Number/Grisu3.TryRoundWeedShortest
bool System::Number_::Grisu3::TryRoundWeedShortest(::System::Span_1<uint8_t> buffer, int length, uint64_t distanceTooHighW, uint64_t unsafeInterval, uint64_t rest, uint64_t tenKappa, uint64_t unit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::TryRoundWeedShortest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/Grisu3", "TryRoundWeedShortest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(distanceTooHighW), ::il2cpp_utils::ExtractType(unsafeInterval), ::il2cpp_utils::ExtractType(rest), ::il2cpp_utils::ExtractType(tenKappa), ::il2cpp_utils::ExtractType(unit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, length, distanceTooHighW, unsafeInterval, rest, tenKappa, unit);
}
// Autogenerated method: System.Number/Grisu3..cctor
void System::Number_::Grisu3::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::Grisu3::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/Grisu3", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Number/NumberBuffer
#include "System/Number__NumberBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 DigitsCount
[[deprecated("Use field access instead!")]] int& System::Number_::NumberBuffer::dyn_DigitsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBuffer::dyn_DigitsCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DigitsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Scale
[[deprecated("Use field access instead!")]] int& System::Number_::NumberBuffer::dyn_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBuffer::dyn_Scale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Scale"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsNegative
[[deprecated("Use field access instead!")]] bool& System::Number_::NumberBuffer::dyn_IsNegative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBuffer::dyn_IsNegative");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsNegative"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HasNonZeroTail
[[deprecated("Use field access instead!")]] bool& System::Number_::NumberBuffer::dyn_HasNonZeroTail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBuffer::dyn_HasNonZeroTail");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HasNonZeroTail"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Number/NumberBufferKind Kind
[[deprecated("Use field access instead!")]] ::System::Number_::NumberBufferKind& System::Number_::NumberBuffer::dyn_Kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBuffer::dyn_Kind");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Kind"))->offset;
  return *reinterpret_cast<::System::Number_::NumberBufferKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Span`1<System.Byte> Digits
[[deprecated("Use field access instead!")]] ::System::Span_1<uint8_t>& System::Number_::NumberBuffer::dyn_Digits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBuffer::dyn_Digits");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Digits"))->offset;
  return *reinterpret_cast<::System::Span_1<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Number/NumberBuffer..ctor
System::Number_::NumberBuffer::NumberBuffer(::System::Number_::NumberBufferKind kind, uint8_t* digits, int digitsLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBuffer::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kind), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(digitsLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, kind, digits, digitsLength);
}
// Autogenerated method: System.Number/NumberBuffer.CheckConsistency
void System::Number_::NumberBuffer::CheckConsistency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBuffer::CheckConsistency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckConsistency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/NumberBuffer.GetDigitsPointer
uint8_t* System::Number_::NumberBuffer::GetDigitsPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBuffer::GetDigitsPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDigitsPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/NumberBuffer.ToString
::StringW System::Number_::NumberBuffer::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBuffer::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Number/NumberBufferKind
#include "System/Number__NumberBufferKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Number/NumberBufferKind Unknown
::System::Number_::NumberBufferKind System::Number_::NumberBufferKind::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBufferKind::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Number_::NumberBufferKind>("System", "Number/NumberBufferKind", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Number/NumberBufferKind Unknown
void System::Number_::NumberBufferKind::_set_Unknown(::System::Number_::NumberBufferKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBufferKind::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/NumberBufferKind", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Number/NumberBufferKind Integer
::System::Number_::NumberBufferKind System::Number_::NumberBufferKind::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBufferKind::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Number_::NumberBufferKind>("System", "Number/NumberBufferKind", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public System.Number/NumberBufferKind Integer
void System::Number_::NumberBufferKind::_set_Integer(::System::Number_::NumberBufferKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBufferKind::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/NumberBufferKind", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Number/NumberBufferKind Decimal
::System::Number_::NumberBufferKind System::Number_::NumberBufferKind::_get_Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBufferKind::_get_Decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Number_::NumberBufferKind>("System", "Number/NumberBufferKind", "Decimal"));
}
// Autogenerated static field setter
// Set static field: static public System.Number/NumberBufferKind Decimal
void System::Number_::NumberBufferKind::_set_Decimal(::System::Number_::NumberBufferKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBufferKind::_set_Decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/NumberBufferKind", "Decimal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Number/NumberBufferKind FloatingPoint
::System::Number_::NumberBufferKind System::Number_::NumberBufferKind::_get_FloatingPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBufferKind::_get_FloatingPoint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Number_::NumberBufferKind>("System", "Number/NumberBufferKind", "FloatingPoint"));
}
// Autogenerated static field setter
// Set static field: static public System.Number/NumberBufferKind FloatingPoint
void System::Number_::NumberBufferKind::_set_FloatingPoint(::System::Number_::NumberBufferKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBufferKind::_set_FloatingPoint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/NumberBufferKind", "FloatingPoint", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::Number_::NumberBufferKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::NumberBufferKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Number/FloatingPointInfo
#include "System/Number__FloatingPointInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Number/FloatingPointInfo Double
::System::Number_::FloatingPointInfo System::Number_::FloatingPointInfo::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Number_::FloatingPointInfo>("System", "Number/FloatingPointInfo", "Double"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Number/FloatingPointInfo Double
void System::Number_::FloatingPointInfo::_set_Double(::System::Number_::FloatingPointInfo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/FloatingPointInfo", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Number/FloatingPointInfo Single
::System::Number_::FloatingPointInfo System::Number_::FloatingPointInfo::_get_Single() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::_get_Single");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Number_::FloatingPointInfo>("System", "Number/FloatingPointInfo", "Single"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Number/FloatingPointInfo Single
void System::Number_::FloatingPointInfo::_set_Single(::System::Number_::FloatingPointInfo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::_set_Single");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/FloatingPointInfo", "Single", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 <ZeroBits>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& System::Number_::FloatingPointInfo::dyn_$ZeroBits$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::dyn_$ZeroBits$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ZeroBits>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 <InfinityBits>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& System::Number_::FloatingPointInfo::dyn_$InfinityBits$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::dyn_$InfinityBits$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InfinityBits>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 <NormalMantissaMask>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& System::Number_::FloatingPointInfo::dyn_$NormalMantissaMask$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::dyn_$NormalMantissaMask$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NormalMantissaMask>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 <DenormalMantissaMask>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& System::Number_::FloatingPointInfo::dyn_$DenormalMantissaMask$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::dyn_$DenormalMantissaMask$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DenormalMantissaMask>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <MinBinaryExponent>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Number_::FloatingPointInfo::dyn_$MinBinaryExponent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::dyn_$MinBinaryExponent$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MinBinaryExponent>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <MaxBinaryExponent>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Number_::FloatingPointInfo::dyn_$MaxBinaryExponent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::dyn_$MaxBinaryExponent$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxBinaryExponent>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <ExponentBias>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Number_::FloatingPointInfo::dyn_$ExponentBias$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::dyn_$ExponentBias$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ExponentBias>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <OverflowDecimalExponent>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Number_::FloatingPointInfo::dyn_$OverflowDecimalExponent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::dyn_$OverflowDecimalExponent$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OverflowDecimalExponent>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt16 <NormalMantissaBits>k__BackingField
[[deprecated("Use field access instead!")]] uint16_t& System::Number_::FloatingPointInfo::dyn_$NormalMantissaBits$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::dyn_$NormalMantissaBits$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NormalMantissaBits>k__BackingField"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt16 <DenormalMantissaBits>k__BackingField
[[deprecated("Use field access instead!")]] uint16_t& System::Number_::FloatingPointInfo::dyn_$DenormalMantissaBits$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::dyn_$DenormalMantissaBits$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DenormalMantissaBits>k__BackingField"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt16 <ExponentBits>k__BackingField
[[deprecated("Use field access instead!")]] uint16_t& System::Number_::FloatingPointInfo::dyn_$ExponentBits$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::dyn_$ExponentBits$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ExponentBits>k__BackingField"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Number/FloatingPointInfo.get_ZeroBits
uint64_t System::Number_::FloatingPointInfo::get_ZeroBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::get_ZeroBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ZeroBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/FloatingPointInfo.get_InfinityBits
uint64_t System::Number_::FloatingPointInfo::get_InfinityBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::get_InfinityBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InfinityBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/FloatingPointInfo.get_NormalMantissaMask
uint64_t System::Number_::FloatingPointInfo::get_NormalMantissaMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::get_NormalMantissaMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NormalMantissaMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/FloatingPointInfo.get_DenormalMantissaMask
uint64_t System::Number_::FloatingPointInfo::get_DenormalMantissaMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::get_DenormalMantissaMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DenormalMantissaMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/FloatingPointInfo.get_MinBinaryExponent
int System::Number_::FloatingPointInfo::get_MinBinaryExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::get_MinBinaryExponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MinBinaryExponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/FloatingPointInfo.get_MaxBinaryExponent
int System::Number_::FloatingPointInfo::get_MaxBinaryExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::get_MaxBinaryExponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MaxBinaryExponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/FloatingPointInfo.get_ExponentBias
int System::Number_::FloatingPointInfo::get_ExponentBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::get_ExponentBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ExponentBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/FloatingPointInfo.get_OverflowDecimalExponent
int System::Number_::FloatingPointInfo::get_OverflowDecimalExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::get_OverflowDecimalExponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_OverflowDecimalExponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/FloatingPointInfo.get_NormalMantissaBits
uint16_t System::Number_::FloatingPointInfo::get_NormalMantissaBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::get_NormalMantissaBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NormalMantissaBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/FloatingPointInfo.get_DenormalMantissaBits
uint16_t System::Number_::FloatingPointInfo::get_DenormalMantissaBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::get_DenormalMantissaBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DenormalMantissaBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/FloatingPointInfo.get_ExponentBits
uint16_t System::Number_::FloatingPointInfo::get_ExponentBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::get_ExponentBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ExponentBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/FloatingPointInfo..ctor
System::Number_::FloatingPointInfo::FloatingPointInfo(uint16_t denormalMantissaBits, uint16_t exponentBits, int maxBinaryExponent, int exponentBias, uint64_t infinityBits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(denormalMantissaBits), ::il2cpp_utils::ExtractType(exponentBits), ::il2cpp_utils::ExtractType(maxBinaryExponent), ::il2cpp_utils::ExtractType(exponentBias), ::il2cpp_utils::ExtractType(infinityBits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, denormalMantissaBits, exponentBits, maxBinaryExponent, exponentBias, infinityBits);
}
// Autogenerated method: System.Number/FloatingPointInfo..cctor
void System::Number_::FloatingPointInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::FloatingPointInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number/FloatingPointInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Number/ParsingStatus
#include "System/Number__ParsingStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Number/ParsingStatus OK
::System::Number_::ParsingStatus System::Number_::ParsingStatus::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ParsingStatus::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Number_::ParsingStatus>("System", "Number/ParsingStatus", "OK"));
}
// Autogenerated static field setter
// Set static field: static public System.Number/ParsingStatus OK
void System::Number_::ParsingStatus::_set_OK(::System::Number_::ParsingStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ParsingStatus::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/ParsingStatus", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public System.Number/ParsingStatus Failed
::System::Number_::ParsingStatus System::Number_::ParsingStatus::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ParsingStatus::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Number_::ParsingStatus>("System", "Number/ParsingStatus", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public System.Number/ParsingStatus Failed
void System::Number_::ParsingStatus::_set_Failed(::System::Number_::ParsingStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ParsingStatus::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/ParsingStatus", "Failed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Number/ParsingStatus Overflow
::System::Number_::ParsingStatus System::Number_::ParsingStatus::_get_Overflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ParsingStatus::_get_Overflow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Number_::ParsingStatus>("System", "Number/ParsingStatus", "Overflow"));
}
// Autogenerated static field setter
// Set static field: static public System.Number/ParsingStatus Overflow
void System::Number_::ParsingStatus::_set_Overflow(::System::Number_::ParsingStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ParsingStatus::_set_Overflow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/ParsingStatus", "Overflow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Number_::ParsingStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number_::ParsingStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.NumberFormatInfoEx
#include "System/NumberFormatInfoEx.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.NumberFormatInfoEx.HasInvariantNumberSigns
bool System::NumberFormatInfoEx::HasInvariantNumberSigns(::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::NumberFormatInfoEx::HasInvariantNumberSigns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "NumberFormatInfoEx", "HasInvariantNumberSigns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.ValueStringBuilder
#include "System/Text/ValueStringBuilder__.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Char[] _arrayToReturnToPool
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Text::ValueStringBuilder__::dyn__arrayToReturnToPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::dyn__arrayToReturnToPool");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arrayToReturnToPool"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Span`1<System.Char> _chars
[[deprecated("Use field access instead!")]] ::System::Span_1<::Il2CppChar>& System::Text::ValueStringBuilder__::dyn__chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::dyn__chars");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_chars"))->offset;
  return *reinterpret_cast<::System::Span_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pos
[[deprecated("Use field access instead!")]] int& System::Text::ValueStringBuilder__::dyn__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::dyn__pos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.ValueStringBuilder..ctor
System::Text::ValueStringBuilder__::ValueStringBuilder__(::System::Span_1<::Il2CppChar> initialBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialBuffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initialBuffer);
}
// Autogenerated method: System.Text.ValueStringBuilder..ctor
System::Text::ValueStringBuilder__::ValueStringBuilder__(int initialCapacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialCapacity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initialCapacity);
}
// Autogenerated method: System.Text.ValueStringBuilder.get_Length
int System::Text::ValueStringBuilder__::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.ValueStringBuilder.set_Length
void System::Text::ValueStringBuilder__::set_Length(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::set_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.ValueStringBuilder.get_Capacity
int System::Text::ValueStringBuilder__::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::get_Capacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.ValueStringBuilder.EnsureCapacity
void System::Text::ValueStringBuilder__::EnsureCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "EnsureCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Text.ValueStringBuilder.GetPinnableReference
::Il2CppChar System::Text::ValueStringBuilder__::GetPinnableReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::GetPinnableReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPinnableReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.ValueStringBuilder.GetPinnableReference
::Il2CppChar System::Text::ValueStringBuilder__::GetPinnableReference(bool terminate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::GetPinnableReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPinnableReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(terminate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, terminate);
}
// Autogenerated method: System.Text.ValueStringBuilder.get_Item
::Il2CppChar System::Text::ValueStringBuilder__::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Text.ValueStringBuilder.get_RawChars
::System::Span_1<::Il2CppChar> System::Text::ValueStringBuilder__::get_RawChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::get_RawChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_RawChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Span_1<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.ValueStringBuilder.AsSpan
::System::ReadOnlySpan_1<::Il2CppChar> System::Text::ValueStringBuilder__::AsSpan(bool terminate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::AsSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AsSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(terminate)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(this, ___internal__method, terminate);
}
// Autogenerated method: System.Text.ValueStringBuilder.AsSpan
::System::ReadOnlySpan_1<::Il2CppChar> System::Text::ValueStringBuilder__::AsSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::AsSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AsSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.ValueStringBuilder.AsSpan
::System::ReadOnlySpan_1<::Il2CppChar> System::Text::ValueStringBuilder__::AsSpan(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::AsSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AsSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Text.ValueStringBuilder.AsSpan
::System::ReadOnlySpan_1<::Il2CppChar> System::Text::ValueStringBuilder__::AsSpan(int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::AsSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AsSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(this, ___internal__method, start, length);
}
// Autogenerated method: System.Text.ValueStringBuilder.TryCopyTo
bool System::Text::ValueStringBuilder__::TryCopyTo(::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::TryCopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryCopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(charsWritten));
}
// Autogenerated method: System.Text.ValueStringBuilder.Insert
void System::Text::ValueStringBuilder__::Insert(int index, ::Il2CppChar value, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value, count);
}
// Autogenerated method: System.Text.ValueStringBuilder.Insert
void System::Text::ValueStringBuilder__::Insert(int index, ::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, s);
}
// Autogenerated method: System.Text.ValueStringBuilder.Append
void System::Text::ValueStringBuilder__::Append(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Text.ValueStringBuilder.Append
void System::Text::ValueStringBuilder__::Append(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Text.ValueStringBuilder.AppendSlow
void System::Text::ValueStringBuilder__::AppendSlow(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::AppendSlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendSlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Text.ValueStringBuilder.Append
void System::Text::ValueStringBuilder__::Append(::Il2CppChar c, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c, count);
}
// Autogenerated method: System.Text.ValueStringBuilder.Append
void System::Text::ValueStringBuilder__::Append(::Il2CppChar* value, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, length);
}
// Autogenerated method: System.Text.ValueStringBuilder.Append
void System::Text::ValueStringBuilder__::Append(::System::ReadOnlySpan_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.ValueStringBuilder.AppendSpan
::System::Span_1<::Il2CppChar> System::Text::ValueStringBuilder__::AppendSpan(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::AppendSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Span_1<::Il2CppChar>, false>(this, ___internal__method, length);
}
// Autogenerated method: System.Text.ValueStringBuilder.GrowAndAppend
void System::Text::ValueStringBuilder__::GrowAndAppend(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::GrowAndAppend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GrowAndAppend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Text.ValueStringBuilder.Grow
void System::Text::ValueStringBuilder__::Grow(int additionalCapacityBeyondPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::Grow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Grow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(additionalCapacityBeyondPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, additionalCapacityBeyondPos);
}
// Autogenerated method: System.Text.ValueStringBuilder.Dispose
void System::Text::ValueStringBuilder__::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.ValueStringBuilder.ToString
::StringW System::Text::ValueStringBuilder__::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder__::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Buffers.Text.FormattingHelpers
#include "System/Buffers/Text/FormattingHelpers_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Buffers.Text.FormattingHelpers.CountDigits
int System::Buffers::Text::FormattingHelpers_::CountDigits(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers_::CountDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "FormattingHelpers", "CountDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Buffers.Text.FormattingHelpers.CountDigits
int System::Buffers::Text::FormattingHelpers_::CountDigits(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers_::CountDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "FormattingHelpers", "CountDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Buffers.Text.FormattingHelpers.CountHexDigits
int System::Buffers::Text::FormattingHelpers_::CountHexDigits(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers_::CountHexDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "FormattingHelpers", "CountHexDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Buffers.Text.FormattingHelpers.CountDecimalTrailingZeros
int System::Buffers::Text::FormattingHelpers_::CountDecimalTrailingZeros(uint value, ByRef<uint> valueWithoutTrailingZeros) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Text::FormattingHelpers_::CountDecimalTrailingZeros");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers.Text", "FormattingHelpers", "CountDecimalTrailingZeros", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(valueWithoutTrailingZeros));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Numerics.BitOperations
#include "System/Numerics/BitOperations.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Numerics.BitOperations.get_TrailingZeroCountDeBruijn
::System::ReadOnlySpan_1<uint8_t> System::Numerics::BitOperations::get_TrailingZeroCountDeBruijn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BitOperations::get_TrailingZeroCountDeBruijn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BitOperations", "get_TrailingZeroCountDeBruijn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BitOperations.get_Log2DeBruijn
::System::ReadOnlySpan_1<uint8_t> System::Numerics::BitOperations::get_Log2DeBruijn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BitOperations::get_Log2DeBruijn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BitOperations", "get_Log2DeBruijn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BitOperations.LeadingZeroCount
int System::Numerics::BitOperations::LeadingZeroCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BitOperations::LeadingZeroCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BitOperations", "LeadingZeroCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Numerics.BitOperations.LeadingZeroCount
int System::Numerics::BitOperations::LeadingZeroCount(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BitOperations::LeadingZeroCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BitOperations", "LeadingZeroCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Numerics.BitOperations.Log2
int System::Numerics::BitOperations::Log2(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BitOperations::Log2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BitOperations", "Log2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Numerics.BitOperations.Log2
int System::Numerics::BitOperations::Log2(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BitOperations::Log2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BitOperations", "Log2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Numerics.BitOperations.Log2SoftwareFallback
int System::Numerics::BitOperations::Log2SoftwareFallback(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BitOperations::Log2SoftwareFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BitOperations", "Log2SoftwareFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Numerics.BitOperations.PopCount
int System::Numerics::BitOperations::PopCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BitOperations::PopCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BitOperations", "PopCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Numerics.BitOperations.PopCount
int System::Numerics::BitOperations::PopCount(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BitOperations::PopCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BitOperations", "PopCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Numerics.BitOperations.TrailingZeroCount
int System::Numerics::BitOperations::TrailingZeroCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BitOperations::TrailingZeroCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BitOperations", "TrailingZeroCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Numerics.BitOperations.TrailingZeroCount
int System::Numerics::BitOperations::TrailingZeroCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BitOperations::TrailingZeroCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BitOperations", "TrailingZeroCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Numerics.BitOperations.TrailingZeroCount
int System::Numerics::BitOperations::TrailingZeroCount(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BitOperations::TrailingZeroCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BitOperations", "TrailingZeroCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Numerics.BitOperations.TrailingZeroCount
int System::Numerics::BitOperations::TrailingZeroCount(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BitOperations::TrailingZeroCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BitOperations", "TrailingZeroCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Numerics.BitOperations.RotateLeft
uint System::Numerics::BitOperations::RotateLeft(uint value, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BitOperations::RotateLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BitOperations", "RotateLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, offset);
}
// Autogenerated method: System.Numerics.BitOperations.RotateLeft
uint64_t System::Numerics::BitOperations::RotateLeft(uint64_t value, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BitOperations::RotateLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BitOperations", "RotateLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, offset);
}
// Autogenerated method: System.Numerics.BitOperations.RotateRight
uint System::Numerics::BitOperations::RotateRight(uint value, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BitOperations::RotateRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BitOperations", "RotateRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, offset);
}
// Autogenerated method: System.Numerics.BitOperations.RotateRight
uint64_t System::Numerics::BitOperations::RotateRight(uint64_t value, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BitOperations::RotateRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BitOperations", "RotateRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Cysharp.Text.ExceptionUtil
#include "Cysharp/Text/ExceptionUtil.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Cysharp.Text.ExceptionUtil.ThrowArgumentException
void Cysharp::Text::ExceptionUtil::ThrowArgumentException(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ExceptionUtil::ThrowArgumentException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "ExceptionUtil", "ThrowArgumentException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: Cysharp.Text.ExceptionUtil.ThrowFormatException
void Cysharp::Text::ExceptionUtil::ThrowFormatException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ExceptionUtil::ThrowFormatException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "ExceptionUtil", "ThrowFormatException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Cysharp.Text.ExceptionUtil.ThrowFormatError
void Cysharp::Text::ExceptionUtil::ThrowFormatError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ExceptionUtil::ThrowFormatError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "ExceptionUtil", "ThrowFormatError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Cysharp.Text.FastNumberWriter
#include "Cysharp/Text/FastNumberWriter.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Cysharp.Text.FastNumberWriter.TryWriteInt64
bool Cysharp::Text::FastNumberWriter::TryWriteInt64(::System::Span_1<::Il2CppChar> buffer, ByRef<int> charsWritten, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::FastNumberWriter::TryWriteInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "FastNumberWriter", "TryWriteInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, byref(charsWritten), value);
}
// Autogenerated method: Cysharp.Text.FastNumberWriter.TryWriteUInt64
bool Cysharp::Text::FastNumberWriter::TryWriteUInt64(::System::Span_1<::Il2CppChar> buffer, ByRef<int> charsWritten, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::FastNumberWriter::TryWriteUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "FastNumberWriter", "TryWriteUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, byref(charsWritten), value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Cysharp.Text.Utf16FormatHelper
#include "Cysharp/Text/Utf16FormatHelper.hpp"
// Including type: System.Buffers.IBufferWriter`1
#include "System/Buffers/IBufferWriter_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Char sp
::Il2CppChar Cysharp::Text::Utf16FormatHelper::_get_sp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16FormatHelper::_get_sp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("Cysharp.Text", "Utf16FormatHelper", "sp"));
}
// Autogenerated static field setter
// Set static field: static private System.Char sp
void Cysharp::Text::Utf16FormatHelper::_set_sp(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16FormatHelper::_set_sp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16FormatHelper", "sp", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Cysharp.Text.Utf8FormatHelper
#include "Cysharp/Text/Utf8FormatHelper.hpp"
// Including type: System.Buffers.IBufferWriter`1
#include "System/Buffers/IBufferWriter_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte sp
uint8_t Cysharp::Text::Utf8FormatHelper::_get_sp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8FormatHelper::_get_sp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Cysharp.Text", "Utf8FormatHelper", "sp"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte sp
void Cysharp::Text::Utf8FormatHelper::_set_sp(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8FormatHelper::_set_sp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8FormatHelper", "sp", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Cysharp.Text.FormatParser
#include "Cysharp/Text/FormatParser.hpp"
// Including type: Cysharp.Text.FormatParser/ParseResult
#include "Cysharp/Text/FormatParser_ParseResult.hpp"
// Including type: Cysharp.Text.ParserScanResult
#include "Cysharp/Text/ParserScanResult.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 ArgLengthLimit
int Cysharp::Text::FormatParser::_get_ArgLengthLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::FormatParser::_get_ArgLengthLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Cysharp.Text", "FormatParser", "ArgLengthLimit"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 ArgLengthLimit
void Cysharp::Text::FormatParser::_set_ArgLengthLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::FormatParser::_set_ArgLengthLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "FormatParser", "ArgLengthLimit", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 WidthLimit
int Cysharp::Text::FormatParser::_get_WidthLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::FormatParser::_get_WidthLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Cysharp.Text", "FormatParser", "WidthLimit"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 WidthLimit
void Cysharp::Text::FormatParser::_set_WidthLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::FormatParser::_set_WidthLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "FormatParser", "WidthLimit", value));
}
// Autogenerated method: Cysharp.Text.FormatParser.ScanFormatString
::Cysharp::Text::ParserScanResult Cysharp::Text::FormatParser::ScanFormatString(::StringW format, ByRef<int> i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::FormatParser::ScanFormatString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "FormatParser", "ScanFormatString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Cysharp::Text::ParserScanResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, byref(i));
}
// Autogenerated method: Cysharp.Text.FormatParser.ScanFormatString
::Cysharp::Text::ParserScanResult Cysharp::Text::FormatParser::ScanFormatString(::System::ReadOnlySpan_1<::Il2CppChar> format, ByRef<int> i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::FormatParser::ScanFormatString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "FormatParser", "ScanFormatString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Cysharp::Text::ParserScanResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, byref(i));
}
// Autogenerated method: Cysharp.Text.FormatParser.IsDigit
bool Cysharp::Text::FormatParser::IsDigit(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::FormatParser::IsDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "FormatParser", "IsDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Cysharp.Text.FormatParser.Parse
::Cysharp::Text::FormatParser::ParseResult Cysharp::Text::FormatParser::Parse(::System::ReadOnlySpan_1<::Il2CppChar> format, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::FormatParser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "FormatParser", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Cysharp::Text::FormatParser::ParseResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, i);
}
// Autogenerated method: Cysharp.Text.FormatParser.Parse
::Cysharp::Text::FormatParser::ParseResult Cysharp::Text::FormatParser::Parse(::StringW format, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::FormatParser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "FormatParser", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Cysharp::Text::FormatParser::ParseResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, i);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Cysharp.Text.FormatParser/ParseResult
#include "Cysharp/Text/FormatParser_ParseResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Index
[[deprecated("Use field access instead!")]] int& Cysharp::Text::FormatParser::ParseResult::dyn_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::FormatParser::ParseResult::dyn_Index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.ReadOnlySpan`1<System.Char> FormatString
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& Cysharp::Text::FormatParser::ParseResult::dyn_FormatString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::FormatParser::ParseResult::dyn_FormatString");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FormatString"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 LastIndex
[[deprecated("Use field access instead!")]] int& Cysharp::Text::FormatParser::ParseResult::dyn_LastIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::FormatParser::ParseResult::dyn_LastIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Alignment
[[deprecated("Use field access instead!")]] int& Cysharp::Text::FormatParser::ParseResult::dyn_Alignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::FormatParser::ParseResult::dyn_Alignment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Alignment"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Cysharp.Text.FormatParser/ParseResult..ctor
// ABORTED elsewhere.  Cysharp::Text::FormatParser::ParseResult::ParseResult(int index, ::System::ReadOnlySpan_1<::Il2CppChar> formatString, int lastIndex, int alignment)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Cysharp.Text.ParserScanResult
#include "Cysharp/Text/ParserScanResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.ParserScanResult BraceOpen
::Cysharp::Text::ParserScanResult Cysharp::Text::ParserScanResult::_get_BraceOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ParserScanResult::_get_BraceOpen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Cysharp::Text::ParserScanResult>("Cysharp.Text", "ParserScanResult", "BraceOpen"));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.ParserScanResult BraceOpen
void Cysharp::Text::ParserScanResult::_set_BraceOpen(::Cysharp::Text::ParserScanResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ParserScanResult::_set_BraceOpen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "ParserScanResult", "BraceOpen", value));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.ParserScanResult EscapedChar
::Cysharp::Text::ParserScanResult Cysharp::Text::ParserScanResult::_get_EscapedChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ParserScanResult::_get_EscapedChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Cysharp::Text::ParserScanResult>("Cysharp.Text", "ParserScanResult", "EscapedChar"));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.ParserScanResult EscapedChar
void Cysharp::Text::ParserScanResult::_set_EscapedChar(::Cysharp::Text::ParserScanResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ParserScanResult::_set_EscapedChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "ParserScanResult", "EscapedChar", value));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.ParserScanResult NormalChar
::Cysharp::Text::ParserScanResult Cysharp::Text::ParserScanResult::_get_NormalChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ParserScanResult::_get_NormalChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Cysharp::Text::ParserScanResult>("Cysharp.Text", "ParserScanResult", "NormalChar"));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.ParserScanResult NormalChar
void Cysharp::Text::ParserScanResult::_set_NormalChar(::Cysharp::Text::ParserScanResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ParserScanResult::_set_NormalChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "ParserScanResult", "NormalChar", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Cysharp::Text::ParserScanResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ParserScanResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Cysharp.Text.NestedStringBuilderCreationException
#include "Cysharp/Text/NestedStringBuilderCreationException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Cysharp.Text.PreparedFormatHelper
#include "Cysharp/Text/PreparedFormatHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Cysharp.Text.PreparedFormatHelper.Utf16Parse
::ArrayW<::Cysharp::Text::Utf16FormatSegment> Cysharp::Text::PreparedFormatHelper::Utf16Parse(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::PreparedFormatHelper::Utf16Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "PreparedFormatHelper", "Utf16Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Cysharp::Text::Utf16FormatSegment>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: Cysharp.Text.PreparedFormatHelper.Utf8Parse
::ArrayW<::Cysharp::Text::Utf8FormatSegment> Cysharp::Text::PreparedFormatHelper::Utf8Parse(::StringW format, ByRef<::ArrayW<uint8_t>> utf8buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::PreparedFormatHelper::Utf8Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "PreparedFormatHelper", "Utf8Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Cysharp::Text::Utf8FormatSegment>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, byref(utf8buffer));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Cysharp.Text.Utf8FormatSegment
#include "Cysharp/Text/Utf8FormatSegment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 NotFormatIndex
int Cysharp::Text::Utf8FormatSegment::_get_NotFormatIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8FormatSegment::_get_NotFormatIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Cysharp.Text", "Utf8FormatSegment", "NotFormatIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 NotFormatIndex
void Cysharp::Text::Utf8FormatSegment::_set_NotFormatIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8FormatSegment::_set_NotFormatIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8FormatSegment", "NotFormatIndex", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Offset
[[deprecated("Use field access instead!")]] int& Cysharp::Text::Utf8FormatSegment::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8FormatSegment::dyn_Offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Count
[[deprecated("Use field access instead!")]] int& Cysharp::Text::Utf8FormatSegment::dyn_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8FormatSegment::dyn_Count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 FormatIndex
[[deprecated("Use field access instead!")]] int& Cysharp::Text::Utf8FormatSegment::dyn_FormatIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8FormatSegment::dyn_FormatIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FormatIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Buffers.StandardFormat StandardFormat
[[deprecated("Use field access instead!")]] ::System::Buffers::StandardFormat& Cysharp::Text::Utf8FormatSegment::dyn_StandardFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8FormatSegment::dyn_StandardFormat");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StandardFormat"))->offset;
  return *reinterpret_cast<::System::Buffers::StandardFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Alignment
[[deprecated("Use field access instead!")]] int& Cysharp::Text::Utf8FormatSegment::dyn_Alignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8FormatSegment::dyn_Alignment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Alignment"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Cysharp.Text.Utf8FormatSegment.get_IsFormatArgument
bool Cysharp::Text::Utf8FormatSegment::get_IsFormatArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8FormatSegment::get_IsFormatArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsFormatArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf8FormatSegment..ctor
// ABORTED elsewhere.  Cysharp::Text::Utf8FormatSegment::Utf8FormatSegment(int offset, int count, int formatIndex, ::System::Buffers::StandardFormat format, int alignment)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Cysharp.Text.Utf16FormatSegment
#include "Cysharp/Text/Utf16FormatSegment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 NotFormatIndex
int Cysharp::Text::Utf16FormatSegment::_get_NotFormatIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16FormatSegment::_get_NotFormatIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Cysharp.Text", "Utf16FormatSegment", "NotFormatIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 NotFormatIndex
void Cysharp::Text::Utf16FormatSegment::_set_NotFormatIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16FormatSegment::_set_NotFormatIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16FormatSegment", "NotFormatIndex", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Offset
[[deprecated("Use field access instead!")]] int& Cysharp::Text::Utf16FormatSegment::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16FormatSegment::dyn_Offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Count
[[deprecated("Use field access instead!")]] int& Cysharp::Text::Utf16FormatSegment::dyn_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16FormatSegment::dyn_Count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 FormatIndex
[[deprecated("Use field access instead!")]] int& Cysharp::Text::Utf16FormatSegment::dyn_FormatIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16FormatSegment::dyn_FormatIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FormatIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Alignment
[[deprecated("Use field access instead!")]] int& Cysharp::Text::Utf16FormatSegment::dyn_Alignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16FormatSegment::dyn_Alignment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Alignment"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Cysharp.Text.Utf16FormatSegment.get_IsFormatArgument
bool Cysharp::Text::Utf16FormatSegment::get_IsFormatArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16FormatSegment::get_IsFormatArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsFormatArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf16FormatSegment..ctor
// ABORTED elsewhere.  Cysharp::Text::Utf16FormatSegment::Utf16FormatSegment(int offset, int count, int formatIndex, int alignment)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Cysharp.Text.Utf16ValueStringBuilder
#include "Cysharp/Text/Utf16ValueStringBuilder.hpp"
// Including type: Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1
#include "Cysharp/Text/Utf16ValueStringBuilder_TryFormat_1.hpp"
// Including type: Cysharp.Text.Utf16ValueStringBuilder/ExceptionUtil
#include "Cysharp/Text/Utf16ValueStringBuilder_ExceptionUtil.hpp"
// Including type: Cysharp.Text.Utf16ValueStringBuilder/FormatterCache`1
#include "Cysharp/Text/Utf16ValueStringBuilder_FormatterCache_1.hpp"
// Including type: Cysharp.Text.Utf16ValueStringBuilder/<>c
#include "Cysharp/Text/Utf16ValueStringBuilder_--c.hpp"
// Including type: Cysharp.Text.Utf16ValueStringBuilder/<>c__170`1
#include "Cysharp/Text/Utf16ValueStringBuilder_--c__170_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyCollection`1
#include "System/Collections/Generic/IReadOnlyCollection_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.ReadOnlyMemory`1
#include "System/ReadOnlyMemory_1.hpp"
// Including type: System.ArraySegment`1
#include "System/ArraySegment_1.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.Memory`1
#include "System/Memory_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 ThreadStaticBufferSize
int Cysharp::Text::Utf16ValueStringBuilder::_get_ThreadStaticBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::_get_ThreadStaticBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Cysharp.Text", "Utf16ValueStringBuilder", "ThreadStaticBufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ThreadStaticBufferSize
void Cysharp::Text::Utf16ValueStringBuilder::_set_ThreadStaticBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::_set_ThreadStaticBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder", "ThreadStaticBufferSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DefaultBufferSize
int Cysharp::Text::Utf16ValueStringBuilder::_get_DefaultBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::_get_DefaultBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Cysharp.Text", "Utf16ValueStringBuilder", "DefaultBufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DefaultBufferSize
void Cysharp::Text::Utf16ValueStringBuilder::_set_DefaultBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::_set_DefaultBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder", "DefaultBufferSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char newLine1
::Il2CppChar Cysharp::Text::Utf16ValueStringBuilder::_get_newLine1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::_get_newLine1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("Cysharp.Text", "Utf16ValueStringBuilder", "newLine1"));
}
// Autogenerated static field setter
// Set static field: static private System.Char newLine1
void Cysharp::Text::Utf16ValueStringBuilder::_set_newLine1(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::_set_newLine1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder", "newLine1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char newLine2
::Il2CppChar Cysharp::Text::Utf16ValueStringBuilder::_get_newLine2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::_get_newLine2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("Cysharp.Text", "Utf16ValueStringBuilder", "newLine2"));
}
// Autogenerated static field setter
// Set static field: static private System.Char newLine2
void Cysharp::Text::Utf16ValueStringBuilder::_set_newLine2(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::_set_newLine2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder", "newLine2", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean crlf
bool Cysharp::Text::Utf16ValueStringBuilder::_get_crlf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::_get_crlf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Cysharp.Text", "Utf16ValueStringBuilder", "crlf"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean crlf
void Cysharp::Text::Utf16ValueStringBuilder::_set_crlf(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::_set_crlf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder", "crlf", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char[] scratchBuffer
::ArrayW<::Il2CppChar> Cysharp::Text::Utf16ValueStringBuilder::_get_scratchBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::_get_scratchBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("Cysharp.Text", "Utf16ValueStringBuilder", "scratchBuffer"));
}
// Autogenerated static field setter
// Set static field: static private System.Char[] scratchBuffer
void Cysharp::Text::Utf16ValueStringBuilder::_set_scratchBuffer(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::_set_scratchBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder", "scratchBuffer", value));
}
// Autogenerated static field getter
// Get static field: static System.Boolean scratchBufferUsed
bool Cysharp::Text::Utf16ValueStringBuilder::_get_scratchBufferUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::_get_scratchBufferUsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Cysharp.Text", "Utf16ValueStringBuilder", "scratchBufferUsed"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean scratchBufferUsed
void Cysharp::Text::Utf16ValueStringBuilder::_set_scratchBufferUsed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::_set_scratchBufferUsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder", "scratchBufferUsed", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& Cysharp::Text::Utf16ValueStringBuilder::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::dyn_buffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
[[deprecated("Use field access instead!")]] int& Cysharp::Text::Utf16ValueStringBuilder::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::dyn_index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposeImmediately
[[deprecated("Use field access instead!")]] bool& Cysharp::Text::Utf16ValueStringBuilder::dyn_disposeImmediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::dyn_disposeImmediately");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposeImmediately"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.CreateFormatter
::Il2CppObject* Cysharp::Text::Utf16ValueStringBuilder::CreateFormatter(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::CreateFormatter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "Utf16ValueStringBuilder", "CreateFormatter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(uint8_t value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(uint8_t value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(::System::DateTime value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(::System::DateTime value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(::System::DateTimeOffset value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(::System::DateTimeOffset value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(::System::Decimal value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(::System::Decimal value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(double value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(double value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(int16_t value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(int16_t value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(int value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(int value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(int64_t value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(int64_t value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(int8_t value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(int8_t value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(float value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(float value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(::System::TimeSpan value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(::System::TimeSpan value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(uint16_t value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(uint16_t value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(uint value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(uint value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(uint64_t value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(uint64_t value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(::System::Guid value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(::System::Guid value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder..cctor
void Cysharp::Text::Utf16ValueStringBuilder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "Utf16ValueStringBuilder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.get_Length
int Cysharp::Text::Utf16ValueStringBuilder::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AsSpan
::System::ReadOnlySpan_1<::Il2CppChar> Cysharp::Text::Utf16ValueStringBuilder::AsSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AsSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AsSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AsMemory
::System::ReadOnlyMemory_1<::Il2CppChar> Cysharp::Text::Utf16ValueStringBuilder::AsMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AsMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AsMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlyMemory_1<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AsArraySegment
::System::ArraySegment_1<::Il2CppChar> Cysharp::Text::Utf16ValueStringBuilder::AsArraySegment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AsArraySegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AsArraySegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArraySegment_1<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder..ctor
Cysharp::Text::Utf16ValueStringBuilder::Utf16ValueStringBuilder(bool disposeImmediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposeImmediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposeImmediately);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Dispose
void Cysharp::Text::Utf16ValueStringBuilder::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Cysharp::Text::Utf16ValueStringBuilder), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Clear
void Cysharp::Text::Utf16ValueStringBuilder::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.TryGrow
void Cysharp::Text::Utf16ValueStringBuilder::TryGrow(int sizeHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::TryGrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sizeHint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sizeHint);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Grow
void Cysharp::Text::Utf16ValueStringBuilder::Grow(int sizeHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Grow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Grow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sizeHint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sizeHint);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(::Il2CppChar value, int repeatCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(repeatCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, repeatCount);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(::StringW value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(::ArrayW<::Il2CppChar> value, int startIndex, int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(charCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, startIndex, charCount);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Append
void Cysharp::Text::Utf16ValueStringBuilder::Append(::System::ReadOnlySpan_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.AppendLine
void Cysharp::Text::Utf16ValueStringBuilder::AppendLine(::System::ReadOnlySpan_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Insert
void Cysharp::Text::Utf16ValueStringBuilder::Insert(int index, ::StringW value, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value, count);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Insert
void Cysharp::Text::Utf16ValueStringBuilder::Insert(int index, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Insert
void Cysharp::Text::Utf16ValueStringBuilder::Insert(int index, ::System::ReadOnlySpan_1<::Il2CppChar> value, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value, count);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Replace
void Cysharp::Text::Utf16ValueStringBuilder::Replace(::Il2CppChar oldChar, ::Il2CppChar newChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldChar), ::il2cpp_utils::ExtractType(newChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldChar, newChar);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Replace
void Cysharp::Text::Utf16ValueStringBuilder::Replace(::Il2CppChar oldChar, ::Il2CppChar newChar, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldChar), ::il2cpp_utils::ExtractType(newChar), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldChar, newChar, startIndex, count);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Replace
void Cysharp::Text::Utf16ValueStringBuilder::Replace(::StringW oldValue, ::StringW newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldValue, newValue);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Replace
void Cysharp::Text::Utf16ValueStringBuilder::Replace(::System::ReadOnlySpan_1<::Il2CppChar> oldValue, ::System::ReadOnlySpan_1<::Il2CppChar> newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldValue, newValue);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Replace
void Cysharp::Text::Utf16ValueStringBuilder::Replace(::StringW oldValue, ::StringW newValue, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldValue, newValue, startIndex, count);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Replace
void Cysharp::Text::Utf16ValueStringBuilder::Replace(::System::ReadOnlySpan_1<::Il2CppChar> oldValue, ::System::ReadOnlySpan_1<::Il2CppChar> newValue, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldValue, newValue, startIndex, count);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.ReplaceAt
void Cysharp::Text::Utf16ValueStringBuilder::ReplaceAt(::Il2CppChar newChar, int replaceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::ReplaceAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReplaceAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChar), ::il2cpp_utils::ExtractType(replaceIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newChar, replaceIndex);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Remove
void Cysharp::Text::Utf16ValueStringBuilder::Remove(int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startIndex, length);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.TryCopyTo
bool Cysharp::Text::Utf16ValueStringBuilder::TryCopyTo(::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::TryCopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryCopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(charsWritten));
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.GetMemory
::System::Memory_1<::Il2CppChar> Cysharp::Text::Utf16ValueStringBuilder::GetMemory(int sizeHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::GetMemory");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Cysharp::Text::Utf16ValueStringBuilder), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Memory_1<::Il2CppChar>, false>(this, ___internal__method, sizeHint);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.GetSpan
::System::Span_1<::Il2CppChar> Cysharp::Text::Utf16ValueStringBuilder::GetSpan(int sizeHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::GetSpan");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Cysharp::Text::Utf16ValueStringBuilder), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Span_1<::Il2CppChar>, false>(this, ___internal__method, sizeHint);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Advance
void Cysharp::Text::Utf16ValueStringBuilder::Advance(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Advance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Cysharp::Text::Utf16ValueStringBuilder), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.Cysharp.Text.IResettableBufferWriter<System.Char>.Reset
void Cysharp::Text::Utf16ValueStringBuilder::Cysharp_Text_IResettableBufferWriter$System_Char$_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::Cysharp.Text.IResettableBufferWriter<System.Char>.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Cysharp::Text::Utf16ValueStringBuilder), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.ThrowArgumentException
void Cysharp::Text::Utf16ValueStringBuilder::ThrowArgumentException(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::ThrowArgumentException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ThrowArgumentException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, paramName);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.ThrowFormatException
void Cysharp::Text::Utf16ValueStringBuilder::ThrowFormatException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::ThrowFormatException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "Utf16ValueStringBuilder", "ThrowFormatException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.ThrowNestedException
void Cysharp::Text::Utf16ValueStringBuilder::ThrowNestedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::ThrowNestedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "Utf16ValueStringBuilder", "ThrowNestedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder.ToString
::StringW Cysharp::Text::Utf16ValueStringBuilder::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Cysharp.Text.Utf16ValueStringBuilder/ExceptionUtil
#include "Cysharp/Text/Utf16ValueStringBuilder_ExceptionUtil.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/ExceptionUtil.ThrowArgumentOutOfRangeException
void Cysharp::Text::Utf16ValueStringBuilder::ExceptionUtil::ThrowArgumentOutOfRangeException(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::ExceptionUtil::ThrowArgumentOutOfRangeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "Utf16ValueStringBuilder/ExceptionUtil", "ThrowArgumentOutOfRangeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Cysharp.Text.Utf16ValueStringBuilder/<>c
#include "Cysharp/Text/Utf16ValueStringBuilder_--c.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1
#include "Cysharp/Text/Utf16ValueStringBuilder_TryFormat_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Cysharp.Text.Utf16ValueStringBuilder/<>c <>9
::Cysharp::Text::Utf16ValueStringBuilder::$$c* Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf16ValueStringBuilder::$$c*>("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Cysharp.Text.Utf16ValueStringBuilder/<>c <>9
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9(::Cysharp::Text::Utf16ValueStringBuilder::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.SByte> <>9__52_0
::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<int8_t>* Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<int8_t>*>("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_0")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.SByte> <>9__52_0
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_0(::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<int8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_0", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.Int16> <>9__52_1
::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<int16_t>* Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<int16_t>*>("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_1")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.Int16> <>9__52_1
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_1(::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<int16_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_1", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.Int32> <>9__52_2
::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<int>* Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<int>*>("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_2")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.Int32> <>9__52_2
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_2(::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_2", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.Int64> <>9__52_3
::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<int64_t>* Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<int64_t>*>("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_3")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.Int64> <>9__52_3
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_3(::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<int64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_3", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.Byte> <>9__52_4
::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<uint8_t>* Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<uint8_t>*>("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_4")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.Byte> <>9__52_4
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_4(::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_4", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.UInt16> <>9__52_5
::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<uint16_t>* Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_5");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<uint16_t>*>("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_5")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.UInt16> <>9__52_5
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_5(::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<uint16_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_5");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_5", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.UInt32> <>9__52_6
::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<uint>* Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_6");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<uint>*>("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_6")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.UInt32> <>9__52_6
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_6(::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_6");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_6", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.UInt64> <>9__52_7
::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<uint64_t>* Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_7");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<uint64_t>*>("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_7")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.UInt64> <>9__52_7
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_7(::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<uint64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_7");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_7", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.Single> <>9__52_8
::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<float>* Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_8");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<float>*>("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_8")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.Single> <>9__52_8
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_8(::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_8");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_8", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.Double> <>9__52_9
::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<double>* Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<double>*>("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_9")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.Double> <>9__52_9
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_9(::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<double>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_9", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.TimeSpan> <>9__52_10
::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::TimeSpan>* Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_10");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::TimeSpan>*>("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_10")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.TimeSpan> <>9__52_10
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_10(::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::TimeSpan>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_10");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_10", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.DateTime> <>9__52_11
::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::DateTime>* Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_11");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::DateTime>*>("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_11")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.DateTime> <>9__52_11
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_11(::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::DateTime>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_11");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_11", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.DateTimeOffset> <>9__52_12
::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::DateTimeOffset>* Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_12");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::DateTimeOffset>*>("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_12")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.DateTimeOffset> <>9__52_12
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_12(::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::DateTimeOffset>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_12");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_12", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.Decimal> <>9__52_13
::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::Decimal>* Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_13");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::Decimal>*>("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_13")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.Decimal> <>9__52_13
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_13(::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::Decimal>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_13");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_13", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.Guid> <>9__52_14
::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::Guid>* Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_14");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::Guid>*>("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_14")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.Guid> <>9__52_14
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_14(::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::Guid>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_14");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_14", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.IntPtr> <>9__52_15
::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::IntPtr>* Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_15");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::IntPtr>*>("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_15")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.IntPtr> <>9__52_15
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_15(::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::IntPtr>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_15");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_15", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.UIntPtr> <>9__52_16
::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::UIntPtr>* Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_get_$$9__52_16");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::UIntPtr>*>("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_16")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf16ValueStringBuilder/TryFormat`1<System.UIntPtr> <>9__52_16
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_16(::Cysharp::Text::Utf16ValueStringBuilder::TryFormat_1<::System::UIntPtr>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::_set_$$9__52_16");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf16ValueStringBuilder/<>c", "<>9__52_16", value)));
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/<>c..cctor
void Cysharp::Text::Utf16ValueStringBuilder::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "Utf16ValueStringBuilder/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/<>c.<CreateFormatter>b__52_0
bool Cysharp::Text::Utf16ValueStringBuilder::$$c::$CreateFormatter$b__52_0(int8_t x, ::System::Span_1<::Il2CppChar> dest, ByRef<int> written, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::<CreateFormatter>b__52_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__52_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/<>c.<CreateFormatter>b__52_1
bool Cysharp::Text::Utf16ValueStringBuilder::$$c::$CreateFormatter$b__52_1(int16_t x, ::System::Span_1<::Il2CppChar> dest, ByRef<int> written, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::<CreateFormatter>b__52_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__52_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/<>c.<CreateFormatter>b__52_2
bool Cysharp::Text::Utf16ValueStringBuilder::$$c::$CreateFormatter$b__52_2(int x, ::System::Span_1<::Il2CppChar> dest, ByRef<int> written, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::<CreateFormatter>b__52_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__52_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/<>c.<CreateFormatter>b__52_3
bool Cysharp::Text::Utf16ValueStringBuilder::$$c::$CreateFormatter$b__52_3(int64_t x, ::System::Span_1<::Il2CppChar> dest, ByRef<int> written, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::<CreateFormatter>b__52_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__52_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/<>c.<CreateFormatter>b__52_4
bool Cysharp::Text::Utf16ValueStringBuilder::$$c::$CreateFormatter$b__52_4(uint8_t x, ::System::Span_1<::Il2CppChar> dest, ByRef<int> written, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::<CreateFormatter>b__52_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__52_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/<>c.<CreateFormatter>b__52_5
bool Cysharp::Text::Utf16ValueStringBuilder::$$c::$CreateFormatter$b__52_5(uint16_t x, ::System::Span_1<::Il2CppChar> dest, ByRef<int> written, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::<CreateFormatter>b__52_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__52_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/<>c.<CreateFormatter>b__52_6
bool Cysharp::Text::Utf16ValueStringBuilder::$$c::$CreateFormatter$b__52_6(uint x, ::System::Span_1<::Il2CppChar> dest, ByRef<int> written, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::<CreateFormatter>b__52_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__52_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/<>c.<CreateFormatter>b__52_7
bool Cysharp::Text::Utf16ValueStringBuilder::$$c::$CreateFormatter$b__52_7(uint64_t x, ::System::Span_1<::Il2CppChar> dest, ByRef<int> written, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::<CreateFormatter>b__52_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__52_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/<>c.<CreateFormatter>b__52_8
bool Cysharp::Text::Utf16ValueStringBuilder::$$c::$CreateFormatter$b__52_8(float x, ::System::Span_1<::Il2CppChar> dest, ByRef<int> written, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::<CreateFormatter>b__52_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__52_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/<>c.<CreateFormatter>b__52_9
bool Cysharp::Text::Utf16ValueStringBuilder::$$c::$CreateFormatter$b__52_9(double x, ::System::Span_1<::Il2CppChar> dest, ByRef<int> written, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::<CreateFormatter>b__52_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__52_9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/<>c.<CreateFormatter>b__52_10
bool Cysharp::Text::Utf16ValueStringBuilder::$$c::$CreateFormatter$b__52_10(::System::TimeSpan x, ::System::Span_1<::Il2CppChar> dest, ByRef<int> written, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::<CreateFormatter>b__52_10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__52_10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/<>c.<CreateFormatter>b__52_11
bool Cysharp::Text::Utf16ValueStringBuilder::$$c::$CreateFormatter$b__52_11(::System::DateTime x, ::System::Span_1<::Il2CppChar> dest, ByRef<int> written, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::<CreateFormatter>b__52_11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__52_11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/<>c.<CreateFormatter>b__52_12
bool Cysharp::Text::Utf16ValueStringBuilder::$$c::$CreateFormatter$b__52_12(::System::DateTimeOffset x, ::System::Span_1<::Il2CppChar> dest, ByRef<int> written, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::<CreateFormatter>b__52_12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__52_12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/<>c.<CreateFormatter>b__52_13
bool Cysharp::Text::Utf16ValueStringBuilder::$$c::$CreateFormatter$b__52_13(::System::Decimal x, ::System::Span_1<::Il2CppChar> dest, ByRef<int> written, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::<CreateFormatter>b__52_13");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__52_13", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/<>c.<CreateFormatter>b__52_14
bool Cysharp::Text::Utf16ValueStringBuilder::$$c::$CreateFormatter$b__52_14(::System::Guid x, ::System::Span_1<::Il2CppChar> dest, ByRef<int> written, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::<CreateFormatter>b__52_14");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__52_14", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/<>c.<CreateFormatter>b__52_15
bool Cysharp::Text::Utf16ValueStringBuilder::$$c::$CreateFormatter$b__52_15(::System::IntPtr x, ::System::Span_1<::Il2CppChar> dest, ByRef<int> written, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::<CreateFormatter>b__52_15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__52_15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf16ValueStringBuilder/<>c.<CreateFormatter>b__52_16
bool Cysharp::Text::Utf16ValueStringBuilder::$$c::$CreateFormatter$b__52_16(::System::UIntPtr x, ::System::Span_1<::Il2CppChar> dest, ByRef<int> written, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf16ValueStringBuilder::$$c::<CreateFormatter>b__52_16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__52_16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Cysharp.Text.Utf8ValueStringBuilder
#include "Cysharp/Text/Utf8ValueStringBuilder.hpp"
// Including type: Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1
#include "Cysharp/Text/Utf8ValueStringBuilder_TryFormat_1.hpp"
// Including type: Cysharp.Text.Utf8ValueStringBuilder/FormatterCache`1
#include "Cysharp/Text/Utf8ValueStringBuilder_FormatterCache_1.hpp"
// Including type: Cysharp.Text.Utf8ValueStringBuilder/<>c
#include "Cysharp/Text/Utf8ValueStringBuilder_--c.hpp"
// Including type: Cysharp.Text.Utf8ValueStringBuilder/<>c__150`1
#include "Cysharp/Text/Utf8ValueStringBuilder_--c__150_1.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyCollection`1
#include "System/Collections/Generic/IReadOnlyCollection_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.ReadOnlyMemory`1
#include "System/ReadOnlyMemory_1.hpp"
// Including type: System.ArraySegment`1
#include "System/ArraySegment_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Memory`1
#include "System/Memory_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 ThreadStaticBufferSize
int Cysharp::Text::Utf8ValueStringBuilder::_get_ThreadStaticBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::_get_ThreadStaticBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Cysharp.Text", "Utf8ValueStringBuilder", "ThreadStaticBufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ThreadStaticBufferSize
void Cysharp::Text::Utf8ValueStringBuilder::_set_ThreadStaticBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::_set_ThreadStaticBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder", "ThreadStaticBufferSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DefaultBufferSize
int Cysharp::Text::Utf8ValueStringBuilder::_get_DefaultBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::_get_DefaultBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Cysharp.Text", "Utf8ValueStringBuilder", "DefaultBufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DefaultBufferSize
void Cysharp::Text::Utf8ValueStringBuilder::_set_DefaultBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::_set_DefaultBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder", "DefaultBufferSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding UTF8NoBom
::System::Text::Encoding* Cysharp::Text::Utf8ValueStringBuilder::_get_UTF8NoBom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::_get_UTF8NoBom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("Cysharp.Text", "Utf8ValueStringBuilder", "UTF8NoBom"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding UTF8NoBom
void Cysharp::Text::Utf8ValueStringBuilder::_set_UTF8NoBom(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::_set_UTF8NoBom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder", "UTF8NoBom", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte newLine1
uint8_t Cysharp::Text::Utf8ValueStringBuilder::_get_newLine1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::_get_newLine1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Cysharp.Text", "Utf8ValueStringBuilder", "newLine1"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte newLine1
void Cysharp::Text::Utf8ValueStringBuilder::_set_newLine1(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::_set_newLine1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder", "newLine1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte newLine2
uint8_t Cysharp::Text::Utf8ValueStringBuilder::_get_newLine2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::_get_newLine2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Cysharp.Text", "Utf8ValueStringBuilder", "newLine2"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte newLine2
void Cysharp::Text::Utf8ValueStringBuilder::_set_newLine2(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::_set_newLine2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder", "newLine2", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean crlf
bool Cysharp::Text::Utf8ValueStringBuilder::_get_crlf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::_get_crlf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Cysharp.Text", "Utf8ValueStringBuilder", "crlf"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean crlf
void Cysharp::Text::Utf8ValueStringBuilder::_set_crlf(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::_set_crlf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder", "crlf", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] scratchBuffer
::ArrayW<uint8_t> Cysharp::Text::Utf8ValueStringBuilder::_get_scratchBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::_get_scratchBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Cysharp.Text", "Utf8ValueStringBuilder", "scratchBuffer"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] scratchBuffer
void Cysharp::Text::Utf8ValueStringBuilder::_set_scratchBuffer(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::_set_scratchBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder", "scratchBuffer", value));
}
// Autogenerated static field getter
// Get static field: static System.Boolean scratchBufferUsed
bool Cysharp::Text::Utf8ValueStringBuilder::_get_scratchBufferUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::_get_scratchBufferUsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Cysharp.Text", "Utf8ValueStringBuilder", "scratchBufferUsed"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean scratchBufferUsed
void Cysharp::Text::Utf8ValueStringBuilder::_set_scratchBufferUsed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::_set_scratchBufferUsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder", "scratchBufferUsed", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Cysharp::Text::Utf8ValueStringBuilder::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::dyn_buffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
[[deprecated("Use field access instead!")]] int& Cysharp::Text::Utf8ValueStringBuilder::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::dyn_index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposeImmediately
[[deprecated("Use field access instead!")]] bool& Cysharp::Text::Utf8ValueStringBuilder::dyn_disposeImmediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::dyn_disposeImmediately");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposeImmediately"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.CreateFormatter
::Il2CppObject* Cysharp::Text::Utf8ValueStringBuilder::CreateFormatter(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::CreateFormatter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "Utf8ValueStringBuilder", "CreateFormatter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(uint8_t value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(uint8_t value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(::System::DateTime value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(::System::DateTime value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(::System::DateTimeOffset value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(::System::DateTimeOffset value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(::System::Decimal value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(::System::Decimal value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(double value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(double value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(int16_t value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(int16_t value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(int value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(int value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(int64_t value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(int64_t value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(int8_t value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(int8_t value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(float value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(float value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(::System::TimeSpan value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(::System::TimeSpan value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(uint16_t value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(uint16_t value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(uint value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(uint value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(uint64_t value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(uint64_t value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(::System::Guid value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(::System::Guid value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(bool value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(bool value, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder..cctor
void Cysharp::Text::Utf8ValueStringBuilder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "Utf8ValueStringBuilder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.get_Length
int Cysharp::Text::Utf8ValueStringBuilder::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AsSpan
::System::ReadOnlySpan_1<uint8_t> Cysharp::Text::Utf8ValueStringBuilder::AsSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AsSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AsSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AsMemory
::System::ReadOnlyMemory_1<uint8_t> Cysharp::Text::Utf8ValueStringBuilder::AsMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AsMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AsMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlyMemory_1<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AsArraySegment
::System::ArraySegment_1<uint8_t> Cysharp::Text::Utf8ValueStringBuilder::AsArraySegment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AsArraySegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AsArraySegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArraySegment_1<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder..ctor
Cysharp::Text::Utf8ValueStringBuilder::Utf8ValueStringBuilder(bool disposeImmediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposeImmediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposeImmediately);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Dispose
void Cysharp::Text::Utf8ValueStringBuilder::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Cysharp::Text::Utf8ValueStringBuilder), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Clear
void Cysharp::Text::Utf8ValueStringBuilder::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.TryGrow
void Cysharp::Text::Utf8ValueStringBuilder::TryGrow(int sizeHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::TryGrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sizeHint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sizeHint);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Grow
void Cysharp::Text::Utf8ValueStringBuilder::Grow(int sizeHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Grow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Grow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sizeHint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sizeHint);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(::Il2CppChar value, int repeatCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(repeatCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, repeatCount);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(::StringW value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Append
void Cysharp::Text::Utf8ValueStringBuilder::Append(::System::ReadOnlySpan_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLine
void Cysharp::Text::Utf8ValueStringBuilder::AppendLine(::System::ReadOnlySpan_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.AppendLiteral
void Cysharp::Text::Utf8ValueStringBuilder::AppendLiteral(::System::ReadOnlySpan_1<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::AppendLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.CopyTo
void Cysharp::Text::Utf8ValueStringBuilder::CopyTo(::System::Buffers::IBufferWriter_1<uint8_t>* bufferWriter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferWriter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferWriter);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.TryCopyTo
bool Cysharp::Text::Utf8ValueStringBuilder::TryCopyTo(::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::TryCopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryCopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(bytesWritten));
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.WriteToAsync
::System::Threading::Tasks::Task* Cysharp::Text::Utf8ValueStringBuilder::WriteToAsync(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::WriteToAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteToAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, stream);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.WriteToAsync
::System::Threading::Tasks::Task* Cysharp::Text::Utf8ValueStringBuilder::WriteToAsync(::System::IO::Stream* stream, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::WriteToAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteToAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, stream, cancellationToken);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.GetMemory
::System::Memory_1<uint8_t> Cysharp::Text::Utf8ValueStringBuilder::GetMemory(int sizeHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::GetMemory");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Cysharp::Text::Utf8ValueStringBuilder), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Memory_1<uint8_t>, false>(this, ___internal__method, sizeHint);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.GetSpan
::System::Span_1<uint8_t> Cysharp::Text::Utf8ValueStringBuilder::GetSpan(int sizeHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::GetSpan");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Cysharp::Text::Utf8ValueStringBuilder), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Span_1<uint8_t>, false>(this, ___internal__method, sizeHint);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Advance
void Cysharp::Text::Utf8ValueStringBuilder::Advance(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Advance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Cysharp::Text::Utf8ValueStringBuilder), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.Cysharp.Text.IResettableBufferWriter<System.Byte>.Reset
void Cysharp::Text::Utf8ValueStringBuilder::Cysharp_Text_IResettableBufferWriter$System_Byte$_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::Cysharp.Text.IResettableBufferWriter<System.Byte>.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Cysharp::Text::Utf8ValueStringBuilder), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.ThrowArgumentException
void Cysharp::Text::Utf8ValueStringBuilder::ThrowArgumentException(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::ThrowArgumentException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ThrowArgumentException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, paramName);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.ThrowFormatException
void Cysharp::Text::Utf8ValueStringBuilder::ThrowFormatException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::ThrowFormatException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ThrowFormatException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.ThrowNestedException
void Cysharp::Text::Utf8ValueStringBuilder::ThrowNestedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::ThrowNestedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "Utf8ValueStringBuilder", "ThrowNestedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder.ToString
::StringW Cysharp::Text::Utf8ValueStringBuilder::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Cysharp.Text.Utf8ValueStringBuilder/<>c
#include "Cysharp/Text/Utf8ValueStringBuilder_--c.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.Buffers.StandardFormat
#include "System/Buffers/StandardFormat.hpp"
// Including type: Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1
#include "Cysharp/Text/Utf8ValueStringBuilder_TryFormat_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Cysharp.Text.Utf8ValueStringBuilder/<>c <>9
::Cysharp::Text::Utf8ValueStringBuilder::$$c* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::$$c*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Cysharp.Text.Utf8ValueStringBuilder/<>c <>9
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9(::Cysharp::Text::Utf8ValueStringBuilder::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.Byte> <>9__36_0
::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<uint8_t>* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<uint8_t>*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_0")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.Byte> <>9__36_0
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_0(::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_0", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.DateTime> <>9__36_1
::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::DateTime>* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::DateTime>*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_1")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.DateTime> <>9__36_1
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_1(::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::DateTime>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_1", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.DateTimeOffset> <>9__36_2
::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::DateTimeOffset>* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::DateTimeOffset>*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_2")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.DateTimeOffset> <>9__36_2
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_2(::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::DateTimeOffset>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_2", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.Decimal> <>9__36_3
::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::Decimal>* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::Decimal>*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_3")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.Decimal> <>9__36_3
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_3(::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::Decimal>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_3", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.Double> <>9__36_4
::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<double>* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<double>*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_4")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.Double> <>9__36_4
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_4(::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<double>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_4", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.Int16> <>9__36_5
::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<int16_t>* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_5");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<int16_t>*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_5")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.Int16> <>9__36_5
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_5(::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<int16_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_5");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_5", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.Int32> <>9__36_6
::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<int>* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_6");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<int>*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_6")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.Int32> <>9__36_6
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_6(::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_6");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_6", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.Int64> <>9__36_7
::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<int64_t>* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_7");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<int64_t>*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_7")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.Int64> <>9__36_7
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_7(::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<int64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_7");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_7", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.SByte> <>9__36_8
::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<int8_t>* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_8");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<int8_t>*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_8")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.SByte> <>9__36_8
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_8(::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<int8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_8");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_8", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.Single> <>9__36_9
::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<float>* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<float>*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_9")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.Single> <>9__36_9
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_9(::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_9", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.TimeSpan> <>9__36_10
::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::TimeSpan>* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_10");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::TimeSpan>*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_10")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.TimeSpan> <>9__36_10
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_10(::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::TimeSpan>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_10");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_10", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.UInt16> <>9__36_11
::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<uint16_t>* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_11");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<uint16_t>*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_11")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.UInt16> <>9__36_11
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_11(::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<uint16_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_11");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_11", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.UInt32> <>9__36_12
::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<uint>* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_12");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<uint>*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_12")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.UInt32> <>9__36_12
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_12(::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_12");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_12", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.UInt64> <>9__36_13
::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<uint64_t>* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_13");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<uint64_t>*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_13")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.UInt64> <>9__36_13
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_13(::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<uint64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_13");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_13", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.Guid> <>9__36_14
::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::Guid>* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_14");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::Guid>*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_14")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.Guid> <>9__36_14
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_14(::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::Guid>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_14");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_14", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.Boolean> <>9__36_15
::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<bool>* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_15");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<bool>*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_15")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.Boolean> <>9__36_15
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_15(::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_15");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_15", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.IntPtr> <>9__36_16
::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::IntPtr>* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_16");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::IntPtr>*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_16")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.IntPtr> <>9__36_16
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_16(::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::IntPtr>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_16");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_16", value)));
}
// Autogenerated static field getter
// Get static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.UIntPtr> <>9__36_17
::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::UIntPtr>* Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_17() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_get_$$9__36_17");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::UIntPtr>*>("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_17")));
}
// Autogenerated static field setter
// Set static field: static public Cysharp.Text.Utf8ValueStringBuilder/TryFormat`1<System.UIntPtr> <>9__36_17
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_17(::Cysharp::Text::Utf8ValueStringBuilder::TryFormat_1<::System::UIntPtr>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::_set_$$9__36_17");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "Utf8ValueStringBuilder/<>c", "<>9__36_17", value)));
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c..cctor
void Cysharp::Text::Utf8ValueStringBuilder::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "Utf8ValueStringBuilder/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c.<CreateFormatter>b__36_0
bool Cysharp::Text::Utf8ValueStringBuilder::$$c::$CreateFormatter$b__36_0(uint8_t x, ::System::Span_1<uint8_t> dest, ByRef<int> written, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::<CreateFormatter>b__36_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__36_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c.<CreateFormatter>b__36_1
bool Cysharp::Text::Utf8ValueStringBuilder::$$c::$CreateFormatter$b__36_1(::System::DateTime x, ::System::Span_1<uint8_t> dest, ByRef<int> written, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::<CreateFormatter>b__36_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__36_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c.<CreateFormatter>b__36_2
bool Cysharp::Text::Utf8ValueStringBuilder::$$c::$CreateFormatter$b__36_2(::System::DateTimeOffset x, ::System::Span_1<uint8_t> dest, ByRef<int> written, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::<CreateFormatter>b__36_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__36_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c.<CreateFormatter>b__36_3
bool Cysharp::Text::Utf8ValueStringBuilder::$$c::$CreateFormatter$b__36_3(::System::Decimal x, ::System::Span_1<uint8_t> dest, ByRef<int> written, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::<CreateFormatter>b__36_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__36_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c.<CreateFormatter>b__36_4
bool Cysharp::Text::Utf8ValueStringBuilder::$$c::$CreateFormatter$b__36_4(double x, ::System::Span_1<uint8_t> dest, ByRef<int> written, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::<CreateFormatter>b__36_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__36_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c.<CreateFormatter>b__36_5
bool Cysharp::Text::Utf8ValueStringBuilder::$$c::$CreateFormatter$b__36_5(int16_t x, ::System::Span_1<uint8_t> dest, ByRef<int> written, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::<CreateFormatter>b__36_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__36_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c.<CreateFormatter>b__36_6
bool Cysharp::Text::Utf8ValueStringBuilder::$$c::$CreateFormatter$b__36_6(int x, ::System::Span_1<uint8_t> dest, ByRef<int> written, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::<CreateFormatter>b__36_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__36_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c.<CreateFormatter>b__36_7
bool Cysharp::Text::Utf8ValueStringBuilder::$$c::$CreateFormatter$b__36_7(int64_t x, ::System::Span_1<uint8_t> dest, ByRef<int> written, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::<CreateFormatter>b__36_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__36_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c.<CreateFormatter>b__36_8
bool Cysharp::Text::Utf8ValueStringBuilder::$$c::$CreateFormatter$b__36_8(int8_t x, ::System::Span_1<uint8_t> dest, ByRef<int> written, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::<CreateFormatter>b__36_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__36_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c.<CreateFormatter>b__36_9
bool Cysharp::Text::Utf8ValueStringBuilder::$$c::$CreateFormatter$b__36_9(float x, ::System::Span_1<uint8_t> dest, ByRef<int> written, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::<CreateFormatter>b__36_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__36_9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c.<CreateFormatter>b__36_10
bool Cysharp::Text::Utf8ValueStringBuilder::$$c::$CreateFormatter$b__36_10(::System::TimeSpan x, ::System::Span_1<uint8_t> dest, ByRef<int> written, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::<CreateFormatter>b__36_10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__36_10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c.<CreateFormatter>b__36_11
bool Cysharp::Text::Utf8ValueStringBuilder::$$c::$CreateFormatter$b__36_11(uint16_t x, ::System::Span_1<uint8_t> dest, ByRef<int> written, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::<CreateFormatter>b__36_11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__36_11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c.<CreateFormatter>b__36_12
bool Cysharp::Text::Utf8ValueStringBuilder::$$c::$CreateFormatter$b__36_12(uint x, ::System::Span_1<uint8_t> dest, ByRef<int> written, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::<CreateFormatter>b__36_12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__36_12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c.<CreateFormatter>b__36_13
bool Cysharp::Text::Utf8ValueStringBuilder::$$c::$CreateFormatter$b__36_13(uint64_t x, ::System::Span_1<uint8_t> dest, ByRef<int> written, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::<CreateFormatter>b__36_13");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__36_13", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c.<CreateFormatter>b__36_14
bool Cysharp::Text::Utf8ValueStringBuilder::$$c::$CreateFormatter$b__36_14(::System::Guid x, ::System::Span_1<uint8_t> dest, ByRef<int> written, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::<CreateFormatter>b__36_14");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__36_14", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c.<CreateFormatter>b__36_15
bool Cysharp::Text::Utf8ValueStringBuilder::$$c::$CreateFormatter$b__36_15(bool x, ::System::Span_1<uint8_t> dest, ByRef<int> written, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::<CreateFormatter>b__36_15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__36_15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c.<CreateFormatter>b__36_16
bool Cysharp::Text::Utf8ValueStringBuilder::$$c::$CreateFormatter$b__36_16(::System::IntPtr x, ::System::Span_1<uint8_t> dest, ByRef<int> written, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::<CreateFormatter>b__36_16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__36_16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated method: Cysharp.Text.Utf8ValueStringBuilder/<>c.<CreateFormatter>b__36_17
bool Cysharp::Text::Utf8ValueStringBuilder::$$c::$CreateFormatter$b__36_17(::System::UIntPtr x, ::System::Span_1<uint8_t> dest, ByRef<int> written, ::System::Buffers::StandardFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::Utf8ValueStringBuilder::$$c::<CreateFormatter>b__36_17");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateFormatter>b__36_17", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, dest, byref(written), format);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Cysharp.Text.TextMeshProExtensions
#include "Cysharp/Text/TextMeshProExtensions.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: Cysharp.Text.Utf16ValueStringBuilder
#include "Cysharp/Text/Utf16ValueStringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Cysharp.Text.TextMeshProExtensions.SetText
void Cysharp::Text::TextMeshProExtensions::SetText(::TMPro::TMP_Text* text, ::Cysharp::Text::Utf16ValueStringBuilder stringBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::TextMeshProExtensions::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "TextMeshProExtensions", "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(stringBuilder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, stringBuilder);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Cysharp.Text.ZString
#include "Cysharp/Text/ZString.hpp"
// Including type: Cysharp.Text.ZString/<>c
#include "Cysharp/Text/ZString_--c.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Buffers.IBufferWriter`1
#include "System/Buffers/IBufferWriter_1.hpp"
// Including type: Cysharp.Text.Utf16ValueStringBuilder
#include "Cysharp/Text/Utf16ValueStringBuilder.hpp"
// Including type: Cysharp.Text.Utf8ValueStringBuilder
#include "Cysharp/Text/Utf8ValueStringBuilder.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyCollection`1
#include "System/Collections/Generic/IReadOnlyCollection_1.hpp"
// Including type: Cysharp.Text.Utf16PreparedFormat`1
#include "Cysharp/Text/Utf16PreparedFormat_1.hpp"
// Including type: Cysharp.Text.Utf8PreparedFormat`1
#include "Cysharp/Text/Utf8PreparedFormat_1.hpp"
// Including type: Cysharp.Text.Utf16PreparedFormat`2
#include "Cysharp/Text/Utf16PreparedFormat_2.hpp"
// Including type: Cysharp.Text.Utf8PreparedFormat`2
#include "Cysharp/Text/Utf8PreparedFormat_2.hpp"
// Including type: Cysharp.Text.Utf16PreparedFormat`3
#include "Cysharp/Text/Utf16PreparedFormat_3.hpp"
// Including type: Cysharp.Text.Utf8PreparedFormat`3
#include "Cysharp/Text/Utf8PreparedFormat_3.hpp"
// Including type: Cysharp.Text.Utf16PreparedFormat`4
#include "Cysharp/Text/Utf16PreparedFormat_4.hpp"
// Including type: Cysharp.Text.Utf8PreparedFormat`4
#include "Cysharp/Text/Utf8PreparedFormat_4.hpp"
// Including type: Cysharp.Text.Utf16PreparedFormat`5
#include "Cysharp/Text/Utf16PreparedFormat_5.hpp"
// Including type: Cysharp.Text.Utf8PreparedFormat`5
#include "Cysharp/Text/Utf8PreparedFormat_5.hpp"
// Including type: Cysharp.Text.Utf16PreparedFormat`6
#include "Cysharp/Text/Utf16PreparedFormat_6.hpp"
// Including type: Cysharp.Text.Utf8PreparedFormat`6
#include "Cysharp/Text/Utf8PreparedFormat_6.hpp"
// Including type: Cysharp.Text.Utf16PreparedFormat`7
#include "Cysharp/Text/Utf16PreparedFormat_7.hpp"
// Including type: Cysharp.Text.Utf8PreparedFormat`7
#include "Cysharp/Text/Utf8PreparedFormat_7.hpp"
// Including type: Cysharp.Text.Utf16PreparedFormat`8
#include "Cysharp/Text/Utf16PreparedFormat_8.hpp"
// Including type: Cysharp.Text.Utf8PreparedFormat`8
#include "Cysharp/Text/Utf8PreparedFormat_8.hpp"
// Including type: Cysharp.Text.Utf16PreparedFormat`9
#include "Cysharp/Text/Utf16PreparedFormat_9.hpp"
// Including type: Cysharp.Text.Utf8PreparedFormat`9
#include "Cysharp/Text/Utf8PreparedFormat_9.hpp"
// Including type: Cysharp.Text.Utf16PreparedFormat`10
#include "Cysharp/Text/Utf16PreparedFormat_10.hpp"
// Including type: Cysharp.Text.Utf8PreparedFormat`10
#include "Cysharp/Text/Utf8PreparedFormat_10.hpp"
// Including type: Cysharp.Text.Utf16PreparedFormat`11
#include "Cysharp/Text/Utf16PreparedFormat_11.hpp"
// Including type: Cysharp.Text.Utf8PreparedFormat`11
#include "Cysharp/Text/Utf8PreparedFormat_11.hpp"
// Including type: Cysharp.Text.Utf16PreparedFormat`12
#include "Cysharp/Text/Utf16PreparedFormat_12.hpp"
// Including type: Cysharp.Text.Utf8PreparedFormat`12
#include "Cysharp/Text/Utf8PreparedFormat_12.hpp"
// Including type: Cysharp.Text.Utf16PreparedFormat`13
#include "Cysharp/Text/Utf16PreparedFormat_13.hpp"
// Including type: Cysharp.Text.Utf8PreparedFormat`13
#include "Cysharp/Text/Utf8PreparedFormat_13.hpp"
// Including type: Cysharp.Text.Utf16PreparedFormat`14
#include "Cysharp/Text/Utf16PreparedFormat_14.hpp"
// Including type: Cysharp.Text.Utf8PreparedFormat`14
#include "Cysharp/Text/Utf8PreparedFormat_14.hpp"
// Including type: Cysharp.Text.Utf16PreparedFormat`15
#include "Cysharp/Text/Utf16PreparedFormat_15.hpp"
// Including type: Cysharp.Text.Utf8PreparedFormat`15
#include "Cysharp/Text/Utf8PreparedFormat_15.hpp"
// Including type: Cysharp.Text.Utf16PreparedFormat`16
#include "Cysharp/Text/Utf16PreparedFormat_16.hpp"
// Including type: Cysharp.Text.Utf8PreparedFormat`16
#include "Cysharp/Text/Utf8PreparedFormat_16.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding UTF8NoBom
::System::Text::Encoding* Cysharp::Text::ZString::_get_UTF8NoBom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZString::_get_UTF8NoBom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("Cysharp.Text", "ZString", "UTF8NoBom"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding UTF8NoBom
void Cysharp::Text::ZString::_set_UTF8NoBom(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZString::_set_UTF8NoBom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cysharp.Text", "ZString", "UTF8NoBom", value));
}
// Autogenerated method: Cysharp.Text.ZString.CreateStringBuilder
::Cysharp::Text::Utf16ValueStringBuilder Cysharp::Text::ZString::CreateStringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZString::CreateStringBuilder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "ZString", "CreateStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Cysharp::Text::Utf16ValueStringBuilder, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Cysharp.Text.ZString.CreateUtf8StringBuilder
::Cysharp::Text::Utf8ValueStringBuilder Cysharp::Text::ZString::CreateUtf8StringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZString::CreateUtf8StringBuilder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "ZString", "CreateUtf8StringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Cysharp::Text::Utf8ValueStringBuilder, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Cysharp.Text.ZString.CreateStringBuilder
::Cysharp::Text::Utf16ValueStringBuilder Cysharp::Text::ZString::CreateStringBuilder(bool notNested) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZString::CreateStringBuilder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "ZString", "CreateStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notNested)})));
  return ::il2cpp_utils::RunMethodRethrow<::Cysharp::Text::Utf16ValueStringBuilder, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, notNested);
}
// Autogenerated method: Cysharp.Text.ZString.CreateUtf8StringBuilder
::Cysharp::Text::Utf8ValueStringBuilder Cysharp::Text::ZString::CreateUtf8StringBuilder(bool notNested) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZString::CreateUtf8StringBuilder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "ZString", "CreateUtf8StringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notNested)})));
  return ::il2cpp_utils::RunMethodRethrow<::Cysharp::Text::Utf8ValueStringBuilder, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, notNested);
}
// Autogenerated method: Cysharp.Text.ZString.Join
::StringW Cysharp::Text::ZString::Join(::Il2CppChar separator, ::System::ReadOnlySpan_1<::StringW> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZString::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "ZString", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, separator, values);
}
// Autogenerated method: Cysharp.Text.ZString.Join
::StringW Cysharp::Text::ZString::Join(::Il2CppChar separator, ::ArrayW<::StringW> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZString::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "ZString", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, separator, values);
}
// Autogenerated method: Cysharp.Text.ZString.Join
::StringW Cysharp::Text::ZString::Join(::StringW separator, ::ArrayW<::StringW> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZString::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "ZString", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, separator, values);
}
// Autogenerated method: Cysharp.Text.ZString.JoinInternal
::StringW Cysharp::Text::ZString::JoinInternal(::System::ReadOnlySpan_1<::Il2CppChar> separator, ::System::ReadOnlySpan_1<::StringW> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZString::JoinInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "ZString", "JoinInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, separator, values);
}
// Autogenerated method: Cysharp.Text.ZString..cctor
void Cysharp::Text::ZString::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZString::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "ZString", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Cysharp.Text.ZString/<>c
#include "Cysharp/Text/ZString_--c.hpp"
// Including type: System.Buffers.SpanAction`2
#include "System/Buffers/SpanAction_2.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Cysharp.Text.ZString/<>c <>9
::Cysharp::Text::ZString::$$c* Cysharp::Text::ZString::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZString::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Cysharp::Text::ZString::$$c*>("Cysharp.Text", "ZString/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Cysharp.Text.ZString/<>c <>9
void Cysharp::Text::ZString::$$c::_set_$$9(::Cysharp::Text::ZString::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZString::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "ZString/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Buffers.SpanAction`2<System.Char,System.Int32> <>9__53_0
::System::Buffers::SpanAction_2<::Il2CppChar, int>* Cysharp::Text::ZString::$$c::_get_$$9__53_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZString::$$c::_get_$$9__53_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Buffers::SpanAction_2<::Il2CppChar, int>*>("Cysharp.Text", "ZString/<>c", "<>9__53_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.SpanAction`2<System.Char,System.Int32> <>9__53_0
void Cysharp::Text::ZString::$$c::_set_$$9__53_0(::System::Buffers::SpanAction_2<::Il2CppChar, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZString::$$c::_set_$$9__53_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Cysharp.Text", "ZString/<>c", "<>9__53_0", value)));
}
// Autogenerated method: Cysharp.Text.ZString/<>c..cctor
void Cysharp::Text::ZString::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZString::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cysharp.Text", "ZString/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Cysharp.Text.ZString/<>c.<JoinInternal>b__53_0
void Cysharp::Text::ZString::$$c::$JoinInternal$b__53_0(::System::Span_1<::Il2CppChar> _, int _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZString::$$c::<JoinInternal>b__53_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<JoinInternal>b__53_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _, _);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Cysharp.Text.ZStringWriter
#include "Cysharp/Text/ZStringWriter.hpp"
// Including type: System.Text.UnicodeEncoding
#include "System/Text/UnicodeEncoding.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Cysharp.Text.Utf16ValueStringBuilder sb
[[deprecated("Use field access instead!")]] ::Cysharp::Text::Utf16ValueStringBuilder& Cysharp::Text::ZStringWriter::dyn_sb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::dyn_sb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sb"))->offset;
  return *reinterpret_cast<::Cysharp::Text::Utf16ValueStringBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isOpen
[[deprecated("Use field access instead!")]] bool& Cysharp::Text::ZStringWriter::dyn_isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::dyn_isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.UnicodeEncoding encoding
[[deprecated("Use field access instead!")]] ::System::Text::UnicodeEncoding*& Cysharp::Text::ZStringWriter::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::dyn_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<::System::Text::UnicodeEncoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Cysharp.Text.ZStringWriter.AssertNotDisposed
void Cysharp::Text::ZStringWriter::AssertNotDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::AssertNotDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssertNotDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.ZStringWriter.Close
void Cysharp::Text::ZStringWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.ZStringWriter.Dispose
void Cysharp::Text::ZStringWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Cysharp.Text.ZStringWriter.get_Encoding
::System::Text::Encoding* Cysharp::Text::ZStringWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::get_Encoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.ZStringWriter.Write
void Cysharp::Text::ZStringWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.ZStringWriter.Write
void Cysharp::Text::ZStringWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: Cysharp.Text.ZStringWriter.Write
void Cysharp::Text::ZStringWriter::Write(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.ZStringWriter.WriteAsync
::System::Threading::Tasks::Task* Cysharp::Text::ZStringWriter::WriteAsync(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.ZStringWriter.WriteAsync
::System::Threading::Tasks::Task* Cysharp::Text::ZStringWriter::WriteAsync(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.ZStringWriter.WriteAsync
::System::Threading::Tasks::Task* Cysharp::Text::ZStringWriter::WriteAsync(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: Cysharp.Text.ZStringWriter.WriteLineAsync
::System::Threading::Tasks::Task* Cysharp::Text::ZStringWriter::WriteLineAsync(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::WriteLineAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.ZStringWriter.WriteLineAsync
::System::Threading::Tasks::Task* Cysharp::Text::ZStringWriter::WriteLineAsync(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::WriteLineAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.ZStringWriter.WriteLineAsync
::System::Threading::Tasks::Task* Cysharp::Text::ZStringWriter::WriteLineAsync(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::WriteLineAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: Cysharp.Text.ZStringWriter.Write
void Cysharp::Text::ZStringWriter::Write(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.ZStringWriter.Write
void Cysharp::Text::ZStringWriter::Write(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cysharp.Text.ZStringWriter.FlushAsync
::System::Threading::Tasks::Task* Cysharp::Text::ZStringWriter::FlushAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::FlushAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: Cysharp.Text.ZStringWriter.ToString
::StringW Cysharp::Text::ZStringWriter::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cysharp::Text::ZStringWriter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Cinemachine.CinemachineBrain/BrainEvent
#include "Cinemachine/CinemachineBrain_BrainEvent.hpp"
// Including type: Cinemachine.CinemachineBrain
#include "Cinemachine/CinemachineBrain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DigitalOpus.MB.Core.MB3_TextureCombiner/CombineTexturesIntoAtlasesCoroutineResult
#include "DigitalOpus/MB/Core/MB3_TextureCombiner_CombineTexturesIntoAtlasesCoroutineResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean success
[[deprecated("Use field access instead!")]] bool& DigitalOpus::MB::Core::MB3_TextureCombiner_CombineTexturesIntoAtlasesCoroutineResult::dyn_success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB3_TextureCombiner_CombineTexturesIntoAtlasesCoroutineResult::dyn_success");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "success"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isFinished
[[deprecated("Use field access instead!")]] bool& DigitalOpus::MB::Core::MB3_TextureCombiner_CombineTexturesIntoAtlasesCoroutineResult::dyn_isFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB3_TextureCombiner_CombineTexturesIntoAtlasesCoroutineResult::dyn_isFinished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isFinished"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/XrApi
#include "GlobalNamespace/OVRManager_XrApi.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/XrApi Unknown
::GlobalNamespace::OVRManager_XrApi GlobalNamespace::OVRManager_XrApi::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XrApi>("", "OVRManager/XrApi", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XrApi Unknown
void GlobalNamespace::OVRManager_XrApi::_set_Unknown(::GlobalNamespace::OVRManager_XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XrApi", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XrApi CAPI
::GlobalNamespace::OVRManager_XrApi GlobalNamespace::OVRManager_XrApi::_get_CAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_get_CAPI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XrApi>("", "OVRManager/XrApi", "CAPI"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XrApi CAPI
void GlobalNamespace::OVRManager_XrApi::_set_CAPI(::GlobalNamespace::OVRManager_XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_set_CAPI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XrApi", "CAPI", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XrApi VRAPI
::GlobalNamespace::OVRManager_XrApi GlobalNamespace::OVRManager_XrApi::_get_VRAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_get_VRAPI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XrApi>("", "OVRManager/XrApi", "VRAPI"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XrApi VRAPI
void GlobalNamespace::OVRManager_XrApi::_set_VRAPI(::GlobalNamespace::OVRManager_XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_set_VRAPI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XrApi", "VRAPI", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XrApi OpenXR
::GlobalNamespace::OVRManager_XrApi GlobalNamespace::OVRManager_XrApi::_get_OpenXR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_get_OpenXR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XrApi>("", "OVRManager/XrApi", "OpenXR"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XrApi OpenXR
void GlobalNamespace::OVRManager_XrApi::_set_OpenXR(::GlobalNamespace::OVRManager_XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_set_OpenXR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XrApi", "OpenXR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_XrApi::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/TrackingOrigin
#include "GlobalNamespace/OVRManager_TrackingOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/TrackingOrigin EyeLevel
::GlobalNamespace::OVRManager_TrackingOrigin GlobalNamespace::OVRManager_TrackingOrigin::_get_EyeLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::_get_EyeLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TrackingOrigin>("", "OVRManager/TrackingOrigin", "EyeLevel"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TrackingOrigin EyeLevel
void GlobalNamespace::OVRManager_TrackingOrigin::_set_EyeLevel(::GlobalNamespace::OVRManager_TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::_set_EyeLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TrackingOrigin", "EyeLevel", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TrackingOrigin FloorLevel
::GlobalNamespace::OVRManager_TrackingOrigin GlobalNamespace::OVRManager_TrackingOrigin::_get_FloorLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::_get_FloorLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TrackingOrigin>("", "OVRManager/TrackingOrigin", "FloorLevel"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TrackingOrigin FloorLevel
void GlobalNamespace::OVRManager_TrackingOrigin::_set_FloorLevel(::GlobalNamespace::OVRManager_TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::_set_FloorLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TrackingOrigin", "FloorLevel", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TrackingOrigin Stage
::GlobalNamespace::OVRManager_TrackingOrigin GlobalNamespace::OVRManager_TrackingOrigin::_get_Stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::_get_Stage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TrackingOrigin>("", "OVRManager/TrackingOrigin", "Stage"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TrackingOrigin Stage
void GlobalNamespace::OVRManager_TrackingOrigin::_set_Stage(::GlobalNamespace::OVRManager_TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::_set_Stage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TrackingOrigin", "Stage", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_TrackingOrigin::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/EyeTextureFormat
#include "GlobalNamespace/OVRManager_EyeTextureFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/EyeTextureFormat Default
::GlobalNamespace::OVRManager_EyeTextureFormat GlobalNamespace::OVRManager_EyeTextureFormat::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_EyeTextureFormat>("", "OVRManager/EyeTextureFormat", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/EyeTextureFormat Default
void GlobalNamespace::OVRManager_EyeTextureFormat::_set_Default(::GlobalNamespace::OVRManager_EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/EyeTextureFormat", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/EyeTextureFormat R16G16B16A16_FP
::GlobalNamespace::OVRManager_EyeTextureFormat GlobalNamespace::OVRManager_EyeTextureFormat::_get_R16G16B16A16_FP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::_get_R16G16B16A16_FP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_EyeTextureFormat>("", "OVRManager/EyeTextureFormat", "R16G16B16A16_FP"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/EyeTextureFormat R16G16B16A16_FP
void GlobalNamespace::OVRManager_EyeTextureFormat::_set_R16G16B16A16_FP(::GlobalNamespace::OVRManager_EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::_set_R16G16B16A16_FP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/EyeTextureFormat", "R16G16B16A16_FP", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/EyeTextureFormat R11G11B10_FP
::GlobalNamespace::OVRManager_EyeTextureFormat GlobalNamespace::OVRManager_EyeTextureFormat::_get_R11G11B10_FP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::_get_R11G11B10_FP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_EyeTextureFormat>("", "OVRManager/EyeTextureFormat", "R11G11B10_FP"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/EyeTextureFormat R11G11B10_FP
void GlobalNamespace::OVRManager_EyeTextureFormat::_set_R11G11B10_FP(::GlobalNamespace::OVRManager_EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::_set_R11G11B10_FP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/EyeTextureFormat", "R11G11B10_FP", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_EyeTextureFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/FoveatedRenderingLevel
#include "GlobalNamespace/OVRManager_FoveatedRenderingLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/FoveatedRenderingLevel Off
::GlobalNamespace::OVRManager_FoveatedRenderingLevel GlobalNamespace::OVRManager_FoveatedRenderingLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FoveatedRenderingLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FoveatedRenderingLevel>("", "OVRManager/FoveatedRenderingLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FoveatedRenderingLevel Off
void GlobalNamespace::OVRManager_FoveatedRenderingLevel::_set_Off(::GlobalNamespace::OVRManager_FoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FoveatedRenderingLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FoveatedRenderingLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FoveatedRenderingLevel Low
::GlobalNamespace::OVRManager_FoveatedRenderingLevel GlobalNamespace::OVRManager_FoveatedRenderingLevel::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FoveatedRenderingLevel::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FoveatedRenderingLevel>("", "OVRManager/FoveatedRenderingLevel", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FoveatedRenderingLevel Low
void GlobalNamespace::OVRManager_FoveatedRenderingLevel::_set_Low(::GlobalNamespace::OVRManager_FoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FoveatedRenderingLevel::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FoveatedRenderingLevel", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FoveatedRenderingLevel Medium
::GlobalNamespace::OVRManager_FoveatedRenderingLevel GlobalNamespace::OVRManager_FoveatedRenderingLevel::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FoveatedRenderingLevel::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FoveatedRenderingLevel>("", "OVRManager/FoveatedRenderingLevel", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FoveatedRenderingLevel Medium
void GlobalNamespace::OVRManager_FoveatedRenderingLevel::_set_Medium(::GlobalNamespace::OVRManager_FoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FoveatedRenderingLevel::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FoveatedRenderingLevel", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FoveatedRenderingLevel High
::GlobalNamespace::OVRManager_FoveatedRenderingLevel GlobalNamespace::OVRManager_FoveatedRenderingLevel::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FoveatedRenderingLevel::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FoveatedRenderingLevel>("", "OVRManager/FoveatedRenderingLevel", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FoveatedRenderingLevel High
void GlobalNamespace::OVRManager_FoveatedRenderingLevel::_set_High(::GlobalNamespace::OVRManager_FoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FoveatedRenderingLevel::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FoveatedRenderingLevel", "High", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FoveatedRenderingLevel HighTop
::GlobalNamespace::OVRManager_FoveatedRenderingLevel GlobalNamespace::OVRManager_FoveatedRenderingLevel::_get_HighTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FoveatedRenderingLevel::_get_HighTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FoveatedRenderingLevel>("", "OVRManager/FoveatedRenderingLevel", "HighTop"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FoveatedRenderingLevel HighTop
void GlobalNamespace::OVRManager_FoveatedRenderingLevel::_set_HighTop(::GlobalNamespace::OVRManager_FoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FoveatedRenderingLevel::_set_HighTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FoveatedRenderingLevel", "HighTop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_FoveatedRenderingLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FoveatedRenderingLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/FixedFoveatedRenderingLevel
#include "GlobalNamespace/OVRManager_FixedFoveatedRenderingLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel Off
::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel Off
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Off(::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel Low
::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel Low
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Low(::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel Medium
::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel Medium
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Medium(::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel High
::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel High
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_High(::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "High", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel HighTop
::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_HighTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_HighTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "HighTop"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel HighTop
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_HighTop(::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_HighTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "HighTop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/TiledMultiResLevel
#include "GlobalNamespace/OVRManager_TiledMultiResLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel Off
::GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel Off
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_Off(::GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSLow
::GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSLow"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSLow
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSLow(::GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSLow", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSMedium
::GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSMedium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSMedium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSMedium"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSMedium
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSMedium(::GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSMedium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSMedium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSHigh
::GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSHigh"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSHigh
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSHigh(::GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSHigh", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSHighTop
::GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSHighTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSHighTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSHighTop"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSHighTop
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSHighTop(::GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSHighTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSHighTop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_TiledMultiResLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/SystemHeadsetType
#include "GlobalNamespace/OVRManager_SystemHeadsetType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType None
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType None
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_None(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Quest
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Quest"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Quest
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Quest(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Quest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Quest_2
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Quest_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Quest_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Quest_2"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Quest_2
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Quest_2(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Quest_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Quest_2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Meta_Quest_Pro
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Meta_Quest_Pro() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Meta_Quest_Pro");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Meta_Quest_Pro"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Meta_Quest_Pro
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Meta_Quest_Pro(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Meta_Quest_Pro");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Meta_Quest_Pro", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Meta_Quest_3
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Meta_Quest_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Meta_Quest_3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Meta_Quest_3"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Meta_Quest_3
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Meta_Quest_3(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Meta_Quest_3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Meta_Quest_3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_12
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_12"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_12
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_12(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_12", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_13
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_13"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_13
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_13(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_13", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_14
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_14"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_14
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_14(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_14", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_DK1
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_DK1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_DK1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_DK1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_DK1
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_DK1(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_DK1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_DK1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_DK2
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_DK2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_DK2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_DK2"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_DK2
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_DK2(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_DK2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_DK2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_CV1
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_CV1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_CV1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_CV1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_CV1
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_CV1(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_CV1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_CV1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_CB
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_CB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_CB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_CB"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_CB
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_CB(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_CB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_CB", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_S
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_S"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_S
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_S(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_S", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Link_Quest
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Link_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Link_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Link_Quest"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Link_Quest
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Link_Quest(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Link_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Link_Quest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Link_Quest_2
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Link_Quest_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Link_Quest_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Link_Quest_2"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Link_Quest_2
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Link_Quest_2(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Link_Quest_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Link_Quest_2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Meta_Link_Quest_Pro
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Meta_Link_Quest_Pro() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Meta_Link_Quest_Pro");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Meta_Link_Quest_Pro"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Meta_Link_Quest_Pro
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Meta_Link_Quest_Pro(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Meta_Link_Quest_Pro");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Meta_Link_Quest_Pro", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Meta_Link_Quest_3
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Meta_Link_Quest_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Meta_Link_Quest_3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Meta_Link_Quest_3"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Meta_Link_Quest_3
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Meta_Link_Quest_3(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Meta_Link_Quest_3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Meta_Link_Quest_3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4105
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4105() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4105");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4105"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4105
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4105(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4105");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4105", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4106
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4106() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4106");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4106"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4106
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4106(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4106");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4106", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4107
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4107() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4107");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4107"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4107
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4107(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4107");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4107", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_SystemHeadsetType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/XRDevice
#include "GlobalNamespace/OVRManager_XRDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice Unknown
::GlobalNamespace::OVRManager_XRDevice GlobalNamespace::OVRManager_XRDevice::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XRDevice>("", "OVRManager/XRDevice", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice Unknown
void GlobalNamespace::OVRManager_XRDevice::_set_Unknown(::GlobalNamespace::OVRManager_XRDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XRDevice", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice Oculus
::GlobalNamespace::OVRManager_XRDevice GlobalNamespace::OVRManager_XRDevice::_get_Oculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::_get_Oculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XRDevice>("", "OVRManager/XRDevice", "Oculus"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice Oculus
void GlobalNamespace::OVRManager_XRDevice::_set_Oculus(::GlobalNamespace::OVRManager_XRDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::_set_Oculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XRDevice", "Oculus", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice OpenVR
::GlobalNamespace::OVRManager_XRDevice GlobalNamespace::OVRManager_XRDevice::_get_OpenVR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::_get_OpenVR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XRDevice>("", "OVRManager/XRDevice", "OpenVR"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice OpenVR
void GlobalNamespace::OVRManager_XRDevice::_set_OpenVR(::GlobalNamespace::OVRManager_XRDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::_set_OpenVR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XRDevice", "OpenVR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_XRDevice::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/ColorSpace
#include "GlobalNamespace/OVRManager_ColorSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Unknown
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Unknown
void GlobalNamespace::OVRManager_ColorSpace::_set_Unknown(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Unmanaged
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Unmanaged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Unmanaged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Unmanaged"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Unmanaged
void GlobalNamespace::OVRManager_ColorSpace::_set_Unmanaged(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Unmanaged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Unmanaged", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Rec_2020
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Rec_2020() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Rec_2020");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Rec_2020"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Rec_2020
void GlobalNamespace::OVRManager_ColorSpace::_set_Rec_2020(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Rec_2020");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Rec_2020", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Rec_709
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Rec_709() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Rec_709");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Rec_709"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Rec_709
void GlobalNamespace::OVRManager_ColorSpace::_set_Rec_709(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Rec_709");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Rec_709", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Rift_CV1
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Rift_CV1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Rift_CV1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Rift_CV1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Rift_CV1
void GlobalNamespace::OVRManager_ColorSpace::_set_Rift_CV1(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Rift_CV1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Rift_CV1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Rift_S
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Rift_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Rift_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Rift_S"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Rift_S
void GlobalNamespace::OVRManager_ColorSpace::_set_Rift_S(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Rift_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Rift_S", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Quest
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Quest"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Quest
void GlobalNamespace::OVRManager_ColorSpace::_set_Quest(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Quest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace P3
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_P3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_P3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "P3"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace P3
void GlobalNamespace::OVRManager_ColorSpace::_set_P3(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_P3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "P3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Adobe_RGB
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Adobe_RGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Adobe_RGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Adobe_RGB"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Adobe_RGB
void GlobalNamespace::OVRManager_ColorSpace::_set_Adobe_RGB(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Adobe_RGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Adobe_RGB", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_ColorSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/ProcessorPerformanceLevel
#include "GlobalNamespace/OVRManager_ProcessorPerformanceLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/ProcessorPerformanceLevel PowerSavings
::GlobalNamespace::OVRManager_ProcessorPerformanceLevel GlobalNamespace::OVRManager_ProcessorPerformanceLevel::_get_PowerSavings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ProcessorPerformanceLevel::_get_PowerSavings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ProcessorPerformanceLevel>("", "OVRManager/ProcessorPerformanceLevel", "PowerSavings"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ProcessorPerformanceLevel PowerSavings
void GlobalNamespace::OVRManager_ProcessorPerformanceLevel::_set_PowerSavings(::GlobalNamespace::OVRManager_ProcessorPerformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ProcessorPerformanceLevel::_set_PowerSavings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ProcessorPerformanceLevel", "PowerSavings", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ProcessorPerformanceLevel SustainedLow
::GlobalNamespace::OVRManager_ProcessorPerformanceLevel GlobalNamespace::OVRManager_ProcessorPerformanceLevel::_get_SustainedLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ProcessorPerformanceLevel::_get_SustainedLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ProcessorPerformanceLevel>("", "OVRManager/ProcessorPerformanceLevel", "SustainedLow"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ProcessorPerformanceLevel SustainedLow
void GlobalNamespace::OVRManager_ProcessorPerformanceLevel::_set_SustainedLow(::GlobalNamespace::OVRManager_ProcessorPerformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ProcessorPerformanceLevel::_set_SustainedLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ProcessorPerformanceLevel", "SustainedLow", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ProcessorPerformanceLevel SustainedHigh
::GlobalNamespace::OVRManager_ProcessorPerformanceLevel GlobalNamespace::OVRManager_ProcessorPerformanceLevel::_get_SustainedHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ProcessorPerformanceLevel::_get_SustainedHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ProcessorPerformanceLevel>("", "OVRManager/ProcessorPerformanceLevel", "SustainedHigh"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ProcessorPerformanceLevel SustainedHigh
void GlobalNamespace::OVRManager_ProcessorPerformanceLevel::_set_SustainedHigh(::GlobalNamespace::OVRManager_ProcessorPerformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ProcessorPerformanceLevel::_set_SustainedHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ProcessorPerformanceLevel", "SustainedHigh", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ProcessorPerformanceLevel Boost
::GlobalNamespace::OVRManager_ProcessorPerformanceLevel GlobalNamespace::OVRManager_ProcessorPerformanceLevel::_get_Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ProcessorPerformanceLevel::_get_Boost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ProcessorPerformanceLevel>("", "OVRManager/ProcessorPerformanceLevel", "Boost"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ProcessorPerformanceLevel Boost
void GlobalNamespace::OVRManager_ProcessorPerformanceLevel::_set_Boost(::GlobalNamespace::OVRManager_ProcessorPerformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ProcessorPerformanceLevel::_set_Boost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ProcessorPerformanceLevel", "Boost", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_ProcessorPerformanceLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ProcessorPerformanceLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/ControllerDrivenHandPosesType
#include "GlobalNamespace/OVRManager_ControllerDrivenHandPosesType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/ControllerDrivenHandPosesType None
::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType GlobalNamespace::OVRManager_ControllerDrivenHandPosesType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType>("", "OVRManager/ControllerDrivenHandPosesType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ControllerDrivenHandPosesType None
void GlobalNamespace::OVRManager_ControllerDrivenHandPosesType::_set_None(::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ControllerDrivenHandPosesType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ControllerDrivenHandPosesType ConformingToController
::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType GlobalNamespace::OVRManager_ControllerDrivenHandPosesType::_get_ConformingToController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType::_get_ConformingToController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType>("", "OVRManager/ControllerDrivenHandPosesType", "ConformingToController"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ControllerDrivenHandPosesType ConformingToController
void GlobalNamespace::OVRManager_ControllerDrivenHandPosesType::_set_ConformingToController(::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType::_set_ConformingToController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ControllerDrivenHandPosesType", "ConformingToController", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ControllerDrivenHandPosesType Natural
::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType GlobalNamespace::OVRManager_ControllerDrivenHandPosesType::_get_Natural() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType::_get_Natural");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType>("", "OVRManager/ControllerDrivenHandPosesType", "Natural"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ControllerDrivenHandPosesType Natural
void GlobalNamespace::OVRManager_ControllerDrivenHandPosesType::_set_Natural(::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType::_set_Natural");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ControllerDrivenHandPosesType", "Natural", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_ControllerDrivenHandPosesType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ControllerDrivenHandPosesType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/EventListener
#include "GlobalNamespace/OVRManager_EventListener.hpp"
// Including type: OVRPlugin/EventDataBuffer
#include "GlobalNamespace/OVRPlugin_EventDataBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRManager/EventListener.OnEvent
void GlobalNamespace::OVRManager_EventListener::OnEvent(::GlobalNamespace::OVRPlugin::EventDataBuffer eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EventListener::OnEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager_EventListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/CompositionMethod
#include "GlobalNamespace/OVRManager_CompositionMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/CompositionMethod External
::GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRManager_CompositionMethod::_get_External() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CompositionMethod::_get_External");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_CompositionMethod>("", "OVRManager/CompositionMethod", "External"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CompositionMethod External
void GlobalNamespace::OVRManager_CompositionMethod::_set_External(::GlobalNamespace::OVRManager_CompositionMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CompositionMethod::_set_External");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CompositionMethod", "External", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/CompositionMethod Direct
::GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRManager_CompositionMethod::_get_Direct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CompositionMethod::_get_Direct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_CompositionMethod>("", "OVRManager/CompositionMethod", "Direct"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CompositionMethod Direct
void GlobalNamespace::OVRManager_CompositionMethod::_set_Direct(::GlobalNamespace::OVRManager_CompositionMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CompositionMethod::_set_Direct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CompositionMethod", "Direct", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_CompositionMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CompositionMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/CameraDevice
#include "GlobalNamespace/OVRManager_CameraDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/CameraDevice WebCamera0
::GlobalNamespace::OVRManager_CameraDevice GlobalNamespace::OVRManager_CameraDevice::_get_WebCamera0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::_get_WebCamera0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_CameraDevice>("", "OVRManager/CameraDevice", "WebCamera0"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CameraDevice WebCamera0
void GlobalNamespace::OVRManager_CameraDevice::_set_WebCamera0(::GlobalNamespace::OVRManager_CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::_set_WebCamera0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CameraDevice", "WebCamera0", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/CameraDevice WebCamera1
::GlobalNamespace::OVRManager_CameraDevice GlobalNamespace::OVRManager_CameraDevice::_get_WebCamera1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::_get_WebCamera1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_CameraDevice>("", "OVRManager/CameraDevice", "WebCamera1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CameraDevice WebCamera1
void GlobalNamespace::OVRManager_CameraDevice::_set_WebCamera1(::GlobalNamespace::OVRManager_CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::_set_WebCamera1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CameraDevice", "WebCamera1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/CameraDevice ZEDCamera
::GlobalNamespace::OVRManager_CameraDevice GlobalNamespace::OVRManager_CameraDevice::_get_ZEDCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::_get_ZEDCamera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_CameraDevice>("", "OVRManager/CameraDevice", "ZEDCamera"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CameraDevice ZEDCamera
void GlobalNamespace::OVRManager_CameraDevice::_set_ZEDCamera(::GlobalNamespace::OVRManager_CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::_set_ZEDCamera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CameraDevice", "ZEDCamera", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_CameraDevice::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/DepthQuality
#include "GlobalNamespace/OVRManager_DepthQuality.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/DepthQuality Low
::GlobalNamespace::OVRManager_DepthQuality GlobalNamespace::OVRManager_DepthQuality::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_DepthQuality>("", "OVRManager/DepthQuality", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/DepthQuality Low
void GlobalNamespace::OVRManager_DepthQuality::_set_Low(::GlobalNamespace::OVRManager_DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/DepthQuality", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/DepthQuality Medium
::GlobalNamespace::OVRManager_DepthQuality GlobalNamespace::OVRManager_DepthQuality::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_DepthQuality>("", "OVRManager/DepthQuality", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/DepthQuality Medium
void GlobalNamespace::OVRManager_DepthQuality::_set_Medium(::GlobalNamespace::OVRManager_DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/DepthQuality", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/DepthQuality High
::GlobalNamespace::OVRManager_DepthQuality GlobalNamespace::OVRManager_DepthQuality::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_DepthQuality>("", "OVRManager/DepthQuality", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/DepthQuality High
void GlobalNamespace::OVRManager_DepthQuality::_set_High(::GlobalNamespace::OVRManager_DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/DepthQuality", "High", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_DepthQuality::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/VirtualGreenScreenType
#include "GlobalNamespace/OVRManager_VirtualGreenScreenType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/VirtualGreenScreenType Off
::GlobalNamespace::OVRManager_VirtualGreenScreenType GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_VirtualGreenScreenType>("", "OVRManager/VirtualGreenScreenType", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/VirtualGreenScreenType Off
void GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_Off(::GlobalNamespace::OVRManager_VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/VirtualGreenScreenType", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/VirtualGreenScreenType OuterBoundary
::GlobalNamespace::OVRManager_VirtualGreenScreenType GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_OuterBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_OuterBoundary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_VirtualGreenScreenType>("", "OVRManager/VirtualGreenScreenType", "OuterBoundary"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/VirtualGreenScreenType OuterBoundary
void GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_OuterBoundary(::GlobalNamespace::OVRManager_VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_OuterBoundary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/VirtualGreenScreenType", "OuterBoundary", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/VirtualGreenScreenType PlayArea
::GlobalNamespace::OVRManager_VirtualGreenScreenType GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_PlayArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_PlayArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_VirtualGreenScreenType>("", "OVRManager/VirtualGreenScreenType", "PlayArea"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/VirtualGreenScreenType PlayArea
void GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_PlayArea(::GlobalNamespace::OVRManager_VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_PlayArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/VirtualGreenScreenType", "PlayArea", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_VirtualGreenScreenType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/MrcActivationMode
#include "GlobalNamespace/OVRManager_MrcActivationMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcActivationMode Automatic
::GlobalNamespace::OVRManager_MrcActivationMode GlobalNamespace::OVRManager_MrcActivationMode::_get_Automatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcActivationMode::_get_Automatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_MrcActivationMode>("", "OVRManager/MrcActivationMode", "Automatic"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcActivationMode Automatic
void GlobalNamespace::OVRManager_MrcActivationMode::_set_Automatic(::GlobalNamespace::OVRManager_MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcActivationMode::_set_Automatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcActivationMode", "Automatic", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcActivationMode Disabled
::GlobalNamespace::OVRManager_MrcActivationMode GlobalNamespace::OVRManager_MrcActivationMode::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcActivationMode::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_MrcActivationMode>("", "OVRManager/MrcActivationMode", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcActivationMode Disabled
void GlobalNamespace::OVRManager_MrcActivationMode::_set_Disabled(::GlobalNamespace::OVRManager_MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcActivationMode::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcActivationMode", "Disabled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_MrcActivationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcActivationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/MrcCameraType
#include "GlobalNamespace/OVRManager_MrcCameraType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcCameraType Normal
::GlobalNamespace::OVRManager_MrcCameraType GlobalNamespace::OVRManager_MrcCameraType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_MrcCameraType>("", "OVRManager/MrcCameraType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcCameraType Normal
void GlobalNamespace::OVRManager_MrcCameraType::_set_Normal(::GlobalNamespace::OVRManager_MrcCameraType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcCameraType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcCameraType Foreground
::GlobalNamespace::OVRManager_MrcCameraType GlobalNamespace::OVRManager_MrcCameraType::_get_Foreground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::_get_Foreground");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_MrcCameraType>("", "OVRManager/MrcCameraType", "Foreground"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcCameraType Foreground
void GlobalNamespace::OVRManager_MrcCameraType::_set_Foreground(::GlobalNamespace::OVRManager_MrcCameraType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::_set_Foreground");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcCameraType", "Foreground", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcCameraType Background
::GlobalNamespace::OVRManager_MrcCameraType GlobalNamespace::OVRManager_MrcCameraType::_get_Background() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::_get_Background");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_MrcCameraType>("", "OVRManager/MrcCameraType", "Background"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcCameraType Background
void GlobalNamespace::OVRManager_MrcCameraType::_set_Background(::GlobalNamespace::OVRManager_MrcCameraType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::_set_Background");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcCameraType", "Background", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_MrcCameraType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRManager/InstantiateMrcCameraDelegate
#include "GlobalNamespace/OVRManager_InstantiateMrcCameraDelegate.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRManager/MrcCameraType
#include "GlobalNamespace/OVRManager_MrcCameraType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRManager/InstantiateMrcCameraDelegate.Invoke
::UnityEngine::GameObject* GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::Invoke(::UnityEngine::GameObject* mainCameraGameObject, ::GlobalNamespace::OVRManager_MrcCameraType cameraType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, mainCameraGameObject, cameraType);
}
// Autogenerated method: OVRManager/InstantiateMrcCameraDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::BeginInvoke(::UnityEngine::GameObject* mainCameraGameObject, ::GlobalNamespace::OVRManager_MrcCameraType cameraType, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, mainCameraGameObject, cameraType, callback, object);
}
// Autogenerated method: OVRManager/InstantiateMrcCameraDelegate.EndInvoke
::UnityEngine::GameObject* GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/PassthroughInitializationState
#include "GlobalNamespace/OVRManager_PassthroughInitializationState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/PassthroughInitializationState Unspecified
::GlobalNamespace::OVRManager_PassthroughInitializationState GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Unspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_PassthroughInitializationState>("", "OVRManager/PassthroughInitializationState", "Unspecified"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/PassthroughInitializationState Unspecified
void GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Unspecified(::GlobalNamespace::OVRManager_PassthroughInitializationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Unspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/PassthroughInitializationState", "Unspecified", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/PassthroughInitializationState Pending
::GlobalNamespace::OVRManager_PassthroughInitializationState GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Pending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Pending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_PassthroughInitializationState>("", "OVRManager/PassthroughInitializationState", "Pending"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/PassthroughInitializationState Pending
void GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Pending(::GlobalNamespace::OVRManager_PassthroughInitializationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Pending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/PassthroughInitializationState", "Pending", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/PassthroughInitializationState Initialized
::GlobalNamespace::OVRManager_PassthroughInitializationState GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_PassthroughInitializationState>("", "OVRManager/PassthroughInitializationState", "Initialized"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/PassthroughInitializationState Initialized
void GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Initialized(::GlobalNamespace::OVRManager_PassthroughInitializationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/PassthroughInitializationState", "Initialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/PassthroughInitializationState Failed
::GlobalNamespace::OVRManager_PassthroughInitializationState GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_PassthroughInitializationState>("", "OVRManager/PassthroughInitializationState", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/PassthroughInitializationState Failed
void GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Failed(::GlobalNamespace::OVRManager_PassthroughInitializationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/PassthroughInitializationState", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_PassthroughInitializationState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/PassthroughCapabilities
#include "GlobalNamespace/OVRManager_PassthroughCapabilities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <SupportsPassthrough>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager_PassthroughCapabilities::dyn_$SupportsPassthrough$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughCapabilities::dyn_$SupportsPassthrough$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SupportsPassthrough>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <SupportsColorPassthrough>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRManager_PassthroughCapabilities::dyn_$SupportsColorPassthrough$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughCapabilities::dyn_$SupportsColorPassthrough$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SupportsColorPassthrough>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt32 <MaxColorLutResolution>k__BackingField
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::OVRManager_PassthroughCapabilities::dyn_$MaxColorLutResolution$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughCapabilities::dyn_$MaxColorLutResolution$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxColorLutResolution>k__BackingField"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRManager/PassthroughCapabilities.get_SupportsPassthrough
bool GlobalNamespace::OVRManager_PassthroughCapabilities::get_SupportsPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughCapabilities::get_SupportsPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager/PassthroughCapabilities.get_SupportsColorPassthrough
bool GlobalNamespace::OVRManager_PassthroughCapabilities::get_SupportsColorPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughCapabilities::get_SupportsColorPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsColorPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager/PassthroughCapabilities.get_MaxColorLutResolution
uint GlobalNamespace::OVRManager_PassthroughCapabilities::get_MaxColorLutResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughCapabilities::get_MaxColorLutResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxColorLutResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRManager/<>c
#include "GlobalNamespace/OVRManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: OVRManager/PassthroughInitializationState
#include "GlobalNamespace/OVRManager_PassthroughInitializationState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRManager/<>c <>9
::GlobalNamespace::OVRManager_$$c* GlobalNamespace::OVRManager_$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_$$c*>("", "OVRManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRManager/<>c <>9
void GlobalNamespace::OVRManager_$$c::_set_$$9(::GlobalNamespace::OVRManager_$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Single,System.String> <>9__418_0
::System::Func_2<float, ::StringW>* GlobalNamespace::OVRManager_$$c::_get_$$9__418_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::_get_$$9__418_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<float, ::StringW>*>("", "OVRManager/<>c", "<>9__418_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Single,System.String> <>9__418_0
void GlobalNamespace::OVRManager_$$c::_set_$$9__418_0(::System::Func_2<float, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::_set_$$9__418_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRManager/<>c", "<>9__418_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Camera> <>9__434_0
::System::Comparison_1<::UnityEngine::Camera*>* GlobalNamespace::OVRManager_$$c::_get_$$9__434_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::_get_$$9__434_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::Camera*>*>("", "OVRManager/<>c", "<>9__434_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Camera> <>9__434_0
void GlobalNamespace::OVRManager_$$c::_set_$$9__434_0(::System::Comparison_1<::UnityEngine::Camera*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::_set_$$9__434_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRManager/<>c", "<>9__434_0", value)));
}
// Autogenerated method: OVRManager/<>c..cctor
void GlobalNamespace::OVRManager_$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager/<>c.<InitOVRManager>b__418_0
::StringW GlobalNamespace::OVRManager_$$c::$InitOVRManager$b__418_0(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::<InitOVRManager>b__418_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitOVRManager>b__418_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, f);
}
// Autogenerated method: OVRManager/<>c.<FindMainCamera>b__434_0
int GlobalNamespace::OVRManager_$$c::$FindMainCamera$b__434_0(::UnityEngine::Camera* c0, ::UnityEngine::Camera* c1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::<FindMainCamera>b__434_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindMainCamera>b__434_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c0), ::il2cpp_utils::ExtractType(c1)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, c0, c1);
}
// Autogenerated method: OVRManager/<>c.<.cctor>b__470_0
void GlobalNamespace::OVRManager_$$c::$_cctor$b__470_0(::GlobalNamespace::OVRManager_PassthroughInitializationState newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::<.cctor>b__470_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__470_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newValue);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.InputSystem.InputAction/CallbackContext
#include "UnityEngine/InputSystem/InputAction_CallbackContext.hpp"
// Including type: UnityEngine.InputSystem.InputActionState
#include "UnityEngine/InputSystem/InputActionState.hpp"
// Including type: UnityEngine.InputSystem.InputActionPhase
#include "UnityEngine/InputSystem/InputActionPhase.hpp"
// Including type: UnityEngine.InputSystem.InputAction
#include "UnityEngine/InputSystem/InputAction.hpp"
// Including type: UnityEngine.InputSystem.InputControl
#include "UnityEngine/InputSystem/InputControl.hpp"
// Including type: UnityEngine.InputSystem.IInputInteraction
#include "UnityEngine/InputSystem/IInputInteraction.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.InputSystem.InputActionState m_State
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionState*& UnityEngine::InputSystem::InputAction_CallbackContext::dyn_m_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::dyn_m_State");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_State"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_ActionIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::InputSystem::InputAction_CallbackContext::dyn_m_ActionIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::dyn_m_ActionIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActionIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.get_actionIndex
int UnityEngine::InputSystem::InputAction_CallbackContext::get_actionIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::get_actionIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_actionIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.get_bindingIndex
int UnityEngine::InputSystem::InputAction_CallbackContext::get_bindingIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::get_bindingIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_bindingIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.get_controlIndex
int UnityEngine::InputSystem::InputAction_CallbackContext::get_controlIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::get_controlIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_controlIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.get_interactionIndex
int UnityEngine::InputSystem::InputAction_CallbackContext::get_interactionIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::get_interactionIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_interactionIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.get_phase
::UnityEngine::InputSystem::InputActionPhase UnityEngine::InputSystem::InputAction_CallbackContext::get_phase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::get_phase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_phase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionPhase, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.get_started
bool UnityEngine::InputSystem::InputAction_CallbackContext::get_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::get_started");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_started", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.get_performed
bool UnityEngine::InputSystem::InputAction_CallbackContext::get_performed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::get_performed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_performed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.get_canceled
bool UnityEngine::InputSystem::InputAction_CallbackContext::get_canceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::get_canceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_canceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.get_action
::UnityEngine::InputSystem::InputAction* UnityEngine::InputSystem::InputAction_CallbackContext::get_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::get_action");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_action", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputAction*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.get_control
::UnityEngine::InputSystem::InputControl* UnityEngine::InputSystem::InputAction_CallbackContext::get_control() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::get_control");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_control", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputControl*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.get_interaction
::UnityEngine::InputSystem::IInputInteraction* UnityEngine::InputSystem::InputAction_CallbackContext::get_interaction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::get_interaction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_interaction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::IInputInteraction*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.get_time
double UnityEngine::InputSystem::InputAction_CallbackContext::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.get_startTime
double UnityEngine::InputSystem::InputAction_CallbackContext::get_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::get_startTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_startTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.get_duration
double UnityEngine::InputSystem::InputAction_CallbackContext::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::get_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.get_valueType
::System::Type* UnityEngine::InputSystem::InputAction_CallbackContext::get_valueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::get_valueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_valueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.get_valueSizeInBytes
int UnityEngine::InputSystem::InputAction_CallbackContext::get_valueSizeInBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::get_valueSizeInBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_valueSizeInBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.ReadValue
void UnityEngine::InputSystem::InputAction_CallbackContext::ReadValue(void* buffer, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::ReadValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, bufferSize);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.ReadValueAsButton
bool UnityEngine::InputSystem::InputAction_CallbackContext::ReadValueAsButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::ReadValueAsButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadValueAsButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.ReadValueAsObject
::Il2CppObject* UnityEngine::InputSystem::InputAction_CallbackContext::ReadValueAsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::ReadValueAsObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadValueAsObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction/CallbackContext.ToString
::StringW UnityEngine::InputSystem::InputAction_CallbackContext::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction_CallbackContext::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTelemetryConstants/OVRManager/MarkerId
#include "GlobalNamespace/OVRManager_MarkerId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 Init
int GlobalNamespace::OVRManager_MarkerId::_get_Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MarkerId::_get_Init");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRTelemetryConstants/OVRManager/MarkerId", "Init"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Init
void GlobalNamespace::OVRManager_MarkerId::_set_Init(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MarkerId::_set_Init");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/OVRManager/MarkerId", "Init", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Consent
int GlobalNamespace::OVRManager_MarkerId::_get_Consent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MarkerId::_get_Consent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRTelemetryConstants/OVRManager/MarkerId", "Consent"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Consent
void GlobalNamespace::OVRManager_MarkerId::_set_Consent(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MarkerId::_set_Consent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/OVRManager/MarkerId", "Consent", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTelemetryConstants/OVRManager/AnnotationTypes
#include "GlobalNamespace/OVRManager_AnnotationTypes.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String Origin
::StringW GlobalNamespace::OVRManager_AnnotationTypes::_get_Origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_AnnotationTypes::_get_Origin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRTelemetryConstants/OVRManager/AnnotationTypes", "Origin"));
}
// Autogenerated static field setter
// Set static field: static public System.String Origin
void GlobalNamespace::OVRManager_AnnotationTypes::_set_Origin(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_AnnotationTypes::_set_Origin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/OVRManager/AnnotationTypes", "Origin", value));
}
// Autogenerated static field getter
// Get static field: static public System.String EngineVersion
::StringW GlobalNamespace::OVRManager_AnnotationTypes::_get_EngineVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_AnnotationTypes::_get_EngineVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRTelemetryConstants/OVRManager/AnnotationTypes", "EngineVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.String EngineVersion
void GlobalNamespace::OVRManager_AnnotationTypes::_set_EngineVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_AnnotationTypes::_set_EngineVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/OVRManager/AnnotationTypes", "EngineVersion", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTelemetryConstants/OVRManager/ConsentOrigins
#include "GlobalNamespace/OVRManager_ConsentOrigins.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRTelemetryConstants/OVRManager/ConsentOrigins Popup
::GlobalNamespace::OVRManager_ConsentOrigins GlobalNamespace::OVRManager_ConsentOrigins::_get_Popup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ConsentOrigins::_get_Popup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ConsentOrigins>("", "OVRTelemetryConstants/OVRManager/ConsentOrigins", "Popup"));
}
// Autogenerated static field setter
// Set static field: static public OVRTelemetryConstants/OVRManager/ConsentOrigins Popup
void GlobalNamespace::OVRManager_ConsentOrigins::_set_Popup(::GlobalNamespace::OVRManager_ConsentOrigins value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ConsentOrigins::_set_Popup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/OVRManager/ConsentOrigins", "Popup", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTelemetryConstants/OVRManager/ConsentOrigins Settings
::GlobalNamespace::OVRManager_ConsentOrigins GlobalNamespace::OVRManager_ConsentOrigins::_get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ConsentOrigins::_get_Settings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ConsentOrigins>("", "OVRTelemetryConstants/OVRManager/ConsentOrigins", "Settings"));
}
// Autogenerated static field setter
// Set static field: static public OVRTelemetryConstants/OVRManager/ConsentOrigins Settings
void GlobalNamespace::OVRManager_ConsentOrigins::_set_Settings(::GlobalNamespace::OVRManager_ConsentOrigins value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ConsentOrigins::_set_Settings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/OVRManager/ConsentOrigins", "Settings", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTelemetryConstants/OVRManager/ConsentOrigins Legacy
::GlobalNamespace::OVRManager_ConsentOrigins GlobalNamespace::OVRManager_ConsentOrigins::_get_Legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ConsentOrigins::_get_Legacy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ConsentOrigins>("", "OVRTelemetryConstants/OVRManager/ConsentOrigins", "Legacy"));
}
// Autogenerated static field setter
// Set static field: static public OVRTelemetryConstants/OVRManager/ConsentOrigins Legacy
void GlobalNamespace::OVRManager_ConsentOrigins::_set_Legacy(::GlobalNamespace::OVRManager_ConsentOrigins value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ConsentOrigins::_set_Legacy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTelemetryConstants/OVRManager/ConsentOrigins", "Legacy", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_ConsentOrigins::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ConsentOrigins::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
